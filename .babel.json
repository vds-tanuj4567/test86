{
  "{\"filename\":\"/home/tanuj/delta-api/src/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./server",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "app"
              }
            ]
          },
          {
            "source": "./models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "./seeds/users",
            "imported": [
              "createSuperAdmin"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createSuperAdmin",
                "local": "createSuperAdmin"
              }
            ]
          },
          {
            "source": "./util/dbConnect",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dbConnect"
              }
            ]
          },
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/index.js",
      "filenameRelative": "/home/tanuj/delta-api/src/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _server = require('./server');\n\nvar _server2 = _interopRequireDefault(_server);\n\nvar _user = require('./models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _users = require('./seeds/users');\n\nvar _dbConnect = require('./util/dbConnect');\n\nvar _dbConnect2 = _interopRequireDefault(_dbConnect);\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar _process$env = process.env,\n    PORT = _process$env.PORT,\n    DEFAULT_USER = _process$env.DEFAULT_USER;\n\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize.authenticate().then(function () {\n  console.log('Connection has been established successfully.');\n}).catch(function (err) {\n  console.error('Unable to connect to the database:', err);\n});\n\n(0, _dbConnect2.default)().then(function () {\n\n  _user2.default.findOne({ email: DEFAULT_USER }).then(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(user) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user === null)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return (0, _users.createSuperAdmin)();\n\n            case 3:\n\n              _server2.default.listen(PORT, function (err) {\n                if (!err) {\n                  console.log('Server is running on port: ' + PORT);\n                }\n              });\n\n            case 4:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}).catch(function (err) {\n  return console.error('MongoDB connection failure' + err);\n});\n\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiREVGQVVMVF9VU0VSIiwic2VxdWVsaXplIiwiU2VxdWVsaXplIiwiaG9zdCIsImRpYWxlY3QiLCJwb29sIiwibWF4IiwibWluIiwiaWRsZSIsImF1dGhlbnRpY2F0ZSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciIsImVyciIsIlVzZXIiLCJmaW5kT25lIiwiZW1haWwiLCJ1c2VyIiwiYXBwIiwibGlzdGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7bUJBQzZCQSxRQUFRQyxHO0lBQTlCQyxJLGdCQUFBQSxJO0lBQU1DLFksZ0JBQUFBLFk7OztBQUViLElBQU1DLFlBQVksSUFBSUMsbUJBQUosQ0FBYyxVQUFkLEVBQTBCLFVBQTFCLEVBQXNDLE9BQXRDLEVBQStDO0FBQy9EQyxRQUFNLFdBRHlEO0FBRS9EQyxXQUFTLFVBRnNEO0FBRy9EQyxRQUFNO0FBQ0pDLFNBQUssQ0FERDtBQUVKQyxTQUFLLENBRkQ7QUFHSkMsVUFBTTtBQUhGO0FBSHlELENBQS9DLENBQWxCO0FBU0FQLFVBQ0dRLFlBREgsR0FFR0MsSUFGSCxDQUVRLFlBQU07QUFDVkMsVUFBUUMsR0FBUixDQUFZLCtDQUFaO0FBQ0QsQ0FKSCxFQUtHQyxLQUxILENBS1MsZUFBTztBQUNaRixVQUFRRyxLQUFSLENBQWMsb0NBQWQsRUFBb0RDLEdBQXBEO0FBQ0QsQ0FQSDs7QUFVQSwyQkFBWUwsSUFBWixDQUFrQixZQUFNOztBQUV0Qk0saUJBQUtDLE9BQUwsQ0FBYSxFQUFFQyxPQUFPbEIsWUFBVCxFQUFiLEVBQXNDVSxJQUF0QztBQUFBLHVFQUEyQyxpQkFBTVMsSUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsb0JBQ3RDQSxTQUFTLElBRDZCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBRWpDLDhCQUZpQzs7QUFBQTs7QUFLekNDLCtCQUFJQyxNQUFKLENBQVd0QixJQUFYLEVBQWlCLGVBQU87QUFDdEIsb0JBQUksQ0FBQ2dCLEdBQUwsRUFBVTtBQUNSSiwwQkFBUUMsR0FBUixpQ0FBMENiLElBQTFDO0FBQ0Q7QUFDRixlQUpEOztBQUx5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUEzQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVlELENBZEQsRUFjR2MsS0FkSCxDQWNTO0FBQUEsU0FBT0YsUUFBUUcsS0FBUixDQUFjLCtCQUErQkMsR0FBN0MsQ0FBUDtBQUFBLENBZFQ7O0FBZ0JBTyxPQUFPQyxPQUFQLEdBQWV0QixTQUFmIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwIGZyb20gJy4vc2VydmVyJztcbmltcG9ydCBVc2VyIGZyb20gJy4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtjcmVhdGVTdXBlckFkbWlufSBmcm9tICcuL3NlZWRzL3VzZXJzJztcbmltcG9ydCBkYkNvbm5lY3QgZnJvbSAnLi91dGlsL2RiQ29ubmVjdCc7XG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5jb25zdCB7UE9SVCwgREVGQVVMVF9VU0VSfSA9IHByb2Nlc3MuZW52O1xuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKCdwb3N0Z3JlcycsICdwb3N0Z3JlcycsICd0YW51aicsIHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIGRpYWxlY3Q6ICdwb3N0Z3JlcycsXG4gIHBvb2w6IHtcbiAgICBtYXg6IDksXG4gICAgbWluOiAwLFxuICAgIGlkbGU6IDEwMDAwXG4gIH1cbn0pO1xuc2VxdWVsaXplXG4gIC5hdXRoZW50aWNhdGUoKVxuICAudGhlbigoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gaGFzIGJlZW4gZXN0YWJsaXNoZWQgc3VjY2Vzc2Z1bGx5LicpO1xuICB9KVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2U6JywgZXJyKTtcbiAgfSk7XG5cblxuZGJDb25uZWN0KCkudGhlbiggKCkgPT4ge1xuXG4gIFVzZXIuZmluZE9uZSh7IGVtYWlsOiBERUZBVUxUX1VTRVIgfSkudGhlbihhc3luYyB1c2VyID0+IHtcbiAgICBpZih1c2VyID09PSBudWxsKXtcbiAgICAgIGF3YWl0IGNyZWF0ZVN1cGVyQWRtaW4oKTtcbiAgICB9XG5cbiAgICBhcHAubGlzdGVuKFBPUlQsIGVyciA9PiB7XG4gICAgICBpZiAoIWVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydDogJHtQT1JUfWApO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxufSkuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoJ01vbmdvREIgY29ubmVjdGlvbiBmYWlsdXJlJyArIGVycikpO1xuXG5tb2R1bGUuZXhwb3J0cz1zZXF1ZWxpemU7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "process",
        "env",
        "PORT",
        "DEFAULT_USER",
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "min",
        "idle",
        "authenticate",
        "then",
        "console",
        "log",
        "catch",
        "error",
        "err",
        "User",
        "findOne",
        "email",
        "user",
        "app",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;mBAC6BA,QAAQC,G;IAA9BC,I,gBAAAA,I;IAAMC,Y,gBAAAA,Y;;;AAEb,IAAMC,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAA0B,UAA1B,EAAsC,OAAtC,EAA+C;AAC/DC,QAAM,WADyD;AAE/DC,WAAS,UAFsD;AAG/DC,QAAM;AACJC,SAAK,CADD;AAEJC,SAAK,CAFD;AAGJC,UAAM;AAHF;AAHyD,CAA/C,CAAlB;AASAP,UACGQ,YADH,GAEGC,IAFH,CAEQ,YAAM;AACVC,UAAQC,GAAR,CAAY,+CAAZ;AACD,CAJH,EAKGC,KALH,CAKS,eAAO;AACZF,UAAQG,KAAR,CAAc,oCAAd,EAAoDC,GAApD;AACD,CAPH;;AAUA,2BAAYL,IAAZ,CAAkB,YAAM;;AAEtBM,iBAAKC,OAAL,CAAa,EAAEC,OAAOlB,YAAT,EAAb,EAAsCU,IAAtC;AAAA,uEAA2C,iBAAMS,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBACtCA,SAAS,IAD6B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEjC,8BAFiC;;AAAA;;AAKzCC,+BAAIC,MAAJ,CAAWtB,IAAX,EAAiB,eAAO;AACtB,oBAAI,CAACgB,GAAL,EAAU;AACRJ,0BAAQC,GAAR,iCAA0Cb,IAA1C;AACD;AACF,eAJD;;AALyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3C;;AAAA;AAAA;AAAA;AAAA;AAYD,CAdD,EAcGc,KAdH,CAcS;AAAA,SAAOF,QAAQG,KAAR,CAAc,+BAA+BC,GAA7C,CAAP;AAAA,CAdT;;AAgBAO,OAAOC,OAAP,GAAetB,SAAf",
      "file": "index.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "sourcesContent": [
        "import app from './server';\nimport User from './models/user';\nimport {createSuperAdmin} from './seeds/users';\nimport dbConnect from './util/dbConnect';\nimport Sequelize from 'sequelize';\nconst {PORT, DEFAULT_USER} = process.env;\n\nconst sequelize = new Sequelize('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize\n  .authenticate()\n  .then(() => {\n    console.log('Connection has been established successfully.');\n  })\n  .catch(err => {\n    console.error('Unable to connect to the database:', err);\n  });\n\n\ndbConnect().then( () => {\n\n  User.findOne({ email: DEFAULT_USER }).then(async user => {\n    if(user === null){\n      await createSuperAdmin();\n    }\n\n    app.listen(PORT, err => {\n      if (!err) {\n        console.log(`Server is running on port: ${PORT}`);\n      }\n    });\n  });\n\n}).catch(err => console.error('MongoDB connection failure' + err));\n\nmodule.exports=sequelize;\n"
      ]
    },
    "mtime": 1559242947688
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "compression",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "compression"
              }
            ]
          },
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "path",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "path"
              }
            ]
          },
          {
            "source": "./routes/api.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "apiRouter"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/server.js",
      "filenameRelative": "/home/tanuj/delta-api/src/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _compression = require('compression');\n\nvar _compression2 = _interopRequireDefault(_compression);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _api = require('./routes/api.routes');\n\nvar _api2 = _interopRequireDefault(_api);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Initialize the Express App\nvar app = new _express2.default();\n\n// Apply body Parser\napp.use((0, _compression2.default)());\napp.use(_bodyParser2.default.json({ limit: '20mb' }));\napp.use(_bodyParser2.default.urlencoded({ limit: '20mb', extended: false }));\n\napp.use('/api', _api2.default);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexports.default = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJFeHByZXNzIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJsaW1pdCIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImFwaVJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUE7QUFDQSxJQUFNQSxNQUFNLElBQUlDLGlCQUFKLEVBQVo7O0FBRUE7QUFDQUQsSUFBSUUsR0FBSixDQUFRLDRCQUFSO0FBQ0FGLElBQUlFLEdBQUosQ0FBUUMscUJBQVdDLElBQVgsQ0FBZ0IsRUFBRUMsT0FBTyxNQUFULEVBQWhCLENBQVI7QUFDQUwsSUFBSUUsR0FBSixDQUFRQyxxQkFBV0csVUFBWCxDQUFzQixFQUFFRCxPQUFPLE1BQVQsRUFBaUJFLFVBQVUsS0FBM0IsRUFBdEIsQ0FBUjs7QUFHQVAsSUFBSUUsR0FBSixDQUFRLE1BQVIsRUFBZ0JNLGFBQWhCO0FBQ0E7O2tCQUVlUixHIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29tcHJlc3Npb24gZnJvbSAnY29tcHJlc3Npb24nO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgYXBpUm91dGVyIGZyb20gJy4vcm91dGVzL2FwaS5yb3V0ZXMnO1xuXG4vLyBJbml0aWFsaXplIHRoZSBFeHByZXNzIEFwcFxuY29uc3QgYXBwID0gbmV3IEV4cHJlc3MoKTtcblxuLy8gQXBwbHkgYm9keSBQYXJzZXJcbmFwcC51c2UoY29tcHJlc3Npb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7IGxpbWl0OiAnMjBtYicgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBsaW1pdDogJzIwbWInLCBleHRlbmRlZDogZmFsc2UgfSkpO1xuXG5cbmFwcC51c2UoJy9hcGknLCBhcGlSb3V0ZXIpO1xuLy8gYXBwLnVzZShFeHByZXNzLnN0YXRpYyhwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vcHVibGljLycpKSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "Express",
        "use",
        "bodyParser",
        "json",
        "limit",
        "urlencoded",
        "extended",
        "apiRouter"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,IAAIC,iBAAJ,EAAZ;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,4BAAR;AACAF,IAAIE,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB,EAAEC,OAAO,MAAT,EAAhB,CAAR;AACAL,IAAIE,GAAJ,CAAQC,qBAAWG,UAAX,CAAsB,EAAED,OAAO,MAAT,EAAiBE,UAAU,KAA3B,EAAtB,CAAR;;AAGAP,IAAIE,GAAJ,CAAQ,MAAR,EAAgBM,aAAhB;AACA;;kBAEeR,G",
      "file": "server.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "sourcesContent": [
        "import Express from 'express';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport apiRouter from './routes/api.routes';\n\n// Initialize the Express App\nconst app = new Express();\n\n// Apply body Parser\napp.use(compression());\napp.use(bodyParser.json({ limit: '20mb' }));\napp.use(bodyParser.urlencoded({ limit: '20mb', extended: false }));\n\n\napp.use('/api', apiRouter);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexport default app;\n"
      ]
    },
    "mtime": 1559244910072
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/api.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "./auth.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "authentication"
              }
            ]
          },
          {
            "source": "./cohort.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cohort"
              }
            ]
          },
          {
            "source": "./educator.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "educator"
              }
            ]
          },
          {
            "source": "./student.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "student"
              }
            ]
          },
          {
            "source": "./prompt.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "prompt"
              }
            ]
          },
          {
            "source": "./ping.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "ping"
              }
            ]
          },
          {
            "source": "./pingpong.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "pingpong"
              }
            ]
          },
          {
            "source": "./mailer.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mailer"
              }
            ]
          },
          {
            "source": "./day.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "days"
              }
            ]
          },
          {
            "source": "./admin.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "admin"
              }
            ]
          },
          {
            "source": "./todo.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "todo"
              }
            ]
          },
          {
            "source": "./note.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "note"
              }
            ]
          },
          {
            "source": "./link.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "link"
              }
            ]
          },
          {
            "source": "./user.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "user"
              }
            ]
          },
          {
            "source": "./chrome-history.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "chromehistory"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "getProfile",
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getProfile",
                "local": "getProfile"
              },
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/api.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/api.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "api.routes.js",
      "sourceFileName": "api.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "api.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _auth = require('./auth.routes');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _cohort = require('./cohort.routes');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _educator = require('./educator.routes');\n\nvar _educator2 = _interopRequireDefault(_educator);\n\nvar _student = require('./student.routes');\n\nvar _student2 = _interopRequireDefault(_student);\n\nvar _prompt = require('./prompt.routes');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _ping = require('./ping.routes');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _pingpong = require('./pingpong.routes');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nvar _mailer = require('./mailer.routes');\n\nvar _mailer2 = _interopRequireDefault(_mailer);\n\nvar _day = require('./day.routes');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _admin = require('./admin.routes');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _todo = require('./todo.routes');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nvar _note = require('./note.routes');\n\nvar _note2 = _interopRequireDefault(_note);\n\nvar _link = require('./link.routes');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _user = require('./user.routes');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _chromeHistory = require('./chrome-history.routes');\n\nvar _chromeHistory2 = _interopRequireDefault(_chromeHistory);\n\nvar _user3 = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n// api doc is accessible in development environment only\nif (process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', _express2.default.static('./doc'));\n}\nrouter.use('/links', _link2.default);\nrouter.use('/chrome-history', _chromeHistory2.default);\nrouter.use(_auth2.default);\n\nrouter.use('/cohorts', _cohort2.default);\nrouter.use('/educators', _educator2.default);\nrouter.use('/students', _student2.default);\nrouter.use('/prompts', _prompt2.default);\nrouter.use('/pings', _ping2.default);\nrouter.use('/pingpongs', _pingpong2.default);\nrouter.use('/mailer', _mailer2.default);\nrouter.use('/days', _day2.default);\nrouter.use('/admin', _admin2.default);\nrouter.use('/todos', _todo2.default);\nrouter.use('/notes', _note2.default);\nrouter.use('/users', _user2.default);\n\nrouter.get('/profile', _user3.populateCurrentUser, _user3.getProfile);\n\nrouter.get('/', function (req, res) {\n\treturn res.send('API home');\n});\nrouter.use('*', function (req, res) {\n\treturn res.sendStatus(404);\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInVzZSIsInN0YXRpYyIsImxpbmsiLCJjaHJvbWVoaXN0b3J5IiwiYXV0aGVudGljYXRpb24iLCJjb2hvcnQiLCJlZHVjYXRvciIsInN0dWRlbnQiLCJwcm9tcHQiLCJwaW5nIiwicGluZ3BvbmciLCJtYWlsZXIiLCJkYXlzIiwiYWRtaW4iLCJ0b2RvIiwibm90ZSIsInVzZXIiLCJnZXQiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0UHJvZmlsZSIsInJlcSIsInJlcyIsInNlbmQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjtBQUNBO0FBQ0EsSUFBR0MsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLGFBQTVCLEVBQTJDO0FBQzFDTCxRQUFPTSxHQUFQLENBQVcsTUFBWCxFQUFtQkwsa0JBQVFNLE1BQVIsQ0FBZSxPQUFmLENBQW5CO0FBQ0E7QUFDRFAsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJFLGNBQXJCO0FBQ0FSLE9BQU9NLEdBQVAsQ0FBVyxpQkFBWCxFQUE2QkcsdUJBQTdCO0FBQ0FULE9BQU9NLEdBQVAsQ0FBV0ksY0FBWDs7QUFFQVYsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJLLGdCQUF2QjtBQUNBWCxPQUFPTSxHQUFQLENBQVcsWUFBWCxFQUF5Qk0sa0JBQXpCO0FBQ0FaLE9BQU9NLEdBQVAsQ0FBVyxXQUFYLEVBQXdCTyxpQkFBeEI7QUFDQWIsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJRLGdCQUF2QjtBQUNBZCxPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQlMsY0FBckI7QUFDQWYsT0FBT00sR0FBUCxDQUFXLFlBQVgsRUFBeUJVLGtCQUF6QjtBQUNBaEIsT0FBT00sR0FBUCxDQUFXLFNBQVgsRUFBc0JXLGdCQUF0QjtBQUNBakIsT0FBT00sR0FBUCxDQUFXLE9BQVgsRUFBb0JZLGFBQXBCO0FBQ0FsQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmEsZUFBckI7QUFDQW5CLE9BQU9NLEdBQVAsQ0FBVyxRQUFYLEVBQXFCYyxjQUFyQjtBQUNBcEIsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJlLGNBQXJCO0FBQ0FyQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmdCLGNBQXJCOztBQUdBdEIsT0FBT3VCLEdBQVAsQ0FBVyxVQUFYLEVBQXVCQywwQkFBdkIsRUFBNENDLGlCQUE1Qzs7QUFFQXpCLE9BQU91QixHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFDRyxHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJQyxJQUFKLENBQVMsVUFBVCxDQUFkO0FBQUEsQ0FBaEI7QUFDQTVCLE9BQU9NLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNvQixHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJRSxVQUFKLENBQWUsR0FBZixDQUFkO0FBQUEsQ0FBaEI7O2tCQUVlN0IsTSIsImZpbGUiOiJhcGkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYXV0aGVudGljYXRpb24gZnJvbSAnLi9hdXRoLnJvdXRlcyc7XG5pbXBvcnQgY29ob3J0IGZyb20gJy4vY29ob3J0LnJvdXRlcyc7XG5pbXBvcnQgZWR1Y2F0b3IgZnJvbSAnLi9lZHVjYXRvci5yb3V0ZXMnO1xuaW1wb3J0IHN0dWRlbnQgZnJvbSAnLi9zdHVkZW50LnJvdXRlcyc7XG5pbXBvcnQgcHJvbXB0IGZyb20gJy4vcHJvbXB0LnJvdXRlcyc7XG5pbXBvcnQgcGluZyBmcm9tICcuL3Bpbmcucm91dGVzJztcbmltcG9ydCBwaW5ncG9uZyBmcm9tICcuL3Bpbmdwb25nLnJvdXRlcyc7XG5pbXBvcnQgbWFpbGVyIGZyb20gJy4vbWFpbGVyLnJvdXRlcyc7XG5pbXBvcnQgZGF5cyBmcm9tICcuL2RheS5yb3V0ZXMnO1xuaW1wb3J0IGFkbWluIGZyb20gJy4vYWRtaW4ucm91dGVzJztcbmltcG9ydCB0b2RvIGZyb20gJy4vdG9kby5yb3V0ZXMnO1xuaW1wb3J0IG5vdGUgZnJvbSAnLi9ub3RlLnJvdXRlcyc7XG5pbXBvcnQgbGluayBmcm9tICcuL2xpbmsucm91dGVzJztcbmltcG9ydCB1c2VyIGZyb20gJy4vdXNlci5yb3V0ZXMnO1xuaW1wb3J0IGNocm9tZWhpc3RvcnkgZnJvbSAnLi9jaHJvbWUtaGlzdG9yeS5yb3V0ZXMnO1xuaW1wb3J0IHtnZXRQcm9maWxlLCBwb3B1bGF0ZUN1cnJlbnRVc2VyfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuLy8gYXBpIGRvYyBpcyBhY2Nlc3NpYmxlIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50IG9ubHlcbmlmKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG5cdHJvdXRlci51c2UoJy9kb2MnLCBFeHByZXNzLnN0YXRpYygnLi9kb2MnKSk7XG59XG5yb3V0ZXIudXNlKCcvbGlua3MnLCBsaW5rKTtcbnJvdXRlci51c2UoJy9jaHJvbWUtaGlzdG9yeScsY2hyb21laGlzdG9yeSlcbnJvdXRlci51c2UoYXV0aGVudGljYXRpb24pO1xuXG5yb3V0ZXIudXNlKCcvY29ob3J0cycsIGNvaG9ydCk7XG5yb3V0ZXIudXNlKCcvZWR1Y2F0b3JzJywgZWR1Y2F0b3IpO1xucm91dGVyLnVzZSgnL3N0dWRlbnRzJywgc3R1ZGVudCk7XG5yb3V0ZXIudXNlKCcvcHJvbXB0cycsIHByb21wdCk7XG5yb3V0ZXIudXNlKCcvcGluZ3MnLCBwaW5nKTtcbnJvdXRlci51c2UoJy9waW5ncG9uZ3MnLCBwaW5ncG9uZyk7XG5yb3V0ZXIudXNlKCcvbWFpbGVyJywgbWFpbGVyKTtcbnJvdXRlci51c2UoJy9kYXlzJywgZGF5cyk7XG5yb3V0ZXIudXNlKCcvYWRtaW4nLCBhZG1pbik7XG5yb3V0ZXIudXNlKCcvdG9kb3MnLCB0b2RvKTtcbnJvdXRlci51c2UoJy9ub3RlcycsIG5vdGUpO1xucm91dGVyLnVzZSgnL3VzZXJzJywgdXNlcilcblxuXG5yb3V0ZXIuZ2V0KCcvcHJvZmlsZScsIHBvcHVsYXRlQ3VycmVudFVzZXIsIGdldFByb2ZpbGUpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZCgnQVBJIGhvbWUnKSk7XG5yb3V0ZXIudXNlKCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZFN0YXR1cyg0MDQpKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "api.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "process",
        "env",
        "NODE_ENV",
        "use",
        "static",
        "link",
        "chromehistory",
        "authentication",
        "cohort",
        "educator",
        "student",
        "prompt",
        "ping",
        "pingpong",
        "mailer",
        "days",
        "admin",
        "todo",
        "note",
        "user",
        "get",
        "populateCurrentUser",
        "getProfile",
        "req",
        "res",
        "send",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;AACA;AACA,IAAGC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AAC1CL,QAAOM,GAAP,CAAW,MAAX,EAAmBL,kBAAQM,MAAR,CAAe,OAAf,CAAnB;AACA;AACDP,OAAOM,GAAP,CAAW,QAAX,EAAqBE,cAArB;AACAR,OAAOM,GAAP,CAAW,iBAAX,EAA6BG,uBAA7B;AACAT,OAAOM,GAAP,CAAWI,cAAX;;AAEAV,OAAOM,GAAP,CAAW,UAAX,EAAuBK,gBAAvB;AACAX,OAAOM,GAAP,CAAW,YAAX,EAAyBM,kBAAzB;AACAZ,OAAOM,GAAP,CAAW,WAAX,EAAwBO,iBAAxB;AACAb,OAAOM,GAAP,CAAW,UAAX,EAAuBQ,gBAAvB;AACAd,OAAOM,GAAP,CAAW,QAAX,EAAqBS,cAArB;AACAf,OAAOM,GAAP,CAAW,YAAX,EAAyBU,kBAAzB;AACAhB,OAAOM,GAAP,CAAW,SAAX,EAAsBW,gBAAtB;AACAjB,OAAOM,GAAP,CAAW,OAAX,EAAoBY,aAApB;AACAlB,OAAOM,GAAP,CAAW,QAAX,EAAqBa,eAArB;AACAnB,OAAOM,GAAP,CAAW,QAAX,EAAqBc,cAArB;AACApB,OAAOM,GAAP,CAAW,QAAX,EAAqBe,cAArB;AACArB,OAAOM,GAAP,CAAW,QAAX,EAAqBgB,cAArB;;AAGAtB,OAAOuB,GAAP,CAAW,UAAX,EAAuBC,0BAAvB,EAA4CC,iBAA5C;;AAEAzB,OAAOuB,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIC,IAAJ,CAAS,UAAT,CAAd;AAAA,CAAhB;AACA5B,OAAOM,GAAP,CAAW,GAAX,EAAgB,UAACoB,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIE,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;;kBAEe7B,M",
      "file": "api.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport authentication from './auth.routes';\nimport cohort from './cohort.routes';\nimport educator from './educator.routes';\nimport student from './student.routes';\nimport prompt from './prompt.routes';\nimport ping from './ping.routes';\nimport pingpong from './pingpong.routes';\nimport mailer from './mailer.routes';\nimport days from './day.routes';\nimport admin from './admin.routes';\nimport todo from './todo.routes';\nimport note from './note.routes';\nimport link from './link.routes';\nimport user from './user.routes';\nimport chromehistory from './chrome-history.routes';\nimport {getProfile, populateCurrentUser} from '../controllers/user.controller';\n\nconst router = Express.Router();\n// api doc is accessible in development environment only\nif(process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', Express.static('./doc'));\n}\nrouter.use('/links', link);\nrouter.use('/chrome-history',chromehistory)\nrouter.use(authentication);\n\nrouter.use('/cohorts', cohort);\nrouter.use('/educators', educator);\nrouter.use('/students', student);\nrouter.use('/prompts', prompt);\nrouter.use('/pings', ping);\nrouter.use('/pingpongs', pingpong);\nrouter.use('/mailer', mailer);\nrouter.use('/days', days);\nrouter.use('/admin', admin);\nrouter.use('/todos', todo);\nrouter.use('/notes', note);\nrouter.use('/users', user)\n\n\nrouter.get('/profile', populateCurrentUser, getProfile);\n\nrouter.get('/', (req, res) => res.send('API home'));\nrouter.use('*', (req, res) => res.sendStatus(404));\n\nexport default router;\n"
      ]
    },
    "mtime": 1559311356740
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/auth.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "../controllers/auth.controller",
            "imported": [
              "accessControl",
              "authenticate",
              "signinWithGithub"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "accessControl",
                "local": "accessControl"
              },
              {
                "kind": "named",
                "imported": "authenticate",
                "local": "authenticate"
              },
              {
                "kind": "named",
                "imported": "signinWithGithub",
                "local": "signinWithGithub"
              }
            ]
          },
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/auth.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/auth.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.routes.js",
      "sourceFileName": "auth.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _auth = require('../controllers/auth.controller');\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_auth.accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', _auth.signinWithGithub);\n\nrouter.use(_auth.authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', function (req, res, next) {\n  if (req.jwtData.scope === _authScopes2.default.STUDENT) {\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJhY2Nlc3NDb250cm9sIiwic2lnbmluV2l0aEdpdGh1YiIsImF1dGhlbnRpY2F0ZSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIlNUVURFTlQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXQyxtQkFBWDs7QUFFQTtBQUNBSixPQUFPRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNFLHNCQUFuQzs7QUFFQUwsT0FBT0csR0FBUCxDQUFXRyxrQkFBWDs7QUFFQTtBQUNBTixPQUFPRyxHQUFQLENBQVcsVUFBWCxFQUF1QixVQUFDSSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN6QyxNQUFHRixJQUFJRyxPQUFKLENBQVlDLEtBQVosS0FBc0JDLHFCQUFZQyxPQUFyQyxFQUE2QztBQUMzQztBQUNEO0FBQ0RKO0FBQ0QsQ0FMRDs7a0JBT2VULE0iLCJmaWxlIjoiYXV0aC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCB7YWNjZXNzQ29udHJvbCwgYXV0aGVudGljYXRlLCBzaWduaW5XaXRoR2l0aHVifSBmcm9tICcuLi9jb250cm9sbGVycy9hdXRoLmNvbnRyb2xsZXInO1xuaW1wb3J0IEFVVEhfU0NPUEVTIGZyb20gJy4uL3V0aWwvYXV0aFNjb3Blcyc7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci51c2UoYWNjZXNzQ29udHJvbCk7XG5cbi8vIFRoaXMgcm91dGUgZG9lc24ndCBuZWVkIHRvIGJlIGF1dGhlbnRpY2F0ZWRcbnJvdXRlci51c2UoJy9vYXV0aC9naXRodWIvc2lnbmluJywgc2lnbmluV2l0aEdpdGh1Yik7XG5cbnJvdXRlci51c2UoYXV0aGVudGljYXRlKTtcblxuLy8gUmVzdHJpY3Qgc3R1ZGVudHMgaW4gdGhlc2Ugcm91dGVzXG5yb3V0ZXIudXNlKCcvY29ob3J0cycsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZihyZXEuand0RGF0YS5zY29wZSA9PT0gQVVUSF9TQ09QRVMuU1RVREVOVCl7XG4gICAgLy8gcmVzLnNlbmRTdGF0dXMoNDAzKTtcbiAgfVxuICBuZXh0KCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "accessControl",
        "signinWithGithub",
        "authenticate",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "STUDENT"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,mBAAX;;AAEA;AACAJ,OAAOG,GAAP,CAAW,sBAAX,EAAmCE,sBAAnC;;AAEAL,OAAOG,GAAP,CAAWG,kBAAX;;AAEA;AACAN,OAAOG,GAAP,CAAW,UAAX,EAAuB,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAGF,IAAIG,OAAJ,CAAYC,KAAZ,KAAsBC,qBAAYC,OAArC,EAA6C;AAC3C;AACD;AACDJ;AACD,CALD;;kBAOeT,M",
      "file": "auth.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport {accessControl, authenticate, signinWithGithub} from '../controllers/auth.controller';\nimport AUTH_SCOPES from '../util/authScopes';\n\nconst router = Express.Router();\n\nrouter.use(accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', signinWithGithub);\n\nrouter.use(authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', (req, res, next) => {\n  if(req.jwtData.scope === AUTH_SCOPES.STUDENT){\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/auth.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "superagent",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "request"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./user.controller",
            "imported": [
              "getSpotterTeam"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSpotterTeam",
                "local": "getSpotterTeam"
              }
            ]
          },
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "accessControl",
            "authenticate",
            "signinWithGithub"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "accessControl",
              "exported": "accessControl"
            },
            {
              "kind": "local",
              "local": "authenticate",
              "exported": "authenticate"
            },
            {
              "kind": "local",
              "local": "signinWithGithub",
              "exported": "signinWithGithub"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/auth.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/auth.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.controller.js",
      "sourceFileName": "auth.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signinWithGithub = exports.authenticate = exports.accessControl = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _user = require('../models/user');\n\nvar _user2 = require('./user.controller');\n\nvar _token = require('../util/token');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar accessControl = exports.accessControl = function accessControl(req, res, next) {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n};\n\nvar authenticate = exports.authenticate = function authenticate(req, res, next) {\n  req.jwtData = {};\n\n  next();\n};\n\nvar getProfileFromGithub = function getProfileFromGithub(_ref) {\n  var githubToken = _ref.text;\n  return new Promise(function (resolve, reject) {\n\n    _superagent2.default.get('https://api.github.com/user?' + githubToken).then(function (profileResponse) {\n      var _profileResponse$body = profileResponse.body,\n          email = _profileResponse$body.email,\n          login = _profileResponse$body.login,\n          id = _profileResponse$body.id,\n          name = _profileResponse$body.name,\n          company = _profileResponse$body.company,\n          location = _profileResponse$body.location,\n          bio = _profileResponse$body.bio,\n          avatar_url = _profileResponse$body.avatar_url;\n\n      var profile = { email: email, login: login, id: id, name: name, company: company, location: location, bio: bio, avatar_url: avatar_url };\n\n      _user.User.findOne({ email: email }).then(function (user) {\n        if (user === null) {\n          // User not found. Checking alternate emails!\n          _superagent2.default.get('https://api.github.com/user/emails?' + githubToken).then(function (emailResponse) {\n            var emails = emailResponse.body.map(function (o) {\n              return o.email;\n            });\n            _user.User.findOne({ email: { $in: emails } }).then(function (user) {\n              if (user === null) {\n                reject();\n              } else {\n                // user.emails = emails;\n                resolve({ user: user, profile: profile, githubToken: githubToken });\n              }\n            }).catch(reject);\n          });\n        } else {\n          resolve({ user: user, profile: profile, githubToken: githubToken });\n        }\n      }).catch(reject);\n    }).catch(reject);\n  });\n};\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nvar signinWithGithub = exports.signinWithGithub = function signinWithGithub(req, res) {\n\n  var params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  _superagent2.default.post('https://github.com/login/oauth/access_token').send(params).then(getProfileFromGithub).then(function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3) {\n      var user = _ref3.user,\n          profile = _ref3.profile,\n          githubToken = _ref3.githubToken;\n      var spotterTeam, soalToken;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _user2.getSpotterTeam)(user);\n\n            case 2:\n              spotterTeam = _context.sent;\n\n\n              // User found. Sending a jsonwebtoken to the client!\n              soalToken = (0, _token.getSoalToken)(user, githubToken);\n\n              if (!(user.profile && user.profile.github)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) }));\n\n            case 6:\n              // new user signed up\n              user.profile = _extends({}, user.profile, { github: profile });\n              // Updating user with the github profile\n              user.save().then(function (user) {\n                // Update succeeded\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              }).catch(function (err) {\n                // Update Failed!!!\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              });\n\n            case 8:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }()).catch(function (err) {\n    console.log(err);\n    res.status(404).send('User not found!!!');\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "accessControl",
        "req",
        "res",
        "next",
        "header",
        "process",
        "env",
        "REACT_APP_SERVER",
        "method",
        "send",
        "authenticate",
        "jwtData",
        "getProfileFromGithub",
        "githubToken",
        "text",
        "Promise",
        "resolve",
        "reject",
        "request",
        "get",
        "then",
        "profileResponse",
        "body",
        "email",
        "login",
        "id",
        "name",
        "company",
        "location",
        "bio",
        "avatar_url",
        "profile",
        "User",
        "findOne",
        "user",
        "emails",
        "emailResponse",
        "map",
        "o",
        "$in",
        "catch",
        "signinWithGithub",
        "params",
        "client_id",
        "GITHUB_CLIENT_ID",
        "client_secret",
        "GITHUB_CLIENT_SECRET",
        "code",
        "query",
        "post",
        "spotterTeam",
        "soalToken",
        "github",
        "toObject",
        "save",
        "console",
        "log",
        "err",
        "status"
      ],
      "mappings": "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",
      "file": "auth.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport request from 'superagent';\nimport { User, USER_ROLES } from '../models/user';\nimport { getSpotterTeam } from './user.controller';\nimport {getSoalToken} from '../util/token';\n\nexport const accessControl = (req, res, next) => {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n\n}\n\nexport const authenticate = (req, res, next) => {\nreq.jwtData={\n\n};\n  \n  next();\n}\n\nconst getProfileFromGithub = ({text: githubToken}) => new Promise((resolve, reject) => {\n\n  request.get('https://api.github.com/user?'+githubToken).then(profileResponse => {\n    const {email, login, id, name, company, location, bio, avatar_url} = profileResponse.body;\n    const profile = {email, login, id, name, company, location, bio, avatar_url};\n\n    User.findOne({email}).then(user => {\n      if(user === null){\n        // User not found. Checking alternate emails!\n        request.get('https://api.github.com/user/emails?'+githubToken).then(emailResponse => {\n          let emails = emailResponse.body.map(o=>o.email);\n          User.findOne({email: {$in: emails}}).then(user=>{\n            if(user === null){\n              reject();\n            } else {\n              // user.emails = emails;\n              resolve({user, profile, githubToken});\n            }\n          })\n          .catch(reject);\n        });\n      } else {\n        resolve({user, profile, githubToken});\n      }\n    })\n    .catch(reject);\n  })\n  .catch(reject);\n\n});\n\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nexport const signinWithGithub = (req, res)=>{\n\n  let params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  request.post('https://github.com/login/oauth/access_token').send(params)\n  .then(getProfileFromGithub)\n  .then(async ({user, profile, githubToken}) => {\n\n    const spotterTeam = await getSpotterTeam(user);\n\n    // User found. Sending a jsonwebtoken to the client!\n    const soalToken = getSoalToken(user, githubToken);\n    if(user.profile && user.profile.github){\n      return res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }\n    // new user signed up\n    user.profile = { ...user.profile, github: profile };\n    // Updating user with the github profile\n    user.save().then(user=>{\n      // Update succeeded\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }).catch(err => {\n      // Update Failed!!!\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}})\n    });\n  }).catch(err => {\n    console.log(err)\n    res.status(404).send('User not found!!!');\n  })\n\n}\n"
      ]
    },
    "mtime": 1559213792755
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "inherits",
        "possibleConstructorReturn",
        "classCallCheck",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "USER_ROLES",
            "User",
            "Student",
            "Educator"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "USER_ROLES",
              "exported": "USER_ROLES"
            },
            {
              "kind": "local",
              "local": "User",
              "exported": "User"
            },
            {
              "kind": "local",
              "local": "Student",
              "exported": "Student"
            },
            {
              "kind": "local",
              "local": "Educator",
              "exported": "Educator"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/user.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Educator = exports.Student = exports.User = exports.USER_ROLES = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Schema = _mongoose2.default.Schema;\nvar USER_ROLES = exports.USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst'\n};\n\nvar User = exports.User = _mongoose2.default.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String\n  },\n\n  // educator specific fields\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" }\n}));\n\n// can only be used for creation logic\n\nvar Student = exports.Student = function (_User) {\n  _inherits(Student, _User);\n\n  function Student(data) {\n    _classCallCheck(this, Student);\n\n    data && (data.role = USER_ROLES.STUDENT);\n    return _possibleConstructorReturn(this, (Student.__proto__ || Object.getPrototypeOf(Student)).call(this, data));\n  }\n\n  return Student;\n}(User);\n\n// can only be used for creation logic\n\n\nvar Educator = exports.Educator = function (_User2) {\n  _inherits(Educator, _User2);\n\n  function Educator(data) {\n    _classCallCheck(this, Educator);\n\n    data && (data.role = USER_ROLES.EDUCATOR);\n    return _possibleConstructorReturn(this, (Educator.__proto__ || Object.getPrototypeOf(Educator)).call(this, data));\n  }\n\n  return Educator;\n}(User);\n\nexports.default = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkNBVEFMWVNUIiwiVXNlciIsIm1vZGVsIiwibmFtZSIsInR5cGUiLCJyZXF1aXJlZCIsInJvbGUiLCJwcm9maWxlIiwiVHlwZXMiLCJNaXhlZCIsImNvaG9ydHMiLCJPYmplY3RJZCIsInJlZiIsImN1cnJlbnRDb2hvcnQiLCJwYXRoIiwiU3RyaW5nIiwic2VjcmV0IiwiZW1haWwiLCJwcm9ncmFtIiwiZGVmYXVsdCIsImxvY2F0aW9uIiwiU3R1ZGVudCIsImRhdGEiLCJFZHVjYXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO0FBRUEsSUFBTUUsa0NBQWE7QUFDeEJDLFdBQVMsU0FEZTtBQUV4QkMsWUFBVSxVQUZjO0FBR3hCQyxjQUFZLFlBSFk7QUFJeEJDLFlBQVU7QUFKYyxDQUFuQjs7QUFPQSxJQUFNQyxzQkFBT04sbUJBQVNPLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlSLE1BQUosQ0FBVztBQUNwRFMsUUFBTTtBQUNKQyxVQUFNLFFBREY7QUFFSkMsY0FBVTtBQUZOLEdBRDhDO0FBS3BEQyxRQUFNO0FBQ0pGLFVBQU07QUFERixHQUw4QztBQVFwREcsV0FBU2IsT0FBT2MsS0FBUCxDQUFhQyxLQVI4Qjs7QUFVcEQ7QUFDQUMsV0FBUSxDQUFDO0FBQ1BOLFVBQU1WLE9BQU9jLEtBQVAsQ0FBYUcsUUFEWjtBQUVQQyxTQUFLO0FBRkUsR0FBRCxDQVg0QztBQWVwREMsaUJBQWU7QUFDYlQsVUFBTVYsT0FBT2MsS0FBUCxDQUFhRyxRQUROO0FBRWJDLFNBQUs7QUFGUSxHQWZxQztBQW1CcERFLFFBQU1DLE1BbkI4QztBQW9CcERDLFVBQVFELE1BcEI0Qzs7QUFzQnBERSxTQUFPO0FBQ0xiLFVBQU1XO0FBREQsR0F0QjZDOztBQTBCcEQ7QUFDQUcsV0FBUyxFQUFDZCxNQUFLVyxNQUFOLEVBQWNJLFNBQVEsbUJBQXRCLEVBM0IyQztBQTRCcERDLFlBQVUsRUFBQ2hCLE1BQUtXLE1BQU4sRUFBY0ksU0FBUSxXQUF0QjtBQTVCMEMsQ0FBWCxDQUF2QixDQUFiOztBQStCUDs7SUFDYUUsTyxXQUFBQSxPOzs7QUFDWCxtQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUNoQkEsYUFBU0EsS0FBS2hCLElBQUwsR0FBWVYsV0FBV0MsT0FBaEM7QUFEZ0IsNkdBRVZ5QixJQUZVO0FBR2pCOzs7RUFKMEJyQixJOztBQU83Qjs7O0lBQ2FzQixRLFdBQUFBLFE7OztBQUNYLG9CQUFZRCxJQUFaLEVBQWtCO0FBQUE7O0FBQ2hCQSxhQUFTQSxLQUFLaEIsSUFBTCxHQUFZVixXQUFXRSxRQUFoQztBQURnQiwrR0FFVndCLElBRlU7QUFHakI7OztFQUoyQnJCLEk7O2tCQU9mQSxJIiwiZmlsZSI6InVzZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuZXhwb3J0IGNvbnN0IFVTRVJfUk9MRVMgPSB7XG4gIFNUVURFTlQ6ICdTdHVkZW50JyxcbiAgRURVQ0FUT1I6ICdFZHVjYXRvcicsXG4gIFNVUEVSQURNSU46ICdTdXBlcmFkbWluJyxcbiAgQ0FUQUxZU1Q6ICdDYXRhbHlzdCcsXG59O1xuXG5leHBvcnQgY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiAnU3RyaW5nJyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICByb2xlOiB7XG4gICAgdHlwZTogJ1N0cmluZydcbiAgfSxcbiAgcHJvZmlsZTogU2NoZW1hLlR5cGVzLk1peGVkLFxuXG4gIC8vIHN0dWRlbnQgc3BlY2lmaWMgZmllbGRzXG4gIGNvaG9ydHM6W3tcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ29ob3J0J1xuICB9XSxcbiAgY3VycmVudENvaG9ydDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdDb2hvcnQnXG4gIH0sXG4gIHBhdGg6IFN0cmluZyxcbiAgc2VjcmV0OiBTdHJpbmcsXG5cbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gIH0sXG5cbiAgLy8gZWR1Y2F0b3Igc3BlY2lmaWMgZmllbGRzXG4gIHByb2dyYW06IHt0eXBlOlN0cmluZywgZGVmYXVsdDpcIkV4cG9uZW50OlNvZnR3YXJlXCJ9LFxuICBsb2NhdGlvbjoge3R5cGU6U3RyaW5nLCBkZWZhdWx0OlwiSHlkZXJhYmFkXCJ9LFxufSkpO1xuXG4vLyBjYW4gb25seSBiZSB1c2VkIGZvciBjcmVhdGlvbiBsb2dpY1xuZXhwb3J0IGNsYXNzIFN0dWRlbnQgZXh0ZW5kcyBVc2VyIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIGRhdGEgJiYgKGRhdGEucm9sZSA9IFVTRVJfUk9MRVMuU1RVREVOVCk7XG4gICAgc3VwZXIoZGF0YSk7XG4gIH1cbn1cblxuLy8gY2FuIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpb24gbG9naWNcbmV4cG9ydCBjbGFzcyBFZHVjYXRvciBleHRlbmRzIFVzZXIge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgZGF0YSAmJiAoZGF0YS5yb2xlID0gVVNFUl9ST0xFUy5FRFVDQVRPUik7XG4gICAgc3VwZXIoZGF0YSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "USER_ROLES",
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "CATALYST",
        "User",
        "model",
        "name",
        "type",
        "required",
        "role",
        "profile",
        "Types",
        "Mixed",
        "cohorts",
        "ObjectId",
        "ref",
        "currentCohort",
        "path",
        "String",
        "secret",
        "email",
        "program",
        "default",
        "location",
        "Student",
        "data",
        "Educator"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;AAEA,IAAME,kCAAa;AACxBC,WAAS,SADe;AAExBC,YAAU,UAFc;AAGxBC,cAAY,YAHY;AAIxBC,YAAU;AAJc,CAAnB;;AAOA,IAAMC,sBAAON,mBAASO,KAAT,CAAe,MAAf,EAAuB,IAAIR,MAAJ,CAAW;AACpDS,QAAM;AACJC,UAAM,QADF;AAEJC,cAAU;AAFN,GAD8C;AAKpDC,QAAM;AACJF,UAAM;AADF,GAL8C;AAQpDG,WAASb,OAAOc,KAAP,CAAaC,KAR8B;;AAUpD;AACAC,WAAQ,CAAC;AACPN,UAAMV,OAAOc,KAAP,CAAaG,QADZ;AAEPC,SAAK;AAFE,GAAD,CAX4C;AAepDC,iBAAe;AACbT,UAAMV,OAAOc,KAAP,CAAaG,QADN;AAEbC,SAAK;AAFQ,GAfqC;AAmBpDE,QAAMC,MAnB8C;AAoBpDC,UAAQD,MApB4C;;AAsBpDE,SAAO;AACLb,UAAMW;AADD,GAtB6C;;AA0BpD;AACAG,WAAS,EAACd,MAAKW,MAAN,EAAcI,SAAQ,mBAAtB,EA3B2C;AA4BpDC,YAAU,EAAChB,MAAKW,MAAN,EAAcI,SAAQ,WAAtB;AA5B0C,CAAX,CAAvB,CAAb;;AA+BP;;IACaE,O,WAAAA,O;;;AACX,mBAAYC,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWC,OAAhC;AADgB,6GAEVyB,IAFU;AAGjB;;;EAJ0BrB,I;;AAO7B;;;IACasB,Q,WAAAA,Q;;;AACX,oBAAYD,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWE,QAAhC;AADgB,+GAEVwB,IAFU;AAGjB;;;EAJ2BrB,I;;kBAOfA,I",
      "file": "user.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport const USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst',\n};\n\nexport const User = mongoose.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts:[{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String,\n  },\n\n  // educator specific fields\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n}));\n\n// can only be used for creation logic\nexport class Student extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.STUDENT);\n    super(data);\n  }\n}\n\n// can only be used for creation logic\nexport class Educator extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.EDUCATOR);\n    super(data);\n  }\n}\n\nexport default User;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/user.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getProfile",
            "getSpotterTeam",
            "populateCurrentUser",
            "updateUser"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getProfile",
              "exported": "getProfile"
            },
            {
              "kind": "local",
              "local": "getSpotterTeam",
              "exported": "getSpotterTeam"
            },
            {
              "kind": "local",
              "local": "populateCurrentUser",
              "exported": "populateCurrentUser"
            },
            {
              "kind": "local",
              "local": "updateUser",
              "exported": "updateUser"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/user.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/user.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.controller.js",
      "sourceFileName": "user.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateUser = exports.populateCurrentUser = exports.getSpotterTeam = exports.getProfile = undefined;\n\nvar _user = require('../models/user');\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _cohort3 = require('../controllers/cohort.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getProfile = exports.getProfile = function getProfile(req, res) {\n  res.json({ data: req.user });\n};\n\nvar getSpotterTeam = exports.getSpotterTeam = function getSpotterTeam(student) {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var cohort, spotterTeam;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(student);\n\n              if (!(student.role !== _user.USER_ROLES.STUDENT)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 3:\n              _context.next = 5;\n              return _cohort2.default.findById(student.currentCohort).exec();\n\n            case 5:\n              cohort = _context.sent;\n              spotterTeam = cohort.spotters.find(function (team) {\n                return team.students.some(function (s) {\n                  return student._id.equals(s);\n                });\n              });\n\n              if (!(spotterTeam == null)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 9:\n              _context.next = 11;\n              return _user.User.find({ _id: { $in: spotterTeam.students } }, 'name profile.github.avatar_url profile.phone').exec();\n\n            case 11:\n              spotterTeam.students = _context.sent;\n\n              resolve(spotterTeam);\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nvar populateCurrentUser = exports.populateCurrentUser = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _user.User.findById(req.jwtData.user).lean().exec();\n\n          case 3:\n            user = _context2.sent;\n            _context2.next = 6;\n            return getSpotterTeam(user);\n\n          case 6:\n            user.spotterTeam = _context2.sent;\n\n            req.user = user;\n            next();\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(404);\n\n          case 14:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function populateCurrentUser(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar updateUser = exports.updateUser = function updateUser(req, res) {\n  var _req$query = req.query,\n      id = _req$query.id,\n      newCohort = _req$query.newCohort,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  var cohortID = void 0;\n  _user.User.findOne({ _id: id }).lean().then(function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(user) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _cohort2.default.find({ name: newCohort, location: city }).lean().exec().then(function (cohorts) {\n                cohorts.map(function (cohort, i) {\n                  var date = cohort.startDate;\n                  if (date.getFullYear().toString() === year) {\n                    cohortID = cohort._id;\n                  }\n                });\n              });\n\n            case 2:\n              console.log('-----', cohortID);\n              user.currentCohort = cohortID;\n              user.cohorts.push(cohortID);\n              _user.User.findByIdAndUpdate(id, { $set: { cohorts: user.cohorts, currentCohort: user.currentCohort } }).then(function () {\n                return res.send();\n              }).catch(function (e) {\n                return res.sendStatus(500).send(e);\n              });\n\n            case 6:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, undefined);\n    }));\n\n    return function (_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }()).catch(function (e) {\n    return res.sendStatus(500).send(e);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRQcm9maWxlIiwicmVxIiwicmVzIiwianNvbiIsImRhdGEiLCJ1c2VyIiwiZ2V0U3BvdHRlclRlYW0iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJzdHVkZW50Iiwicm9sZSIsIlVTRVJfUk9MRVMiLCJTVFVERU5UIiwiQ29ob3J0IiwiZmluZEJ5SWQiLCJjdXJyZW50Q29ob3J0IiwiZXhlYyIsImNvaG9ydCIsInNwb3R0ZXJUZWFtIiwic3BvdHRlcnMiLCJmaW5kIiwidGVhbSIsInN0dWRlbnRzIiwic29tZSIsIl9pZCIsImVxdWFscyIsInMiLCJVc2VyIiwiJGluIiwicG9wdWxhdGVDdXJyZW50VXNlciIsIm5leHQiLCJqd3REYXRhIiwibGVhbiIsInNlbmRTdGF0dXMiLCJ1cGRhdGVVc2VyIiwicXVlcnkiLCJpZCIsIm5ld0NvaG9ydCIsInllYXIiLCJjaXR5IiwiY29ob3J0SUQiLCJmaW5kT25lIiwidGhlbiIsIm5hbWUiLCJsb2NhdGlvbiIsImNvaG9ydHMiLCJtYXAiLCJpIiwiZGF0ZSIsInN0YXJ0RGF0ZSIsImdldEZ1bGxZZWFyIiwidG9TdHJpbmciLCJwdXNoIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCIkc2V0Iiwic2VuZCIsImNhdGNoIiwiZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBQ0E7Ozs7OztBQUNPLElBQU1BLGtDQUFhLFNBQWJBLFVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdENBLE1BQUlDLElBQUosQ0FBUyxFQUFDQyxNQUFNSCxJQUFJSSxJQUFYLEVBQVQ7QUFDRCxDQUZNOztBQUlBLElBQU1DLDBDQUFpQixTQUFqQkEsY0FBaUI7QUFBQSxTQUFXLElBQUlDLE9BQUo7QUFBQSx1RUFBWSxpQkFBT0MsT0FBUCxFQUFnQkMsTUFBaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ25EQyxz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RjhCOztBQUFBO0FBVXBDakIsc0JBQVFDLEdBQVIsVUFBc0JnQyxRQUF0QjtBQUNBdEMsbUJBQUthLGFBQUwsR0FBcUJ5QixRQUFyQjtBQUNBdEMsbUJBQUsyQyxPQUFMLENBQWFPLElBQWIsQ0FBa0JaLFFBQWxCO0FBQ0FiLHlCQUFLMEIsaUJBQUwsQ0FBdUJqQixFQUF2QixFQUEyQixFQUFDa0IsTUFBTyxFQUFDVCxTQUFTM0MsS0FBSzJDLE9BQWYsRUFBd0I5QixlQUFnQmIsS0FBS2EsYUFBN0MsRUFBUixFQUEzQixFQUFpRzJCLElBQWpHLENBQXNHO0FBQUEsdUJBQU0zQyxJQUFJd0QsSUFBSixFQUFOO0FBQUEsZUFBdEcsRUFBd0hDLEtBQXhILENBQThIO0FBQUEsdUJBQUt6RCxJQUFJa0MsVUFBSixDQUFlLEdBQWYsRUFBb0JzQixJQUFwQixDQUF5QkUsQ0FBekIsQ0FBTDtBQUFBLGVBQTlIOztBQWJvQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUF0Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQWVHRCxLQWZILENBZVM7QUFBQSxXQUFLekQsSUFBSWtDLFVBQUosQ0FBZSxHQUFmLEVBQW9Cc0IsSUFBcEIsQ0FBeUJFLENBQXpCLENBQUw7QUFBQSxHQWZUO0FBZ0JELENBbkJNIiwiZmlsZSI6InVzZXIuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtVc2VyLCBVU0VSX1JPTEVTfSBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbmltcG9ydCBDb2hvcnQgZnJvbSAnLi4vbW9kZWxzL2NvaG9ydCc7XG5pbXBvcnQgeyBnZXRDb2hvcnRCeU5hbWUgfSBmcm9tICcuLi9jb250cm9sbGVycy9jb2hvcnQuY29udHJvbGxlcidcbmV4cG9ydCBjb25zdCBnZXRQcm9maWxlID0gKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5qc29uKHtkYXRhOiByZXEudXNlcn0pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0U3BvdHRlclRlYW0gPSBzdHVkZW50ID0+IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+e1xuICBjb25zb2xlLmxvZyhzdHVkZW50KTtcbiAgaWYoc3R1ZGVudC5yb2xlICE9PSBVU0VSX1JPTEVTLlNUVURFTlQpIHtcbiAgICAvLyBTcG90dGVycyBhcmUgaW1wbGVtZW50ZWQgb25seSBmb3Igc3R1ZGVudHNcbiAgICByZXR1cm4gcmVzb2x2ZShudWxsKTtcbiAgfVxuICBsZXQgY29ob3J0ID0gYXdhaXQgQ29ob3J0LmZpbmRCeUlkKHN0dWRlbnQuY3VycmVudENvaG9ydCkuZXhlYygpO1xuICBsZXQgc3BvdHRlclRlYW0gPSBjb2hvcnQuc3BvdHRlcnMuZmluZCh0ZWFtID0+IHtcbiAgICByZXR1cm4gdGVhbS5zdHVkZW50cy5zb21lKHMgPT4gc3R1ZGVudC5faWQuZXF1YWxzKHMpKTtcbiAgfSk7XG4gIGlmKHNwb3R0ZXJUZWFtID09IG51bGwpIHtcbiAgICByZXR1cm4gcmVzb2x2ZShudWxsKTtcbiAgfVxuICBzcG90dGVyVGVhbS5zdHVkZW50cyA9IGF3YWl0IFVzZXIuZmluZCh7X2lkOiB7JGluOiBzcG90dGVyVGVhbS5zdHVkZW50c319LCAnbmFtZSBwcm9maWxlLmdpdGh1Yi5hdmF0YXJfdXJsIHByb2ZpbGUucGhvbmUnKS5leGVjKCk7XG4gIHJlc29sdmUoc3BvdHRlclRlYW0pO1xufSk7XG5cbmV4cG9ydCBjb25zdCBwb3B1bGF0ZUN1cnJlbnRVc2VyID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQocmVxLmp3dERhdGEudXNlcikubGVhbigpLmV4ZWMoKTtcbiAgICB1c2VyLnNwb3R0ZXJUZWFtID0gYXdhaXQgZ2V0U3BvdHRlclRlYW0odXNlcik7XG4gICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgIG5leHQoKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzLnNlbmRTdGF0dXMoNDA0KTtcbiAgfVxufVxuXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVVc2VyID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHtpZCwgbmV3Q29ob3J0LCB5ZWFyLCBjaXR5fSA9IHJlcS5xdWVyeVxuICBsZXQgY29ob3J0SURcbiAgVXNlci5maW5kT25lKHtfaWQgOiBpZH0pLmxlYW4oKS50aGVuKCBhc3luYyAodXNlcikgPT4ge1xuXG4gICAgYXdhaXQgQ29ob3J0LmZpbmQoe25hbWUgOiBuZXdDb2hvcnQsIGxvY2F0aW9uIDogY2l0eX0pLmxlYW4oKS5leGVjKCkudGhlbiggY29ob3J0cyA9PiB7XG4gICAgICBjb2hvcnRzLm1hcCggKGNvaG9ydCwgaSkgPT4ge1xuICAgICAgICBsZXQgZGF0ZSA9IGNvaG9ydC5zdGFydERhdGU7XG4gICAgICAgIGlmIChkYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKT09PXllYXIpe1xuICAgICAgICAgIGNvaG9ydElEID0gY29ob3J0Ll9pZFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gICAgY29uc29sZS5sb2cgKGAtLS0tLWAsIGNvaG9ydElEKVxuICAgIHVzZXIuY3VycmVudENvaG9ydCA9IGNvaG9ydElEXG4gICAgdXNlci5jb2hvcnRzLnB1c2goY29ob3J0SUQpXG4gICAgVXNlci5maW5kQnlJZEFuZFVwZGF0ZShpZCwgeyRzZXQgOiB7Y29ob3J0czogdXNlci5jb2hvcnRzLCBjdXJyZW50Q29ob3J0IDogdXNlci5jdXJyZW50Q29ob3J0fX0pLnRoZW4oKCkgPT4gcmVzLnNlbmQoKSkuY2F0Y2goZSA9PiByZXMuc2VuZFN0YXR1cyg1MDApLnNlbmQoZSkpXG4gICAgXG4gIH0pLmNhdGNoKGUgPT4gcmVzLnNlbmRTdGF0dXMoNTAwKS5zZW5kKGUpKVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "json",
        "data",
        "user",
        "getSpotterTeam",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "student",
        "role",
        "USER_ROLES",
        "STUDENT",
        "Cohort",
        "findById",
        "currentCohort",
        "exec",
        "cohort",
        "spotterTeam",
        "spotters",
        "find",
        "team",
        "students",
        "some",
        "_id",
        "equals",
        "s",
        "User",
        "$in",
        "populateCurrentUser",
        "next",
        "jwtData",
        "lean",
        "sendStatus",
        "updateUser",
        "query",
        "id",
        "newCohort",
        "year",
        "city",
        "cohortID",
        "findOne",
        "then",
        "name",
        "location",
        "cohorts",
        "map",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "push",
        "findByIdAndUpdate",
        "$set",
        "send",
        "catch",
        "e"
      ],
      "mappings": "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",
      "file": "user.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import {User, USER_ROLES} from '../models/user';\n\nimport Cohort from '../models/cohort';\nimport { getCohortByName } from '../controllers/cohort.controller'\nexport const getProfile = (req, res) => {\n  res.json({data: req.user});\n}\n\nexport const getSpotterTeam = student => new Promise(async (resolve, reject) =>{\n  console.log(student);\n  if(student.role !== USER_ROLES.STUDENT) {\n    // Spotters are implemented only for students\n    return resolve(null);\n  }\n  let cohort = await Cohort.findById(student.currentCohort).exec();\n  let spotterTeam = cohort.spotters.find(team => {\n    return team.students.some(s => student._id.equals(s));\n  });\n  if(spotterTeam == null) {\n    return resolve(null);\n  }\n  spotterTeam.students = await User.find({_id: {$in: spotterTeam.students}}, 'name profile.github.avatar_url profile.phone').exec();\n  resolve(spotterTeam);\n});\n\nexport const populateCurrentUser = async (req, res, next) => {\n  try {\n    const user = await User.findById(req.jwtData.user).lean().exec();\n    user.spotterTeam = await getSpotterTeam(user);\n    req.user = user;\n    next();\n  } catch (err) {\n    res.sendStatus(404);\n  }\n}\n\n\nexport const updateUser = (req, res) => {\n  const {id, newCohort, year, city} = req.query\n  let cohortID\n  User.findOne({_id : id}).lean().then( async (user) => {\n\n    await Cohort.find({name : newCohort, location : city}).lean().exec().then( cohorts => {\n      cohorts.map( (cohort, i) => {\n        let date = cohort.startDate;\n        if (date.getFullYear().toString()===year){\n          cohortID = cohort._id\n        }\n      })\n    })\n    console.log (`-----`, cohortID)\n    user.currentCohort = cohortID\n    user.cohorts.push(cohortID)\n    User.findByIdAndUpdate(id, {$set : {cohorts: user.cohorts, currentCohort : user.currentCohort}}).then(() => res.send()).catch(e => res.sendStatus(500).send(e))\n    \n  }).catch(e => res.sendStatus(500).send(e))\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/cohort.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/cohort.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/cohort.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.js",
      "sourceFileName": "cohort.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Cohort', new Schema({\n  startDate: { type: Date, required: true },\n  endDate: Date,\n  name: String,\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" },\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }]\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwic3RhcnREYXRlIiwidHlwZSIsIkRhdGUiLCJyZXF1aXJlZCIsImVuZERhdGUiLCJuYW1lIiwiU3RyaW5nIiwicHJvZ3JhbSIsImRlZmF1bHQiLCJsb2NhdGlvbiIsInNwb3R0ZXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUYsTUFBSixDQUFXO0FBQ2pERyxhQUFXLEVBQUNDLE1BQUtDLElBQU4sRUFBWUMsVUFBUyxJQUFyQixFQURzQztBQUVqREMsV0FBU0YsSUFGd0M7QUFHakRHLFFBQU1DLE1BSDJDO0FBSWpEQyxXQUFTLEVBQUNOLE1BQUtLLE1BQU4sRUFBY0UsU0FBUSxtQkFBdEIsRUFKd0M7QUFLakRDLFlBQVUsRUFBQ1IsTUFBS0ssTUFBTixFQUFjRSxTQUFRLFdBQXRCLEVBTHVDO0FBTWpERSxZQUFVLENBQUM7QUFDVEMsY0FBVUwsTUFERDtBQUVUTSxjQUFVLENBQUM7QUFDVFgsWUFBTUosT0FBT2dCLEtBQVAsQ0FBYUMsUUFEVjtBQUVUQyxXQUFLO0FBRkksS0FBRDtBQUZELEdBQUQ7QUFOdUMsQ0FBWCxDQUF6QixDIiwiZmlsZSI6ImNvaG9ydC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCB7U2NoZW1hfSA9IG1vbmdvb3NlO1xuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnQ29ob3J0JywgbmV3IFNjaGVtYSh7XG4gIHN0YXJ0RGF0ZToge3R5cGU6RGF0ZSwgcmVxdWlyZWQ6dHJ1ZX0sXG4gIGVuZERhdGU6IERhdGUsXG4gIG5hbWU6IFN0cmluZyxcbiAgcHJvZ3JhbToge3R5cGU6U3RyaW5nLCBkZWZhdWx0OlwiRXhwb25lbnQ6U29mdHdhcmVcIn0sXG4gIGxvY2F0aW9uOiB7dHlwZTpTdHJpbmcsIGRlZmF1bHQ6XCJIeWRlcmFiYWRcIn0sXG4gIHNwb3R0ZXJzOiBbe1xuICAgIHRlYW1OYW1lOiBTdHJpbmcsXG4gICAgc3R1ZGVudHM6IFt7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH1dLFxuICB9XSxcbn0pKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "startDate",
        "type",
        "Date",
        "required",
        "endDate",
        "name",
        "String",
        "program",
        "default",
        "location",
        "spotters",
        "teamName",
        "students",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,QAAf,EAAyB,IAAIF,MAAJ,CAAW;AACjDG,aAAW,EAACC,MAAKC,IAAN,EAAYC,UAAS,IAArB,EADsC;AAEjDC,WAASF,IAFwC;AAGjDG,QAAMC,MAH2C;AAIjDC,WAAS,EAACN,MAAKK,MAAN,EAAcE,SAAQ,mBAAtB,EAJwC;AAKjDC,YAAU,EAACR,MAAKK,MAAN,EAAcE,SAAQ,WAAtB,EALuC;AAMjDE,YAAU,CAAC;AACTC,cAAUL,MADD;AAETM,cAAU,CAAC;AACTX,YAAMJ,OAAOgB,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFD,GAAD;AANuC,CAAX,CAAzB,C",
      "file": "cohort.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Cohort', new Schema({\n  startDate: {type:Date, required:true},\n  endDate: Date,\n  name: String,\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n}));\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/cohort.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getCohortStudents"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortStudents",
                "local": "getCohortStudents"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "resetCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetCohortDays",
                "local": "resetCohortDays"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohorts",
            "getCohortByName",
            "getCohort",
            "createCohort",
            "updateCohort",
            "deleteCohort",
            "createSpotters",
            "populateCurrentCohorts",
            "resetSpotters"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohorts",
              "exported": "getCohorts"
            },
            {
              "kind": "local",
              "local": "getCohortByName",
              "exported": "getCohortByName"
            },
            {
              "kind": "local",
              "local": "getCohort",
              "exported": "getCohort"
            },
            {
              "kind": "local",
              "local": "createCohort",
              "exported": "createCohort"
            },
            {
              "kind": "local",
              "local": "updateCohort",
              "exported": "updateCohort"
            },
            {
              "kind": "local",
              "local": "deleteCohort",
              "exported": "deleteCohort"
            },
            {
              "kind": "local",
              "local": "createSpotters",
              "exported": "createSpotters"
            },
            {
              "kind": "local",
              "local": "populateCurrentCohorts",
              "exported": "populateCurrentCohorts"
            },
            {
              "kind": "local",
              "local": "resetSpotters",
              "exported": "resetSpotters"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/cohort.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/cohort.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.controller.js",
      "sourceFileName": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetSpotters = exports.populateCurrentCohorts = exports.createSpotters = exports.deleteCohort = exports.updateCohort = exports.createCohort = exports.getCohort = exports.getCohortByName = exports.getCohorts = undefined;\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _student = require('../controllers/student.controller');\n\nvar _day = require('../controllers/day.controller');\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getCohorts = exports.getCohorts = function getCohorts(req, res) {\n  _cohort2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortByName = exports.getCohortByName = function getCohortByName(req, res) {\n  var _req$query = req.query,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  _cohort2.default.find({ name: req.params.cohortName, location: city }).lean().exec().then(function (cohorts) {\n    cohorts.map(function (cohort, i) {\n      var date = cohort.startDate;\n      if (date.getFullYear().toString() === year) {\n        (0, _student.getCohortStudents)(cohort).then(function (students) {\n          cohort.students = students;\n          res.json({ cohort: cohort });\n        });\n      }\n    });\n  }).catch(function (e) {\n    return res.status(500).send(e);\n  });\n};\n\nvar getCohort = exports.getCohort = function getCohort(req, res) {\n  _cohort2.default.findById(req.params.id).lean().exec().then(function (cohort) {\n    (0, _student.getCohortStudents)(cohort).then(function (students) {\n      cohort.students = students;\n      res.json({ cohort: cohort });\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createCohort = exports.createCohort = function createCohort(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      location = _req$body.location,\n      program = _req$body.program,\n      startDate = _req$body.startDate,\n      endDate = _req$body.endDate;\n\n  startDate = new Date(+startDate);\n  new _cohort2.default({ name: name, location: location, program: program, startDate: startDate, endDate: endDate }).save().then(function (data) {\n    (0, _day.resetCohortDays)(data).catch(function (e) {\n      \"Errored out in create all days\" + e;\n    }).then(function () {\n      return res.status(201).json({ data: data });\n    });\n  }).catch(function (err) {\n    return res.status(500).send({ err: err });\n  });\n};\n\nvar updateCohort = exports.updateCohort = function updateCohort(req, res) {\n  var _req$body2 = req.body,\n      location = _req$body2.location,\n      program = _req$body2.program,\n      startDate = _req$body2.startDate;\n\n  _cohort2.default.findByIdAndUpdate(req.params.id, { location: location, program: program, startDate: startDate }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteCohort = exports.deleteCohort = function deleteCohort(req, res) {\n  _cohort2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createSpotters = exports.createSpotters = function createSpotters(cohort) {\n  return (0, _student.getCohortStudents)(cohort).then(function (students) {\n    students = students.map(function (s) {\n      return s._id;\n    });\n    var p = (0, _createChunks2.default)(students, 3);\n\n    for (var i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i - 1].students = p[i].students.concat(p[i - 1].students);\n        p.pop();\n      }\n    }\n    cohort.spotters = p;\n    return cohort.save();\n  });\n};\n\nvar populateCurrentCohorts = exports.populateCurrentCohorts = function populateCurrentCohorts() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return _cohort2.default.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  }).then(function (cohorts) {\n    //console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\");\n    var p = [];\n    for (var i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]));\n    }\n    return Promise.all(p);\n  }).catch(function (e) {\n    return console.log(\"Errored out in populateCurrentCohorts\" + e);\n  });\n};\n\nvar resetSpotters = exports.resetSpotters = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n\n            _cohort2.default.findById(req.params.cohort_id).then(function (cohort) {\n              return createSpotters(cohort);\n            }).then(function (cohort) {\n              res.send(cohort);\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function resetSpotters(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.controller.js"
      ],
      "names": [
        "getCohorts",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getCohortByName",
        "query",
        "year",
        "city",
        "name",
        "params",
        "cohortName",
        "location",
        "lean",
        "cohorts",
        "map",
        "cohort",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "students",
        "e",
        "getCohort",
        "findById",
        "id",
        "createCohort",
        "body",
        "program",
        "endDate",
        "Date",
        "save",
        "updateCohort",
        "findByIdAndUpdate",
        "deleteCohort",
        "remove",
        "createSpotters",
        "s",
        "_id",
        "p",
        "length",
        "concat",
        "pop",
        "spotters",
        "populateCurrentCohorts",
        "today",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "console",
        "log",
        "push",
        "Promise",
        "all",
        "resetSpotters",
        "cohort_id",
        "sendStatus"
      ],
      "mappings": "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",
      "file": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/cohort';\nimport {getCohortStudents} from '../controllers/student.controller';\nimport {resetCohortDays} from '../controllers/day.controller'\nimport createChunks from \"../util/createChunks\"\n\nexport const getCohorts = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortByName = (req, res) => {\n  let {year, city} = req.query\n  Resource.find({name : req.params.cohortName, location : city}).lean().exec().then( cohorts => {\n    cohorts.map( (cohort, i) => {\n      let date = cohort.startDate;\n      if (date.getFullYear().toString()===year){\n        getCohortStudents(cohort)\n        .then(students => {\n           cohort.students = students;\n          res.json({cohort})\n        })\n      }\n    })\n  }).catch(e => res.status(500).send(e))\n\n}\n\nexport const getCohort = (req, res) => {\n  Resource.findById(req.params.id).lean().exec()\n  .then(cohort => {\n    getCohortStudents(cohort)\n    .then(students => {\n      cohort.students = students;\n      res.json({cohort: cohort})\n    })\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createCohort = (req, res) => {\n  let {name, location, program, startDate, endDate} = req.body;\n  startDate = new Date(+startDate)\n  new Resource({name, location, program, startDate, endDate}).save()\n  .then(data => {\n    resetCohortDays(data).catch(e => {\"Errored out in create all days\" + e})\n  .then(() =>\n    res.status(201).json({data})\n    )\n  })\n  .catch(err => res.status(500).send({err}));\n}\n\nexport const updateCohort = (req, res) => {\n  const {location, program, startDate} = req.body;\n  Resource.findByIdAndUpdate(req.params.id, {location, program, startDate})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteCohort = (req, res) => {\n  Resource.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createSpotters = (cohort) => {\n  return getCohortStudents(cohort).then((students) => {\n    students = students.map(s => s._id)\n    let p = createChunks(students, 3)\n\n    for (let i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i-1].students = p[i].students.concat(p[i - 1].students)\n        p.pop()\n      }\n    }\n    cohort.spotters = p\n    return cohort.save()\n    })\n  }\n\nexport const populateCurrentCohorts = () =>{\n  let today = new Date()\n  let tonight = new Date()\n\n  today.setHours(0)\n  today.setMinutes(0)\n  today.setSeconds(0)\n\n  tonight.setHours(23)\n  tonight.setMinutes(59)\n  tonight.setSeconds(59)\n\n  return Resource.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  })\n  .then( cohorts => {//console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\")\n    let p =[]\n    for (let i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]))\n    }\n    return Promise.all(p)\n  })\n  .catch(e => console.log(\"Errored out in populateCurrentCohorts\" + e))\n\n} \n\nexport const resetSpotters = async (req, res) => {\n\n  Resource.findById(req.params.cohort_id)\n  .then(cohort => createSpotters(cohort))\n  .then(cohort => {\n    res.send(cohort);\n  })\n  .catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/student.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohortStudents",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohortStudents",
              "exported": "getCohortStudents"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/student.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/student.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.controller.js",
      "sourceFileName": "student.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getCohortStudents = undefined;\n\nvar _user = require('../models/user');\n\nvar getCohortStudents = exports.getCohortStudents = function getCohortStudents(cohort) {\n  return _user.Student.find({\n    currentCohort: cohort._id,\n    role: _user.USER_ROLES.STUDENT\n  }).exec();\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user.Student.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user.Student.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role,\n      cohorts = _req$body.cohorts,\n      currentCohort = _req$body.currentCohort;\n\n  new _user.Student({ name: name, email: email, profile: profile, role: role, cohorts: cohorts, currentCohort: currentCohort }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _user.Student.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user.Student.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRDb2hvcnRTdHVkZW50cyIsIlN0dWRlbnQiLCJmaW5kIiwiY3VycmVudENvaG9ydCIsImNvaG9ydCIsIl9pZCIsInJvbGUiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsImV4ZWMiLCJnZXRBbGwiLCJyZXEiLCJyZXMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiYm9keSIsIm5hbWUiLCJlbWFpbCIsInByb2ZpbGUiLCJjb2hvcnRzIiwic2F2ZSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFTyxJQUFNQSxnREFBb0IsU0FBcEJBLGlCQUFvQjtBQUFBLFNBQVVDLGNBQVFDLElBQVIsQ0FBYTtBQUN0REMsbUJBQWVDLE9BQU9DLEdBRGdDO0FBRXREQyxVQUFNQyxpQkFBV0M7QUFGcUMsR0FBYixFQUd4Q0MsSUFId0MsRUFBVjtBQUFBLENBQTFCOztBQUtBLElBQU1DLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENYLGdCQUFRQyxJQUFSLEdBQWVPLElBQWYsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBUUQsSUFBSUUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDWCxnQkFBUW9CLFFBQVIsQ0FBaUJWLElBQUlXLE1BQUosQ0FBV0MsRUFBNUIsRUFBZ0NkLElBQWhDLEdBQ0NJLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLGtCQUMyQkQsSUFBSWMsSUFEL0I7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEtBRHFCLGFBQ3JCQSxLQURxQjtBQUFBLE1BQ2RDLE9BRGMsYUFDZEEsT0FEYztBQUFBLE1BQ0x0QixJQURLLGFBQ0xBLElBREs7QUFBQSxNQUNDdUIsT0FERCxhQUNDQSxPQUREO0FBQUEsTUFDVTFCLGFBRFYsYUFDVUEsYUFEVjs7QUFFbEMsTUFBSUYsYUFBSixDQUFZLEVBQUN5QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUE2QnVCLGdCQUE3QixFQUFzQzFCLDRCQUF0QyxFQUFaLEVBQWtFMkIsSUFBbEUsR0FDQ2pCLElBREQsQ0FDTSxnQkFBUTtBQUNaa0IsWUFBUUMsR0FBUixDQUFZLEVBQUNqQixVQUFELEVBQVo7QUFDQUgsUUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCLEVBQUNDLFVBQUQsRUFBckI7QUFBNkIsR0FIL0IsRUFJQ0MsS0FKRCxDQUlPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FKUDtBQUtELENBUE07O0FBU0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDdEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEMsTUFBTUcsT0FBT0osSUFBSWMsSUFBakI7QUFDQTtBQUNBeEIsZ0JBQVFpQyxpQkFBUixDQUEwQnZCLElBQUlXLE1BQUosQ0FBV0MsRUFBckMsRUFBeUNSLElBQXpDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWmUsWUFBUUMsR0FBUixDQUFZYixHQUFaO0FBQ0FQLFFBQUlLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsR0FBckI7QUFBMEIsR0FKNUI7QUFLRCxDQVJNOztBQVVBLElBQU1nQixnQ0FBWSxTQUFaQSxTQUFZLENBQUN4QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNyQ1gsZ0JBQVFtQyxNQUFSLENBQWUsRUFBQy9CLEtBQUlNLElBQUlXLE1BQUosQ0FBV0MsRUFBaEIsRUFBZixFQUFvQ2QsSUFBcEMsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBTUQsSUFBSXlCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNyQixLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJzdHVkZW50LmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U3R1ZGVudCwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG5leHBvcnQgY29uc3QgZ2V0Q29ob3J0U3R1ZGVudHMgPSBjb2hvcnQgPT4gU3R1ZGVudC5maW5kKHtcbiAgY3VycmVudENvaG9ydDogY29ob3J0Ll9pZCxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5UXG59KS5leGVjKCk7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgU3R1ZGVudC5maW5kKCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldE9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBTdHVkZW50LmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge25hbWUsIGVtYWlsLCBwcm9maWxlLCByb2xlLCBjb2hvcnRzLCBjdXJyZW50Q29ob3J0fSA9IHJlcS5ib2R5O1xuICBuZXcgU3R1ZGVudCh7bmFtZSwgZW1haWwsIHByb2ZpbGUsIHJvbGUsIGNvaG9ydHMsIGN1cnJlbnRDb2hvcnR9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiB7XG4gICAgY29uc29sZS5sb2coe2RhdGF9KTtcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pfSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBkYXRhID0gcmVxLmJvZHk7XG4gIC8vIHRvZG86IGNoZWNrIGlmIHRoZSBjdXJyZW50Q29ob3J0IGlzIHZhbGlkIGFuZCB0aGVuIGNvbnRpbnVlXG4gIFN0dWRlbnQuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgZGF0YSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBTdHVkZW50LnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSkgIFxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.controller.js"
      ],
      "names": [
        "getCohortStudents",
        "Student",
        "find",
        "currentCohort",
        "cohort",
        "_id",
        "role",
        "USER_ROLES",
        "STUDENT",
        "exec",
        "getAll",
        "req",
        "res",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "name",
        "email",
        "profile",
        "cohorts",
        "save",
        "console",
        "log",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,IAAMA,gDAAoB,SAApBA,iBAAoB;AAAA,SAAUC,cAAQC,IAAR,CAAa;AACtDC,mBAAeC,OAAOC,GADgC;AAEtDC,UAAMC,iBAAWC;AAFqC,GAAb,EAGxCC,IAHwC,EAAV;AAAA,CAA1B;;AAKA,IAAMC,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQC,IAAR,GAAeO,IAAf,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACT,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQoB,QAAR,CAAiBV,IAAIW,MAAJ,CAAWC,EAA5B,EAAgCd,IAAhC,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACb,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC2BD,IAAIc,IAD/B;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,KADqB,aACrBA,KADqB;AAAA,MACdC,OADc,aACdA,OADc;AAAA,MACLtB,IADK,aACLA,IADK;AAAA,MACCuB,OADD,aACCA,OADD;AAAA,MACU1B,aADV,aACUA,aADV;;AAElC,MAAIF,aAAJ,CAAY,EAACyB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAA6BuB,gBAA7B,EAAsC1B,4BAAtC,EAAZ,EAAkE2B,IAAlE,GACCjB,IADD,CACM,gBAAQ;AACZkB,YAAQC,GAAR,CAAY,EAACjB,UAAD,EAAZ;AACAH,QAAIK,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB;AAA6B,GAH/B,EAICC,KAJD,CAIO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAJP;AAKD,CAPM;;AASA,IAAMc,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAMG,OAAOJ,IAAIc,IAAjB;AACA;AACAxB,gBAAQiC,iBAAR,CAA0BvB,IAAIW,MAAJ,CAAWC,EAArC,EAAyCR,IAAzC,EACCF,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZe,YAAQC,GAAR,CAAYb,GAAZ;AACAP,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMgB,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCX,gBAAQmC,MAAR,CAAe,EAAC/B,KAAIM,IAAIW,MAAJ,CAAWC,EAAhB,EAAf,EAAoCd,IAApC,GACCI,IADD,CACM;AAAA,WAAMD,IAAIyB,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "student.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import {Student, USER_ROLES} from '../models/user';\n\nexport const getCohortStudents = cohort => Student.find({\n  currentCohort: cohort._id,\n  role: USER_ROLES.STUDENT\n}).exec();\n\nexport const getAll = (req, res) => {\n  Student.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Student.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {name, email, profile, role, cohorts, currentCohort} = req.body;\n  new Student({name, email, profile, role, cohorts, currentCohort}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Student.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Student.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/day.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "slicedToArray",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "dayDetails",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "getCohortDays",
            "getCurrentDays",
            "getToday",
            "createDayPairs",
            "createCohortDays",
            "resetCohortDays",
            "addPromptToTimeline",
            "addContentToDay",
            "removePromptFromTimeline",
            "resetPairs",
            "resetDay"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "dayDetails",
              "exported": "dayDetails"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "getCohortDays",
              "exported": "getCohortDays"
            },
            {
              "kind": "local",
              "local": "getCurrentDays",
              "exported": "getCurrentDays"
            },
            {
              "kind": "local",
              "local": "getToday",
              "exported": "getToday"
            },
            {
              "kind": "local",
              "local": "createDayPairs",
              "exported": "createDayPairs"
            },
            {
              "kind": "local",
              "local": "createCohortDays",
              "exported": "createCohortDays"
            },
            {
              "kind": "local",
              "local": "resetCohortDays",
              "exported": "resetCohortDays"
            },
            {
              "kind": "local",
              "local": "addPromptToTimeline",
              "exported": "addPromptToTimeline"
            },
            {
              "kind": "local",
              "local": "addContentToDay",
              "exported": "addContentToDay"
            },
            {
              "kind": "local",
              "local": "removePromptFromTimeline",
              "exported": "removePromptFromTimeline"
            },
            {
              "kind": "local",
              "local": "resetPairs",
              "exported": "resetPairs"
            },
            {
              "kind": "local",
              "local": "resetDay",
              "exported": "resetDay"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/day.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/day.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.controller.js",
      "sourceFileName": "day.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetDay = exports.resetPairs = exports.removePromptFromTimeline = exports.addContentToDay = exports.addPromptToTimeline = exports.resetCohortDays = exports.createCohortDays = exports.createDayPairs = exports.getToday = exports.getCurrentDays = exports.getCohortDays = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.dayDetails = exports.getAll = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _day2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar dayDetails = exports.dayDetails = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var dayNumber, cohortID;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dayNumber = req.params.dayNumber;\n            cohortID = req.query.cohortID;\n\n            _day2.default.find({ day: dayNumber, cohort: cohortID }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (day) {\n              res.json({ day: day });\n            }).catch(function (e) {\n              return res.status(500).send(e);\n            });\n\n          case 3:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function dayDetails(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _day2.default.findById(req.params.day_id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var data = req.body.data;\n\n  new _day2.default({ data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var phase = req.body.phase;\n\n  _day2.default.findByIdAndUpdate(req.params.day_id, phase).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _day2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortDays = exports.getCohortDays = function getCohortDays(req, res) {\n  _day2.default.find({ cohort: req.params.cohort_id }).populate({\n    path: 'timeline.prompt',\n    populate: { path: 'pings' }\n  }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar todayFilter = function todayFilter() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n};\n\nvar getCurrentDays = exports.getCurrentDays = function getCurrentDays() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _day2.default.find(_extends({}, filter, {\n    date: todayFilter()\n  })).exec();\n};\n\nvar getToday = exports.getToday = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$user, userId, cohort, date, day;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$user = req.user, userId = _req$user._id, cohort = _req$user.currentCohort;\n            date = todayFilter();\n            _context2.next = 5;\n            return _day2.default.findOne({ cohort: cohort, date: date }).populate('timeline.prompt').populate('pingpongs.to').populate('pingpongs.ping').populate('pairs.students').exec();\n\n          case 5:\n            day = _context2.sent;\n\n            // important: ObjectId is not string\n            day.pingpongs = day.pingpongs.filter(function (pp) {\n              return pp.by.equals(userId);\n            });\n            day.timeline = day.timeline.map(function (tl) {\n              var startTime = tl.startTime;\n              startTime.setDate(day.date.getDate());\n              startTime.setFullYear(day.date.getFullYear());\n              startTime.setMonth(day.date.getMonth());\n              return {\n                _id: tl._id,\n                prompt: tl.prompt,\n                startTime: startTime\n              };\n            });\n            res.send({ data: day });\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            console.log(\"Day not found\", _context2.t0);\n            res.sendStatus(404);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function getToday(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar createDayPairs = exports.createDayPairs = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(day) {\n    var students, p, i, _p;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _user2.default.find({\n              'currentCohort': day.cohort\n            }).exec();\n\n          case 2:\n            students = _context3.sent;\n\n            if (!day.data.find(function (x) {\n              return x.type == \"Milestone\";\n            })) {\n              _context3.next = 10;\n              break;\n            }\n\n            // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n            // students = students.map(s => s._id)\n            p = (0, _createChunks2.default)(students, 3);\n\n            for (i = 0; i < p.length; i++) {\n              if (p[i].students.length <= 1) {\n                p[i - 1].students = p[i].students.concat(p[i - 1].students);\n                p.pop();\n              }\n            }\n            day.pairs = p;\n            return _context3.abrupt('return', day);\n\n          case 10:\n\n            // students = students.map(s => s._id)\n            _p = (0, _createChunks2.default)(students, 2);\n\n            day.pairs = _p;\n            // day.save()\n            console.log(\"DAY PAIRS\");\n            return _context3.abrupt('return', day);\n\n          case 14:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  }));\n\n  return function createDayPairs(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getPhase = function getPhase(i) {\n  if (i < 10) return 'Week 0';\n  if (i < 39) return 'Core';\n  if (i < 67) return 'Focus';\n  if (i < 81) return 'Deep Focus';\n  if (i < 95) return 'Capstone Product';\n  return 'Career';\n};\n\nvar createDays = function createDays(cohortId, cohortStartDate, fromDay, count) {\n  count = +count;\n  var dayDate = new Date(cohortStartDate.getTime());\n  var allDays = [];\n  for (var i = fromDay; i < fromDay + count; i++) {\n\n    var dDate = new Date(dayDate.getTime());\n    dDate.setDate(dDate.getDate() + i);\n\n    var ms = dDate.getTime();\n    dDate.setHours(0);\n    dDate.setMinutes(1);\n\n    var day = new _day2.default({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline: []\n    }).save();\n    allDays.push(day);\n  }\n\n  return Promise.all(allDays);\n};\n\nvar createCohortDays = exports.createCohortDays = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _ref5, _ref6, latestDay, cohort, nextDay, days;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _day2.default.find({ cohort: req.params.cohort_id }).sort({ day: -1 }).limit(1);\n\n          case 3:\n            _ref5 = _context4.sent;\n            _ref6 = _slicedToArray(_ref5, 1);\n            latestDay = _ref6[0];\n            _context4.next = 8;\n            return _cohort2.default.findOne({ _id: req.params.cohort_id });\n\n          case 8:\n            cohort = _context4.sent;\n            nextDay = latestDay === null ? 1 : 1 + latestDay.day;\n            _context4.next = 12;\n            return createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n\n          case 12:\n            days = _context4.sent;\n\n            res.send(days);\n            _context4.next = 20;\n            break;\n\n          case 16:\n            _context4.prev = 16;\n            _context4.t0 = _context4['catch'](0);\n\n            console.error(_context4.t0);\n            res.sendStatus(404);\n\n          case 20:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined, [[0, 16]]);\n  }));\n\n  return function createCohortDays(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar resetCohortDays = exports.resetCohortDays = function resetCohortDays(_ref7) {\n  var _id = _ref7._id,\n      startDate = _ref7.startDate;\n\n  return createDays(_id, startDate, 1, 108);\n};\n\nvar addPromptToTimeline = exports.addPromptToTimeline = function addPromptToTimeline(req, res) {\n  var _req$body = req.body,\n      startTime = _req$body.startTime,\n      prompt = _req$body.prompt;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $push: { \"timeline\": { startTime: startTime, prompt: prompt } }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).populate({\n      path: 'timeline.prompt',\n      populate: { path: 'pings' }\n    }).populate('pairs.students').exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar addContentToDay = exports.addContentToDay = function addContentToDay(req, res) {\n  var data = req.body;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $set: { 'data': data }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar removePromptFromTimeline = exports.removePromptFromTimeline = function removePromptFromTimeline(req, res) {\n  var _req$params = req.params,\n      day_id = _req$params.day_id,\n      timeline_id = _req$params.timeline_id;\n\n  _day2.default.update({ '_id': day_id, 'timeline._id': timeline_id }, { $pull: { 'timeline': { _id: timeline_id } } }).then(function (data) {\n    res.json({ data: data });\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n};\n\nvar resetPairs = exports.resetPairs = function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _day2.default.findById(req.params.day_id).populate('pairs.students').exec();\n\n          case 3:\n            day = _context5.sent;\n            _context5.next = 6;\n            return createDayPairs(day);\n\n          case 6:\n            day = _context5.sent;\n\n            day.save();\n            data = day.pairs;\n\n            res.send({ data: data });\n            _context5.next = 15;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined, [[0, 12]]);\n  }));\n\n  return function resetPairs(_x9, _x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar resetDay = exports.resetDay = function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var replicate, day;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            replicate = req.body.replicate;\n            _context6.next = 3;\n            return _day2.default.findById(replicate);\n\n          case 3:\n            day = _context6.sent;\n\n            _day2.default.findByIdAndUpdate(req.params.day_id, { $set: {\n                timeline: day.timeline,\n                phase: day.phase,\n                data: day.data\n              } }, { new: true }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).then(function (data) {\n              res.send({ data: data });\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 5:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined);\n  }));\n\n  return function resetDay(_x11, _x12) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldEFsbCIsInJlcSIsInJlcyIsIkRheSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZGF5RGV0YWlscyIsImRheU51bWJlciIsInBhcmFtcyIsImNvaG9ydElEIiwicXVlcnkiLCJkYXkiLCJjb2hvcnQiLCJwb3B1bGF0ZSIsInBhdGgiLCJlIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJkYXlfaWQiLCJjcmVhdGUiLCJib2R5Iiwic2F2ZSIsInVwZGF0ZSIsInBoYXNlIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCJkZWxldGVPbmUiLCJyZW1vdmUiLCJpZCIsImdldENvaG9ydERheXMiLCJjb2hvcnRfaWQiLCJ0b2RheUZpbHRlciIsInRvZGF5IiwiRGF0ZSIsInRvbmlnaHQiLCJzZXRIb3VycyIsInNldE1pbnV0ZXMiLCJzZXRTZWNvbmRzIiwiJGd0ZSIsIiRsdCIsImdldEN1cnJlbnREYXlzIiwiZmlsdGVyIiwiZGF0ZSIsImdldFRvZGF5IiwidXNlciIsInVzZXJJZCIsIl9pZCIsImN1cnJlbnRDb2hvcnQiLCJmaW5kT25lIiwicGluZ3BvbmdzIiwicHAiLCJieSIsImVxdWFscyIsInRpbWVsaW5lIiwibWFwIiwic3RhcnRUaW1lIiwidGwiLCJzZXREYXRlIiwiZ2V0RGF0ZSIsInNldEZ1bGxZZWFyIiwiZ2V0RnVsbFllYXIiLCJzZXRNb250aCIsImdldE1vbnRoIiwicHJvbXB0IiwiY29uc29sZSIsImxvZyIsInNlbmRTdGF0dXMiLCJjcmVhdGVEYXlQYWlycyIsIlVzZXIiLCJzdHVkZW50cyIsIngiLCJ0eXBlIiwicCIsImkiLCJsZW5ndGgiLCJjb25jYXQiLCJwb3AiLCJwYWlycyIsImdldFBoYXNlIiwiY3JlYXRlRGF5cyIsImNvaG9ydElkIiwiY29ob3J0U3RhcnREYXRlIiwiZnJvbURheSIsImNvdW50IiwiZGF5RGF0ZSIsImdldFRpbWUiLCJhbGxEYXlzIiwiZERhdGUiLCJtcyIsInB1c2giLCJQcm9taXNlIiwiYWxsIiwiY3JlYXRlQ29ob3J0RGF5cyIsInNvcnQiLCJsaW1pdCIsImxhdGVzdERheSIsIkNvaG9ydCIsIm5leHREYXkiLCJzdGFydERhdGUiLCJkYXlzIiwiZXJyb3IiLCJyZXNldENvaG9ydERheXMiLCJhZGRQcm9tcHRUb1RpbWVsaW5lIiwiJHB1c2giLCJhZGRDb250ZW50VG9EYXkiLCIkc2V0IiwicmVtb3ZlUHJvbXB0RnJvbVRpbWVsaW5lIiwidGltZWxpbmVfaWQiLCIkcHVsbCIsInJlc2V0UGFpcnMiLCJyZXNldERheSIsInJlcGxpY2F0ZSIsIm5ldyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7QUFFTyxJQUFNQSwwQkFBUyxTQUFUQSxNQUFTLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxnQkFBSUMsSUFBSixHQUFXQyxJQUFYLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUM7QUFBQSxxRUFBYSxpQkFBT1osR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNqQlkscUJBRGlCLEdBQ0piLElBQUljLE1BREEsQ0FDakJELFNBRGlCO0FBRW5CRSxvQkFGbUIsR0FFUGYsSUFBSWdCLEtBRkcsQ0FFbkJELFFBRm1COztBQUd4QmIsMEJBQUlDLElBQUosQ0FBUyxFQUFDYyxLQUFNSixTQUFQLEVBQWtCSyxRQUFTSCxRQUEzQixFQUFULEVBQ0NJLFFBREQsQ0FDVTtBQUNSQyxvQkFBSyxpQkFERztBQUVSRCx3QkFB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QUFOLEVBSkosRUFLQ2xHLFFBTEQsQ0FLVTtBQUNSQyxvQkFBSyxpQkFERztBQUVSRCx3QkFBVSxFQUFDQyxNQUFNLE9BQVA7QUFGRixhQUxWLEVBU0NmLElBVEQsQ0FTTSxnQkFBUTtBQUNaSixrQkFBSVMsSUFBSixDQUFTLEVBQUNILFVBQUQsRUFBVDtBQUNELGFBWEQsRUFXR0MsS0FYSCxDQVdTLGVBQU87QUFDZFAsa0JBQUlzRSxVQUFKLENBQWUsR0FBZjtBQUNELGFBYkQ7O0FBSHNCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQVg7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTiIsImZpbGUiOiJkYXkuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERheSBmcm9tICcuLi9tb2RlbHMvZGF5JztcbmltcG9ydCBDb2hvcnQgZnJvbSAnLi4vbW9kZWxzL2NvaG9ydCdcbmltcG9ydCBVc2VyIGZyb20gXCIuLi9tb2RlbHMvdXNlclwiO1xuaW1wb3J0IGNyZWF0ZUNodW5rcyBmcm9tIFwiLi4vdXRpbC9jcmVhdGVDaHVua3NcIiBcblxuZXhwb3J0IGNvbnN0IGdldEFsbCA9IChyZXEsIHJlcykgPT4ge1xuICBEYXkuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkYXlEZXRhaWxzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHtkYXlOdW1iZXJ9ID0gcmVxLnBhcmFtc1xuICBsZXQge2NvaG9ydElEfSA9IHJlcS5xdWVyeVxuICBEYXkuZmluZCh7ZGF5IDogZGF5TnVtYmVyLCBjb2hvcnQgOiBjb2hvcnRJRH0pXG4gIC5wb3B1bGF0ZSh7XG4gICAgcGF0aDondGltZWxpbmUucHJvbXB0JyxcbiAgICBwb3B1bGF0ZToge3BhdGg6ICdwaW5ncyd9XG4gICAgfSlcbiAgLnBvcHVsYXRlKCdwaW5ncG9uZ3MucGluZycpXG4gIC5wb3B1bGF0ZSgncGFpcnMuc3R1ZGVudHMnKVxuICAuZXhlYygpLnRoZW4oZGF5ID0+IHtcbiAgICByZXMuanNvbih7ZGF5fSlcbiAgfSkuY2F0Y2goZSA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlKSlcbn1cblxuZXhwb3J0IGNvbnN0IGdldE9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBEYXkuZmluZEJ5SWQocmVxLnBhcmFtcy5kYXlfaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge2RhdGF9ID0gcmVxLmJvZHk7XG4gIG5ldyBEYXkoe2RhdGF9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHtwaGFzZX0gPSByZXEuYm9keTtcbiAgRGF5LmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuZGF5X2lkLCBwaGFzZSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIERheS5yZW1vdmUoe2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnN0YXR1cygyMDQpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0Q29ob3J0RGF5cyA9IChyZXEsIHJlcykgPT4ge1xuICBEYXkuZmluZCh7Y29ob3J0OnJlcS5wYXJhbXMuY29ob3J0X2lkfSlcbiAgICAucG9wdWxhdGUoe1xuICAgICAgcGF0aDondGltZWxpbmUucHJvbXB0JyxcbiAgICAgIHBvcHVsYXRlOiB7cGF0aDogJ3BpbmdzJ31cbiAgICAgIH0pXG4gICAgLnBvcHVsYXRlKCdwaW5ncG9uZ3MucGluZycpXG4gICAgLnBvcHVsYXRlKCdwYWlycy5zdHVkZW50cycpXG4gICAgLmV4ZWMoKVxuICAgIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5jb25zdCB0b2RheUZpbHRlciA9ICgpID0+IHtcbiAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCB0b25pZ2h0ID0gbmV3IERhdGUoKTtcblxuICB0b2RheS5zZXRIb3VycygwKTtcbiAgdG9kYXkuc2V0TWludXRlcygwKTtcbiAgdG9kYXkuc2V0U2Vjb25kcygwKTtcblxuICB0b25pZ2h0LnNldEhvdXJzKDIzKTtcbiAgdG9uaWdodC5zZXRNaW51dGVzKDU5KTtcbiAgdG9uaWdodC5zZXRTZWNvbmRzKDU5KTtcblxuICByZXR1cm4geyAkZ3RlOiB0b2RheSwgJGx0OiB0b25pZ2h0IH07XG59XG5cblxuZXhwb3J0IGNvbnN0IGdldEN1cnJlbnREYXlzID0gKGZpbHRlciA9IHt9KSA9PiB7XG4gIHJldHVybiBEYXkuZmluZCh7XG4gICAgLi4uZmlsdGVyLFxuICAgIGRhdGU6IHRvZGF5RmlsdGVyKClcbiAgfSkuZXhlYygpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0VG9kYXkgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7X2lkOiB1c2VySWQsIGN1cnJlbnRDb2hvcnQ6IGNvaG9ydH0gPSByZXEudXNlcjtcbiAgICBjb25zdCBkYXRlID0gdG9kYXlGaWx0ZXIoKTtcbiAgICBjb25zdCBkYXkgPSBhd2FpdCBEYXkuZmluZE9uZSh7Y29ob3J0LCBkYXRlfSlcbiAgICAucG9wdWxhdGUoJ3RpbWVsaW5lLnByb21wdCcpXG4gICAgLnBvcHVsYXRlKCdwaW5ncG9uZ3MudG8nKVxuICAgIC5wb3B1bGF0ZSgncGluZ3BvbmdzLnBpbmcnKVxuICAgIC5wb3B1bGF0ZSgncGFpcnMuc3R1ZGVudHMnKVxuICAgIC5leGVjKCk7XG4gICAgICAvLyBpbXBvcnRhbnQ6IE9iamVjdElkIGlzIG5vdCBzdHJpbmdcbiAgICBkYXkucGluZ3BvbmdzID0gZGF5LnBpbmdwb25ncy5maWx0ZXIocHAgPT4gcHAuYnkuZXF1YWxzKHVzZXJJZCkpO1xuICAgIGRheS50aW1lbGluZSA9IGRheS50aW1lbGluZS5tYXAodGwgPT4ge1xuICAgICAgbGV0IHN0YXJ0VGltZSA9IHRsLnN0YXJ0VGltZTtcbiAgICAgIHN0YXJ0VGltZS5zZXREYXRlKGRheS5kYXRlLmdldERhdGUoKSk7XG4gICAgICBzdGFydFRpbWUuc2V0RnVsbFllYXIoZGF5LmRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgICBzdGFydFRpbWUuc2V0TW9udGgoZGF5LmRhdGUuZ2V0TW9udGgoKSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBfaWQ6IHRsLl9pZCxcbiAgICAgICAgcHJvbXB0OiB0bC5wcm9tcHQsXG4gICAgICAgIHN0YXJ0VGltZVxuICAgICAgfVxuICAgIH0pXG4gICAgcmVzLnNlbmQoe2RhdGE6ZGF5fSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKFwiRGF5IG5vdCBmb3VuZFwiLCBlcnIpO1xuICAgIHJlcy5zZW5kU3RhdHVzKDQwNCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURheVBhaXJzID0gYXN5bmMgKGRheSkgPT4geyBcblxuICAgIGxldCBzdHVkZW50cyA9IGF3YWl0IFVzZXIuZmluZCh7XG4gICAgICAnY3VycmVudENvaG9ydCc6IGRheS5jb2hvcnRcbiAgICB9KS5leGVjKClcbiAgICBcbiAgICBpZihkYXkuZGF0YS5maW5kKHg9PiB4LnR5cGU9PVwiTWlsZXN0b25lXCIpKSB7XG4gICAgICAvLyBUSElTIExJTkUgV0FTIENPTU1FTlRFRCBCRUNBVUUgSVQgV0FTIFJFVFVSTklORyBBTiBBUlJBWSBXSVRIIE9CSkVDVElEcyBCVVQgTk9UIEFOIEFSUkFZIE9GIE9CSkVDVFMod2hpY2ggaXMgcmVxdWlyZWQpXG4gICAgICAvLyBzdHVkZW50cyA9IHN0dWRlbnRzLm1hcChzID0+IHMuX2lkKVxuICAgICAgbGV0IHAgPSBjcmVhdGVDaHVua3Moc3R1ZGVudHMsIDMpXG4gICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICBpZiAocFtpXS5zdHVkZW50cy5sZW5ndGggPD0gMSkge1xuICAgICAgICAgICBwW2ktMV0uc3R1ZGVudHMgPSBwW2ldLnN0dWRlbnRzLmNvbmNhdChwW2kgLSAxXS5zdHVkZW50cylcbiAgICAgICAgICAgcC5wb3AoKVxuICAgICAgICAgfVxuICAgICAgIH1cbiAgICAgICBkYXkucGFpcnMgPSBwXG4gICAgICAgcmV0dXJuIGRheSBcbiAgICB9IGVsc2Uge1xuXG4gICAgICAvLyBzdHVkZW50cyA9IHN0dWRlbnRzLm1hcChzID0+IHMuX2lkKVxuICAgICAgbGV0IHAgPSBjcmVhdGVDaHVua3Moc3R1ZGVudHMsIDIpICBcbiAgICAgIGRheS5wYWlycyA9IHBcbiAgICAgIC8vIGRheS5zYXZlKClcbiAgICAgIGNvbnNvbGUubG9nKFwiREFZIFBBSVJTXCIpXG4gICAgICByZXR1cm4gZGF5XG4gIH1cbn1cblxuY29uc3QgZ2V0UGhhc2UgPSBpID0+IHtcbiAgaWYoaTwxMCkgcmV0dXJuICdXZWVrIDAnO1xuICBpZihpPDM5KSByZXR1cm4gJ0NvcmUnO1xuICBpZihpPDY3KSByZXR1cm4gJ0ZvY3VzJztcbiAgaWYoaTw4MSkgcmV0dXJuICdEZWVwIEZvY3VzJztcbiAgaWYoaTw5NSkgcmV0dXJuICdDYXBzdG9uZSBQcm9kdWN0JztcbiAgcmV0dXJuICdDYXJlZXInO1xufVxuXG5jb25zdCBjcmVhdGVEYXlzID0gKGNvaG9ydElkLCBjb2hvcnRTdGFydERhdGUsIGZyb21EYXksIGNvdW50KSA9PiB7XG4gIGNvdW50ID0gK2NvdW50O1xuICBsZXQgZGF5RGF0ZSA9IG5ldyBEYXRlKGNvaG9ydFN0YXJ0RGF0ZS5nZXRUaW1lKCkpO1xuICBsZXQgYWxsRGF5cyA9W107XG4gIGZvciAobGV0IGkgPSBmcm9tRGF5OyBpIDwgZnJvbURheSArIGNvdW50OyBpKyspIHtcblxuICAgICAgbGV0IGREYXRlPW5ldyBEYXRlKGRheURhdGUuZ2V0VGltZSgpKTtcbiAgICAgIGREYXRlLnNldERhdGUoZERhdGUuZ2V0RGF0ZSgpICsgaSk7XG5cbiAgICAgIGxldCBtcyA9IGREYXRlLmdldFRpbWUoKTtcbiAgICAgIGREYXRlLnNldEhvdXJzKDApXG4gICAgICBkRGF0ZS5zZXRNaW51dGVzKDEpXG5cbiAgICAgIGxldCBkYXkgPSBuZXcgRGF5KHtcbiAgICAgIGRheTogaSxcbiAgICAgIGRhdGU6IGREYXRlLFxuICAgICAgY29ob3J0OiBjb2hvcnRJZCxcbiAgICAgIHBoYXNlOiBnZXRQaGFzZShpKSxcbiAgICAgIHRpbWVsaW5lOltdLFxuICAgIH0pLnNhdmUoKVxuICAgIGFsbERheXMucHVzaChkYXkpXG4gIH1cblxuICByZXR1cm4gUHJvbWlzZS5hbGwoYWxsRGF5cylcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUNvaG9ydERheXMgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBsZXQgW2xhdGVzdERheV0gPSBhd2FpdCBEYXkuZmluZCh7Y29ob3J0IDogcmVxLnBhcmFtcy5jb2hvcnRfaWR9KS5zb3J0KHtkYXkgOiAtMX0pLmxpbWl0KDEpO1xuICAgIGxldCBjb2hvcnQgPSBhd2FpdCBDb2hvcnQuZmluZE9uZSh7X2lkIDogcmVxLnBhcmFtcy5jb2hvcnRfaWR9KTtcbiAgICBsZXQgbmV4dERheSA9IGxhdGVzdERheSA9PT0gbnVsbCA/IDEgOiAoMSArIGxhdGVzdERheS5kYXkpO1xuICAgIGxldCBkYXlzID0gYXdhaXQgY3JlYXRlRGF5cyhjb2hvcnQuX2lkLCBjb2hvcnQuc3RhcnREYXRlLCBuZXh0RGF5LCByZXEuYm9keS5jb3VudCk7XG4gICAgcmVzLnNlbmQoZGF5cyk7XG4gIH0gY2F0Y2goZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIHJlcy5zZW5kU3RhdHVzKDQwNCk7XG4gIH1cblxufVxuXG5leHBvcnQgY29uc3QgcmVzZXRDb2hvcnREYXlzID0gKHtfaWQsIHN0YXJ0RGF0ZX0pID0+IHtcbiAgcmV0dXJuIGNyZWF0ZURheXMoX2lkLCBzdGFydERhdGUsIDEsIDEwOCk7XG5cbn1cblxuZXhwb3J0IGNvbnN0IGFkZFByb21wdFRvVGltZWxpbmUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge3N0YXJ0VGltZSwgcHJvbXB0fSA9IHJlcS5ib2R5O1xuICBjb25zdCB7ZGF5X2lkfSA9IHJlcS5wYXJhbXM7XG4gIERheS51cGRhdGUoe19pZDogZGF5X2lkfSwge1xuICAgICRwdXNoOiB7XCJ0aW1lbGluZVwiOiB7c3RhcnRUaW1lLCBwcm9tcHR9fVxuICB9KVxuICAudGhlbihkYXRhID0+IHtcbiAgICBEYXkuZmluZEJ5SWQoe19pZDogZGF5X2lkfSlcbiAgICAucG9wdWxhdGUoe1xuICAgICAgcGF0aDondGltZWxpbmUucHJvbXB0JyxcbiAgICAgIHBvcHVsYXRlOiB7cGF0aDogJ3BpbmdzJ31cbiAgICB9KVxuICAgIC5wb3B1bGF0ZSgncGFpcnMuc3R1ZGVudHMnKVxuICAgIC5leGVjKClcbiAgICAudGhlbiggZGF0YSA9PiB7XG4gICAgICAgcmVzLmpzb24oe2RhdGF9KVxuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIH0pXG4gIH0pXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCBhZGRDb250ZW50VG9EYXkgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xuICBjb25zdCB7ZGF5X2lkfSA9IHJlcS5wYXJhbXM7XG4gIERheS51cGRhdGUoe19pZDogZGF5X2lkfSwge1xuICAgICRzZXQ6IHsnZGF0YSc6IGRhdGF9XG4gIH0pXG4gIC50aGVuKCBkYXRhID0+IHtcbiAgICBEYXkuZmluZEJ5SWQoe19pZDogZGF5X2lkfSlcbiAgICAgIC5leGVjKClcbiAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICByZXMuanNvbih7ZGF0YX0pXG4gICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgIH0pXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpXG4gIH0pXG59XG5cbmV4cG9ydCBjb25zdCByZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge2RheV9pZCwgdGltZWxpbmVfaWR9ID0gcmVxLnBhcmFtcztcbiAgRGF5LnVwZGF0ZShcbiAgICB7J19pZCc6IGRheV9pZCwgJ3RpbWVsaW5lLl9pZCc6IHRpbWVsaW5lX2lkfSxcbiAgICB7ICRwdWxsOiB7ICd0aW1lbGluZSc6IHtfaWQ6IHRpbWVsaW5lX2lkfSB9fVxuICApXG4gIC50aGVuKCBkYXRhID0+IHtcbiAgICByZXMuanNvbih7ZGF0YX0pXG4gIH0pXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycilcbiAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCByZXNldFBhaXJzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cbiAgdHJ5IHtcbiAgICBsZXQgZGF5ID0gYXdhaXQgRGF5LmZpbmRCeUlkKHJlcS5wYXJhbXMuZGF5X2lkKVxuICAgIC5wb3B1bGF0ZSgncGFpcnMuc3R1ZGVudHMnKVxuICAgIC5leGVjKCk7XG4gICAgZGF5ID0gYXdhaXQgY3JlYXRlRGF5UGFpcnMoZGF5KTtcbiAgICBkYXkuc2F2ZSgpO1xuICAgIGNvbnN0IGRhdGEgPSBkYXkucGFpcnM7XG4gICAgcmVzLnNlbmQoe2RhdGF9KTtcbiAgfSBjYXRjaChlcnIpIHtcbiAgICByZXMuc2VuZFN0YXR1cyg1MDApO1xuICB9XG5cbn1cblxuZXhwb3J0IGNvbnN0IHJlc2V0RGF5ID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHtyZXBsaWNhdGV9ID0gcmVxLmJvZHk7XG4gIGNvbnN0IGRheSA9IGF3YWl0IERheS5maW5kQnlJZChyZXBsaWNhdGUpO1xuICBEYXkuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5kYXlfaWQsIHskc2V0IDoge1xuICAgIHRpbWVsaW5lOiBkYXkudGltZWxpbmUsXG4gICAgcGhhc2U6IGRheS5waGFzZSxcbiAgICBkYXRhOiBkYXkuZGF0YSxcbiAgfX0sIHtuZXc6IHRydWV9KVxuICAucG9wdWxhdGUoe1xuICAgIHBhdGg6J3RpbWVsaW5lLnByb21wdCcsXG4gICAgcG9wdWxhdGU6IHtwYXRoOiAncGluZ3MnfVxuICB9KVxuICAudGhlbihkYXRhID0+IHtcbiAgICByZXMuc2VuZCh7ZGF0YX0pXG4gIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgcmVzLnNlbmRTdGF0dXMoNTAwKTtcbiAgfSk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Day",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "dayDetails",
        "dayNumber",
        "params",
        "cohortID",
        "query",
        "day",
        "cohort",
        "populate",
        "path",
        "e",
        "getOne",
        "findById",
        "day_id",
        "create",
        "body",
        "save",
        "update",
        "phase",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "id",
        "getCohortDays",
        "cohort_id",
        "todayFilter",
        "today",
        "Date",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "$gte",
        "$lt",
        "getCurrentDays",
        "filter",
        "date",
        "getToday",
        "user",
        "userId",
        "_id",
        "currentCohort",
        "findOne",
        "pingpongs",
        "pp",
        "by",
        "equals",
        "timeline",
        "map",
        "startTime",
        "tl",
        "setDate",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "prompt",
        "console",
        "log",
        "sendStatus",
        "createDayPairs",
        "User",
        "students",
        "x",
        "type",
        "p",
        "i",
        "length",
        "concat",
        "pop",
        "pairs",
        "getPhase",
        "createDays",
        "cohortId",
        "cohortStartDate",
        "fromDay",
        "count",
        "dayDate",
        "getTime",
        "allDays",
        "dDate",
        "ms",
        "push",
        "Promise",
        "all",
        "createCohortDays",
        "sort",
        "limit",
        "latestDay",
        "Cohort",
        "nextDay",
        "startDate",
        "days",
        "error",
        "resetCohortDays",
        "addPromptToTimeline",
        "$push",
        "addContentToDay",
        "$set",
        "removePromptFromTimeline",
        "timeline_id",
        "$pull",
        "resetPairs",
        "resetDay",
        "replicate",
        "new"
      ],
      "mappings": "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",
      "file": "day.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Day from '../models/day';\nimport Cohort from '../models/cohort'\nimport User from \"../models/user\";\nimport createChunks from \"../util/createChunks\" \n\nexport const getAll = (req, res) => {\n  Day.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const dayDetails = async (req, res) => {\n  const {dayNumber} = req.params\n  let {cohortID} = req.query\n  Day.find({day : dayNumber, cohort : cohortID})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n    })\n  .populate('pingpongs.ping')\n  .populate('pairs.students')\n  .exec().then(day => {\n    res.json({day})\n  }).catch(e => res.status(500).send(e))\n}\n\nexport const getOne = (req, res) => {\n  Day.findById(req.params.day_id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {data} = req.body;\n  new Day({data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const {phase} = req.body;\n  Day.findByIdAndUpdate(req.params.day_id, phase)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Day.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortDays = (req, res) => {\n  Day.find({cohort:req.params.cohort_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n      })\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec()\n    .then(data => res.json({data}))\n    .catch(err => res.status(500).send(err));\n}\n\nconst todayFilter = () => {\n  const today = new Date();\n  const tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n}\n\n\nexport const getCurrentDays = (filter = {}) => {\n  return Day.find({\n    ...filter,\n    date: todayFilter()\n  }).exec();\n}\n\nexport const getToday = async (req, res) => {\n  try {\n    const {_id: userId, currentCohort: cohort} = req.user;\n    const date = todayFilter();\n    const day = await Day.findOne({cohort, date})\n    .populate('timeline.prompt')\n    .populate('pingpongs.to')\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec();\n      // important: ObjectId is not string\n    day.pingpongs = day.pingpongs.filter(pp => pp.by.equals(userId));\n    day.timeline = day.timeline.map(tl => {\n      let startTime = tl.startTime;\n      startTime.setDate(day.date.getDate());\n      startTime.setFullYear(day.date.getFullYear());\n      startTime.setMonth(day.date.getMonth());\n      return {\n        _id: tl._id,\n        prompt: tl.prompt,\n        startTime\n      }\n    })\n    res.send({data:day});\n  } catch (err) {\n    console.log(\"Day not found\", err);\n    res.sendStatus(404);\n  }\n}\n\nexport const createDayPairs = async (day) => { \n\n    let students = await User.find({\n      'currentCohort': day.cohort\n    }).exec()\n    \n    if(day.data.find(x=> x.type==\"Milestone\")) {\n      // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 3)\n       for (let i = 0; i < p.length; i++) {\n         if (p[i].students.length <= 1) {\n           p[i-1].students = p[i].students.concat(p[i - 1].students)\n           p.pop()\n         }\n       }\n       day.pairs = p\n       return day \n    } else {\n\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 2)  \n      day.pairs = p\n      // day.save()\n      console.log(\"DAY PAIRS\")\n      return day\n  }\n}\n\nconst getPhase = i => {\n  if(i<10) return 'Week 0';\n  if(i<39) return 'Core';\n  if(i<67) return 'Focus';\n  if(i<81) return 'Deep Focus';\n  if(i<95) return 'Capstone Product';\n  return 'Career';\n}\n\nconst createDays = (cohortId, cohortStartDate, fromDay, count) => {\n  count = +count;\n  let dayDate = new Date(cohortStartDate.getTime());\n  let allDays =[];\n  for (let i = fromDay; i < fromDay + count; i++) {\n\n      let dDate=new Date(dayDate.getTime());\n      dDate.setDate(dDate.getDate() + i);\n\n      let ms = dDate.getTime();\n      dDate.setHours(0)\n      dDate.setMinutes(1)\n\n      let day = new Day({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline:[],\n    }).save()\n    allDays.push(day)\n  }\n\n  return Promise.all(allDays)\n}\n\nexport const createCohortDays = async (req, res) => {\n  try {\n    let [latestDay] = await Day.find({cohort : req.params.cohort_id}).sort({day : -1}).limit(1);\n    let cohort = await Cohort.findOne({_id : req.params.cohort_id});\n    let nextDay = latestDay === null ? 1 : (1 + latestDay.day);\n    let days = await createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n    res.send(days);\n  } catch(err) {\n    console.error(err);\n    res.sendStatus(404);\n  }\n\n}\n\nexport const resetCohortDays = ({_id, startDate}) => {\n  return createDays(_id, startDate, 1, 108);\n\n}\n\nexport const addPromptToTimeline = (req, res) => {\n  const {startTime, prompt} = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $push: {\"timeline\": {startTime, prompt}}\n  })\n  .then(data => {\n    Day.findById({_id: day_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n    })\n    .populate('pairs.students')\n    .exec()\n    .then( data => {\n       res.json({data})\n    }).catch(err => {\n      console.log(err);\n    })\n  })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const addContentToDay = (req, res) => {\n  const data = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $set: {'data': data}\n  })\n  .then( data => {\n    Day.findById({_id: day_id})\n      .exec()\n      .then(data => {\n        res.json({data})\n       })\n      .catch(err => {\n        console.log(err);\n        })\n    })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)\n  })\n}\n\nexport const removePromptFromTimeline = (req, res) => {\n  const {day_id, timeline_id} = req.params;\n  Day.update(\n    {'_id': day_id, 'timeline._id': timeline_id},\n    { $pull: { 'timeline': {_id: timeline_id} }}\n  )\n  .then( data => {\n    res.json({data})\n  })\n  .catch(err => {\n    res.status(500).send(err)\n  });\n}\n\nexport const resetPairs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id)\n    .populate('pairs.students')\n    .exec();\n    day = await createDayPairs(day);\n    day.save();\n    const data = day.pairs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport const resetDay = async (req, res) => {\n  const {replicate} = req.body;\n  const day = await Day.findById(replicate);\n  Day.findByIdAndUpdate(req.params.day_id, {$set : {\n    timeline: day.timeline,\n    phase: day.phase,\n    data: day.data,\n  }}, {new: true})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n  })\n  .then(data => {\n    res.send({data})\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/day.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/day.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/day.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.js",
      "sourceFileName": "day.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Day', new Schema({\n  date: {\n    type: Date\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n    // required: true\n  },\n  phase: {\n    type: String\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwiZGF0ZSIsInR5cGUiLCJEYXRlIiwiZGF5IiwiTnVtYmVyIiwibWluIiwibWF4IiwiZGF0YSIsImNvaG9ydCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJwaGFzZSIsIlN0cmluZyIsInBhaXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsInRpbWVsaW5lIiwicHJvbXB0Iiwic3RhcnRUaW1lIiwiTWl4ZWQiLCJwaW5ncG9uZ3MiLCJ0cmlnZ2VyVGltZSIsImJ5IiwidG8iLCJwaW5nIiwicG9uZyIsImNvbGxlY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLEtBQWYsRUFBc0IsSUFBSUYsTUFBSixDQUFXO0FBQzlDRyxRQUFNO0FBQ0pDLFVBQU1DO0FBQ047QUFGSSxHQUR3QztBQUs5Q0MsT0FBSztBQUNIRixVQUFNRyxNQURIO0FBRUhDLFNBQUssQ0FGRjtBQUdIQyxTQUFLO0FBSEYsR0FMeUM7QUFVOUNDLFFBQU0sQ0FBQyxFQUFELENBVndDO0FBVzlDQyxVQUFRO0FBQ05QLFVBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxTQUFLO0FBQ0w7QUFITSxHQVhzQztBQWdCOUNDLFNBQU87QUFDTFgsVUFBTVk7QUFERCxHQWhCdUM7QUFtQjlDQyxTQUFPLENBQUM7QUFDTkMsY0FBVUYsTUFESjtBQUVORyxjQUFVLENBQUM7QUFDVGYsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURWO0FBRVRDLFdBQUs7QUFGSSxLQUFEO0FBRkosR0FBRCxDQW5CdUM7O0FBMkI5Q00sWUFBVSxDQUFDO0FBQ1RDLFlBQVE7QUFDTmpCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxXQUFLO0FBRkMsS0FEQztBQUtUUSxlQUFXakIsSUFMRjtBQU1USyxVQUFNVixPQUFPWSxLQUFQLENBQWFXO0FBTlYsR0FBRCxDQTNCb0M7O0FBb0M5Q0MsYUFBVyxDQUFDO0FBQ1ZDLGlCQUFhcEIsSUFESDtBQUVWcUIsUUFBSTtBQUNGdEIsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURqQjtBQUVGQyxXQUFLO0FBRkgsS0FGTTtBQU1WYSxRQUFJO0FBQ0Z2QixZQUFNSixPQUFPWSxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFdBQUs7QUFGSCxLQU5NO0FBVVZjLFVBQU07QUFDSnhCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxXQUFLO0FBRkQsS0FWSTtBQWNWZSxVQUFNN0IsT0FBT1ksS0FBUCxDQUFhVztBQWRULEdBQUQ7O0FBcENtQyxDQUFYLEVBcURsQztBQUNETyxjQUFZO0FBRFgsQ0FyRGtDLENBQXRCLEMiLCJmaWxlIjoiZGF5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdEYXknLCBuZXcgU2NoZW1hKHtcbiAgZGF0ZToge1xuICAgIHR5cGU6IERhdGUsXG4gICAgLy8gcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZGF5OiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIG1pbjogMSxcbiAgICBtYXg6IDUwMFxuICB9LFxuICBkYXRhOiBbe31dLFxuICBjb2hvcnQ6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ29ob3J0JyxcbiAgICAvLyByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBwaGFzZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgcGFpcnM6IFt7XG4gICAgdGVhbU5hbWU6IFN0cmluZyxcbiAgICBzdHVkZW50czogW3tcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfV0sXG4gIH1dLFxuXG4gIHRpbWVsaW5lOiBbe1xuICAgIHByb21wdDoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnUHJvbXB0J1xuICAgIH0sXG4gICAgc3RhcnRUaW1lOiBEYXRlLFxuICAgIGRhdGE6IFNjaGVtYS5UeXBlcy5NaXhlZFxuICB9XSxcblxuICBwaW5ncG9uZ3M6IFt7XG4gICAgdHJpZ2dlclRpbWU6IERhdGUsXG4gICAgYnk6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfSxcbiAgICB0bzoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIHBpbmc6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1BpbmcnXG4gICAgfSxcbiAgICBwb25nOiBTY2hlbWEuVHlwZXMuTWl4ZWRcbiAgfV1cblxufSwge1xuICBjb2xsZWN0aW9uOiAnZGF5cydcbn0pKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "date",
        "type",
        "Date",
        "day",
        "Number",
        "min",
        "max",
        "data",
        "cohort",
        "Types",
        "ObjectId",
        "ref",
        "phase",
        "String",
        "pairs",
        "teamName",
        "students",
        "timeline",
        "prompt",
        "startTime",
        "Mixed",
        "pingpongs",
        "triggerTime",
        "by",
        "to",
        "ping",
        "pong",
        "collection"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,KAAf,EAAsB,IAAIF,MAAJ,CAAW;AAC9CG,QAAM;AACJC,UAAMC;AACN;AAFI,GADwC;AAK9CC,OAAK;AACHF,UAAMG,MADH;AAEHC,SAAK,CAFF;AAGHC,SAAK;AAHF,GALyC;AAU9CC,QAAM,CAAC,EAAD,CAVwC;AAW9CC,UAAQ;AACNP,UAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,SAAK;AACL;AAHM,GAXsC;AAgB9CC,SAAO;AACLX,UAAMY;AADD,GAhBuC;AAmB9CC,SAAO,CAAC;AACNC,cAAUF,MADJ;AAENG,cAAU,CAAC;AACTf,YAAMJ,OAAOY,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFJ,GAAD,CAnBuC;;AA2B9CM,YAAU,CAAC;AACTC,YAAQ;AACNjB,YAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,WAAK;AAFC,KADC;AAKTQ,eAAWjB,IALF;AAMTK,UAAMV,OAAOY,KAAP,CAAaW;AANV,GAAD,CA3BoC;;AAoC9CC,aAAW,CAAC;AACVC,iBAAapB,IADH;AAEVqB,QAAI;AACFtB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KAFM;AAMVa,QAAI;AACFvB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KANM;AAUVc,UAAM;AACJxB,YAAMJ,OAAOY,KAAP,CAAaC,QADf;AAEJC,WAAK;AAFD,KAVI;AAcVe,UAAM7B,OAAOY,KAAP,CAAaW;AAdT,GAAD;;AApCmC,CAAX,EAqDlC;AACDO,cAAY;AADX,CArDkC,CAAtB,C",
      "file": "day.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Day', new Schema({\n  date: {\n    type: Date,\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort',\n    // required: true\n  },\n  phase: {\n    type: String,\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/createChunks.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/createChunks.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/createChunks.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createChunks.js",
      "sourceFileName": "createChunks.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createChunks"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (array, number) {\n  array = _lodash2.default.shuffle(array);\n  var chunks = _lodash2.default.chunk(array, number);\n  chunks = chunks.map(function (element) {\n    return {\n      teamName: _faker2.default.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element\n    };\n  });\n\n  return chunks;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUNodW5rcy5qcyJdLCJuYW1lcyI6WyJhcnJheSIsIm51bWJlciIsIl8iLCJzaHVmZmxlIiwiY2h1bmtzIiwiY2h1bmsiLCJtYXAiLCJlbGVtZW50IiwidGVhbU5hbWUiLCJmYWtlciIsImZha2UiLCJzdHVkZW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlLFVBQUNBLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUNoQ0QsVUFBUUUsaUJBQUVDLE9BQUYsQ0FBVUgsS0FBVixDQUFSO0FBQ0EsTUFBSUksU0FBU0YsaUJBQUVHLEtBQUYsQ0FBUUwsS0FBUixFQUFlQyxNQUFmLENBQWI7QUFDQUcsV0FBU0EsT0FBT0UsR0FBUCxDQUFXLFVBQUNDLE9BQUQsRUFBYTtBQUMvQixXQUFPO0FBQ0xDLGdCQUFVQyxnQkFBTUMsSUFBTixDQUFXLDRDQUFYLENBREw7QUFFTEMsZ0JBQVVKO0FBRkwsS0FBUDtBQUlELEdBTFEsQ0FBVDs7QUFPQSxTQUFPSCxNQUFQO0FBQ0QsQyIsImZpbGUiOiJjcmVhdGVDaHVua3MuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZha2VyIGZyb20gJ2Zha2VyJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBkZWZhdWx0IChhcnJheSwgbnVtYmVyKSA9PiB7XG4gIGFycmF5ID0gXy5zaHVmZmxlKGFycmF5KTtcbiAgbGV0IGNodW5rcyA9IF8uY2h1bmsoYXJyYXksIG51bWJlcik7XG4gIGNodW5rcyA9IGNodW5rcy5tYXAoKGVsZW1lbnQpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgdGVhbU5hbWU6IGZha2VyLmZha2UoXCJ7e2NvbXBhbnkuYnNBZGplY3RpdmV9fS17e2NvbXBhbnkuYnNOb3VufX1cIiksXG4gICAgICBzdHVkZW50czogZWxlbWVudCxcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIGNodW5rcztcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createChunks.js"
      ],
      "names": [
        "array",
        "number",
        "_",
        "shuffle",
        "chunks",
        "chunk",
        "map",
        "element",
        "teamName",
        "faker",
        "fake",
        "students"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,KAAD,EAAQC,MAAR,EAAmB;AAChCD,UAAQE,iBAAEC,OAAF,CAAUH,KAAV,CAAR;AACA,MAAII,SAASF,iBAAEG,KAAF,CAAQL,KAAR,EAAeC,MAAf,CAAb;AACAG,WAASA,OAAOE,GAAP,CAAW,UAACC,OAAD,EAAa;AAC/B,WAAO;AACLC,gBAAUC,gBAAMC,IAAN,CAAW,4CAAX,CADL;AAELC,gBAAUJ;AAFL,KAAP;AAID,GALQ,CAAT;;AAOA,SAAOH,MAAP;AACD,C",
      "file": "createChunks.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "import faker from 'faker';\nimport _ from 'lodash';\n\nexport default (array, number) => {\n  array = _.shuffle(array);\n  let chunks = _.chunk(array, number);\n  chunks = chunks.map((element) => {\n    return {\n      teamName: faker.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element,\n    }\n  })\n\n  return chunks;\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/token.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getSoalToken",
            "getFakeToken"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getSoalToken",
              "exported": "getSoalToken"
            },
            {
              "kind": "local",
              "local": "getFakeToken",
              "exported": "getFakeToken"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/token.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/token.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "token.js",
      "sourceFileName": "token.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "token"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFakeToken = exports.getSoalToken = undefined;\n\nvar _user = require('../models/user');\n\nvar _authScopes = require('./authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getScope = function getScope(user) {\n  switch (user.role) {\n    case _user.USER_ROLES.EDUCATOR:\n      return _authScopes2.default.EDUCATOR;\n    case _user.USER_ROLES.SUPERADMIN:\n      return _authScopes2.default.ALL;\n    default:\n      return _authScopes2.default.STUDENT;\n  }\n};\n\nvar getSoalToken = exports.getSoalToken = function getSoalToken(user) {\n  var githubToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return _jsonwebtoken2.default.sign({\n    user: user._id,\n    githubToken: githubToken,\n    scope: getScope(user)\n  }, process.env.JWT_SECRET);\n};\n\nvar getFakeToken = exports.getFakeToken = function getFakeToken() {\n  var fakeAdmin = {\n    _id: '234932498',\n    role: _user.USER_ROLES.SUPERADMIN\n  };\n  return getSoalToken(fakeAdmin);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuLmpzIl0sIm5hbWVzIjpbImdldFNjb3BlIiwidXNlciIsInJvbGUiLCJVU0VSX1JPTEVTIiwiRURVQ0FUT1IiLCJBVVRIX1NDT1BFUyIsIlNVUEVSQURNSU4iLCJBTEwiLCJTVFVERU5UIiwiZ2V0U29hbFRva2VuIiwiZ2l0aHViVG9rZW4iLCJqd3QiLCJzaWduIiwiX2lkIiwic2NvcGUiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImdldEZha2VUb2tlbiIsImZha2VBZG1pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFdBQVcsU0FBWEEsUUFBVyxPQUFRO0FBQ3ZCLFVBQU9DLEtBQUtDLElBQVo7QUFDRSxTQUFLQyxpQkFBV0MsUUFBaEI7QUFBMEIsYUFBT0MscUJBQVlELFFBQW5CO0FBQzFCLFNBQUtELGlCQUFXRyxVQUFoQjtBQUE0QixhQUFPRCxxQkFBWUUsR0FBbkI7QUFDNUI7QUFBUyxhQUFPRixxQkFBWUcsT0FBbkI7QUFIWDtBQUtELENBTkQ7O0FBUU8sSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxDQUFDUixJQUFEO0FBQUEsTUFBT1MsV0FBUCx1RUFBbUIsSUFBbkI7QUFBQSxTQUE0QkMsdUJBQUlDLElBQUosQ0FBUztBQUMvRFgsVUFBTUEsS0FBS1ksR0FEb0Q7QUFFL0RILDRCQUYrRDtBQUcvREksV0FBT2QsU0FBU0MsSUFBVDtBQUh3RCxHQUFULEVBSXJEYyxRQUFRQyxHQUFSLENBQVlDLFVBSnlDLENBQTVCO0FBQUEsQ0FBckI7O0FBT0EsSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxHQUFNO0FBQ2hDLE1BQU1DLFlBQVk7QUFDaEJOLFNBQUssV0FEVztBQUVoQlgsVUFBTUMsaUJBQVdHO0FBRkQsR0FBbEI7QUFJQSxTQUFPRyxhQUFhVSxTQUFiLENBQVA7QUFDRCxDQU5NIiwiZmlsZSI6InRva2VuLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IEFVVEhfU0NPUEVTIGZyb20gJy4vYXV0aFNjb3Blcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5cbmNvbnN0IGdldFNjb3BlID0gdXNlciA9PiB7XG4gIHN3aXRjaCh1c2VyLnJvbGUpIHtcbiAgICBjYXNlIFVTRVJfUk9MRVMuRURVQ0FUT1I6IHJldHVybiBBVVRIX1NDT1BFUy5FRFVDQVRPUjtcbiAgICBjYXNlIFVTRVJfUk9MRVMuU1VQRVJBRE1JTjogcmV0dXJuIEFVVEhfU0NPUEVTLkFMTDtcbiAgICBkZWZhdWx0OiByZXR1cm4gQVVUSF9TQ09QRVMuU1RVREVOVDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0U29hbFRva2VuID0gKHVzZXIsIGdpdGh1YlRva2VuPW51bGwpID0+IGp3dC5zaWduKHtcbiAgdXNlcjogdXNlci5faWQsXG4gIGdpdGh1YlRva2VuLFxuICBzY29wZTogZ2V0U2NvcGUodXNlciksXG59LCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKTtcblxuXG5leHBvcnQgY29uc3QgZ2V0RmFrZVRva2VuID0gKCkgPT4ge1xuICBjb25zdCBmYWtlQWRtaW4gPSB7XG4gICAgX2lkOiAnMjM0OTMyNDk4JyxcbiAgICByb2xlOiBVU0VSX1JPTEVTLlNVUEVSQURNSU4sXG4gIH1cbiAgcmV0dXJuIGdldFNvYWxUb2tlbihmYWtlQWRtaW4pO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "token.js"
      ],
      "names": [
        "getScope",
        "user",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "AUTH_SCOPES",
        "SUPERADMIN",
        "ALL",
        "STUDENT",
        "getSoalToken",
        "githubToken",
        "jwt",
        "sign",
        "_id",
        "scope",
        "process",
        "env",
        "JWT_SECRET",
        "getFakeToken",
        "fakeAdmin"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,OAAQ;AACvB,UAAOC,KAAKC,IAAZ;AACE,SAAKC,iBAAWC,QAAhB;AAA0B,aAAOC,qBAAYD,QAAnB;AAC1B,SAAKD,iBAAWG,UAAhB;AAA4B,aAAOD,qBAAYE,GAAnB;AAC5B;AAAS,aAAOF,qBAAYG,OAAnB;AAHX;AAKD,CAND;;AAQO,IAAMC,sCAAe,SAAfA,YAAe,CAACR,IAAD;AAAA,MAAOS,WAAP,uEAAmB,IAAnB;AAAA,SAA4BC,uBAAIC,IAAJ,CAAS;AAC/DX,UAAMA,KAAKY,GADoD;AAE/DH,4BAF+D;AAG/DI,WAAOd,SAASC,IAAT;AAHwD,GAAT,EAIrDc,QAAQC,GAAR,CAAYC,UAJyC,CAA5B;AAAA,CAArB;;AAOA,IAAMC,sCAAe,SAAfA,YAAe,GAAM;AAChC,MAAMC,YAAY;AAChBN,SAAK,WADW;AAEhBX,UAAMC,iBAAWG;AAFD,GAAlB;AAIA,SAAOG,aAAaU,SAAb,CAAP;AACD,CANM",
      "file": "token.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "import {USER_ROLES} from '../models/user';\nimport AUTH_SCOPES from './authScopes';\nimport jwt from 'jsonwebtoken';\n\nconst getScope = user => {\n  switch(user.role) {\n    case USER_ROLES.EDUCATOR: return AUTH_SCOPES.EDUCATOR;\n    case USER_ROLES.SUPERADMIN: return AUTH_SCOPES.ALL;\n    default: return AUTH_SCOPES.STUDENT;\n  }\n}\n\nexport const getSoalToken = (user, githubToken=null) => jwt.sign({\n  user: user._id,\n  githubToken,\n  scope: getScope(user),\n}, process.env.JWT_SECRET);\n\n\nexport const getFakeToken = () => {\n  const fakeAdmin = {\n    _id: '234932498',\n    role: USER_ROLES.SUPERADMIN,\n  }\n  return getSoalToken(fakeAdmin);\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/authScopes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/authScopes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/authScopes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "authScopes.js",
      "sourceFileName": "authScopes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "authScopes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhTY29wZXMuanMiXSwibmFtZXMiOlsiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkFMTCJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQWU7QUFDYkEsV0FBUyxTQURJO0FBRWJDLFlBQVUsVUFGRztBQUdiQyxjQUFZLFlBSEM7QUFJYkMsT0FBSztBQUpRLEMiLCJmaWxlIjoiYXV0aFNjb3Blcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIFNUVURFTlQ6ICdzdHVkZW50JyxcbiAgRURVQ0FUT1I6ICdlZHVjYXRvcicsXG4gIFNVUEVSQURNSU46ICdzdXBlcmFkbWluJyxcbiAgQUxMOiAnYWxsJyxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "authScopes.js"
      ],
      "names": [
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "ALL"
      ],
      "mappings": ";;;;;kBAAe;AACbA,WAAS,SADI;AAEbC,YAAU,UAFG;AAGbC,cAAY,YAHC;AAIbC,OAAK;AAJQ,C",
      "file": "authScopes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "export default {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all',\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/cohort.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getCohortDays",
              "createCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortDays",
                "local": "getCohortDays"
              },
              {
                "kind": "named",
                "imported": "createCohortDays",
                "local": "createCohortDays"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName",
              "getCohorts",
              "getCohort",
              "createCohort",
              "updateCohort",
              "deleteCohort",
              "resetSpotters"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              },
              {
                "kind": "named",
                "imported": "getCohorts",
                "local": "getCohorts"
              },
              {
                "kind": "named",
                "imported": "getCohort",
                "local": "getCohort"
              },
              {
                "kind": "named",
                "imported": "createCohort",
                "local": "createCohort"
              },
              {
                "kind": "named",
                "imported": "updateCohort",
                "local": "updateCohort"
              },
              {
                "kind": "named",
                "imported": "deleteCohort",
                "local": "deleteCohort"
              },
              {
                "kind": "named",
                "imported": "resetSpotters",
                "local": "resetSpotters"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/cohort.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/cohort.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.routes.js",
      "sourceFileName": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _cohort = require('../controllers/cohort.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', _cohort.getCohorts);\nrouter.get('/:cohortName', _cohort.getCohortByName);\nrouter.get('/id/:id', _cohort.getCohort);\nrouter.post('/', _cohort.createCohort);\nrouter.patch('/:id', _cohort.updateCohort);\nrouter.delete('/:id', _cohort.deleteCohort);\n\nrouter.get('/:cohort_id/days', _day.getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', _day.createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', _roles.allowSuperAdminOnly, _cohort.resetSpotters);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldENvaG9ydHMiLCJnZXRDb2hvcnRCeU5hbWUiLCJnZXRDb2hvcnQiLCJwb3N0IiwiY3JlYXRlQ29ob3J0IiwicGF0Y2giLCJ1cGRhdGVDb2hvcnQiLCJkZWxldGUiLCJkZWxldGVDb2hvcnQiLCJnZXRDb2hvcnREYXlzIiwiY3JlYXRlQ29ob3J0RGF5cyIsImFsbG93U3VwZXJBZG1pbk9ubHkiLCJyZXNldFNwb3R0ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFHQTs7Ozs7O0FBTUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxrQkFBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGNBQVgsRUFBMkJFLHVCQUEzQjtBQUNBTCxPQUFPRyxHQUFQLENBQVcsU0FBWCxFQUFzQkcsaUJBQXRCO0FBQ0FOLE9BQU9PLElBQVAsQ0FBWSxHQUFaLEVBQWlCQyxvQkFBakI7QUFDQVIsT0FBT1MsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLG9CQUFyQjtBQUNBVixPQUFPVyxNQUFQLENBQWMsTUFBZCxFQUFzQkMsb0JBQXRCOztBQUVBWixPQUFPRyxHQUFQLENBQVcsa0JBQVgsRUFBK0JVLGtCQUEvQjtBQUNBOzs7Ozs7OztBQVFBYixPQUFPTyxJQUFQLENBQVksa0JBQVosRUFBZ0NPLHFCQUFoQzs7QUFFQWQsT0FBT1MsS0FBUCxDQUFhLDRCQUFiLEVBQTJDTSwwQkFBM0MsRUFBZ0VDLHFCQUFoRTs7a0JBRWVoQixNIiwiZmlsZSI6ImNvaG9ydC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IGdldENvaG9ydERheXMsIGNyZWF0ZUNvaG9ydERheXMgfSBmcm9tICcuLi9jb250cm9sbGVycy9kYXkuY29udHJvbGxlcic7XG5pbXBvcnQgeyBnZXRDb2hvcnRCeU5hbWUsIGdldENvaG9ydHMsIGdldENvaG9ydCwgY3JlYXRlQ29ob3J0LCB1cGRhdGVDb2hvcnQsIGRlbGV0ZUNvaG9ydCwgcmVzZXRTcG90dGVycyB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2NvaG9ydC5jb250cm9sbGVyJztcbmltcG9ydCB7IGFsbG93U3VwZXJBZG1pbk9ubHkgfSBmcm9tICcuLi9jb250cm9sbGVycy9yb2xlcy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxuXG4vKipcbiAqIEBhcGkge2dldH0gL2NvaG9ydHMgR2V0IGFsbCBjb2hvcnRzXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgR2V0Q29ob3J0c1xuICogQGFwaUdyb3VwIENvaG9ydFxuICovXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0Q29ob3J0cyk7XG5yb3V0ZXIuZ2V0KCcvOmNvaG9ydE5hbWUnLCBnZXRDb2hvcnRCeU5hbWUpO1xucm91dGVyLmdldCgnL2lkLzppZCcsIGdldENvaG9ydCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZUNvaG9ydCk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGVDb2hvcnQpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZUNvaG9ydCk7XG5cbnJvdXRlci5nZXQoJy86Y29ob3J0X2lkL2RheXMnLCBnZXRDb2hvcnREYXlzKTtcbi8qKlxuICogQGFwaSB7cG9zdH0gL2NvaG9ydHMvOmNvaG9ydF9pZC9kYXlzIEFkZCBkYXlzIHRvIGFuIGV4aXN0aW5nIGNvaG9ydFxuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIEV4dGVuZENvaG9ydFxuICogQGFwaUdyb3VwIENvaG9ydFxuICpcbiAqIEBhcGlQYXJhbSB7U3RyaW5nfSBjb3VudCBOdW1iZXIgb2YgZGF5cyB0byBiZSBhZGRlZCB0byB0aGUgY29ob3J0LlxuICovXG5yb3V0ZXIucG9zdCgnLzpjb2hvcnRfaWQvZGF5cycsIGNyZWF0ZUNvaG9ydERheXMpO1xuXG5yb3V0ZXIucGF0Y2goJy86Y29ob3J0X2lkL3Nwb3R0ZXJzL3Jlc2V0JywgYWxsb3dTdXBlckFkbWluT25seSwgcmVzZXRTcG90dGVycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getCohorts",
        "getCohortByName",
        "getCohort",
        "post",
        "createCohort",
        "patch",
        "updateCohort",
        "delete",
        "deleteCohort",
        "getCohortDays",
        "createCohortDays",
        "allowSuperAdminOnly",
        "resetSpotters"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAGA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,kBAAhB;AACAJ,OAAOG,GAAP,CAAW,cAAX,EAA2BE,uBAA3B;AACAL,OAAOG,GAAP,CAAW,SAAX,EAAsBG,iBAAtB;AACAN,OAAOO,IAAP,CAAY,GAAZ,EAAiBC,oBAAjB;AACAR,OAAOS,KAAP,CAAa,MAAb,EAAqBC,oBAArB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,oBAAtB;;AAEAZ,OAAOG,GAAP,CAAW,kBAAX,EAA+BU,kBAA/B;AACA;;;;;;;;AAQAb,OAAOO,IAAP,CAAY,kBAAZ,EAAgCO,qBAAhC;;AAEAd,OAAOS,KAAP,CAAa,4BAAb,EAA2CM,0BAA3C,EAAgEC,qBAAhE;;kBAEehB,M",
      "file": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport { getCohortDays, createCohortDays } from '../controllers/day.controller';\nimport { getCohortByName, getCohorts, getCohort, createCohort, updateCohort, deleteCohort, resetSpotters } from '../controllers/cohort.controller';\nimport { allowSuperAdminOnly } from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', getCohorts);\nrouter.get('/:cohortName', getCohortByName);\nrouter.get('/id/:id', getCohort);\nrouter.post('/', createCohort);\nrouter.patch('/:id', updateCohort);\nrouter.delete('/:id', deleteCohort);\n\nrouter.get('/:cohort_id/days', getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', allowSuperAdminOnly, resetSpotters);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/roles.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "allowSuperAdminOnly"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "allowSuperAdminOnly",
              "exported": "allowSuperAdminOnly"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/roles.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/roles.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "roles.controller.js",
      "sourceFileName": "roles.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "roles.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.allowSuperAdminOnly = undefined;\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Restrict students in these routes\nvar allowSuperAdminOnly = exports.allowSuperAdminOnly = function allowSuperAdminOnly(req, res, next) {\n  switch (req.jwtData.scope) {\n    case _authScopes2.default.ALL:\n    case _authScopes2.default.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGVzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiYWxsb3dTdXBlckFkbWluT25seSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIkFMTCIsIlNVUEVSQURNSU4iLCJzdGF0dXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztBQUVBO0FBQ08sSUFBTUEsb0RBQXNCLFNBQXRCQSxtQkFBc0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDckQsVUFBT0YsSUFBSUcsT0FBSixDQUFZQyxLQUFuQjtBQUNFLFNBQUtDLHFCQUFZQyxHQUFqQjtBQUNBLFNBQUtELHFCQUFZRSxVQUFqQjtBQUNFTDtBQUNBO0FBQ0Y7QUFDRUQsVUFBSU8sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLG1DQUFyQjtBQU5KO0FBUUQsQ0FUTSIsImZpbGUiOiJyb2xlcy5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVVUSF9TQ09QRVMgZnJvbSAnLi4vdXRpbC9hdXRoU2NvcGVzJztcblxuLy8gUmVzdHJpY3Qgc3R1ZGVudHMgaW4gdGhlc2Ugcm91dGVzXG5leHBvcnQgY29uc3QgYWxsb3dTdXBlckFkbWluT25seSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBzd2l0Y2gocmVxLmp3dERhdGEuc2NvcGUpIHtcbiAgICBjYXNlIEFVVEhfU0NPUEVTLkFMTDpcbiAgICBjYXNlIEFVVEhfU0NPUEVTLlNVUEVSQURNSU46XG4gICAgICBuZXh0KCk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoJ1lvdSBkbyBub3QgaGF2ZSBhZG1pbiBwcml2aWxlZ2VzIScpO1xuICB9XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "roles.controller.js"
      ],
      "names": [
        "allowSuperAdminOnly",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "ALL",
        "SUPERADMIN",
        "status",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACO,IAAMA,oDAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrD,UAAOF,IAAIG,OAAJ,CAAYC,KAAnB;AACE,SAAKC,qBAAYC,GAAjB;AACA,SAAKD,qBAAYE,UAAjB;AACEL;AACA;AACF;AACED,UAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mCAArB;AANJ;AAQD,CATM",
      "file": "roles.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import AUTH_SCOPES from '../util/authScopes';\n\n// Restrict students in these routes\nexport const allowSuperAdminOnly = (req, res, next) => {\n  switch(req.jwtData.scope) {\n    case AUTH_SCOPES.ALL:\n    case AUTH_SCOPES.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/educator.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/educator.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/educator.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/educator.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.routes.js",
      "sourceFileName": "educator.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _educator = require('../controllers/educator.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _educator.getAll);\nrouter.post('/', _educator.create);\nrouter.get('/:id', _educator.getOne);\nrouter.patch('/:id', _educator.update);\nrouter.delete('/:id', _educator.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwiZ2V0IiwiZ2V0QWxsIiwicG9zdCIsImNyZWF0ZSIsImdldE9uZSIsInBhdGNoIiwidXBkYXRlIiwiZGVsZXRlIiwiZGVsZXRlT25lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGdCQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsZ0JBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxnQkFBbkI7QUFDQVAsT0FBT1EsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLGdCQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsbUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJlZHVjYXRvci5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2VkdWNhdG9yLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,gBAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,gBAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,gBAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,gBAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,mBAAtB;;kBAEeX,M",
      "file": "educator.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/educator.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/educator.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/educator.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/educator.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.controller.js",
      "sourceFileName": "educator.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user2.default.find({ $or: [{ role: _user.USER_ROLES.EDUCATOR }, { role: _user.USER_ROLES.SUPERADMIN }] }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(req);\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role;\n\n  new _user2.default({ name: name, email: email, profile: profile, role: role }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  _user2.default.findByIdAndUpdate(req.params.id).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiZ2V0QWxsIiwicmVxIiwicmVzIiwiUmVzb3VyY2UiLCJmaW5kIiwiJG9yIiwicm9sZSIsIlVTRVJfUk9MRVMiLCJFRFVDQVRPUiIsIlNVUEVSQURNSU4iLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwibmFtZSIsImVtYWlsIiwicHJvZmlsZSIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsQ0FBYyxFQUFFQyxLQUFJLENBQUUsRUFBQ0MsTUFBTUMsaUJBQVdDLFFBQWxCLEVBQUYsRUFBK0IsRUFBQ0YsTUFBTUMsaUJBQVdFLFVBQWxCLEVBQS9CLENBQU4sRUFBZCxFQUFxRkMsSUFBckYsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVQsSUFBSVUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPWixJQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNqQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNnQixRQUFULENBQWtCbEIsSUFBSW1CLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENxQixVQUFRQyxHQUFSLENBQVl2QixHQUFaO0FBRGtDLGtCQUVJQSxJQUFJd0IsSUFGUjtBQUFBLE1BRTNCQyxJQUYyQixhQUUzQkEsSUFGMkI7QUFBQSxNQUVyQkMsS0FGcUIsYUFFckJBLEtBRnFCO0FBQUEsTUFFZEMsT0FGYyxhQUVkQSxPQUZjO0FBQUEsTUFFTHRCLElBRkssYUFFTEEsSUFGSzs7QUFHbEMsTUFBSUgsY0FBSixDQUFhLEVBQUN1QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUFiLEVBQTRDdUIsSUFBNUMsR0FDQ2xCLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlhLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQixFQUFDQyxVQUFELEVBQXJCLENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pTLFlBQVFDLEdBQVIsQ0FBWVAsR0FBWjtBQUNBZixRQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCO0FBQTBCLEdBSjVCO0FBS0QsQ0FSTTs7QUFVQSxJQUFNYSwwQkFBUyxTQUFUQSxNQUFTLENBQUM3QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVM0QixpQkFBVCxDQUEyQjlCLElBQUltQixNQUFKLENBQVdDLEVBQXRDLEVBQ0NWLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTWUsZ0NBQVksU0FBWkEsU0FBWSxDQUFDL0IsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTOEIsTUFBVCxDQUFnQixFQUFDQyxLQUFJakMsSUFBSW1CLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1ULElBQUlpQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDckIsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoiZWR1Y2F0b3IuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc291cmNlLCB7IFVTRVJfUk9MRVMgfSBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCh7ICRvcjpbIHtyb2xlOiBVU0VSX1JPTEVTLkVEVUNBVE9SfSwge3JvbGU6IFVTRVJfUk9MRVMuU1VQRVJBRE1JTn0gXX0pLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zb2xlLmxvZyhyZXEpXG4gIGNvbnN0IHtuYW1lLCBlbWFpbCwgcHJvZmlsZSwgcm9sZSB9ID0gcmVxLmJvZHk7XG4gIG5ldyBSZXNvdXJjZSh7bmFtZSwgZW1haWwsIHByb2ZpbGUsIHJvbGUgfSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4gcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "$or",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "SUPERADMIN",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "email",
        "profile",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,CAAc,EAAEC,KAAI,CAAE,EAACC,MAAMC,iBAAWC,QAAlB,EAAF,EAA+B,EAACF,MAAMC,iBAAWE,UAAlB,EAA/B,CAAN,EAAd,EAAqFC,IAArF,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACjB,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASgB,QAAT,CAAkBlB,IAAImB,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACrB,GAAD,EAAMC,GAAN,EAAc;AAClCqB,UAAQC,GAAR,CAAYvB,GAAZ;AADkC,kBAEIA,IAAIwB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,KAFqB,aAErBA,KAFqB;AAAA,MAEdC,OAFc,aAEdA,OAFc;AAAA,MAELtB,IAFK,aAELA,IAFK;;AAGlC,MAAIH,cAAJ,CAAa,EAACuB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAAb,EAA4CuB,IAA5C,GACClB,IADD,CACM;AAAA,WAAQT,IAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAf,QAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMa,0BAAS,SAATA,MAAS,CAAC7B,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAAS4B,iBAAT,CAA2B9B,IAAImB,MAAJ,CAAWC,EAAtC,EACCV,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMe,gCAAY,SAAZA,SAAY,CAAC/B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS8B,MAAT,CAAgB,EAACC,KAAIjC,IAAImB,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMT,IAAIiC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "educator.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource, { USER_ROLES } from '../models/user';\n\nexport const getAll = (req, res) => {\n  Resource.find({ $or:[ {role: USER_ROLES.EDUCATOR}, {role: USER_ROLES.SUPERADMIN} ]}).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(req)\n  const {name, email, profile, role } = req.body;\n  new Resource({name, email, profile, role }).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  Resource.findByIdAndUpdate(req.params.id)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/student.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/student.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/student.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.routes.js",
      "sourceFileName": "student.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _student = require('../controllers/student.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _student.getAll);\nrouter.post('/', _student.create);\nrouter.get('/:id', _student.getOne);\nrouter.patch('/:id', _student.update);\nrouter.delete('/:id', _student.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsZUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLGVBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxlQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsZUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGtCQUF0Qjs7a0JBRWVYLE0iLCJmaWxlIjoic3R1ZGVudC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3N0dWRlbnQuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,eAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,eAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,eAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,eAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,kBAAtB;;kBAEeX,M",
      "file": "student.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/student.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/prompt.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/prompt.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/prompt.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/prompt.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.routes.js",
      "sourceFileName": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _prompt = require('../controllers/prompt.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _prompt.getAll);\nrouter.post('/', _prompt.create);\nrouter.get('/:id', _prompt.getOne);\nrouter.patch('/:id', _prompt.update);\nrouter.delete('/:id', _prompt.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsInBvc3QiLCJjcmVhdGUiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImRlbGV0ZSIsImRlbGV0ZU9uZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxjQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsY0FBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLGNBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxjQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsaUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwcm9tcHQucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9wcm9tcHQuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,cAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,cAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,cAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,cAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,iBAAtB;;kBAEeX,M",
      "file": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/prompt.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/prompt.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/prompt.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/prompt.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.controller.js",
      "sourceFileName": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _prompt = require(\"../models/prompt\");\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _prompt2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _prompt2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Prompt\");\n  var _req$body = req.body,\n      name = _req$body.name,\n      duration = _req$body.duration,\n      pings = _req$body.pings,\n      type = _req$body.type;\n\n  console.log(req);\n  new _prompt2.default({ name: name, duration: duration, pings: pings, type: type }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      name = _req$body2.name,\n      type = _req$body2.type,\n      duration = _req$body2.duration,\n      pings = _req$body2.pings,\n      tags = _req$body2.tags;\n\n  _prompt2.default.findByIdAndUpdate(req.params.id, { name: name, type: type, duration: duration, pings: pings, tags: tags }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _prompt2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.sendStatus(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldEFsbCIsInJlcSIsInJlcyIsIlJlc291cmNlIiwiZmluZCIsImV4ZWMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJuYW1lIiwiZHVyYXRpb24iLCJwaW5ncyIsInR5cGUiLCJzYXZlIiwidXBkYXRlIiwidGFncyIsImZpbmRCeUlkQW5kVXBkYXRlIiwiZGVsZXRlT25lIiwicmVtb3ZlIiwiX2lkIiwic2VuZFN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFTyxJQUFNQSwwQkFBUyxTQUFUQSxNQUFTLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU0MsSUFBVCxHQUFnQkMsSUFBaEIsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU1csUUFBVCxDQUFrQmIsSUFBSWMsTUFBSixDQUFXQyxFQUE3QixFQUFpQ1gsSUFBakMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNSywwQkFBUyxTQUFUQSxNQUFTLENBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ2dCLFVBQVFDLEdBQVIsQ0FBWSxrQkFBWjtBQURrQyxrQkFFSWxCLElBQUltQixJQUZSO0FBQUEsTUFFM0JDLElBRjJCLGFBRTNCQSxJQUYyQjtBQUFBLE1BRXJCQyxRQUZxQixhQUVyQkEsUUFGcUI7QUFBQSxNQUVYQyxLQUZXLGFBRVhBLEtBRlc7QUFBQSxNQUVKQyxJQUZJLGFBRUpBLElBRkk7O0FBR2xDTixVQUFRQyxHQUFSLENBQVlsQixHQUFaO0FBQ0EsTUFBSUUsZ0JBQUosQ0FBYSxFQUFDa0IsVUFBRCxFQUFPQyxrQkFBUCxFQUFpQkMsWUFBakIsRUFBd0JDLFVBQXhCLEVBQWIsRUFBNENDLElBQTVDLEdBQ0NuQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU8sZUFBTztBQUNaUyxZQUFRQyxHQUFSLENBQVlQLEdBQVo7QUFDQVYsUUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQjtBQUEwQixHQUo1QjtBQUtELENBVE07O0FBV0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDekIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxtQkFDWUQsSUFBSW1CLElBRGhCO0FBQUEsTUFDMUJDLElBRDBCLGNBQzFCQSxJQUQwQjtBQUFBLE1BQ3BCRyxJQURvQixjQUNwQkEsSUFEb0I7QUFBQSxNQUNkRixRQURjLGNBQ2RBLFFBRGM7QUFBQSxNQUNKQyxLQURJLGNBQ0pBLEtBREk7QUFBQSxNQUNHSSxJQURILGNBQ0dBLElBREg7O0FBRWxDeEIsbUJBQVN5QixpQkFBVCxDQUEyQjNCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUssVUFBRixFQUFRRyxVQUFSLEVBQWNGLGtCQUFkLEVBQXdCQyxZQUF4QixFQUErQkksVUFBL0IsRUFBMUMsRUFDQ3JCLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWlCLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzVCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxtQkFBUzJCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSTlCLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUk4QixVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDdkIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSThCLFVBQUosQ0FBZSxHQUFmLEVBQW9CckIsSUFBcEIsQ0FBeUJDLEdBQXpCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwcm9tcHQuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc291cmNlIGZyb20gJy4uL21vZGVscy9wcm9tcHQnO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2coXCJJbiBjcmVhdGUgUHJvbXB0XCIpXG4gIGNvbnN0IHtuYW1lLCBkdXJhdGlvbiwgcGluZ3MsIHR5cGV9ID0gcmVxLmJvZHk7XG4gIGNvbnNvbGUubG9nKHJlcSk7XG4gIG5ldyBSZXNvdXJjZSh7bmFtZSwgZHVyYXRpb24sIHBpbmdzLCB0eXBlfSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4gcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IG5hbWUsIHR5cGUsIGR1cmF0aW9uLCBwaW5ncywgdGFncyB9ID0gcmVxLmJvZHk7XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHsgbmFtZSwgdHlwZSwgZHVyYXRpb24sIHBpbmdzLCB0YWdzIH0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKCgpID0+IHJlcy5zZW5kU3RhdHVzKDIwNCkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnNlbmRTdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "duration",
        "pings",
        "type",
        "save",
        "update",
        "tags",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClCgB,UAAQC,GAAR,CAAY,kBAAZ;AADkC,kBAEIlB,IAAImB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,QAFqB,aAErBA,QAFqB;AAAA,MAEXC,KAFW,aAEXA,KAFW;AAAA,MAEJC,IAFI,aAEJA,IAFI;;AAGlCN,UAAQC,GAAR,CAAYlB,GAAZ;AACA,MAAIE,gBAAJ,CAAa,EAACkB,UAAD,EAAOC,kBAAP,EAAiBC,YAAjB,EAAwBC,UAAxB,EAAb,EAA4CC,IAA5C,GACCnB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CATM;;AAWA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACYD,IAAImB,IADhB;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBG,IADoB,cACpBA,IADoB;AAAA,MACdF,QADc,cACdA,QADc;AAAA,MACJC,KADI,cACJA,KADI;AAAA,MACGI,IADH,cACGA,IADH;;AAElCxB,mBAASyB,iBAAT,CAA2B3B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEK,UAAF,EAAQG,UAAR,EAAcF,kBAAd,EAAwBC,YAAxB,EAA+BI,UAA/B,EAA1C,EACCrB,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMiB,gCAAY,SAAZA,SAAY,CAAC5B,GAAD,EAAMC,GAAN,EAAc;AACrCC,mBAAS2B,MAAT,CAAgB,EAACC,KAAI9B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI8B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECvB,KAFD,CAEO;AAAA,WAAOP,IAAI8B,UAAJ,CAAe,GAAf,EAAoBrB,IAApB,CAAyBC,GAAzB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/prompt';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Prompt\")\n  const {name, duration, pings, type} = req.body;\n  console.log(req);\n  new Resource({name, duration, pings, type}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const { name, type, duration, pings, tags } = req.body;\n  Resource.findByIdAndUpdate(req.params.id, { name, type, duration, pings, tags })\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.sendStatus(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/prompt.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/prompt.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/prompt.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.js",
      "sourceFileName": "prompt.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nmodule.exports = _mongoose2.default.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping'\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkdXJhdGlvbiIsIk51bWJlciIsInRhZ3MiLCJwaW5ncyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJkYXRhIiwiTWl4ZWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQRSxPQUFPQyxPQUFQLEdBQWlCRixtQkFBU0csS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUosTUFBSixDQUFXO0FBQ25ESyxRQUFNO0FBQ0pDLFVBQU1DLE1BREY7QUFFSkMsY0FBVTtBQUZOLEdBRDZDO0FBS25EQyxZQUFVQyxNQUx5QyxFQUtqQztBQUNsQkMsUUFBTSxDQUFDSixNQUFELENBTjZDO0FBT25ESyxTQUFPLENBQUM7QUFDTk4sVUFBTU4sT0FBT2EsS0FBUCxDQUFhQyxRQURiO0FBRU5DLFNBQUs7QUFGQyxHQUFELENBUDRDO0FBV25EVCxRQUFNQyxNQVg2QztBQVluRFMsUUFBTWhCLE9BQU9hLEtBQVAsQ0FBYUk7QUFaZ0MsQ0FBWCxDQUF6QixDQUFqQiIsImZpbGUiOiJwcm9tcHQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnUHJvbXB0JywgbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZHVyYXRpb246IE51bWJlciwgLy8gaW4gTWludXRlc1xuICB0YWdzOiBbU3RyaW5nXSxcbiAgcGluZ3M6IFt7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1BpbmcnLFxuICB9XSxcbiAgdHlwZTogU3RyaW5nLFxuICBkYXRhOiBTY2hlbWEuVHlwZXMuTWl4ZWRcbn0pKTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "module",
        "exports",
        "model",
        "name",
        "type",
        "String",
        "required",
        "duration",
        "Number",
        "tags",
        "pings",
        "Types",
        "ObjectId",
        "ref",
        "data",
        "Mixed"
      ],
      "mappings": ";;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEPE,OAAOC,OAAP,GAAiBF,mBAASG,KAAT,CAAe,QAAf,EAAyB,IAAIJ,MAAJ,CAAW;AACnDK,QAAM;AACJC,UAAMC,MADF;AAEJC,cAAU;AAFN,GAD6C;AAKnDC,YAAUC,MALyC,EAKjC;AAClBC,QAAM,CAACJ,MAAD,CAN6C;AAOnDK,SAAO,CAAC;AACNN,UAAMN,OAAOa,KAAP,CAAaC,QADb;AAENC,SAAK;AAFC,GAAD,CAP4C;AAWnDT,QAAMC,MAX6C;AAYnDS,QAAMhB,OAAOa,KAAP,CAAaI;AAZgC,CAAX,CAAzB,CAAjB",
      "file": "prompt.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nmodule.exports = mongoose.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping',\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/ping.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/ping.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/ping.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/ping.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.routes.js",
      "sourceFileName": "ping.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _ping = require('../controllers/ping.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _ping.getAll);\nrouter.post('/', _ping.create);\nrouter.get('/:id', _ping.getOne);\nrouter.patch('/:id', _ping.update);\nrouter.delete('/:id', _ping.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwaW5nLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcGluZy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "ping.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/ping.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/ping.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/ping.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/ping.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.controller.js",
      "sourceFileName": "ping.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _ping2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _ping2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      type = _req$body.type,\n      ttl = _req$body.ttl,\n      tags = _req$body.tags,\n      data = _req$body.data;\n\n  new _ping2.default({ type: type, ttl: ttl, tags: tags, data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      type = _req$body2.type,\n      ttl = _req$body2.ttl,\n      tags = _req$body2.tags,\n      data = _req$body2.data;\n\n  _ping2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _ping2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImJvZHkiLCJ0eXBlIiwidHRsIiwidGFncyIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxrQkFDRkQsSUFBSWlCLElBREY7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEdBRHFCLGFBQ3JCQSxHQURxQjtBQUFBLE1BQ2hCQyxJQURnQixhQUNoQkEsSUFEZ0I7QUFBQSxNQUNWYixJQURVLGFBQ1ZBLElBRFU7O0FBRWxDLE1BQUlMLGNBQUosQ0FBYSxFQUFDZ0IsVUFBRCxFQUFPQyxRQUFQLEVBQVlDLFVBQVosRUFBa0JiLFVBQWxCLEVBQWIsRUFBc0NjLElBQXRDLEdBQ0NoQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FMTTs7QUFPQSxJQUFNVywwQkFBUyxTQUFUQSxNQUFTLENBQUN0QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLG1CQUNERCxJQUFJaUIsSUFESDtBQUFBLE1BQzFCQyxJQUQwQixjQUMxQkEsSUFEMEI7QUFBQSxNQUNwQkMsR0FEb0IsY0FDcEJBLEdBRG9CO0FBQUEsTUFDZkMsSUFEZSxjQUNmQSxJQURlO0FBQUEsTUFDVGIsSUFEUyxjQUNUQSxJQURTOztBQUVsQ0wsaUJBQVNxQixpQkFBVCxDQUEyQnZCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUcsVUFBRixFQUFRQyxRQUFSLEVBQWFDLFVBQWIsRUFBbUJiLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWEsZ0NBQVksU0FBWkEsU0FBWSxDQUFDeEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTdUIsTUFBVCxDQUFnQixFQUFDQyxLQUFJMUIsSUFBSWMsTUFBSixDQUFXQyxFQUFoQixFQUFoQixFQUFxQ1gsSUFBckMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBTUosSUFBSTBCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNuQixLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwaW5nLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dHlwZSwgdHRsLCB0YWdzLCBkYXRhfSA9IHJlcS5ib2R5O1xuICBuZXcgUmVzb3VyY2Uoe3R5cGUsIHR0bCwgdGFncywgZGF0YX0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyB0eXBlLCB0dGwsIHRhZ3MsIGRhdGF9ID0gcmVxLmJvZHlcbiAgUmVzb3VyY2UuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgeyB0eXBlLCB0dGwsIHRhZ3MsIGRhdGF9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UucmVtb3ZlKHtfaWQ6cmVxLnBhcmFtcy5pZH0pLmV4ZWMoKVxuICAudGhlbigoKSA9PiByZXMuc2VuZFN0YXR1cygyMDQpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "type",
        "ttl",
        "tags",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACFD,IAAIiB,IADF;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,GADqB,aACrBA,GADqB;AAAA,MAChBC,IADgB,aAChBA,IADgB;AAAA,MACVb,IADU,aACVA,IADU;;AAElC,MAAIL,cAAJ,CAAa,EAACgB,UAAD,EAAOC,QAAP,EAAYC,UAAZ,EAAkBb,UAAlB,EAAb,EAAsCc,IAAtC,GACChB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMW,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACDD,IAAIiB,IADH;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBC,GADoB,cACpBA,GADoB;AAAA,MACfC,IADe,cACfA,IADe;AAAA,MACTb,IADS,cACTA,IADS;;AAElCL,iBAASqB,iBAAT,CAA2BvB,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEG,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBb,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMa,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAASuB,MAAT,CAAgB,EAACC,KAAI1B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI0B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECnB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "ping.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/ping';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {type, ttl, tags, data} = req.body;\n  new Resource({type, ttl, tags, data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const { type, ttl, tags, data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/ping.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getIntentionPing"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getIntentionPing",
              "exported": "getIntentionPing"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/ping.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/ping.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.js",
      "sourceFileName": "ping.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIntentionPing = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Ping = _mongoose2.default.model('Ping', new Schema({\n  data: Schema.Types.Mixed,\n  tags: [],\n  ttl: Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String\n}));\n\nvar getIntentionPing = exports.getIntentionPing = function getIntentionPing() {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var pingData, ping;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pingData = { type: 'Intention' };\n              _context.next = 3;\n              return Ping.findOne(pingData).exec();\n\n            case 3:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 6:\n              _context.next = 8;\n              return new Ping(pingData).save();\n\n            case 8:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 11:\n\n              reject();\n\n            case 12:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nexports.default = Ping;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJQaW5nIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInRhZ3MiLCJ0dGwiLCJOdW1iZXIiLCJ0eXBlIiwiU3RyaW5nIiwia2luZCIsInF1ZXN0aW9uVHlwZSIsImdldEludGVudGlvblBpbmciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInBpbmdEYXRhIiwiZmluZE9uZSIsImV4ZWMiLCJwaW5nIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLFFBQUssRUFGd0M7QUFHN0NDLE9BQUlDLE1BSHlDLEVBR2pDO0FBQ1pDLFFBQU1DLE1BSnVDO0FBSzdDQyxRQUFNRCxNQUx1QztBQU03Q0UsZ0JBQWNGO0FBTitCLENBQVgsQ0FBdkIsQ0FBYjs7QUFTTyxJQUFNRyw4Q0FBbUIsU0FBbkJBLGdCQUFtQjtBQUFBLFNBQU0sSUFBSUMsT0FBSjtBQUFBLHVFQUFZLGlCQUFPQyxPQUFQLEVBQWdCQyxNQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDNUNDLHNCQUQ0QyxHQUNqQyxFQUFDUixNQUFNLFdBQVAsRUFEaUM7QUFBQTtBQUFBLHFCQUUvQlIsS0FBS2lCLE9BQUwsQ0FBYUQsUUFBYixFQUF1QkUsSUFBdkIsRUFGK0I7O0FBQUE7QUFFNUNDLGtCQUY0Qzs7QUFBQSxvQkFHN0NBLFNBQVMsSUFIb0M7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBSXZDTCxRQUFRSyxJQUFSLENBSnVDOztBQUFBO0FBQUE7QUFBQSxxQkFPbkMsSUFBSW5CLElBQUosQ0FBU2dCLFFBQVQsRUFBbUJJLElBQW5CLEVBUG1DOztBQUFBO0FBT2hERCxrQkFQZ0Q7O0FBQUEsb0JBUTdDQSxTQUFTLElBUm9DO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVN2Q0wsUUFBUUssSUFBUixDQVR1Qzs7QUFBQTs7QUFZaERKOztBQVpnRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQU47QUFBQSxDQUF6Qjs7a0JBZ0JRZixJIiwiZmlsZSI6InBpbmcuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuY29uc3QgUGluZyA9IG1vbmdvb3NlLm1vZGVsKCdQaW5nJywgbmV3IFNjaGVtYSh7XG4gIGRhdGE6U2NoZW1hLlR5cGVzLk1peGVkLFxuICB0YWdzOltdLFxuICB0dGw6TnVtYmVyLCAvL3NlY29uZHNcbiAgdHlwZTogU3RyaW5nLFxuICBraW5kOiBTdHJpbmcsXG4gIHF1ZXN0aW9uVHlwZTogU3RyaW5nLFxufSkpO1xuXG5leHBvcnQgY29uc3QgZ2V0SW50ZW50aW9uUGluZyA9ICgpID0+IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgbGV0IHBpbmdEYXRhID0ge3R5cGU6ICdJbnRlbnRpb24nfVxuICBsZXQgcGluZyA9IGF3YWl0IFBpbmcuZmluZE9uZShwaW5nRGF0YSkuZXhlYygpO1xuICBpZihwaW5nICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIHJlc29sdmUocGluZyk7XG4gIH1cblxuICBwaW5nID0gYXdhaXQgbmV3IFBpbmcocGluZ0RhdGEpLnNhdmUoKTtcbiAgaWYocGluZyAhPT0gbnVsbCkge1xuICAgIHJldHVybiByZXNvbHZlKHBpbmcpO1xuICB9XG5cbiAgcmVqZWN0KCk7XG5cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBQaW5nO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Ping",
        "model",
        "data",
        "Types",
        "Mixed",
        "tags",
        "ttl",
        "Number",
        "type",
        "String",
        "kind",
        "questionType",
        "getIntentionPing",
        "Promise",
        "resolve",
        "reject",
        "pingData",
        "findOne",
        "exec",
        "ping",
        "save"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,QAAK,EAFwC;AAG7CC,OAAIC,MAHyC,EAGjC;AACZC,QAAMC,MAJuC;AAK7CC,QAAMD,MALuC;AAM7CE,gBAAcF;AAN+B,CAAX,CAAvB,CAAb;;AASO,IAAMG,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5CC,sBAD4C,GACjC,EAACR,MAAM,WAAP,EADiC;AAAA;AAAA,qBAE/BR,KAAKiB,OAAL,CAAaD,QAAb,EAAuBE,IAAvB,EAF+B;;AAAA;AAE5CC,kBAF4C;;AAAA,oBAG7CA,SAAS,IAHoC;AAAA;AAAA;AAAA;;AAAA,+CAIvCL,QAAQK,IAAR,CAJuC;;AAAA;AAAA;AAAA,qBAOnC,IAAInB,IAAJ,CAASgB,QAAT,EAAmBI,IAAnB,EAPmC;;AAAA;AAOhDD,kBAPgD;;AAAA,oBAQ7CA,SAAS,IARoC;AAAA;AAAA;AAAA;;AAAA,+CASvCL,QAAQK,IAAR,CATuC;;AAAA;;AAYhDJ;;AAZgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA,CAAzB;;kBAgBQf,I",
      "file": "ping.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Ping = mongoose.model('Ping', new Schema({\n  data:Schema.Types.Mixed,\n  tags:[],\n  ttl:Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String,\n}));\n\nexport const getIntentionPing = () => new Promise(async (resolve, reject) => {\n  let pingData = {type: 'Intention'}\n  let ping = await Ping.findOne(pingData).exec();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  ping = await new Ping(pingData).save();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  reject();\n\n});\n\nexport default Ping;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/pingpong.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "addPong"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/pingpong.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/pingpong.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.routes.js",
      "sourceFileName": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.post('/:pingpong_id/pongs', _pingpong2.default);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmdwb25nLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwicG9zdCIsImFkZFBvbmciXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLElBQVAsQ0FBWSxxQkFBWixFQUFtQ0Msa0JBQW5DOztrQkFFZUosTSIsImZpbGUiOiJwaW5ncG9uZy5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBhZGRQb25nIGZyb20gJy4uL2NvbnRyb2xsZXJzL3Bpbmdwb25nLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIucG9zdCgnLzpwaW5ncG9uZ19pZC9wb25ncycsIGFkZFBvbmcpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "post",
        "addPong"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,IAAP,CAAY,qBAAZ,EAAmCC,kBAAnC;;kBAEeJ,M",
      "file": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport addPong from '../controllers/pingpong.controller';\n\nconst router = Express.Router();\n\nrouter.post('/:pingpong_id/pongs', addPong);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/pingpong.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "../models/ping",
            "imported": [
              "getIntentionPing"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getIntentionPing",
                "local": "getIntentionPing"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "addPong",
            "populatePingpongs",
            "resetPingpongs"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "addPong",
              "exported": "addPong"
            },
            {
              "kind": "local",
              "local": "populatePingpongs",
              "exported": "populatePingpongs"
            },
            {
              "kind": "local",
              "local": "resetPingpongs",
              "exported": "resetPingpongs"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/pingpong.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/pingpong.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.controller.js",
      "sourceFileName": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetPingpongs = exports.populatePingpongs = exports.addPong = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _prompt2 = require('../models/prompt');\n\nvar _prompt3 = _interopRequireDefault(_prompt2);\n\nvar _ping = require('../models/ping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar addPong = exports.addPong = function addPong(req, res) {\n  var pong = req.body.pong;\n  var pingpong_id = req.params.pingpong_id;\n\n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n\n  _day2.default.findOneAndUpdate({ 'pingpongs._id': pingpong_id }, { $set: { 'pingpongs.$.pong': pong } }).then(function (data) {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({ data: data });\n    }\n  }).catch(function (err) {\n    res.sendStatus(500);\n  });\n};\n\nvar createPingPong = function createPingPong(ping, user, day, triggerTime) {\n  var pingpong = {\n    triggerTime: triggerTime,\n    ping: ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user);\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n};\n\nvar populatePingpongs = exports.populatePingpongs = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(day) {\n    var users, timeline, pingpongs, intentionPing, i, _timeline$i, prompt, startTime, _prompt, pings, _loop, k;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _user2.default.find({\n              currentCohort: day.cohort\n            });\n\n          case 2:\n            users = _context.sent;\n\n\n            // get all prompts from day timeline\n            // for all prompt\n\n            timeline = day.timeline, pingpongs = day.pingpongs;\n            _context.next = 6;\n            return (0, _ping.getIntentionPing)();\n\n          case 6:\n            intentionPing = _context.sent;\n\n            day.pingpongs = users.map(function (user) {\n              return createPingPong(intentionPing, user, day);\n            });\n\n            i = 0;\n\n          case 9:\n            if (!(i < timeline.length)) {\n              _context.next = 25;\n              break;\n            }\n\n            _timeline$i = timeline[i], prompt = _timeline$i.prompt, startTime = _timeline$i.startTime;\n\n            startTime.setDate(day.date.getDate());\n            startTime.setFullYear(day.date.getFullYear());\n            startTime.setMonth(day.date.getMonth());\n            console.log(\"Prompt\" + prompt);\n\n            _context.next = 17;\n            return _prompt3.default.findById(prompt);\n\n          case 17:\n            prompt = _context.sent;\n            _prompt = prompt, pings = _prompt.pings;\n\n            console.log(\"PINGS\" + pings);\n\n            _loop = function _loop() {\n              var ping = pings[k];\n              console.log(ping);\n\n              var triggerTime = new Date(startTime.valueOf() + prompt.duration * 60 * 1000);\n\n              day.pingpongs = users.map(function (user) {\n                return createPingPong(ping, user, day, triggerTime);\n              }).concat(day.pingpongs);\n              // console.log(pingpongs)\n            };\n\n            for (k = 0; k < pings.length; k++) {\n              _loop();\n            }\n\n          case 22:\n            i++;\n            _context.next = 9;\n            break;\n\n          case 25:\n\n            console.log(\"PING POPULATE:\");\n            return _context.abrupt('return', day);\n\n          case 27:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function populatePingpongs(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar resetPingpongs = exports.resetPingpongs = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _day2.default.findById(req.params.day_id);\n\n          case 3:\n            day = _context2.sent;\n            _context2.next = 6;\n            return populatePingpongs(day);\n\n          case 6:\n            day = _context2.sent;\n\n            day.save();\n            data = day.pingpongs;\n\n            res.send({ data: data });\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 12]]);\n  }));\n\n  return function resetPingpongs(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.default = addPong;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.controller.js"
      ],
      "names": [
        "addPong",
        "req",
        "res",
        "pong",
        "body",
        "pingpong_id",
        "params",
        "Day",
        "findOneAndUpdate",
        "$set",
        "then",
        "data",
        "status",
        "send",
        "json",
        "catch",
        "sendStatus",
        "createPingPong",
        "ping",
        "user",
        "day",
        "triggerTime",
        "pingpong",
        "by",
        "type",
        "to",
        "getStudentPair",
        "populatePingpongs",
        "User",
        "find",
        "currentCohort",
        "cohort",
        "users",
        "timeline",
        "pingpongs",
        "intentionPing",
        "map",
        "i",
        "length",
        "prompt",
        "startTime",
        "setDate",
        "date",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "console",
        "log",
        "Prompt",
        "findById",
        "pings",
        "k",
        "Date",
        "valueOf",
        "duration",
        "concat",
        "resetPingpongs",
        "day_id",
        "save"
      ],
      "mappings": "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",
      "file": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport Day from '../models/day';\nimport User from '../models/user';\nimport Prompt from '../models/prompt';\nimport {getIntentionPing} from '../models/ping';\n\nexport const addPong = (req,res) => {\n  const{pong} = req.body;\n  let {pingpong_id} = req.params\n  \n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n  Day.findOneAndUpdate(\n    {'pingpongs._id': pingpong_id},\n    {$set:{'pingpongs.$.pong':pong}},\n  ).then(data => {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({data});\n    }\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n\nconst createPingPong = (ping, user, day, triggerTime) => {\n  let pingpong = {\n    triggerTime,\n    ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user)\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n}\n\n\nexport const populatePingpongs = async (day) => {\n  let users = await User.find({\n    currentCohort: day.cohort\n  });\n\n  // get all prompts from day timeline\n  // for all prompt\n\n  let {timeline,pingpongs} = day;\n\n  let intentionPing = await getIntentionPing();\n  day.pingpongs = users.map(user => createPingPong(intentionPing, user, day));\n\n  for (var i = 0; i < timeline.length; i++) {\n    let {prompt, startTime} = timeline[i];\n    startTime.setDate(day.date.getDate());\n    startTime.setFullYear(day.date.getFullYear());\n    startTime.setMonth(day.date.getMonth());\n    console.log(\"Prompt\"+prompt)\n\n    prompt = await Prompt.findById(prompt);\n    let {pings} = prompt;\n    console.log(\"PINGS\"+pings)\n\n    for (var k = 0; k < pings.length; k++) {\n      let ping = pings[k];\n      console.log(ping)\n\n      let triggerTime = new Date(startTime.valueOf() + prompt.duration*60*1000);\n\n      day.pingpongs = users.map(user => createPingPong(ping, user, day, triggerTime)).concat(day.pingpongs);\n      // console.log(pingpongs)\n    }\n\n  }\n\n  console.log(\"PING POPULATE:\")\n  return day\n}\n\n\nexport const resetPingpongs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id);\n    day = await populatePingpongs(day);\n    day.save();\n    const data = day.pingpongs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport default addPong;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/mailer.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/mailer.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/mailer.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.routes.js",
      "sourceFileName": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar router = require('express').Router();\n\nvar _require = require('../controllers/mailer.controller'),\n    mailer = _require.mailer,\n    submit = _require.submit;\n\nrouter.get('/', mailer);\nrouter.post('/submit', submit);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsIm1haWxlciIsInN1Ym1pdCIsImdldCIsInBvc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVNDLFFBQVEsU0FBUixFQUFtQkMsTUFBbkIsRUFBZjs7ZUFFeUJELFFBQVEsa0NBQVIsQztJQUFsQkUsTSxZQUFBQSxNO0lBQVFDLE0sWUFBQUEsTTs7QUFFZkosT0FBT0ssR0FBUCxDQUFXLEdBQVgsRUFBZ0JGLE1BQWhCO0FBQ0FILE9BQU9NLElBQVAsQ0FBWSxTQUFaLEVBQXVCRixNQUF2Qjs7QUFFQUcsT0FBT0MsT0FBUCxHQUFpQlIsTUFBakIiLCJmaWxlIjoibWFpbGVyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvdXRlciA9IHJlcXVpcmUoJ2V4cHJlc3MnKS5Sb3V0ZXIoKVxuXG5jb25zdCB7bWFpbGVyLCBzdWJtaXR9ID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvbWFpbGVyLmNvbnRyb2xsZXInKVxuXG5yb3V0ZXIuZ2V0KCcvJywgbWFpbGVyKVxucm91dGVyLnBvc3QoJy9zdWJtaXQnLCBzdWJtaXQpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.routes.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "mailer",
        "submit",
        "get",
        "post",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;eAEyBD,QAAQ,kCAAR,C;IAAlBE,M,YAAAA,M;IAAQC,M,YAAAA,M;;AAEfJ,OAAOK,GAAP,CAAW,GAAX,EAAgBF,MAAhB;AACAH,OAAOM,IAAP,CAAY,SAAZ,EAAuBF,MAAvB;;AAEAG,OAAOC,OAAP,GAAiBR,MAAjB",
      "file": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "const router = require('express').Router()\n\nconst {mailer, submit} = require('../controllers/mailer.controller')\n\nrouter.get('/', mailer)\nrouter.post('/submit', submit)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/mailer.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "nodemailer",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "nodemailer"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/mailer.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/mailer.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.controller.js",
      "sourceFileName": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _nodemailer = require('nodemailer');\n\nvar _nodemailer2 = _interopRequireDefault(_nodemailer);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n'use strict';\n\n// transport service using which it can send emails in this case gmail\nvar transporter = _nodemailer2.default.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.MAILER_EMAIL,\n    pass: process.env.MAILER_PASSWORD\n  }\n});\n\nvar mailer = function mailer(req, res) {\n  res.send('/client/emailSender.html');\n};\n\nvar submit = function submit(req, res) {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal' // plain text body\n  };\n\n  _user2.default.find({ email: req.body.email.toString() }, function (err, existingUser) {\n    if (!err && existingUser.length != 0) {\n      transporter.sendMail(mailOptions, function (err, info) {\n        if (err) console.log(err);else console.log(info);\n      });\n\n      res.redirect('/');\n    }\n  });\n};\n\nmodule.exports = { mailer: mailer, submit: submit };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInRyYW5zcG9ydGVyIiwibm9kZW1haWxlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJhdXRoIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJNQUlMRVJfRU1BSUwiLCJwYXNzIiwiTUFJTEVSX1BBU1NXT1JEIiwibWFpbGVyIiwicmVxIiwicmVzIiwic2VuZCIsInN1Ym1pdCIsIm1haWxPcHRpb25zIiwiZnJvbSIsInRvIiwiYm9keSIsImVtYWlsIiwidG9TdHJpbmciLCJzdWJqZWN0IiwiaHRtbCIsIlVzZXIiLCJmaW5kIiwiZXJyIiwiZXhpc3RpbmdVc2VyIiwibGVuZ3RoIiwic2VuZE1haWwiLCJpbmZvIiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBOztBQUVBO0FBQ0EsSUFBSUEsY0FBY0MscUJBQVdDLGVBQVgsQ0FBMkI7QUFDNUNDLFdBQVMsT0FEbUM7QUFFNUNDLFFBQU07QUFDQ0MsVUFBTUMsUUFBUUMsR0FBUixDQUFZQyxZQURuQjtBQUVDQyxVQUFNSCxRQUFRQyxHQUFSLENBQVlHO0FBRm5CO0FBRnNDLENBQTNCLENBQWxCOztBQVFBLElBQU1DLFNBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQkEsTUFBSUMsSUFBSixDQUFTLDBCQUFUO0FBQ0QsQ0FGRDs7QUFJQSxJQUFNQyxTQUFTLFNBQVRBLE1BQVMsQ0FBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7O0FBRTNCO0FBQ0EsTUFBSUcsY0FBYztBQUNoQkMsVUFBTVgsUUFBUUMsR0FBUixDQUFZQyxZQURGLEVBQ2dCO0FBQ2hDVSxRQUFJTixJQUFJTyxJQUFKLENBQVNDLEtBQVQsQ0FBZUMsUUFBZixFQUZZLEVBRWU7QUFDL0JDLGFBQVMsOEJBSE8sRUFHeUI7QUFDekNDLFVBQU0sMkZBSlUsQ0FJaUY7QUFKakYsR0FBbEI7O0FBT0FDLGlCQUFLQyxJQUFMLENBQVUsRUFBQ0wsT0FBT1IsSUFBSU8sSUFBSixDQUFTQyxLQUFULENBQWVDLFFBQWYsRUFBUixFQUFWLEVBQThDLFVBQVNLLEdBQVQsRUFBY0MsWUFBZCxFQUEyQjtBQUN2RSxRQUFHLENBQUNELEdBQUQsSUFBU0MsYUFBYUMsTUFBYixJQUF1QixDQUFuQyxFQUF1QztBQUNyQzVCLGtCQUFZNkIsUUFBWixDQUFxQmIsV0FBckIsRUFBa0MsVUFBVVUsR0FBVixFQUFlSSxJQUFmLEVBQXFCO0FBQ3ZELFlBQUdKLEdBQUgsRUFDRUssUUFBUUMsR0FBUixDQUFZTixHQUFaLEVBREYsS0FHRUssUUFBUUMsR0FBUixDQUFZRixJQUFaO0FBQ0QsT0FMRDs7QUFPQWpCLFVBQUlvQixRQUFKLENBQWEsR0FBYjtBQUNEO0FBQ0YsR0FYRDtBQVlELENBdEJEOztBQXdCQUMsT0FBT0MsT0FBUCxHQUFpQixFQUFDeEIsY0FBRCxFQUFTSSxjQUFULEVBQWpCIiwiZmlsZSI6Im1haWxlci5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbm9kZW1haWxlciBmcm9tICdub2RlbWFpbGVyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgVXNlciBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbid1c2Ugc3RyaWN0J1xuXG4vLyB0cmFuc3BvcnQgc2VydmljZSB1c2luZyB3aGljaCBpdCBjYW4gc2VuZCBlbWFpbHMgaW4gdGhpcyBjYXNlIGdtYWlsXG52YXIgdHJhbnNwb3J0ZXIgPSBub2RlbWFpbGVyLmNyZWF0ZVRyYW5zcG9ydCh7XG4gc2VydmljZTogJ2dtYWlsJyxcbiBhdXRoOiB7XG4gICAgICAgIHVzZXI6IHByb2Nlc3MuZW52Lk1BSUxFUl9FTUFJTCxcbiAgICAgICAgcGFzczogcHJvY2Vzcy5lbnYuTUFJTEVSX1BBU1NXT1JEXG4gICAgfVxufSk7XG5cbmNvbnN0IG1haWxlciA9IChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZCgnL2NsaWVudC9lbWFpbFNlbmRlci5odG1sJylcbn1cblxuY29uc3Qgc3VibWl0ID0gKHJlcSwgcmVzKSA9PiB7XG5cbiAgLy8gY29uZmlndXJhdGlvbiBvYmplY3Qgd2hlcmUgd2Ugd2lsbCBjb25maWd1cmUgYWxsIGVtYWlsIGRldGFpbHNcbiAgdmFyIG1haWxPcHRpb25zID0ge1xuICAgIGZyb206IHByb2Nlc3MuZW52Lk1BSUxFUl9FTUFJTCwgLy8gc2VuZGVyIGFkZHJlc3NcbiAgICB0bzogcmVxLmJvZHkuZW1haWwudG9TdHJpbmcoKSwgLy8gbGlzdCBvZiByZWNlaXZlcnNcbiAgICBzdWJqZWN0OiAnUGxlYXNlIFNpZ25VcCB0byBTT0FMIFBvcnRhbCcsIC8vIFN1YmplY3QgbGluZVxuICAgIGh0bWw6ICc8cD5IaSBjbGljayBvbiB0aGlzIDwvcD48YT5saW5rPC9hPjxwPiB0byBTaWduVXAgdG8gU2Nob29sIG9mIEFjY2VsZXJhdGVkIExlYXJuaW5nIFBvcnRhbCcvLyBwbGFpbiB0ZXh0IGJvZHlcbiAgfTtcblxuICBVc2VyLmZpbmQoe2VtYWlsOiByZXEuYm9keS5lbWFpbC50b1N0cmluZygpfSwgZnVuY3Rpb24oZXJyLCBleGlzdGluZ1VzZXIpe1xuICAgIGlmKCFlcnIgJiYgKGV4aXN0aW5nVXNlci5sZW5ndGggIT0gMCkpIHtcbiAgICAgIHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxPcHRpb25zLCBmdW5jdGlvbiAoZXJyLCBpbmZvKSB7XG4gICAgICBpZihlcnIpXG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgIGVsc2VcbiAgICAgICAgY29uc29sZS5sb2coaW5mbyk7XG4gICAgICB9KVxuXG4gICAgICByZXMucmVkaXJlY3QoJy8nKVxuICAgIH1cbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7bWFpbGVyLCBzdWJtaXR9Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.controller.js"
      ],
      "names": [
        "transporter",
        "nodemailer",
        "createTransport",
        "service",
        "auth",
        "user",
        "process",
        "env",
        "MAILER_EMAIL",
        "pass",
        "MAILER_PASSWORD",
        "mailer",
        "req",
        "res",
        "send",
        "submit",
        "mailOptions",
        "from",
        "to",
        "body",
        "email",
        "toString",
        "subject",
        "html",
        "User",
        "find",
        "err",
        "existingUser",
        "length",
        "sendMail",
        "info",
        "console",
        "log",
        "redirect",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;AAEA;AACA,IAAIA,cAAcC,qBAAWC,eAAX,CAA2B;AAC5CC,WAAS,OADmC;AAE5CC,QAAM;AACCC,UAAMC,QAAQC,GAAR,CAAYC,YADnB;AAECC,UAAMH,QAAQC,GAAR,CAAYG;AAFnB;AAFsC,CAA3B,CAAlB;;AAQA,IAAMC,SAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,MAAIC,IAAJ,CAAS,0BAAT;AACD,CAFD;;AAIA,IAAMC,SAAS,SAATA,MAAS,CAACH,GAAD,EAAMC,GAAN,EAAc;;AAE3B;AACA,MAAIG,cAAc;AAChBC,UAAMX,QAAQC,GAAR,CAAYC,YADF,EACgB;AAChCU,QAAIN,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAFY,EAEe;AAC/BC,aAAS,8BAHO,EAGyB;AACzCC,UAAM,2FAJU,CAIiF;AAJjF,GAAlB;;AAOAC,iBAAKC,IAAL,CAAU,EAACL,OAAOR,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAAR,EAAV,EAA8C,UAASK,GAAT,EAAcC,YAAd,EAA2B;AACvE,QAAG,CAACD,GAAD,IAASC,aAAaC,MAAb,IAAuB,CAAnC,EAAuC;AACrC5B,kBAAY6B,QAAZ,CAAqBb,WAArB,EAAkC,UAAUU,GAAV,EAAeI,IAAf,EAAqB;AACvD,YAAGJ,GAAH,EACEK,QAAQC,GAAR,CAAYN,GAAZ,EADF,KAGEK,QAAQC,GAAR,CAAYF,IAAZ;AACD,OALD;;AAOAjB,UAAIoB,QAAJ,CAAa,GAAb;AACD;AACF,GAXD;AAYD,CAtBD;;AAwBAC,OAAOC,OAAP,GAAiB,EAACxB,cAAD,EAASI,cAAT,EAAjB",
      "file": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import nodemailer from 'nodemailer';\nimport mongoose from 'mongoose';\nimport User from '../models/user';\n\n'use strict'\n\n// transport service using which it can send emails in this case gmail\nvar transporter = nodemailer.createTransport({\n service: 'gmail',\n auth: {\n        user: process.env.MAILER_EMAIL,\n        pass: process.env.MAILER_PASSWORD\n    }\n});\n\nconst mailer = (req, res) => {\n  res.send('/client/emailSender.html')\n}\n\nconst submit = (req, res) => {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal'// plain text body\n  };\n\n  User.find({email: req.body.email.toString()}, function(err, existingUser){\n    if(!err && (existingUser.length != 0)) {\n      transporter.sendMail(mailOptions, function (err, info) {\n      if(err)\n        console.log(err)\n      else\n        console.log(info);\n      })\n\n      res.redirect('/')\n    }\n  })\n}\n\nmodule.exports = {mailer, submit}"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/day.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getOne",
              "dayDetails",
              "update",
              "getAll",
              "addPromptToTimeline",
              "getToday",
              "updatePongs",
              "addContentToDay",
              "removePromptFromTimeline",
              "resetPairs",
              "resetDay"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "dayDetails",
                "local": "dayDetails"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "addPromptToTimeline",
                "local": "addPromptToTimeline"
              },
              {
                "kind": "named",
                "imported": "getToday",
                "local": "getToday"
              },
              {
                "kind": "named",
                "imported": "updatePongs",
                "local": "updatePongs"
              },
              {
                "kind": "named",
                "imported": "addContentToDay",
                "local": "addContentToDay"
              },
              {
                "kind": "named",
                "imported": "removePromptFromTimeline",
                "local": "removePromptFromTimeline"
              },
              {
                "kind": "named",
                "imported": "resetPairs",
                "local": "resetPairs"
              },
              {
                "kind": "named",
                "imported": "resetDay",
                "local": "resetDay"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "resetPingpongs"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetPingpongs",
                "local": "resetPingpongs"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/day.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/day.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.routes.js",
      "sourceFileName": "day.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _user = require('../controllers/user.controller');\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', _day.getAll);\nrouter.get('/:dayNumber/dn', _day.dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', _user.populateCurrentUser, _day.getToday);\nrouter.get('/:day_id/dId', _day.getOne);\nrouter.patch('/:day_id', _day.update);\nrouter.patch('/:day_id/timeline', _day.addPromptToTimeline);\nrouter.patch('/:day_id/content', _day.addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', _day.removePromptFromTimeline);\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', _day.resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', _pingpong.resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', _day.resetPairs);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsImRheURldGFpbHMiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0VG9kYXkiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImFkZFByb21wdFRvVGltZWxpbmUiLCJhZGRDb250ZW50VG9EYXkiLCJyZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUiLCJyZXNldERheSIsInJlc2V0UGluZ3BvbmdzIiwicmVzZXRQYWlycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUE7Ozs7OztBQU1BRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsV0FBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGdCQUFYLEVBQTZCRSxlQUE3QjtBQUNBO0FBQ0FMLE9BQU9HLEdBQVAsQ0FBVyxRQUFYLEVBQXFCRyx5QkFBckIsRUFBMENDLGFBQTFDO0FBQ0FQLE9BQU9HLEdBQVAsQ0FBVyxjQUFYLEVBQTJCSyxXQUEzQjtBQUNBUixPQUFPUyxLQUFQLENBQWEsVUFBYixFQUF5QkMsV0FBekI7QUFDQVYsT0FBT1MsS0FBUCxDQUFhLG1CQUFiLEVBQWtDRSx3QkFBbEM7QUFDQVgsT0FBT1MsS0FBUCxDQUFhLGtCQUFiLEVBQWlDRyxvQkFBakM7QUFDQVosT0FBT1MsS0FBUCxDQUFhLGlDQUFiLEVBQWdESSw2QkFBaEQ7O0FBRUE7Ozs7Ozs7OztBQVNBYixPQUFPUyxLQUFQLENBQWEsZ0JBQWIsRUFBK0JLLGFBQS9COztBQUVBOzs7Ozs7O0FBT0FkLE9BQU9TLEtBQVAsQ0FBYSwwQkFBYixFQUF5Q00sd0JBQXpDOztBQUVBOzs7Ozs7O0FBT0FmLE9BQU9TLEtBQVAsQ0FBYSxzQkFBYixFQUFxQ08sZUFBckM7O2tCQUVlaEIsTSIsImZpbGUiOiJkYXkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldE9uZSwgZGF5RGV0YWlscywgdXBkYXRlLCBnZXRBbGwsIGFkZFByb21wdFRvVGltZWxpbmUsIGdldFRvZGF5LFxuICB1cGRhdGVQb25ncywgYWRkQ29udGVudFRvRGF5LCByZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUsIHJlc2V0UGFpcnMsIHJlc2V0RGF5fSBmcm9tICcuLi9jb250cm9sbGVycy9kYXkuY29udHJvbGxlcic7XG5pbXBvcnQge3BvcHVsYXRlQ3VycmVudFVzZXJ9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlcic7XG5pbXBvcnQge3Jlc2V0UGluZ3BvbmdzfSBmcm9tICcuLi9jb250cm9sbGVycy9waW5ncG9uZy5jb250cm9sbGVyJztcbmltcG9ydCB7YWxsb3dTdXBlckFkbWluT25seX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcm9sZXMuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbi8qKlxuICogQGFwaSB7Z2V0fSAvZGF5cyBHZXQgYWxsIGRheXNcbiAqIEBhcGlIZWFkZXIge1N0cmluZ30gYXV0aG9yaXphdGlvbiBKV1QgVG9rZW4uXG4gKiBAYXBpTmFtZSBHZXREYXlzXG4gKiBAYXBpR3JvdXAgRGF5XG4gKi9cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLmdldCgnLzpkYXlOdW1iZXIvZG4nLCBkYXlEZXRhaWxzKTtcbi8vIEFzc3VtaW5nIG9ubHkgc3R1ZGVudHMgd2lsbCBiZSBhY2Nlc3NpbmcgdGhlIHBhdGhcbnJvdXRlci5nZXQoJy90b2RheScsIHBvcHVsYXRlQ3VycmVudFVzZXIsIGdldFRvZGF5KTtcbnJvdXRlci5nZXQoJy86ZGF5X2lkL2RJZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkJywgdXBkYXRlKTtcbnJvdXRlci5wYXRjaCgnLzpkYXlfaWQvdGltZWxpbmUnLCBhZGRQcm9tcHRUb1RpbWVsaW5lKTtcbnJvdXRlci5wYXRjaCgnLzpkYXlfaWQvY29udGVudCcsIGFkZENvbnRlbnRUb0RheSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3RpbWVsaW5lcy86dGltZWxpbmVfaWQnLCByZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUpXG5cbi8qKlxuICogQGFwaSB7cGF0Y2h9IC9kYXlzLzpkYXlfaWQvcmVzZXQgUmVzZXQgZGF5IG9mIGEgY29ob3J0XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXREYXlcbiAqIEBhcGlHcm91cCBEYXlcbiAqXG4gKiBAYXBpUGFyYW0ge1N0cmluZ30gcmVwbGljYXRlIERheSB1bmlxdWUgSUQgdG8gY29weSBmcm9tLlxuICovXG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3Jlc2V0JywgcmVzZXREYXkpO1xuXG4vKipcbiAqIEBhcGkge3BhdGNofSAvOmRheV9pZC9waW5ncG9uZ3MvcmVzZXQgUmVzZXQgcGluZ3BvbmdzIGZvciB0aGUgZGF5XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXRQaW5ncG9uZ3NcbiAqIEBhcGlHcm91cCBEYXlcbiAqL1xucm91dGVyLnBhdGNoKCcvOmRheV9pZC9waW5ncG9uZ3MvcmVzZXQnLCByZXNldFBpbmdwb25ncyk7XG5cbi8qKlxuICogQGFwaSB7cGF0Y2h9IC86ZGF5X2lkL3BhaXJzL3Jlc2V0IFJlc2V0IHBhaXJzIGZvciB0aGUgZGF5XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXRQYWlyc1xuICogQGFwaUdyb3VwIERheVxuICovXG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3BhaXJzL3Jlc2V0JywgcmVzZXRQYWlycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "dayDetails",
        "populateCurrentUser",
        "getToday",
        "getOne",
        "patch",
        "update",
        "addPromptToTimeline",
        "addContentToDay",
        "removePromptFromTimeline",
        "resetDay",
        "resetPingpongs",
        "resetPairs"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,WAAhB;AACAJ,OAAOG,GAAP,CAAW,gBAAX,EAA6BE,eAA7B;AACA;AACAL,OAAOG,GAAP,CAAW,QAAX,EAAqBG,yBAArB,EAA0CC,aAA1C;AACAP,OAAOG,GAAP,CAAW,cAAX,EAA2BK,WAA3B;AACAR,OAAOS,KAAP,CAAa,UAAb,EAAyBC,WAAzB;AACAV,OAAOS,KAAP,CAAa,mBAAb,EAAkCE,wBAAlC;AACAX,OAAOS,KAAP,CAAa,kBAAb,EAAiCG,oBAAjC;AACAZ,OAAOS,KAAP,CAAa,iCAAb,EAAgDI,6BAAhD;;AAEA;;;;;;;;;AASAb,OAAOS,KAAP,CAAa,gBAAb,EAA+BK,aAA/B;;AAEA;;;;;;;AAOAd,OAAOS,KAAP,CAAa,0BAAb,EAAyCM,wBAAzC;;AAEA;;;;;;;AAOAf,OAAOS,KAAP,CAAa,sBAAb,EAAqCO,eAArC;;kBAEehB,M",
      "file": "day.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getOne, dayDetails, update, getAll, addPromptToTimeline, getToday,\n  updatePongs, addContentToDay, removePromptFromTimeline, resetPairs, resetDay} from '../controllers/day.controller';\nimport {populateCurrentUser} from '../controllers/user.controller';\nimport {resetPingpongs} from '../controllers/pingpong.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', getAll);\nrouter.get('/:dayNumber/dn', dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', populateCurrentUser, getToday);\nrouter.get('/:day_id/dId', getOne);\nrouter.patch('/:day_id', update);\nrouter.patch('/:day_id/timeline', addPromptToTimeline);\nrouter.patch('/:day_id/content', addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', removePromptFromTimeline)\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', resetPairs);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/admin.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/admin.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "switchUser"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/admin.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/admin.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.routes.js",
      "sourceFileName": "admin.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _admin = require('../controllers/admin.controller');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_roles.allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', _admin2.default);\n\nrouter.use('*', function (req, res) {\n  return res.sendStatus(404);\n});\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwidXNlIiwiYWxsb3dTdXBlckFkbWluT25seSIsInN3aXRjaFVzZXIiLCJyZXEiLCJyZXMiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVdDLDBCQUFYO0FBQ0FKLE9BQU9HLEdBQVAsQ0FBVyx1QkFBWCxFQUFvQ0UsZUFBcEM7O0FBRUFMLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNHLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLElBQUlDLFVBQUosQ0FBZSxHQUFmLENBQWQ7QUFBQSxDQUFoQjtrQkFDZVIsTSIsImZpbGUiOiJhZG1pbi5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBzd2l0Y2hVc2VyIGZyb20gJy4uL2NvbnRyb2xsZXJzL2FkbWluLmNvbnRyb2xsZXInO1xuaW1wb3J0IHthbGxvd1N1cGVyQWRtaW5Pbmx5fSBmcm9tICcuLi9jb250cm9sbGVycy9yb2xlcy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnVzZShhbGxvd1N1cGVyQWRtaW5Pbmx5KTtcbnJvdXRlci51c2UoJy9zd2l0Y2hfdXNlci86dXNlcl9pZCcsIHN3aXRjaFVzZXIpO1xuXG5yb3V0ZXIudXNlKCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZFN0YXR1cyg0MDQpKTtcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "allowSuperAdminOnly",
        "switchUser",
        "req",
        "res",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,0BAAX;AACAJ,OAAOG,GAAP,CAAW,uBAAX,EAAoCE,eAApC;;AAEAL,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;kBACeR,M",
      "file": "admin.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport switchUser from '../controllers/admin.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\nrouter.use(allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', switchUser);\n\nrouter.use('*', (req, res) => res.sendStatus(404));\nexport default router;"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/admin.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/admin.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/admin.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.controller.js",
      "sourceFileName": "admin.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _token = require('../util/token');\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n// get Access as a student with id\nvar switchUser = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var user_id, user, soalToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user_id = req.params.user_id;\n            _context.prev = 1;\n            _context.next = 4;\n            return _user2.default.findById(user_id).exec();\n\n          case 4:\n            user = _context.sent;\n            soalToken = (0, _token.getSoalToken)(user);\n\n            res.send({ soalToken: soalToken });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context['catch'](1);\n\n            console.log(_context.t0);\n            res.status(404).send('User not found with id ' + user_id);\n\n          case 13:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined, [[1, 9]]);\n  }));\n\n  return function switchUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.default = switchUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsic3dpdGNoVXNlciIsInJlcSIsInJlcyIsInVzZXJfaWQiLCJwYXJhbXMiLCJVc2VyIiwiZmluZEJ5SWQiLCJleGVjIiwidXNlciIsInNvYWxUb2tlbiIsInNlbmQiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQTtBQUNBLElBQU1BO0FBQUEscUVBQWEsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVkMsbUJBRFUsR0FDQ0YsSUFBSUcsTUFETCxDQUNWRCxPQURVO0FBQUE7QUFBQTtBQUFBLG1CQUlJRSxlQUFLQyxRQUFMLENBQWNILE9BQWQsRUFBdUJJLElBQXZCLEVBSko7O0FBQUE7QUFJVEMsZ0JBSlM7QUFLVEMscUJBTFMsR0FLRyx5QkFBYUQsSUFBYixDQUxIOztBQU1mTixnQkFBSVEsSUFBSixDQUFTLEVBQUNELG9CQUFELEVBQVQ7QUFOZTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFRZkUsb0JBQVFDLEdBQVI7QUFDQVYsZ0JBQUlXLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQiw2QkFBK0NQLE9BQS9DOztBQVRlO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7a0JBYWVILFUiLCJmaWxlIjoiYWRtaW4uY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZXRTb2FsVG9rZW59IGZyb20gJy4uL3V0aWwvdG9rZW4nO1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG4vLyBnZXQgQWNjZXNzIGFzIGEgc3R1ZGVudCB3aXRoIGlkXG5jb25zdCBzd2l0Y2hVc2VyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHt1c2VyX2lkfSA9IHJlcS5wYXJhbXM7XG5cbiAgdHJ5e1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKHVzZXJfaWQpLmV4ZWMoKTtcbiAgICBjb25zdCBzb2FsVG9rZW4gPSBnZXRTb2FsVG9rZW4odXNlcik7XG4gICAgcmVzLnNlbmQoe3NvYWxUb2tlbn0pO1xuICB9IGNhdGNoKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDQwNCkuc2VuZChgVXNlciBub3QgZm91bmQgd2l0aCBpZCAke3VzZXJfaWR9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgc3dpdGNoVXNlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.controller.js"
      ],
      "names": [
        "switchUser",
        "req",
        "res",
        "user_id",
        "params",
        "User",
        "findById",
        "exec",
        "user",
        "soalToken",
        "send",
        "console",
        "log",
        "status"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;;;;;;;AAEA;AACA,IAAMA;AAAA,qEAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,mBADU,GACCF,IAAIG,MADL,CACVD,OADU;AAAA;AAAA;AAAA,mBAIIE,eAAKC,QAAL,CAAcH,OAAd,EAAuBI,IAAvB,EAJJ;;AAAA;AAITC,gBAJS;AAKTC,qBALS,GAKG,yBAAaD,IAAb,CALH;;AAMfN,gBAAIQ,IAAJ,CAAS,EAACD,oBAAD,EAAT;AANe;AAAA;;AAAA;AAAA;AAAA;;AAQfE,oBAAQC,GAAR;AACAV,gBAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,6BAA+CP,OAA/C;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAaeH,U",
      "file": "admin.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import {getSoalToken} from '../util/token';\nimport User from '../models/user';\n\n// get Access as a student with id\nconst switchUser = async (req, res) => {\n  const {user_id} = req.params;\n\n  try{\n    const user = await User.findById(user_id).exec();\n    const soalToken = getSoalToken(user);\n    res.send({soalToken});\n  } catch(err) {\n    console.log(err)\n    res.status(404).send(`User not found with id ${user_id}`);\n  }\n}\n\nexport default switchUser;\n"
      ]
    },
    "mtime": 1559213788619
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/todo.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/todo.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne",
              "getStudentToDos",
              "updateAll",
              "deleteMultiple"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              },
              {
                "kind": "named",
                "imported": "getStudentToDos",
                "local": "getStudentToDos"
              },
              {
                "kind": "named",
                "imported": "updateAll",
                "local": "updateAll"
              },
              {
                "kind": "named",
                "imported": "deleteMultiple",
                "local": "deleteMultiple"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/todo.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/todo.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.routes.js",
      "sourceFileName": "todo.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _todo = require('../controllers/todo.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _todo.getAll);\nrouter.post('/', _todo.create);\nrouter.get('/:id', _todo.getOne);\nrouter.patch('/:id', _todo.update);\nrouter.patch('/', _todo.updateAll);\nrouter.delete('/:id', _todo.deleteOne);\nrouter.delete('/', _todo.deleteMultiple);\nrouter.get('/student/:studentID', _todo.getStudentToDos);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8ucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJ1cGRhdGVBbGwiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJkZWxldGVNdWx0aXBsZSIsImdldFN0dWRlbnRUb0RvcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxZQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsWUFBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLFlBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxZQUFyQjtBQUNBVCxPQUFPUSxLQUFQLENBQWEsR0FBYixFQUFrQkUsZUFBbEI7QUFDQVYsT0FBT1csTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FaLE9BQU9XLE1BQVAsQ0FBYyxHQUFkLEVBQW1CRSxvQkFBbkI7QUFDQWIsT0FBT0csR0FBUCxDQUFXLHFCQUFYLEVBQWtDVyxxQkFBbEM7O2tCQUdlZCxNIiwiZmlsZSI6InRvZG8ucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lLCBnZXRTdHVkZW50VG9Eb3MsIHVwZGF0ZUFsbCwgZGVsZXRlTXVsdGlwbGV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3RvZG8uY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLnBhdGNoKCcvJywgdXBkYXRlQWxsKVxucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5yb3V0ZXIuZGVsZXRlKCcvJywgZGVsZXRlTXVsdGlwbGUpXG5yb3V0ZXIuZ2V0KCcvc3R1ZGVudC86c3R1ZGVudElEJywgZ2V0U3R1ZGVudFRvRG9zKTtcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "updateAll",
        "delete",
        "deleteOne",
        "deleteMultiple",
        "getStudentToDos"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOQ,KAAP,CAAa,GAAb,EAAkBE,eAAlB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAZ,OAAOW,MAAP,CAAc,GAAd,EAAmBE,oBAAnB;AACAb,OAAOG,GAAP,CAAW,qBAAX,EAAkCW,qBAAlC;;kBAGed,M",
      "file": "todo.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne, getStudentToDos, updateAll, deleteMultiple} from '../controllers/todo.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.patch('/', updateAll)\nrouter.delete('/:id', deleteOne);\nrouter.delete('/', deleteMultiple)\nrouter.get('/student/:studentID', getStudentToDos);\n\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/todo.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/todo",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Todo"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentToDos",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "updateAll",
            "deleteMultiple"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentToDos",
              "exported": "getStudentToDos"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "updateAll",
              "exported": "updateAll"
            },
            {
              "kind": "local",
              "local": "deleteMultiple",
              "exported": "deleteMultiple"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/todo.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/todo.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.controller.js",
      "sourceFileName": "todo.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteMultiple = exports.updateAll = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentToDos = undefined;\n\nvar _user = require('../models/user');\n\nvar _todo = require('../models/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentToDos = exports.getStudentToDos = function getStudentToDos(req, res) {\n  _todo2.default.find({\n    student: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _todo2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _todo2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      text = _req$body.text,\n      student = _req$body.student,\n      createTime = _req$body.createTime,\n      color = _req$body.color;\n\n  new _todo2.default({ text: text, student: student, createTime: createTime, color: color }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _todo2.default.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _todo2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar updateAll = exports.updateAll = function updateAll(req, res) {\n  _todo2.default.update({}, { $set: { done: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteMultiple = exports.deleteMultiple = function deleteMultiple(req, res) {\n  _todo2.default.update({ done: true }, { $set: { deleted: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50VG9Eb3MiLCJyZXEiLCJyZXMiLCJUb2RvIiwiZmluZCIsInN0dWRlbnQiLCJwYXJhbXMiLCJzdHVkZW50SUQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJjb25zb2xlIiwibG9nIiwiZXJyIiwic3RhdHVzIiwic2VuZCIsImdldEFsbCIsImdldE9uZSIsImZpbmRCeUlkIiwiaWQiLCJjcmVhdGUiLCJib2R5IiwidGV4dCIsImNyZWF0ZVRpbWUiLCJjb2xvciIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiLCJ1cGRhdGVBbGwiLCIkc2V0IiwiZG9uZSIsIm11bHRpIiwiZGVsZXRlTXVsdGlwbGUiLCJkZWxldGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLDRDQUFrQixTQUFsQkEsZUFBa0IsQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDMUNDLGlCQUFLQyxJQUFMLENBQVU7QUFDVkMsYUFBU0osSUFBSUssTUFBSixDQUFXQztBQURWLEdBQVYsRUFFQ0MsSUFGRCxHQUdDQyxJQUhELENBR007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUhOLEVBSUNDLEtBSkQsQ0FJTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FQRDtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENDLGlCQUFLQyxJQUFMLEdBQVlJLElBQVosR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVAsSUFB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LFdBQVFQLElBQUlRLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWkMsWUFBUUMsR0FBUixDQUFZQyxHQUFaO0FBQ0FiLFFBQUljLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckI7QUFDRCxHQUxEO0FBTUQsQ0FQTTs7QUFTQSxJQUFNdUIsMENBQWlCLFNBQWpCQSxjQUFpQixDQUFDckMsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDMUNDLGlCQUFLeUIsTUFBTCxDQUFZLEVBQUNRLE1BQUssSUFBTixFQUFaLEVBQXlCLEVBQUNELE1BQU0sRUFBQ0ksU0FBUyxJQUFWLEVBQVAsRUFBekIsRUFBa0QsRUFBQ0YsT0FBTyxJQUFSLEVBQWxELEVBQ0M1QixJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FMRDtBQU1ELENBUE0iLCJmaWxlIjoidG9kby5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7U3R1ZGVudCwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IFRvZG8gZnJvbSAnLi4vbW9kZWxzL3RvZG8nXG5cbmV4cG9ydCBjb25zdCBnZXRTdHVkZW50VG9Eb3MgPSAocmVxLHJlcykgPT4ge1xuICBUb2RvLmZpbmQoe1xuICBzdHVkZW50OiByZXEucGFyYW1zLnN0dWRlbnRJRCxcbn0pLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKVxuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldEFsbCA9IChyZXEsIHJlcykgPT4ge1xuICBUb2RvLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFRvZG8uZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dGV4dCxzdHVkZW50LCBjcmVhdGVUaW1lLCBjb2xvcn0gPSByZXEuYm9keTtcbiAgbmV3IFRvZG8oe3RleHQsc3R1ZGVudCwgY3JlYXRlVGltZSwgY29sb3J9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiB7XG4gICAgY29uc29sZS5sb2coe2RhdGF9KTtcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pfSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBkYXRhID0gcmVxLmJvZHk7XG4gIC8vIHRvZG86IGNoZWNrIGlmIHRoZSBjdXJyZW50Q29ob3J0IGlzIHZhbGlkIGFuZCB0aGVuIGNvbnRpbnVlXG4gIFRvZG8uZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgZGF0YSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBUb2RvLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSkgIFxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlQWxsID0gKHJlcSwgcmVzKSA9PiB7IFxuICBUb2RvLnVwZGF0ZSh7fSwgeyRzZXQ6IHtkb25lOiB0cnVlfX0sIHttdWx0aTogdHJ1ZX0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xuICB9KVxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlTXVsdGlwbGUgPSAocmVxLCByZXMpID0+IHtcbiAgVG9kby51cGRhdGUoe2RvbmU6dHJ1ZX0sIHskc2V0OiB7ZGVsZXRlZDogdHJ1ZX19LCB7bXVsdGk6IHRydWV9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTtcbiAgfSlcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.controller.js"
      ],
      "names": [
        "getStudentToDos",
        "req",
        "res",
        "Todo",
        "find",
        "student",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "createTime",
        "color",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus",
        "updateAll",
        "$set",
        "done",
        "multi",
        "deleteMultiple",
        "deleted"
      ],
      "mappings": "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",
      "file": "todo.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "\nimport {Student, USER_ROLES} from '../models/user';\nimport Todo from '../models/todo'\n\nexport const getStudentToDos = (req,res) => {\n  Todo.find({\n  student: req.params.studentID,\n}).exec()\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)\n  });\n}\n\nexport const getAll = (req, res) => {\n  Todo.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Todo.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {text,student, createTime, color} = req.body;\n  new Todo({text,student, createTime, color}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Todo.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Todo.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n\nexport const updateAll = (req, res) => { \n  Todo.update({}, {$set: {done: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n\nexport const deleteMultiple = (req, res) => {\n  Todo.update({done:true}, {$set: {deleted: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/todo.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/todo.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/todo.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.js",
      "sourceFileName": "todo.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Todo', new Schema({\n  text: { type: String, required: true },\n  deleted: { type: Boolean, default: false },\n  done: { type: Boolean, default: false },\n  createTime: Date,\n  color: String,\n  student: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJkb25lIiwiY3JlYXRlVGltZSIsIkRhdGUiLCJjb2xvciIsInN0dWRlbnQiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0lBQ09BLE0sR0FBVUMsa0IsQ0FBVkQsTTtrQkFFUUMsbUJBQVNDLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlGLE1BQUosQ0FBVztBQUMvQ0csUUFBTSxFQUFDQyxNQUFLQyxNQUFOLEVBQWNDLFVBQVMsSUFBdkIsRUFEeUM7QUFFL0NDLFdBQVMsRUFBQ0gsTUFBS0ksT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBRnNDO0FBRy9DQyxRQUFNLEVBQUNOLE1BQUtJLE9BQU4sRUFBZUMsU0FBUSxLQUF2QixFQUh5QztBQUkvQ0UsY0FBWUMsSUFKbUM7QUFLL0NDLFNBQU9SLE1BTHdDO0FBTS9DUyxXQUFTO0FBQ0xWLFVBQU1KLE9BQU9lLEtBQVAsQ0FBYUMsUUFEZDtBQUVMQyxTQUFLO0FBRkE7QUFOc0MsQ0FBWCxDQUF2QixDIiwiZmlsZSI6InRvZG8uanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1RvZG8nLCBuZXcgU2NoZW1hKHtcbiAgdGV4dDoge3R5cGU6U3RyaW5nLCByZXF1aXJlZDp0cnVlfSxcbiAgZGVsZXRlZDoge3R5cGU6Qm9vbGVhbiwgZGVmYXVsdDpmYWxzZX0sXG4gIGRvbmU6IHt0eXBlOkJvb2xlYW4sIGRlZmF1bHQ6ZmFsc2V9LFxuICBjcmVhdGVUaW1lOiBEYXRlLFxuICBjb2xvcjogU3RyaW5nLFxuICBzdHVkZW50OiB7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH1cbiAgfSlcbilcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "deleted",
        "Boolean",
        "default",
        "done",
        "createTime",
        "Date",
        "color",
        "student",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,WAAS,EAACH,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAFsC;AAG/CC,QAAM,EAACN,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAHyC;AAI/CE,cAAYC,IAJmC;AAK/CC,SAAOR,MALwC;AAM/CS,WAAS;AACLV,UAAMJ,OAAOe,KAAP,CAAaC,QADd;AAELC,SAAK;AAFA;AANsC,CAAX,CAAvB,C",
      "file": "todo.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Todo', new Schema({\n  text: {type:String, required:true},\n  deleted: {type:Boolean, default:false},\n  done: {type:Boolean, default:false},\n  createTime: Date,\n  color: String,\n  student: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }\n  })\n)\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/note.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/note.controller",
            "imported": [
              "getStudentNotes",
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getStudentNotes",
                "local": "getStudentNotes"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/note.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/note.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.routes.js",
      "sourceFileName": "note.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _note = require('../controllers/note.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _note.getAll);\nrouter.post('/', _note.create);\nrouter.get('/:id', _note.getOne);\nrouter.patch('/:id', _note.update);\nrouter.delete('/:id', _note.deleteOne);\nrouter.get('/student/:studentID', _note.getStudentNotes);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJnZXRTdHVkZW50Tm90ZXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FYLE9BQU9HLEdBQVAsQ0FBVyxxQkFBWCxFQUFrQ1MscUJBQWxDOztrQkFFZVosTSIsImZpbGUiOiJub3RlLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRTdHVkZW50Tm90ZXMsIGdldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9ub3RlLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xucm91dGVyLmdldCgnL3N0dWRlbnQvOnN0dWRlbnRJRCcsIGdldFN0dWRlbnROb3Rlcyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne",
        "getStudentNotes"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAX,OAAOG,GAAP,CAAW,qBAAX,EAAkCS,qBAAlC;;kBAEeZ,M",
      "file": "note.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getStudentNotes, getAll, getOne, create, update, deleteOne} from '../controllers/note.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\nrouter.get('/student/:studentID', getStudentNotes);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/note.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/note",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentNotes",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentNotes",
              "exported": "getStudentNotes"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/note.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/note.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.controller.js",
      "sourceFileName": "note.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentNotes = undefined;\n\nvar _note = require(\"../models/note\");\n\nvar _note2 = _interopRequireDefault(_note);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentNotes = exports.getStudentNotes = function getStudentNotes(req, res) {\n  _note2.default.find({\n    user: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  console.log(\" in get all\");\n  _note2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _note2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Note\");\n  var _req$body = req.body,\n      text = _req$body.text,\n      user = _req$body.user,\n      color = _req$body.color,\n      createdTime = _req$body.createdTime;\n  // console.log(req);\n\n  new _note2.default({ text: text, user: user, color: color, createdTime: createdTime }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      text = _req$body2.text,\n      color = _req$body2.color,\n      deleted = _req$body2.deleted;\n\n  _note2.default.findByIdAndUpdate(req.params.id, { text: text, color: color, deleted: deleted }).then(function (data) {\n    res.json({ data: data });\n    console.log(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n\n  _note2.default.remove({ _id: req.params.id }).exec().then(function (data) {\n    return res.send(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50Tm90ZXMiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJ1c2VyIiwicGFyYW1zIiwic3R1ZGVudElEIiwiZXhlYyIsInRoZW4iLCJqc29uIiwiZGF0YSIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsImVyciIsInN0YXR1cyIsInNlbmQiLCJnZXRBbGwiLCJnZXRPbmUiLCJmaW5kQnlJZCIsImlkIiwiY3JlYXRlIiwiYm9keSIsInRleHQiLCJjb2xvciIsImNyZWF0ZWRUaW1lIiwic2F2ZSIsInVwZGF0ZSIsImRlbGV0ZWQiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFHTyxJQUFNQSw0Q0FBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNDQyxpQkFBU0MsSUFBVCxDQUFjO0FBQ1pDLFVBQU9KLElBQUlLLE1BQUosQ0FBV0M7QUFETixHQUFkLEVBRUdDLElBRkgsR0FFVUMsSUFGVixDQUVlO0FBQUEsV0FBUVAsSUFBSVEsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FGZixFQUdJQyxLQUhKLENBR1UsZUFBTztBQUNiQyxZQUFRQyxHQUFSLENBQVlDLEdBQVo7QUFDQWIsUUFBSWMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUEwQixHQUw5QjtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENXLFVBQVFDLEdBQVIsQ0FBWSxhQUFaO0FBQ0FYLGlCQUFTQyxJQUFULEdBQWdCSSxJQUFoQixHQUNDQyxJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFB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L3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSBmcm9tICcuLi9tb2RlbHMvbm90ZSc7XG5cblxuZXhwb3J0IGNvbnN0IGdldFN0dWRlbnROb3RlcyA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5maW5kKHtcbiAgICB1c2VyIDogcmVxLnBhcmFtcy5zdHVkZW50SURcbiAgfSkuZXhlYygpLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pXG4gICAgKS5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9XG4gICAgKTtcblxufVxuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiIGluIGdldCBhbGxcIik7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2coXCJJbiBjcmVhdGUgTm90ZVwiKVxuICBjb25zdCB7dGV4dCx1c2VyLGNvbG9yLGNyZWF0ZWRUaW1lfSA9IHJlcS5ib2R5O1xuICAvLyBjb25zb2xlLmxvZyhyZXEpO1xuICBuZXcgUmVzb3VyY2Uoe3RleHQsdXNlcixjb2xvcixjcmVhdGVkVGltZX0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge3RleHQsIGNvbG9yLCBkZWxldGVkfSA9IHJlcS5ib2R5O1xuICBSZXNvdXJjZS5maW5kQnlJZEFuZFVwZGF0ZShyZXEucGFyYW1zLmlkLHt0ZXh0LCBjb2xvciwgZGVsZXRlZH0pXG4gIC50aGVuKGRhdGEgPT4ge1xuICAgIHJlcy5qc29uKHtkYXRhfSk7XG4gICAgY29uc29sZS5sb2coZGF0YSk7XG4gIH0pXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgXG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKGRhdGEpID0+IHJlcy5zZW5kKGRhdGEpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.controller.js"
      ],
      "names": [
        "getStudentNotes",
        "req",
        "res",
        "Resource",
        "find",
        "user",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "color",
        "createdTime",
        "save",
        "update",
        "deleted",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id"
      ],
      "mappings": "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",
      "file": "note.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/note';\n\n\nexport const getStudentNotes = (req, res) => {\n  Resource.find({\n    user : req.params.studentID\n  }).exec().then(data => res.json({data})\n    ).catch(err => {\n      console.log(err);\n      res.status(500).send(err)}\n    );\n\n}\n\nexport const getAll = (req, res) => {\n  console.log(\" in get all\");\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Note\")\n  const {text,user,color,createdTime} = req.body;\n  // console.log(req);\n  new Resource({text,user,color,createdTime}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const {text, color, deleted} = req.body;\n  Resource.findByIdAndUpdate(req.params.id,{text, color, deleted})\n  .then(data => {\n    res.json({data});\n    console.log(data);\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  \n  Resource.remove({_id:req.params.id}).exec()\n  .then((data) => res.send(data))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/note.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "./user.js",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/note.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/note.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.js",
      "sourceFileName": "note.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('./user.js');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Note', new Schema({\n  text: { type: String, required: true },\n  createdTime: Date,\n  deleted: { type: Boolean, default: false },\n  color: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJjcmVhdGVkVGltZSIsIkRhdGUiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJjb2xvciIsInVzZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUVBOzs7Ozs7SUFET0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLE1BQWYsRUFBdUIsSUFBSUYsTUFBSixDQUFXO0FBQy9DRyxRQUFNLEVBQUNDLE1BQUtDLE1BQU4sRUFBY0MsVUFBUyxJQUF2QixFQUR5QztBQUUvQ0MsZUFBYUMsSUFGa0M7QUFHL0NDLFdBQVMsRUFBQ0wsTUFBS00sT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBSHNDO0FBSS9DQyxTQUFPUCxNQUp3QztBQUsvQ1EsUUFBTTtBQUNGVCxVQUFNSixPQUFPYyxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFNBQUs7QUFGSDs7QUFMeUMsQ0FBWCxDQUF2QixDIiwiZmlsZSI6Im5vdGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcbmltcG9ydCBVc2VyIGZyb20gXCIuL3VzZXIuanNcIjtcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdOb3RlJywgbmV3IFNjaGVtYSh7XG4gIHRleHQ6IHt0eXBlOlN0cmluZywgcmVxdWlyZWQ6dHJ1ZX0sXG4gIGNyZWF0ZWRUaW1lOiBEYXRlLFxuICBkZWxldGVkOiB7dHlwZTpCb29sZWFuLCBkZWZhdWx0OmZhbHNlfSxcbiAgY29sb3I6IFN0cmluZyxcbiAgdXNlcjoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICBcbiAgfSkpOyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "createdTime",
        "Date",
        "deleted",
        "Boolean",
        "default",
        "color",
        "user",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;AAEA;;;;;;IADOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,eAAaC,IAFkC;AAG/CC,WAAS,EAACL,MAAKM,OAAN,EAAeC,SAAQ,KAAvB,EAHsC;AAI/CC,SAAOP,MAJwC;AAK/CQ,QAAM;AACFT,UAAMJ,OAAOc,KAAP,CAAaC,QADjB;AAEFC,SAAK;AAFH;;AALyC,CAAX,CAAvB,C",
      "file": "note.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\nimport User from \"./user.js\";\nexport default mongoose.model('Note', new Schema({\n  text: {type:String, required:true},\n  createdTime: Date,\n  deleted: {type:Boolean, default:false},\n  color: String,\n  user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n  \n  }));"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/link.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/link.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/link.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/link.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.routes.js",
      "sourceFileName": "link.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _link = require('../controllers/link.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _link.getAll);\nrouter.post('/', _link.create);\nrouter.get('/:id', _link.getOne);\nrouter.patch('/:id', _link.update);\nrouter.delete('/:id', _link.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJsaW5rLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvbGluay5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "link.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/link.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559311312216
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/link.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/link",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../util/watsonURL",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getWatsonData"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/link.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/link.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.controller.js",
      "sourceFileName": "link.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _link = require('../models/link');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _watsonURL = require('../util/watsonURL');\n\nvar _watsonURL2 = _interopRequireDefault(_watsonURL);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _link2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _link2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  // console.log(\"This is links POST\")\n  console.log(req.body);\n\n  var text = req.body.text;\n\n  console.log(req.body);\n  (0, _watsonURL2.default)(text).then(function (d) {\n    // console.log(link)\n    return new _link2.default({ data: d, url: text }).save().catch(function (e) {\n      return e;\n    });\n  }).then(function (data) {\n    return res.status(200).json({\n      \"response_type\": \"in_channel\",\n      \"text\": \"Thanks for sharing! Your URL has been added\",\n      \"attachments\": [{\n        \"text\": text }]\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body = req.body,\n      url = _req$body.url,\n      data = _req$body.data;\n\n  _link2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _link2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwidGV4dCIsImQiLCJ1cmwiLCJzYXZlIiwiZSIsInVwZGF0ZSIsImZpbmRCeUlkQW5kVXBkYXRlIiwidHlwZSIsInR0bCIsInRhZ3MiLCJkZWxldGVPbmUiLCJyZW1vdmUiLCJfaWQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEM7QUFDQWdCLFVBQVFDLEdBQVIsQ0FBWWxCLElBQUltQixJQUFoQjs7QUFGa0MsTUFJM0JDLElBSjJCLEdBSW5CcEIsSUFBSW1CLElBSmUsQ0FJM0JDLElBSjJCOztBQUtsQ0gsVUFBUUMsR0FBUixDQUFZbEIsSUFBSW1CLElBQWhCO0FBQ0EsMkJBQWNDLElBQWQsRUFDQ2YsSUFERCxDQUNNLGFBQUs7QUFDVDtBQUNELFdBQU8sSUFBSUgsY0FBSixDQUFhLEVBQUNLLE1BQUtjLENBQU4sRUFBU0MsS0FBSUYsSUFBYixFQUFiLEVBQ05HLElBRE0sR0FFTmYsS0FGTSxDQUVBLGFBQUs7QUFBQyxhQUFPZ0IsQ0FBUDtBQUFTLEtBRmYsQ0FBUDtBQU1BLEdBVEQsRUFVQ25CLElBVkQsQ0FVTTtBQUFBLFdBQVFKLElBQUlRLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUNqQyx1QkFBaUIsWUFEZ0I7QUFFakMsY0FBUSw2Q0FGeUI7QUFHakMscUJBQWUsQ0FDWDtBQUNJLGdCQUFRYyxJQURaLEVBRFc7QUFIa0IsS0FBckIsQ0FBUjtBQUFBLEdBVk4sRUFrQkNaLEtBbEJELENBa0JPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FsQlA7QUFtQkE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0QsQ0FoQ007O0FBa0NBLElBQU1jLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ3pCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQUEsa0JBQ1pELElBQUltQixJQURRO0FBQUEsTUFDMUJHLEdBRDBCLGFBQzFCQSxHQUQwQjtBQUFBLE1BQ3BCZixJQURvQixhQUNwQkEsSUFEb0I7O0FBRWxDTCxpQkFBU3dCLGlCQUFULENBQTJCMUIsSUFBSWMsTUFBSixDQUFXQyxFQUF0QyxFQUEwQyxFQUFFWSxVQUFGLEVBQVFDLFFBQVIsRUFBYUMsVUFBYixFQUFtQnRCLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTW1CLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzlCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxpQkFBUzZCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSWhDLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUlnQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDekIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoibGluay5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVzb3VyY2UgZnJvbSAnLi4vbW9kZWxzL2xpbmsnO1xuaW1wb3J0IGdldFdhdHNvbkRhdGEgZnJvbSAnLi4vdXRpbC93YXRzb25VUkwnXG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICAvLyBjb25zb2xlLmxvZyhcIlRoaXMgaXMgbGlua3MgUE9TVFwiKVxuICBjb25zb2xlLmxvZyhyZXEuYm9keSlcblxuICBjb25zdCB7dGV4dH0gPSByZXEuYm9keTtcbiAgY29uc29sZS5sb2cocmVxLmJvZHkpXG4gIGdldFdhdHNvbkRhdGEodGV4dClcbiAgLnRoZW4oZCA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cobGluaylcbiAgIHJldHVybiBuZXcgUmVzb3VyY2Uoe2RhdGE6ZCwgdXJsOnRleHR9KVxuICAgLnNhdmUoKVxuICAgLmNhdGNoKGUgPT4ge3JldHVybiBlfSlcblxuXG5cbiAgfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgXCJyZXNwb25zZV90eXBlXCI6IFwiaW5fY2hhbm5lbFwiLFxuICAgIFwidGV4dFwiOiBcIlRoYW5rcyBmb3Igc2hhcmluZyEgWW91ciBVUkwgaGFzIGJlZW4gYWRkZWRcIiAsXG4gICAgXCJhdHRhY2htZW50c1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwidGV4dFwiOiB0ZXh0ICAgICAgICB9XG4gICAgXVxufSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG4gIC8vIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuXG4gIC8vIGNvbnNvbGUubG9nKGRhdGEpXG5cbiAgLy8gY29uc3Qge3VybH0gPSByZXEuYm9keTtcbiAgLy8gbmV3IFJlc291cmNlKHt1cmwsIGRhdGF9KS5zYXZlKClcbiAgLy8gXG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyB1cmwgLCBkYXRhfSA9IHJlcS5ib2R5XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHsgdHlwZSwgdHRsLCB0YWdzLCBkYXRhfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "text",
        "d",
        "url",
        "save",
        "e",
        "update",
        "findByIdAndUpdate",
        "type",
        "ttl",
        "tags",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClC;AACAgB,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;;AAFkC,MAI3BC,IAJ2B,GAInBpB,IAAImB,IAJe,CAI3BC,IAJ2B;;AAKlCH,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;AACA,2BAAcC,IAAd,EACCf,IADD,CACM,aAAK;AACT;AACD,WAAO,IAAIH,cAAJ,CAAa,EAACK,MAAKc,CAAN,EAASC,KAAIF,IAAb,EAAb,EACNG,IADM,GAENf,KAFM,CAEA,aAAK;AAAC,aAAOgB,CAAP;AAAS,KAFf,CAAP;AAMA,GATD,EAUCnB,IAVD,CAUM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjC,uBAAiB,YADgB;AAEjC,cAAQ,6CAFyB;AAGjC,qBAAe,CACX;AACI,gBAAQc,IADZ,EADW;AAHkB,KAArB,CAAR;AAAA,GAVN,EAkBCZ,KAlBD,CAkBO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAlBP;AAmBA;;AAEA;;AAEA;AACA;AACA;AACD,CAhCM;;AAkCA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACZD,IAAImB,IADQ;AAAA,MAC1BG,GAD0B,aAC1BA,GAD0B;AAAA,MACpBf,IADoB,aACpBA,IADoB;;AAElCL,iBAASwB,iBAAT,CAA2B1B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEY,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBtB,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMmB,gCAAY,SAAZA,SAAY,CAAC9B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS6B,MAAT,CAAgB,EAACC,KAAIhC,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAIgC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECzB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "link.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/link';\nimport getWatsonData from '../util/watsonURL'\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  // console.log(\"This is links POST\")\n  console.log(req.body)\n\n  const {text} = req.body;\n  console.log(req.body)\n  getWatsonData(text)\n  .then(d => {\n    // console.log(link)\n   return new Resource({data:d, url:text})\n   .save()\n   .catch(e => {return e})\n\n\n\n  })\n  .then(data => res.status(200).json({\n    \"response_type\": \"in_channel\",\n    \"text\": \"Thanks for sharing! Your URL has been added\" ,\n    \"attachments\": [\n        {\n            \"text\": text        }\n    ]\n}))\n  .catch(err => res.status(500).send(err));\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n}\n\nexport const update = (req, res) => {\n  const { url , data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}"
      ]
    },
    "mtime": 1559311266792
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/link.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/link.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/link.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.js",
      "sourceFileName": "link.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Link = _mongoose2.default.model('Link', new Schema({\n  data: Schema.Types.Mixed,\n  url: String\n}));\n\nexports.default = Link;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJMaW5rIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInVybCIsIlN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLE9BQUtDO0FBRndDLENBQVgsQ0FBdkIsQ0FBYjs7a0JBS2VOLEkiLCJmaWxlIjoibGluay5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCB7U2NoZW1hfSA9IG1vbmdvb3NlO1xuXG5jb25zdCBMaW5rID0gbW9uZ29vc2UubW9kZWwoJ0xpbmsnLCBuZXcgU2NoZW1hKHtcbiAgZGF0YTpTY2hlbWEuVHlwZXMuTWl4ZWQsXG4gIHVybDogU3RyaW5nXG59KSk7XG5cbmV4cG9ydCBkZWZhdWx0IExpbms7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Link",
        "model",
        "data",
        "Types",
        "Mixed",
        "url",
        "String"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,OAAKC;AAFwC,CAAX,CAAvB,CAAb;;kBAKeN,I",
      "file": "link.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Link = mongoose.model('Link', new Schema({\n  data:Schema.Types.Mixed,\n  url: String\n}));\n\nexport default Link;"
      ]
    },
    "mtime": 1559311223396
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/watsonURL.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/watsonURL.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/watsonURL.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "watsonURL.js",
      "sourceFileName": "watsonURL.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "watsonURL"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _process$env = process.env,\n    WATSONUSER = _process$env.WATSONUSER,\n    WATSONPASS = _process$env.WATSONPASS;\n\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\nvar getWatsonData = function getWatsonData(link) {\n\n  var urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n  var urlRegex = new RegExp(urlFormat);\n\n  return new Promise(function (resolve, reject) {\n    console.log(\"$$$$$$$$$$$$$$\");\n    console.log(link);\n    console.log(urlRegex);\n\n    if (link.match(urlRegex)) {\n\n      var options = {\n        url: link,\n        features: {\n          concepts: {},\n          keywords: {\n            'sentiment': true,\n            'emotion': true\n          },\n          categories: {},\n          entities: {},\n          metadata: {},\n          relations: {},\n          semantic_roles: {}\n        }\n      };\n      nlu.analyze(options, function (err, res) {\n        if (err) {\n          console.log(err);\n          reject();\n        }\n        resolve(res);\n      });\n    } else {\n      reject(\"Please enter a valid URL\");\n    }\n  });\n};\n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexports.default = getWatsonData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdHNvblVSTC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiV0FUU09OVVNFUiIsIldBVFNPTlBBU1MiLCJOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEiLCJyZXF1aXJlIiwiY29uZmlnIiwic2lsZW50Iiwibmx1IiwidmVyc2lvbiIsInVybCIsImdldFdhdHNvbkRhdGEiLCJsaW5rIiwidXJsRm9ybWF0IiwidXJsUmVnZXgiLCJSZWdFeHAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJtYXRjaCIsIm9wdGlvbnMiLCJmZWF0dXJlcyIsImNvbmNlcHRzIiwia2V5d29yZHMiLCJjYXRlZ29yaWVzIiwiZW50aXRpZXMiLCJtZXRhZGF0YSIsInJlbGF0aW9ucyIsInNlbWFudGljX3JvbGVzIiwiYW5hbHl6ZSIsImVyciIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7bUJBQWtDQSxRQUFRQyxHO0lBQWxDQyxVLGdCQUFBQSxVO0lBQVlDLFUsZ0JBQUFBLFU7O0FBQ3BCLElBQUlDLGlDQUFpQ0MsUUFBUSw2REFBUixDQUFyQztBQUNBQSxRQUFRLFFBQVIsRUFBa0JDLE1BQWxCLENBQXlCO0FBQ3ZCQyxVQUFRO0FBRGUsQ0FBekIsRSxDQUVJOztBQUVKLElBQUlDLE1BQU0sSUFBSUosOEJBQUosQ0FBbUM7QUFDM0NLLFdBQVMsWUFEa0M7QUFFM0NDLE9BQUs7QUFGc0MsQ0FBbkMsQ0FBVjs7QUFNQSxJQUFNQyxnQkFBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLElBQUQsRUFBVTs7QUFFaEMsTUFBSUMsWUFBWSxtRkFBaEI7QUFDQSxNQUFJQyxXQUFXLElBQUlDLE1BQUosQ0FBV0YsU0FBWCxDQUFmOztBQUtDLFNBQU8sSUFBSUcsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBU0MsTUFBVCxFQUFvQjtBQUN0Q0MsWUFBUUMsR0FBUixDQUFZLGdCQUFaO0FBQ0FELFlBQVFDLEdBQVIsQ0FBWVIsSUFBWjtBQUNBTyxZQUFRQyxHQUFSLENBQVlOLFFBQVo7O0FBRUMsUUFBSUYsS0FBS1MsS0FBTCxDQUFXUCxRQUFYLENBQUosRUFBeUI7O0FBRzFCLFVBQUlRLFVBQVU7QUFDWlosYUFBS0UsSUFETztBQUVaVyxrQkFBVTtBQUNSQyxvQkFBVSxFQURGO0FBRVJDLG9CQUFVO0FBQ1IseUJBQWEsSUFETDtBQUVSLHVCQUFXO0FBRkgsV0FGRjtBQU1SQyxzQkFBWSxFQU5KO0FBT1JDLG9CQUFVLEVBUEY7QUFRUkMsb0JBQVUsRUFSRjtBQVNSQyxxQkFBVyxFQVRIO0FBVVJDLDBCQUFnQjtBQVZSO0FBRkUsT0FBZDtBQWVBdEIsVUFBSXVCLE9BQUosQ0FBWVQsT0FBWixFQUFxQixVQUFDVSxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQyxZQUFJRCxHQUFKLEVBQVM7QUFDUGIsa0JBQVFDLEdBQVIsQ0FBWVksR0FBWjtBQUNBZDtBQUNEO0FBQ0RELGdCQUFRZ0IsR0FBUjtBQUNELE9BTkQ7QUFPRCxLQXpCRSxNQXlCSTtBQUNMZixhQUFPLDBCQUFQO0FBQ0Q7QUFDQyxHQWpDTSxDQUFQO0FBa0NBLENBMUNEOztBQTRDQTs7a0JBRWVQLGEiLCJmaWxlIjoid2F0c29uVVJMLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgV0FUU09OVVNFUiwgV0FUU09OUEFTU30gPSBwcm9jZXNzLmVudlxudmFyIE5hdHVyYWxMYW5ndWFnZVVuZGVyc3RhbmRpbmdWMSA9IHJlcXVpcmUoJ3dhdHNvbi1kZXZlbG9wZXItY2xvdWQvbmF0dXJhbC1sYW5ndWFnZS11bmRlcnN0YW5kaW5nL3YxLmpzJyk7XG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoe1xuICBzaWxlbnQ6IHRydWVcbn0pOyAvLyAgb3B0aW9uYWxcblxudmFyIG5sdSA9IG5ldyBOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEoe1xuICB2ZXJzaW9uOiAnMjAxOC0wNC0wNScsXG4gIHVybDogJ2h0dHBzOi8vZ2F0ZXdheS53YXRzb25wbGF0Zm9ybS5uZXQvbmF0dXJhbC1sYW5ndWFnZS11bmRlcnN0YW5kaW5nL2FwaSdcbn0pO1xuXG5cbmNvbnN0IGdldFdhdHNvbkRhdGEgPSAobGluaykgPT4ge1xuXG5sZXQgdXJsRm9ybWF0ID0gL1stYS16QS1aMC05QDolX1xcKy5+Iz8mLy89XXsyLDI1Nn1cXC5bYS16XXsyLDR9XFxiKFxcL1stYS16QS1aMC05QDolX1xcKy5+Iz8mLy89XSopPy9naTtcbmxldCB1cmxSZWdleCA9IG5ldyBSZWdFeHAodXJsRm9ybWF0KVxuXG5cblxuXG4gcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIiQkJCQkJCQkJCQkJCQkXCIpXG4gIGNvbnNvbGUubG9nKGxpbmspXG4gIGNvbnNvbGUubG9nKHVybFJlZ2V4KVxuICAgXG4gICBpZiAobGluay5tYXRjaCh1cmxSZWdleCkpe1xuXG5cbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgdXJsOiBsaW5rLFxuICAgIGZlYXR1cmVzOiB7XG4gICAgICBjb25jZXB0czoge30sXG4gICAgICBrZXl3b3Jkczoge1xuICAgICAgICAnc2VudGltZW50JzogdHJ1ZSxcbiAgICAgICAgJ2Vtb3Rpb24nOiB0cnVlXG4gICAgICB9LFxuICAgICAgY2F0ZWdvcmllczoge30sXG4gICAgICBlbnRpdGllczoge30sXG4gICAgICBtZXRhZGF0YToge30sXG4gICAgICByZWxhdGlvbnM6IHt9LFxuICAgICAgc2VtYW50aWNfcm9sZXM6IHt9XG4gICAgfVxuICB9O1xuICBubHUuYW5hbHl6ZShvcHRpb25zLCAoZXJyLCByZXMpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgcmVqZWN0KCk7XG4gICAgfVxuICAgIHJlc29sdmUocmVzKTtcbiAgfSk7XG59IGVsc2Uge1xuICByZWplY3QoXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBVUkxcIilcbn1cbiB9KVxufSBcblxuLy8gZ2V0V2F0c29uRGF0YShcImdvb2dsZS5jb21cIikudGhlbihkID0+IGNvbnNvbGUubG9nKGQpKS5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuXG5leHBvcnQgZGVmYXVsdCBnZXRXYXRzb25EYXRhIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "watsonURL.js"
      ],
      "names": [
        "process",
        "env",
        "WATSONUSER",
        "WATSONPASS",
        "NaturalLanguageUnderstandingV1",
        "require",
        "config",
        "silent",
        "nlu",
        "version",
        "url",
        "getWatsonData",
        "link",
        "urlFormat",
        "urlRegex",
        "RegExp",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "match",
        "options",
        "features",
        "concepts",
        "keywords",
        "categories",
        "entities",
        "metadata",
        "relations",
        "semantic_roles",
        "analyze",
        "err",
        "res"
      ],
      "mappings": ";;;;;mBAAkCA,QAAQC,G;IAAlCC,U,gBAAAA,U;IAAYC,U,gBAAAA,U;;AACpB,IAAIC,iCAAiCC,QAAQ,6DAAR,CAArC;AACAA,QAAQ,QAAR,EAAkBC,MAAlB,CAAyB;AACvBC,UAAQ;AADe,CAAzB,E,CAEI;;AAEJ,IAAIC,MAAM,IAAIJ,8BAAJ,CAAmC;AAC3CK,WAAS,YADkC;AAE3CC,OAAK;AAFsC,CAAnC,CAAV;;AAMA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAU;;AAEhC,MAAIC,YAAY,mFAAhB;AACA,MAAIC,WAAW,IAAIC,MAAJ,CAAWF,SAAX,CAAf;;AAKC,SAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACtCC,YAAQC,GAAR,CAAY,gBAAZ;AACAD,YAAQC,GAAR,CAAYR,IAAZ;AACAO,YAAQC,GAAR,CAAYN,QAAZ;;AAEC,QAAIF,KAAKS,KAAL,CAAWP,QAAX,CAAJ,EAAyB;;AAG1B,UAAIQ,UAAU;AACZZ,aAAKE,IADO;AAEZW,kBAAU;AACRC,oBAAU,EADF;AAERC,oBAAU;AACR,yBAAa,IADL;AAER,uBAAW;AAFH,WAFF;AAMRC,sBAAY,EANJ;AAORC,oBAAU,EAPF;AAQRC,oBAAU,EARF;AASRC,qBAAW,EATH;AAURC,0BAAgB;AAVR;AAFE,OAAd;AAeAtB,UAAIuB,OAAJ,CAAYT,OAAZ,EAAqB,UAACU,GAAD,EAAMC,GAAN,EAAc;AACjC,YAAID,GAAJ,EAAS;AACPb,kBAAQC,GAAR,CAAYY,GAAZ;AACAd;AACD;AACDD,gBAAQgB,GAAR;AACD,OAND;AAOD,KAzBE,MAyBI;AACLf,aAAO,0BAAP;AACD;AACC,GAjCM,CAAP;AAkCA,CA1CD;;AA4CA;;kBAEeP,a",
      "file": "watsonURL.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "const { WATSONUSER, WATSONPASS} = process.env\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\n\nconst getWatsonData = (link) => {\n\nlet urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\nlet urlRegex = new RegExp(urlFormat)\n\n\n\n\n return new Promise((resolve,reject) => {\n  console.log(\"$$$$$$$$$$$$$$\")\n  console.log(link)\n  console.log(urlRegex)\n   \n   if (link.match(urlRegex)){\n\n\n  var options = {\n    url: link,\n    features: {\n      concepts: {},\n      keywords: {\n        'sentiment': true,\n        'emotion': true\n      },\n      categories: {},\n      entities: {},\n      metadata: {},\n      relations: {},\n      semantic_roles: {}\n    }\n  };\n  nlu.analyze(options, (err, res) => {\n    if (err) {\n      console.log(err);\n      reject();\n    }\n    resolve(res);\n  });\n} else {\n  reject(\"Please enter a valid URL\")\n}\n })\n} \n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexport default getWatsonData"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/user.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "updateUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "updateUser",
                "local": "updateUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/user.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/user.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.routes.js",
      "sourceFileName": "user.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _user = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.patch('/', _user.updateUser);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwYXRjaCIsInVwZGF0ZVVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxLQUFQLENBQWEsR0FBYixFQUFrQkMsZ0JBQWxCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJ1c2VyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnJvdXRlci5wYXRjaCgnLycsIHVwZGF0ZVVzZXIpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.routes.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "patch",
        "updateUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,KAAP,CAAa,GAAb,EAAkBC,gBAAlB;;AAEAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "user.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import express from 'express'\nimport { updateUser } from '../controllers/user.controller'\n\nconst router = express.Router()\n\nrouter.patch('/', updateUser)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/seeds/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "paths"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "paths",
                "local": "paths"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createSuperAdmin",
            "createStudent"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createSuperAdmin",
              "exported": "createSuperAdmin"
            },
            {
              "kind": "local",
              "local": "createStudent",
              "exported": "createStudent"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/seeds/users.js",
      "filenameRelative": "/home/tanuj/delta-api/src/seeds/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStudent = exports.createSuperAdmin = undefined;\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createSuperAdmin = exports.createSuperAdmin = function createSuperAdmin() {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.SUPERADMIN,\n    email: process.env.DEFAULT_USER\n  }).save();\n};\n\nvar createStudent = exports.createStudent = function createStudent(currentCohortId) {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.STUDENT,\n    cohorts: [currentCohortId],\n    currentCohort: currentCohortId,\n    email: _faker2.default.internet.email(),\n    path: _lodash2.default.sample(_constants.paths)\n  }).save();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVN1cGVyQWRtaW4iLCJVc2VyIiwibmFtZSIsImZha2VyIiwiZmluZE5hbWUiLCJyb2xlIiwiVVNFUl9ST0xFUyIsIlNVUEVSQURNSU4iLCJlbWFpbCIsInByb2Nlc3MiLCJlbnYiLCJERUZBVUxUX1VTRVIiLCJzYXZlIiwiY3JlYXRlU3R1ZGVudCIsImN1cnJlbnRDb2hvcnRJZCIsIlNUVURFTlQiLCJjb2hvcnRzIiwiY3VycmVudENvaG9ydCIsImludGVybmV0IiwicGF0aCIsIl8iLCJzYW1wbGUiLCJwYXRocyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsOENBQW1CLFNBQW5CQSxnQkFBbUI7QUFBQSxTQUFNLElBQUlDLGNBQUosQ0FBUztBQUM3Q0MsVUFBTUMsZ0JBQU1ELElBQU4sQ0FBV0UsUUFBWCxFQUR1QztBQUU3Q0MsVUFBTUMsaUJBQVdDLFVBRjRCO0FBRzdDQyxXQUFPQyxRQUFRQyxHQUFSLENBQVlDO0FBSDBCLEdBQVQsRUFJbkNDLElBSm1DLEVBQU47QUFBQSxDQUF6Qjs7QUFPQSxJQUFNQyx3Q0FBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLGVBQUQ7QUFBQSxTQUFxQixJQUFJYixjQUFKLENBQVM7QUFDekRDLFVBQU1DLGdCQUFNRCxJQUFOLENBQVdFLFFBQVgsRUFEbUQ7QUFFekRDLFVBQU1DLGlCQUFXUyxPQUZ3QztBQUd6REMsYUFBUyxDQUFDRixlQUFELENBSGdEO0FBSXpERyxtQkFBZUgsZUFKMEM7QUFLekROLFdBQU9MLGdCQUFNZSxRQUFOLENBQWVWLEtBQWYsRUFMa0Q7QUFNekRXLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLGdCQUFUO0FBTm1ELEdBQVQsRUFPL0NWLElBUCtDLEVBQXJCO0FBQUEsQ0FBdEIiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQge2RlZmF1bHQgYXMgVXNlciwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtwYXRoc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN1cGVyQWRtaW4gPSAoKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVVBFUkFETUlOLFxuICBlbWFpbDogcHJvY2Vzcy5lbnYuREVGQVVMVF9VU0VSLFxufSkuc2F2ZSgpXG5cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN0dWRlbnQgPSAoY3VycmVudENvaG9ydElkKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5ULFxuICBjb2hvcnRzOiBbY3VycmVudENvaG9ydElkXSxcbiAgY3VycmVudENvaG9ydDogY3VycmVudENvaG9ydElkLFxuICBlbWFpbDogZmFrZXIuaW50ZXJuZXQuZW1haWwoKSxcbiAgcGF0aDogXy5zYW1wbGUocGF0aHMpLFxufSkuc2F2ZSgpXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "createSuperAdmin",
        "User",
        "name",
        "faker",
        "findName",
        "role",
        "USER_ROLES",
        "SUPERADMIN",
        "email",
        "process",
        "env",
        "DEFAULT_USER",
        "save",
        "createStudent",
        "currentCohortId",
        "STUDENT",
        "cohorts",
        "currentCohort",
        "internet",
        "path",
        "_",
        "sample",
        "paths"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,cAAJ,CAAS;AAC7CC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADuC;AAE7CC,UAAMC,iBAAWC,UAF4B;AAG7CC,WAAOC,QAAQC,GAAR,CAAYC;AAH0B,GAAT,EAInCC,IAJmC,EAAN;AAAA,CAAzB;;AAOA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,eAAD;AAAA,SAAqB,IAAIb,cAAJ,CAAS;AACzDC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADmD;AAEzDC,UAAMC,iBAAWS,OAFwC;AAGzDC,aAAS,CAACF,eAAD,CAHgD;AAIzDG,mBAAeH,eAJ0C;AAKzDN,WAAOL,gBAAMe,QAAN,CAAeV,KAAf,EALkD;AAMzDW,UAAMC,iBAAEC,MAAF,CAASC,gBAAT;AANmD,GAAT,EAO/CV,IAP+C,EAArB;AAAA,CAAtB",
      "file": "users.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "sourcesContent": [
        "import faker from 'faker';\nimport {default as User, USER_ROLES} from '../models/user';\nimport {paths} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createSuperAdmin = () => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.SUPERADMIN,\n  email: process.env.DEFAULT_USER,\n}).save()\n\n\nexport const createStudent = (currentCohortId) => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.STUDENT,\n  cohorts: [currentCohortId],\n  currentCohort: currentCohortId,\n  email: faker.internet.email(),\n  path: _.sample(paths),\n}).save()\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/constants.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "promptTypes",
            "pingKinds",
            "pingTypes",
            "paths",
            "questionTypes",
            "defaultQuestionOptions"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "promptTypes",
              "exported": "promptTypes"
            },
            {
              "kind": "local",
              "local": "pingKinds",
              "exported": "pingKinds"
            },
            {
              "kind": "local",
              "local": "pingTypes",
              "exported": "pingTypes"
            },
            {
              "kind": "local",
              "local": "paths",
              "exported": "paths"
            },
            {
              "kind": "local",
              "local": "questionTypes",
              "exported": "questionTypes"
            },
            {
              "kind": "local",
              "local": "defaultQuestionOptions",
              "exported": "defaultQuestionOptions"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/constants.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/constants.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "constants.js",
      "sourceFileName": "constants.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "constants"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar promptTypes = exports.promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nvar pingKinds = exports.pingKinds = ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nvar pingTypes = exports.pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nvar paths = exports.paths = ['Front End', 'Back End'];\nvar questionTypes = exports.questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nvar defaultQuestionOptions = exports.defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJwcm9tcHRUeXBlcyIsInBpbmdLaW5kcyIsInBpbmdUeXBlcyIsInBhdGhzIiwicXVlc3Rpb25UeXBlcyIsImRlZmF1bHRRdWVzdGlvbk9wdGlvbnMiLCJTbGlkZXIiLCJvcHRpb25zIiwiUmF0aW5nIiwiU2VsZWN0TXVsdGlwbGUiLCJSYWRpbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxvQ0FBYyxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCLEVBQXFDLGtCQUFyQyxFQUF5RCxZQUF6RCxFQUF1RSxlQUF2RSxFQUF3RixpQkFBeEYsQ0FBcEI7QUFDQSxJQUFNQyxnQ0FBYSxDQUFDLFNBQUQsRUFBWSxNQUFaLEVBQW9CLFNBQXBCLEVBQStCLFNBQS9CLEVBQTBDLFFBQTFDLEVBQW9ELFFBQXBELENBQW5CO0FBQ0EsSUFBTUMsZ0NBQVksQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixFQUE0QixTQUE1QixFQUF1QyxNQUF2QyxFQUErQyxXQUEvQyxDQUFsQjtBQUNBLElBQU1DLHdCQUFRLENBQUMsV0FBRCxFQUFjLFVBQWQsQ0FBZDtBQUNBLElBQU1DLHdDQUFnQixDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLGdCQUFyQixFQUF1QyxPQUF2QyxDQUF0QjtBQUNBLElBQU1DLDBEQUF5QjtBQUNwQ0MsVUFBUSxFQUFFQyxTQUFTLENBQUMsVUFBRCxFQUFhLEtBQWIsRUFBb0IsTUFBcEIsRUFBNEIsV0FBNUIsQ0FBWCxFQUQ0QjtBQUVwQ0MsVUFBUSxFQUY0QjtBQUdwQ0Msa0JBQWdCLEVBQUVGLFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYLEVBSG9CO0FBSXBDRyxTQUFPLEVBQUVILFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYO0FBSjZCLENBQS9CIiwiZmlsZSI6ImNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcHJvbXB0VHlwZXMgPSBbJ01ldGFMZWFybmluZycsICdDYXRhbHlzdCBTZXNzaW9uJywgJ1BhaXIgUHJvZ3JhbW1pbmcnLCAnQXNzZXNzbWVudCcsICdRdWVzdGlvbiBIb3VyJywgJ1NoYXJpbmcgU2Vzc2lvbiddO1xuZXhwb3J0IGNvbnN0IHBpbmdLaW5kcyA9ICBbJ2V4cGxvcmUnLCAna25vdycsICdvYnNlcnZlJywgJ3JlZmxlY3QnLCAncmV2aWV3JywgJ3Vud2luZCddO1xuZXhwb3J0IGNvbnN0IHBpbmdUeXBlcyA9IFsnUGFpcicsICdDb2hvcnQnLCAnUGVlcnMnLCAnQ29udGVudCcsICdTZWxmJywgJ0ludGVudGlvbiddO1xuZXhwb3J0IGNvbnN0IHBhdGhzID0gWydGcm9udCBFbmQnLCAnQmFjayBFbmQnXTtcbmV4cG9ydCBjb25zdCBxdWVzdGlvblR5cGVzID0gWydTbGlkZXInLCAnUmF0aW5nJywgJ1NlbGVjdE11bHRpcGxlJywgJ1JhZGlvJ107XG5leHBvcnQgY29uc3QgZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyA9IHtcbiAgU2xpZGVyOiB7IG9wdGlvbnM6IFsnVmVyeSBiYWQnLCAnQmFkJywgJ0dvb2QnLCAnVmVyeSBnb29kJ10gfSxcbiAgUmF0aW5nOiB7fSxcbiAgU2VsZWN0TXVsdGlwbGU6IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbiAgUmFkaW86IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "promptTypes",
        "pingKinds",
        "pingTypes",
        "paths",
        "questionTypes",
        "defaultQuestionOptions",
        "Slider",
        "options",
        "Rating",
        "SelectMultiple",
        "Radio"
      ],
      "mappings": ";;;;;AAAO,IAAMA,oCAAc,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,kBAArC,EAAyD,YAAzD,EAAuE,eAAvE,EAAwF,iBAAxF,CAApB;AACA,IAAMC,gCAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,QAApD,CAAnB;AACA,IAAMC,gCAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC,MAAvC,EAA+C,WAA/C,CAAlB;AACA,IAAMC,wBAAQ,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,IAAMC,wCAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,gBAArB,EAAuC,OAAvC,CAAtB;AACA,IAAMC,0DAAyB;AACpCC,UAAQ,EAAEC,SAAS,CAAC,UAAD,EAAa,KAAb,EAAoB,MAApB,EAA4B,WAA5B,CAAX,EAD4B;AAEpCC,UAAQ,EAF4B;AAGpCC,kBAAgB,EAAEF,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX,EAHoB;AAIpCG,SAAO,EAAEH,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX;AAJ6B,CAA/B",
      "file": "constants.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "export const promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nexport const pingKinds =  ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nexport const pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nexport const paths = ['Front End', 'Back End'];\nexport const questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nexport const defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/dbConnect.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "dotenv/config",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dotenv"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/dbConnect.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/dbConnect.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbConnect.js",
      "sourceFileName": "dbConnect.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbConnect"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('dotenv/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _process$env = process.env,\n    NODE_ENV = _process$env.NODE_ENV,\n    MONGO_HOST = _process$env.MONGO_HOST,\n    dbName = _process$env.MONGO_DB,\n    user = _process$env.MONGO_USER,\n    pass = _process$env.MONGO_PWD;\n\n\n_mongoose2.default.set('debug', NODE_ENV === 'development');\n_mongoose2.default.Promise = Promise;\nconsole.log(MONGO_HOST);\n\nexports.default = function () {\n  return _mongoose2.default.connect(MONGO_HOST, { user: user, pass: pass });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJNT05HT19IT1NUIiwiZGJOYW1lIiwiTU9OR09fREIiLCJ1c2VyIiwiTU9OR09fVVNFUiIsInBhc3MiLCJNT05HT19QV0QiLCJtb25nb29zZSIsInNldCIsIlByb21pc2UiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O21CQUNvRkEsUUFBUUMsRztJQUFyRkMsUSxnQkFBQUEsUTtJQUFVQyxVLGdCQUFBQSxVO0lBQXNCQyxNLGdCQUFWQyxRO0lBQThCQyxJLGdCQUFaQyxVO0lBQTZCQyxJLGdCQUFYQyxTOzs7QUFFakVDLG1CQUFTQyxHQUFULENBQWEsT0FBYixFQUFzQlQsYUFBYSxhQUFuQztBQUNBUSxtQkFBU0UsT0FBVCxHQUFtQkEsT0FBbkI7QUFDQUMsUUFBUUMsR0FBUixDQUFZWCxVQUFaOztrQkFDZTtBQUFBLFNBQU1PLG1CQUFTSyxPQUFULENBQWlCWixVQUFqQixFQUE2QixFQUFDRyxVQUFELEVBQU9FLFVBQVAsRUFBN0IsQ0FBTjtBQUFBLEMiLCJmaWxlIjoiZGJDb25uZWN0LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52L2NvbmZpZyc7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge05PREVfRU5WLCBNT05HT19IT1NULCBNT05HT19EQjogZGJOYW1lLCBNT05HT19VU0VSOiB1c2VyLCBNT05HT19QV0Q6IHBhc3N9ID0gcHJvY2Vzcy5lbnY7XG5cbm1vbmdvb3NlLnNldCgnZGVidWcnLCBOT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jyk7XG5tb25nb29zZS5Qcm9taXNlID0gUHJvbWlzZTtcbmNvbnNvbGUubG9nKE1PTkdPX0hPU1QpO1xuZXhwb3J0IGRlZmF1bHQgKCkgPT4gbW9uZ29vc2UuY29ubmVjdChNT05HT19IT1NULCB7dXNlciwgcGFzc30pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbConnect.js"
      ],
      "names": [
        "process",
        "env",
        "NODE_ENV",
        "MONGO_HOST",
        "dbName",
        "MONGO_DB",
        "user",
        "MONGO_USER",
        "pass",
        "MONGO_PWD",
        "mongoose",
        "set",
        "Promise",
        "console",
        "log",
        "connect"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;mBACoFA,QAAQC,G;IAArFC,Q,gBAAAA,Q;IAAUC,U,gBAAAA,U;IAAsBC,M,gBAAVC,Q;IAA8BC,I,gBAAZC,U;IAA6BC,I,gBAAXC,S;;;AAEjEC,mBAASC,GAAT,CAAa,OAAb,EAAsBT,aAAa,aAAnC;AACAQ,mBAASE,OAAT,GAAmBA,OAAnB;AACAC,QAAQC,GAAR,CAAYX,UAAZ;;kBACe;AAAA,SAAMO,mBAASK,OAAT,CAAiBZ,UAAjB,EAA6B,EAACG,UAAD,EAAOE,UAAP,EAA7B,CAAN;AAAA,C",
      "file": "dbConnect.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "import dotenv from 'dotenv/config';\nimport mongoose from 'mongoose';\nconst {NODE_ENV, MONGO_HOST, MONGO_DB: dbName, MONGO_USER: user, MONGO_PWD: pass} = process.env;\n\nmongoose.set('debug', NODE_ENV === 'development');\nmongoose.Promise = Promise;\nconsole.log(MONGO_HOST);\nexport default () => mongoose.connect(MONGO_HOST, {user, pass});\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/seeds/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./seed",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "seed"
              }
            ]
          },
          {
            "source": "../util/dbConnect",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dbConnect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/seeds/index.js",
      "filenameRelative": "/home/tanuj/delta-api/src/seeds/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _seed = require('./seed');\n\nvar _seed2 = _interopRequireDefault(_seed);\n\nvar _dbConnect = require('../util/dbConnect');\n\nvar _dbConnect2 = _interopRequireDefault(_dbConnect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n(0, _dbConnect2.default)().then(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n    var connection = _ref2.connection;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return connection.dropDatabase();\n\n          case 2:\n            _context.next = 4;\n            return (0, _seed2.default)(connection);\n\n          case 4:\n            connection.close();\n\n          case 5:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}()).catch(console.error);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRoZW4iLCJjb25uZWN0aW9uIiwiZHJvcERhdGFiYXNlIiwiY2xvc2UiLCJjYXRjaCIsImNvbnNvbGUiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7Ozs7OztBQUVBLDJCQUNDQSxJQUREO0FBQUEscUVBQ007QUFBQSxRQUFRQyxVQUFSLFNBQVFBLFVBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0VBLFdBQVdDLFlBQVgsRUFERjs7QUFBQTtBQUFBO0FBQUEsbUJBRUUsb0JBQUtELFVBQUwsQ0FGRjs7QUFBQTtBQUdKQSx1QkFBV0UsS0FBWDs7QUFISTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUROOztBQUFBO0FBQUE7QUFBQTtBQUFBLEtBTUNDLEtBTkQsQ0FNT0MsUUFBUUMsS0FOZiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3NlZWRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNlZWQgZnJvbSAnLi9zZWVkJztcbmltcG9ydCBkYkNvbm5lY3QgZnJvbSAnLi4vdXRpbC9kYkNvbm5lY3QnO1xuXG5kYkNvbm5lY3QoKVxuLnRoZW4oYXN5bmMgKHtjb25uZWN0aW9ufSkgPT4ge1xuICBhd2FpdCBjb25uZWN0aW9uLmRyb3BEYXRhYmFzZSgpO1xuICBhd2FpdCBzZWVkKGNvbm5lY3Rpb24pO1xuICBjb25uZWN0aW9uLmNsb3NlKCk7XG59KVxuLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "then",
        "connection",
        "dropDatabase",
        "close",
        "catch",
        "console",
        "error"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;;;;;AAEA,2BACCA,IADD;AAAA,qEACM;AAAA,QAAQC,UAAR,SAAQA,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEA,WAAWC,YAAX,EADF;;AAAA;AAAA;AAAA,mBAEE,oBAAKD,UAAL,CAFF;;AAAA;AAGJA,uBAAWE,KAAX;;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADN;;AAAA;AAAA;AAAA;AAAA,KAMCC,KAND,CAMOC,QAAQC,KANf",
      "file": "index.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "sourcesContent": [
        "import seed from './seed';\nimport dbConnect from '../util/dbConnect';\n\ndbConnect()\n.then(async ({connection}) => {\n  await connection.dropDatabase();\n  await seed(connection);\n  connection.close();\n})\n.catch(console.error);\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/seeds/seed.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./users",
            "imported": [
              "createSuperAdmin"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createSuperAdmin",
                "local": "createSuperAdmin"
              }
            ]
          },
          {
            "source": "./pings",
            "imported": [
              "createPings"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createPings",
                "local": "createPings"
              }
            ]
          },
          {
            "source": "./prompts",
            "imported": [
              "createPrompt",
              "populatePrompt"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createPrompt",
                "local": "createPrompt"
              },
              {
                "kind": "named",
                "imported": "populatePrompt",
                "local": "populatePrompt"
              }
            ]
          },
          {
            "source": "./cohorts",
            "imported": [
              "createCohort",
              "populateCohort"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createCohort",
                "local": "createCohort"
              },
              {
                "kind": "named",
                "imported": "populateCohort",
                "local": "populateCohort"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/seeds/seed.js",
      "filenameRelative": "/home/tanuj/delta-api/src/seeds/seed.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "seed.js",
      "sourceFileName": "seed.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "seed"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _users = require('./users');\n\nvar _pings = require('./pings');\n\nvar _prompts = require('./prompts');\n\nvar _cohorts = require('./cohorts');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             The seeds will add the following seed data for the development environment!\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Users\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - 1 Super admin\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Few Educators\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Several Pings\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Several Prompts\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Assign some pings\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Few Cohorts\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Few Students\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Several days\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 - Create spotters\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 - Timeline (An array of prompts)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   - Create pingpongs foreach event\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           */\n\n\nvar pingCount = 100,\n    promptCount = 40,\n    cohorCount = 3,\n    studentCount = 20,\n    // for each cohort\ndayCount = 108;\n\nexports.default = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(c) {\n    var i, prompt, cohort;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _users.createSuperAdmin)();\n\n          case 2:\n            _context.next = 4;\n            return (0, _pings.createPings)(pingCount);\n\n          case 4:\n            i = 0;\n\n          case 5:\n            if (!(i < promptCount)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 8;\n            return (0, _prompts.createPrompt)();\n\n          case 8:\n            prompt = _context.sent;\n            _context.next = 11;\n            return (0, _prompts.populatePrompt)(prompt);\n\n          case 11:\n            i++;\n            _context.next = 5;\n            break;\n\n          case 14:\n            i = 0;\n\n          case 15:\n            if (!(i < cohorCount)) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.next = 18;\n            return (0, _cohorts.createCohort)();\n\n          case 18:\n            cohort = _context.sent;\n            _context.next = 21;\n            return (0, _cohorts.populateCohort)({ cohort: cohort, studentCount: studentCount, dayCount: dayCount });\n\n          case 21:\n            i++;\n            _context.next = 15;\n            break;\n\n          case 24:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsicGluZ0NvdW50IiwicHJvbXB0Q291bnQiLCJjb2hvckNvdW50Iiwic3R1ZGVudENvdW50IiwiZGF5Q291bnQiLCJjIiwiaSIsInByb21wdCIsImNvaG9ydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBaUJBOztBQUNBOztBQUNBOztBQUNBOzsyY0FwQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEsSUFBTUEsWUFBWSxHQUFsQjtBQUFBLElBQ0VDLGNBQWMsRUFEaEI7QUFBQSxJQUVFQyxhQUFhLENBRmY7QUFBQSxJQUdFQyxlQUFlLEVBSGpCO0FBQUEsSUFHc0I7QUFDcEJDLFdBQVcsR0FKYjs7O3FFQU1lLGlCQUFNQyxDQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBR1AsOEJBSE87O0FBQUE7QUFBQTtBQUFBLG1CQU1QLHdCQUFZTCxTQUFaLENBTk87O0FBQUE7QUFTSk0sYUFUSSxHQVNBLENBVEE7O0FBQUE7QUFBQSxrQkFTR0EsSUFBSUwsV0FUUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQVVRLDRCQVZSOztBQUFBO0FBVVBNLGtCQVZPO0FBQUE7QUFBQSxtQkFXTCw2QkFBZUEsTUFBZixDQVhLOztBQUFBO0FBU29CRCxlQVRwQjtBQUFBO0FBQUE7O0FBQUE7QUFlSkEsYUFmSSxHQWVBLENBZkE7O0FBQUE7QUFBQSxrQkFlR0EsSUFBSUosVUFmUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQWdCUSw0QkFoQlI7O0FBQUE7QUFnQlBNLGtCQWhCTztBQUFBO0FBQUEsbUJBaUJMLDZCQUFlLEVBQUNBLGNBQUQsRUFBU0wsMEJBQVQsRUFBdUJDLGtCQUF2QixFQUFmLENBakJLOztBQUFBO0FBZW1CRSxlQWZuQjtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsImZpbGUiOiJzZWVkLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvc2VlZHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXG4gIFRoZSBzZWVkcyB3aWxsIGFkZCB0aGUgZm9sbG93aW5nIHNlZWQgZGF0YSBmb3IgdGhlIGRldmVsb3BtZW50IGVudmlyb25tZW50IVxuICAtIFVzZXJzXG4gICAgLSAxIFN1cGVyIGFkbWluXG4gICAgLSBGZXcgRWR1Y2F0b3JzXG4gIC0gU2V2ZXJhbCBQaW5nc1xuICAtIFNldmVyYWwgUHJvbXB0c1xuICAgIC0gQXNzaWduIHNvbWUgcGluZ3NcbiAgLSBGZXcgQ29ob3J0c1xuICAgIC0gRmV3IFN0dWRlbnRzXG4gICAgLSBTZXZlcmFsIGRheXNcbiAgICAgIC0gQ3JlYXRlIHNwb3R0ZXJzXG4gICAgICAtIFRpbWVsaW5lIChBbiBhcnJheSBvZiBwcm9tcHRzKVxuICAgICAgICAtIENyZWF0ZSBwaW5ncG9uZ3MgZm9yZWFjaCBldmVudFxuXG4qL1xuaW1wb3J0IHtjcmVhdGVTdXBlckFkbWlufSBmcm9tICcuL3VzZXJzJztcbmltcG9ydCB7Y3JlYXRlUGluZ3N9IGZyb20gJy4vcGluZ3MnO1xuaW1wb3J0IHtjcmVhdGVQcm9tcHQsIHBvcHVsYXRlUHJvbXB0fSBmcm9tICcuL3Byb21wdHMnO1xuaW1wb3J0IHtjcmVhdGVDb2hvcnQsIHBvcHVsYXRlQ29ob3J0fSBmcm9tICcuL2NvaG9ydHMnO1xuXG5jb25zdCBwaW5nQ291bnQgPSAxMDAsXG4gIHByb21wdENvdW50ID0gNDAsXG4gIGNvaG9yQ291bnQgPSAzLFxuICBzdHVkZW50Q291bnQgPSAyMCwgIC8vIGZvciBlYWNoIGNvaG9ydFxuICBkYXlDb3VudCA9IDEwODtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgYyA9PiB7XG5cbiAgLy8gQ3JlYXRlIGEgc3VwZXIgYWRtaW4gdXNlclxuICBhd2FpdCBjcmVhdGVTdXBlckFkbWluKCk7XG5cbiAgLy8gQ3JlYXRlIHBpbmdzXG4gIGF3YWl0IGNyZWF0ZVBpbmdzKHBpbmdDb3VudCk7XG5cbiAgLy8gQ3JlYXRlIHByb21wdHMgJiBhc3NpZ24gcGluZ3NcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9tcHRDb3VudDsgaSsrKSB7XG4gICAgbGV0IHByb21wdCA9IGF3YWl0IGNyZWF0ZVByb21wdCgpO1xuICAgIGF3YWl0IHBvcHVsYXRlUHJvbXB0KHByb21wdCk7XG4gIH1cblxuICAvLyBDcmVhdGUgY29ob3J0cyAmIGNyZWF0ZSBkYXlzIGZvciBlYWNoIGNvaG9ydFxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvaG9yQ291bnQ7IGkrKykge1xuICAgIGxldCBjb2hvcnQgPSBhd2FpdCBjcmVhdGVDb2hvcnQoKTtcbiAgICBhd2FpdCBwb3B1bGF0ZUNvaG9ydCh7Y29ob3J0LCBzdHVkZW50Q291bnQsIGRheUNvdW50fSk7XG4gIH1cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "pingCount",
        "promptCount",
        "cohorCount",
        "studentCount",
        "dayCount",
        "c",
        "i",
        "prompt",
        "cohort"
      ],
      "mappings": ";;;;;;AAiBA;;AACA;;AACA;;AACA;;2cApBA;;;;;;;;;;;;;;;;;;;AAsBA,IAAMA,YAAY,GAAlB;AAAA,IACEC,cAAc,EADhB;AAAA,IAEEC,aAAa,CAFf;AAAA,IAGEC,eAAe,EAHjB;AAAA,IAGsB;AACpBC,WAAW,GAJb;;;qEAMe,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGP,8BAHO;;AAAA;AAAA;AAAA,mBAMP,wBAAYL,SAAZ,CANO;;AAAA;AASJM,aATI,GASA,CATA;;AAAA;AAAA,kBASGA,IAAIL,WATP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUQ,4BAVR;;AAAA;AAUPM,kBAVO;AAAA;AAAA,mBAWL,6BAAeA,MAAf,CAXK;;AAAA;AASoBD,eATpB;AAAA;AAAA;;AAAA;AAeJA,aAfI,GAeA,CAfA;;AAAA;AAAA,kBAeGA,IAAIJ,UAfP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBQ,4BAhBR;;AAAA;AAgBPM,kBAhBO;AAAA;AAAA,mBAiBL,6BAAe,EAACA,cAAD,EAASL,0BAAT,EAAuBC,kBAAvB,EAAf,CAjBK;;AAAA;AAemBE,eAfnB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "file": "seed.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "sourcesContent": [
        "/*\n\n  The seeds will add the following seed data for the development environment!\n  - Users\n    - 1 Super admin\n    - Few Educators\n  - Several Pings\n  - Several Prompts\n    - Assign some pings\n  - Few Cohorts\n    - Few Students\n    - Several days\n      - Create spotters\n      - Timeline (An array of prompts)\n        - Create pingpongs foreach event\n\n*/\nimport {createSuperAdmin} from './users';\nimport {createPings} from './pings';\nimport {createPrompt, populatePrompt} from './prompts';\nimport {createCohort, populateCohort} from './cohorts';\n\nconst pingCount = 100,\n  promptCount = 40,\n  cohorCount = 3,\n  studentCount = 20,  // for each cohort\n  dayCount = 108;\n\nexport default async c => {\n\n  // Create a super admin user\n  await createSuperAdmin();\n\n  // Create pings\n  await createPings(pingCount);\n\n  // Create prompts & assign pings\n  for (var i = 0; i < promptCount; i++) {\n    let prompt = await createPrompt();\n    await populatePrompt(prompt);\n  }\n\n  // Create cohorts & create days for each cohort\n  for (var i = 0; i < cohorCount; i++) {\n    let cohort = await createCohort();\n    await populateCohort({cohort, studentCount, dayCount});\n  }\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/seeds/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "paths"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "paths",
                "local": "paths"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createSuperAdmin",
            "createStudent"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createSuperAdmin",
              "exported": "createSuperAdmin"
            },
            {
              "kind": "local",
              "local": "createStudent",
              "exported": "createStudent"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/seeds/users.js",
      "filenameRelative": "/home/tanuj/delta-api/src/seeds/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStudent = exports.createSuperAdmin = undefined;\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createSuperAdmin = exports.createSuperAdmin = function createSuperAdmin() {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.SUPERADMIN,\n    email: process.env.DEFAULT_USER\n  }).save();\n};\n\nvar createStudent = exports.createStudent = function createStudent(currentCohortId) {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.STUDENT,\n    cohorts: [currentCohortId],\n    currentCohort: currentCohortId,\n    email: _faker2.default.internet.email(),\n    path: _lodash2.default.sample(_constants.paths)\n  }).save();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVN1cGVyQWRtaW4iLCJVc2VyIiwibmFtZSIsImZha2VyIiwiZmluZE5hbWUiLCJyb2xlIiwiVVNFUl9ST0xFUyIsIlNVUEVSQURNSU4iLCJlbWFpbCIsInByb2Nlc3MiLCJlbnYiLCJERUZBVUxUX1VTRVIiLCJzYXZlIiwiY3JlYXRlU3R1ZGVudCIsImN1cnJlbnRDb2hvcnRJZCIsIlNUVURFTlQiLCJjb2hvcnRzIiwiY3VycmVudENvaG9ydCIsImludGVybmV0IiwicGF0aCIsIl8iLCJzYW1wbGUiLCJwYXRocyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsOENBQW1CLFNBQW5CQSxnQkFBbUI7QUFBQSxTQUFNLElBQUlDLGNBQUosQ0FBUztBQUM3Q0MsVUFBTUMsZ0JBQU1ELElBQU4sQ0FBV0UsUUFBWCxFQUR1QztBQUU3Q0MsVUFBTUMsaUJBQVdDLFVBRjRCO0FBRzdDQyxXQUFPQyxRQUFRQyxHQUFSLENBQVlDO0FBSDBCLEdBQVQsRUFJbkNDLElBSm1DLEVBQU47QUFBQSxDQUF6Qjs7QUFPQSxJQUFNQyx3Q0FBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLGVBQUQ7QUFBQSxTQUFxQixJQUFJYixjQUFKLENBQVM7QUFDekRDLFVBQU1DLGdCQUFNRCxJQUFOLENBQVdFLFFBQVgsRUFEbUQ7QUFFekRDLFVBQU1DLGlCQUFXUyxPQUZ3QztBQUd6REMsYUFBUyxDQUFDRixlQUFELENBSGdEO0FBSXpERyxtQkFBZUgsZUFKMEM7QUFLekROLFdBQU9MLGdCQUFNZSxRQUFOLENBQWVWLEtBQWYsRUFMa0Q7QUFNekRXLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLGdCQUFUO0FBTm1ELEdBQVQsRUFPL0NWLElBUCtDLEVBQXJCO0FBQUEsQ0FBdEIiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQge2RlZmF1bHQgYXMgVXNlciwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtwYXRoc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN1cGVyQWRtaW4gPSAoKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVVBFUkFETUlOLFxuICBlbWFpbDogcHJvY2Vzcy5lbnYuREVGQVVMVF9VU0VSLFxufSkuc2F2ZSgpXG5cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN0dWRlbnQgPSAoY3VycmVudENvaG9ydElkKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5ULFxuICBjb2hvcnRzOiBbY3VycmVudENvaG9ydElkXSxcbiAgY3VycmVudENvaG9ydDogY3VycmVudENvaG9ydElkLFxuICBlbWFpbDogZmFrZXIuaW50ZXJuZXQuZW1haWwoKSxcbiAgcGF0aDogXy5zYW1wbGUocGF0aHMpLFxufSkuc2F2ZSgpXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "createSuperAdmin",
        "User",
        "name",
        "faker",
        "findName",
        "role",
        "USER_ROLES",
        "SUPERADMIN",
        "email",
        "process",
        "env",
        "DEFAULT_USER",
        "save",
        "createStudent",
        "currentCohortId",
        "STUDENT",
        "cohorts",
        "currentCohort",
        "internet",
        "path",
        "_",
        "sample",
        "paths"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,cAAJ,CAAS;AAC7CC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADuC;AAE7CC,UAAMC,iBAAWC,UAF4B;AAG7CC,WAAOC,QAAQC,GAAR,CAAYC;AAH0B,GAAT,EAInCC,IAJmC,EAAN;AAAA,CAAzB;;AAOA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,eAAD;AAAA,SAAqB,IAAIb,cAAJ,CAAS;AACzDC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADmD;AAEzDC,UAAMC,iBAAWS,OAFwC;AAGzDC,aAAS,CAACF,eAAD,CAHgD;AAIzDG,mBAAeH,eAJ0C;AAKzDN,WAAOL,gBAAMe,QAAN,CAAeV,KAAf,EALkD;AAMzDW,UAAMC,iBAAEC,MAAF,CAASC,gBAAT;AANmD,GAAT,EAO/CV,IAP+C,EAArB;AAAA,CAAtB",
      "file": "users.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "sourcesContent": [
        "import faker from 'faker';\nimport {default as User, USER_ROLES} from '../models/user';\nimport {paths} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createSuperAdmin = () => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.SUPERADMIN,\n  email: process.env.DEFAULT_USER,\n}).save()\n\n\nexport const createStudent = (currentCohortId) => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.STUDENT,\n  cohorts: [currentCohortId],\n  currentCohort: currentCohortId,\n  email: faker.internet.email(),\n  path: _.sample(paths),\n}).save()\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/constants.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "promptTypes",
            "pingKinds",
            "pingTypes",
            "paths",
            "questionTypes",
            "defaultQuestionOptions"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "promptTypes",
              "exported": "promptTypes"
            },
            {
              "kind": "local",
              "local": "pingKinds",
              "exported": "pingKinds"
            },
            {
              "kind": "local",
              "local": "pingTypes",
              "exported": "pingTypes"
            },
            {
              "kind": "local",
              "local": "paths",
              "exported": "paths"
            },
            {
              "kind": "local",
              "local": "questionTypes",
              "exported": "questionTypes"
            },
            {
              "kind": "local",
              "local": "defaultQuestionOptions",
              "exported": "defaultQuestionOptions"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/constants.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/constants.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "constants.js",
      "sourceFileName": "constants.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "constants"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar promptTypes = exports.promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nvar pingKinds = exports.pingKinds = ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nvar pingTypes = exports.pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nvar paths = exports.paths = ['Front End', 'Back End'];\nvar questionTypes = exports.questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nvar defaultQuestionOptions = exports.defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJwcm9tcHRUeXBlcyIsInBpbmdLaW5kcyIsInBpbmdUeXBlcyIsInBhdGhzIiwicXVlc3Rpb25UeXBlcyIsImRlZmF1bHRRdWVzdGlvbk9wdGlvbnMiLCJTbGlkZXIiLCJvcHRpb25zIiwiUmF0aW5nIiwiU2VsZWN0TXVsdGlwbGUiLCJSYWRpbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxvQ0FBYyxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCLEVBQXFDLGtCQUFyQyxFQUF5RCxZQUF6RCxFQUF1RSxlQUF2RSxFQUF3RixpQkFBeEYsQ0FBcEI7QUFDQSxJQUFNQyxnQ0FBYSxDQUFDLFNBQUQsRUFBWSxNQUFaLEVBQW9CLFNBQXBCLEVBQStCLFNBQS9CLEVBQTBDLFFBQTFDLEVBQW9ELFFBQXBELENBQW5CO0FBQ0EsSUFBTUMsZ0NBQVksQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixFQUE0QixTQUE1QixFQUF1QyxNQUF2QyxFQUErQyxXQUEvQyxDQUFsQjtBQUNBLElBQU1DLHdCQUFRLENBQUMsV0FBRCxFQUFjLFVBQWQsQ0FBZDtBQUNBLElBQU1DLHdDQUFnQixDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLGdCQUFyQixFQUF1QyxPQUF2QyxDQUF0QjtBQUNBLElBQU1DLDBEQUF5QjtBQUNwQ0MsVUFBUSxFQUFFQyxTQUFTLENBQUMsVUFBRCxFQUFhLEtBQWIsRUFBb0IsTUFBcEIsRUFBNEIsV0FBNUIsQ0FBWCxFQUQ0QjtBQUVwQ0MsVUFBUSxFQUY0QjtBQUdwQ0Msa0JBQWdCLEVBQUVGLFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYLEVBSG9CO0FBSXBDRyxTQUFPLEVBQUVILFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYO0FBSjZCLENBQS9CIiwiZmlsZSI6ImNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcHJvbXB0VHlwZXMgPSBbJ01ldGFMZWFybmluZycsICdDYXRhbHlzdCBTZXNzaW9uJywgJ1BhaXIgUHJvZ3JhbW1pbmcnLCAnQXNzZXNzbWVudCcsICdRdWVzdGlvbiBIb3VyJywgJ1NoYXJpbmcgU2Vzc2lvbiddO1xuZXhwb3J0IGNvbnN0IHBpbmdLaW5kcyA9ICBbJ2V4cGxvcmUnLCAna25vdycsICdvYnNlcnZlJywgJ3JlZmxlY3QnLCAncmV2aWV3JywgJ3Vud2luZCddO1xuZXhwb3J0IGNvbnN0IHBpbmdUeXBlcyA9IFsnUGFpcicsICdDb2hvcnQnLCAnUGVlcnMnLCAnQ29udGVudCcsICdTZWxmJywgJ0ludGVudGlvbiddO1xuZXhwb3J0IGNvbnN0IHBhdGhzID0gWydGcm9udCBFbmQnLCAnQmFjayBFbmQnXTtcbmV4cG9ydCBjb25zdCBxdWVzdGlvblR5cGVzID0gWydTbGlkZXInLCAnUmF0aW5nJywgJ1NlbGVjdE11bHRpcGxlJywgJ1JhZGlvJ107XG5leHBvcnQgY29uc3QgZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyA9IHtcbiAgU2xpZGVyOiB7IG9wdGlvbnM6IFsnVmVyeSBiYWQnLCAnQmFkJywgJ0dvb2QnLCAnVmVyeSBnb29kJ10gfSxcbiAgUmF0aW5nOiB7fSxcbiAgU2VsZWN0TXVsdGlwbGU6IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbiAgUmFkaW86IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "promptTypes",
        "pingKinds",
        "pingTypes",
        "paths",
        "questionTypes",
        "defaultQuestionOptions",
        "Slider",
        "options",
        "Rating",
        "SelectMultiple",
        "Radio"
      ],
      "mappings": ";;;;;AAAO,IAAMA,oCAAc,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,kBAArC,EAAyD,YAAzD,EAAuE,eAAvE,EAAwF,iBAAxF,CAApB;AACA,IAAMC,gCAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,QAApD,CAAnB;AACA,IAAMC,gCAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC,MAAvC,EAA+C,WAA/C,CAAlB;AACA,IAAMC,wBAAQ,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,IAAMC,wCAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,gBAArB,EAAuC,OAAvC,CAAtB;AACA,IAAMC,0DAAyB;AACpCC,UAAQ,EAAEC,SAAS,CAAC,UAAD,EAAa,KAAb,EAAoB,MAApB,EAA4B,WAA5B,CAAX,EAD4B;AAEpCC,UAAQ,EAF4B;AAGpCC,kBAAgB,EAAEF,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX,EAHoB;AAIpCG,SAAO,EAAEH,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX;AAJ6B,CAA/B",
      "file": "constants.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "export const promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nexport const pingKinds =  ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nexport const pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nexport const paths = ['Front End', 'Back End'];\nexport const questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nexport const defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/seeds/pings.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Ping"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "pingTypes",
              "pingKinds",
              "questionTypes",
              "defaultQuestionOptions"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "pingTypes",
                "local": "pingTypes"
              },
              {
                "kind": "named",
                "imported": "pingKinds",
                "local": "pingKinds"
              },
              {
                "kind": "named",
                "imported": "questionTypes",
                "local": "questionTypes"
              },
              {
                "kind": "named",
                "imported": "defaultQuestionOptions",
                "local": "defaultQuestionOptions"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createPing",
            "createPings"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createPing",
              "exported": "createPing"
            },
            {
              "kind": "local",
              "local": "createPings",
              "exported": "createPings"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/seeds/pings.js",
      "filenameRelative": "/home/tanuj/delta-api/src/seeds/pings.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pings.js",
      "sourceFileName": "pings.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pings"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPings = exports.createPing = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createPing = exports.createPing = function createPing() {\n  var questionType = _lodash2.default.sample(_constants.questionTypes);\n  return new _ping2.default({\n    data: _extends({\n      text: _faker2.default.hacker.phrase()\n    }, _constants.defaultQuestionOptions[questionType]),\n    questionType: questionType,\n    kind: _lodash2.default.sample(_constants.pingKinds),\n    type: _lodash2.default.sample(_constants.pingTypes),\n    ttl: _faker2.default.random.number({\n      'min': 10,\n      'max': 90\n    }),\n    tags: []\n  }).save();\n};\n\nvar createPings = exports.createPings = function createPings(n) {\n  var pings = [];\n  while (n--) {\n    pings.push(createPing());\n  }\n  return Promise.all(pings);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmdzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVBpbmciLCJxdWVzdGlvblR5cGUiLCJfIiwic2FtcGxlIiwicXVlc3Rpb25UeXBlcyIsIlBpbmciLCJkYXRhIiwidGV4dCIsImZha2VyIiwiaGFja2VyIiwicGhyYXNlIiwiZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyIsImtpbmQiLCJwaW5nS2luZHMiLCJ0eXBlIiwicGluZ1R5cGVzIiwidHRsIiwicmFuZG9tIiwibnVtYmVyIiwidGFncyIsInNhdmUiLCJjcmVhdGVQaW5ncyIsInBpbmdzIiwibiIsInB1c2giLCJQcm9taXNlIiwiYWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLGtDQUFhLFNBQWJBLFVBQWEsR0FBTTtBQUM5QixNQUFNQyxlQUFlQyxpQkFBRUMsTUFBRixDQUFTQyx3QkFBVCxDQUFyQjtBQUNBLFNBQU8sSUFBSUMsY0FBSixDQUFTO0FBQ2RDO0FBQ0VDLFlBQU1DLGdCQUFNQyxNQUFOLENBQWFDLE1BQWI7QUFEUixPQUVLQyxrQ0FBdUJWLFlBQXZCLENBRkwsQ0FEYztBQUtkQSw4QkFMYztBQU1kVyxVQUFNVixpQkFBRUMsTUFBRixDQUFTVSxvQkFBVCxDQU5RO0FBT2RDLFVBQU1aLGlCQUFFQyxNQUFGLENBQVNZLG9CQUFULENBUFE7QUFRZEMsU0FBS1IsZ0JBQU1TLE1BQU4sQ0FBYUMsTUFBYixDQUFvQjtBQUN2QixhQUFPLEVBRGdCO0FBRXZCLGFBQU87QUFGZ0IsS0FBcEIsQ0FSUztBQVlkQyxVQUFNO0FBWlEsR0FBVCxFQWFKQyxJQWJJLEVBQVA7QUFjRCxDQWhCTTs7QUFrQkEsSUFBTUMsb0NBQWMsU0FBZEEsV0FBYyxJQUFLO0FBQzlCLE1BQU1DLFFBQVEsRUFBZDtBQUNBLFNBQU1DLEdBQU4sRUFBVztBQUNURCxVQUFNRSxJQUFOLENBQVd4QixZQUFYO0FBQ0Q7QUFDRCxTQUFPeUIsUUFBUUMsR0FBUixDQUFZSixLQUFaLENBQVA7QUFDRCxDQU5NIiwiZmlsZSI6InBpbmdzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvc2VlZHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGluZyBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5pbXBvcnQgZmFrZXIgZnJvbSAnZmFrZXInO1xuaW1wb3J0IHtwaW5nVHlwZXMsIHBpbmdLaW5kcywgcXVlc3Rpb25UeXBlcywgZGVmYXVsdFF1ZXN0aW9uT3B0aW9uc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBpbmcgPSAoKSA9PiB7XG4gIGNvbnN0IHF1ZXN0aW9uVHlwZSA9IF8uc2FtcGxlKHF1ZXN0aW9uVHlwZXMpO1xuICByZXR1cm4gbmV3IFBpbmcoe1xuICAgIGRhdGE6IHtcbiAgICAgIHRleHQ6IGZha2VyLmhhY2tlci5waHJhc2UoKSxcbiAgICAgIC4uLmRlZmF1bHRRdWVzdGlvbk9wdGlvbnNbcXVlc3Rpb25UeXBlXVxuICAgIH0sXG4gICAgcXVlc3Rpb25UeXBlLFxuICAgIGtpbmQ6IF8uc2FtcGxlKHBpbmdLaW5kcyksXG4gICAgdHlwZTogXy5zYW1wbGUocGluZ1R5cGVzKSxcbiAgICB0dGw6IGZha2VyLnJhbmRvbS5udW1iZXIoe1xuICAgICAgJ21pbic6IDEwLFxuICAgICAgJ21heCc6IDkwXG4gICAgfSksXG4gICAgdGFnczogW11cbiAgfSkuc2F2ZSgpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlUGluZ3MgPSBuID0+IHtcbiAgY29uc3QgcGluZ3MgPSBbXTtcbiAgd2hpbGUobi0tKSB7XG4gICAgcGluZ3MucHVzaChjcmVhdGVQaW5nKCkpO1xuICB9XG4gIHJldHVybiBQcm9taXNlLmFsbChwaW5ncyk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pings.js"
      ],
      "names": [
        "createPing",
        "questionType",
        "_",
        "sample",
        "questionTypes",
        "Ping",
        "data",
        "text",
        "faker",
        "hacker",
        "phrase",
        "defaultQuestionOptions",
        "kind",
        "pingKinds",
        "type",
        "pingTypes",
        "ttl",
        "random",
        "number",
        "tags",
        "save",
        "createPings",
        "pings",
        "n",
        "push",
        "Promise",
        "all"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,kCAAa,SAAbA,UAAa,GAAM;AAC9B,MAAMC,eAAeC,iBAAEC,MAAF,CAASC,wBAAT,CAArB;AACA,SAAO,IAAIC,cAAJ,CAAS;AACdC;AACEC,YAAMC,gBAAMC,MAAN,CAAaC,MAAb;AADR,OAEKC,kCAAuBV,YAAvB,CAFL,CADc;AAKdA,8BALc;AAMdW,UAAMV,iBAAEC,MAAF,CAASU,oBAAT,CANQ;AAOdC,UAAMZ,iBAAEC,MAAF,CAASY,oBAAT,CAPQ;AAQdC,SAAKR,gBAAMS,MAAN,CAAaC,MAAb,CAAoB;AACvB,aAAO,EADgB;AAEvB,aAAO;AAFgB,KAApB,CARS;AAYdC,UAAM;AAZQ,GAAT,EAaJC,IAbI,EAAP;AAcD,CAhBM;;AAkBA,IAAMC,oCAAc,SAAdA,WAAc,IAAK;AAC9B,MAAMC,QAAQ,EAAd;AACA,SAAMC,GAAN,EAAW;AACTD,UAAME,IAAN,CAAWxB,YAAX;AACD;AACD,SAAOyB,QAAQC,GAAR,CAAYJ,KAAZ,CAAP;AACD,CANM",
      "file": "pings.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "sourcesContent": [
        "import Ping from '../models/ping';\nimport faker from 'faker';\nimport {pingTypes, pingKinds, questionTypes, defaultQuestionOptions} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createPing = () => {\n  const questionType = _.sample(questionTypes);\n  return new Ping({\n    data: {\n      text: faker.hacker.phrase(),\n      ...defaultQuestionOptions[questionType]\n    },\n    questionType,\n    kind: _.sample(pingKinds),\n    type: _.sample(pingTypes),\n    ttl: faker.random.number({\n      'min': 10,\n      'max': 90\n    }),\n    tags: []\n  }).save();\n}\n\nexport const createPings = n => {\n  const pings = [];\n  while(n--) {\n    pings.push(createPing());\n  }\n  return Promise.all(pings);\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/seeds/prompts.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Ping"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "promptTypes"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "promptTypes",
                "local": "promptTypes"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createPrompt",
            "populatePrompt"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createPrompt",
              "exported": "createPrompt"
            },
            {
              "kind": "local",
              "local": "populatePrompt",
              "exported": "populatePrompt"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/seeds/prompts.js",
      "filenameRelative": "/home/tanuj/delta-api/src/seeds/prompts.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompts.js",
      "sourceFileName": "prompts.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompts"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.populatePrompt = exports.createPrompt = undefined;\n\nvar _prompt = require('../models/prompt');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _constants = require('../util/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar createPrompt = exports.createPrompt = function createPrompt() {\n  return new _prompt2.default({\n    name: _faker2.default.company.catchPhrase(),\n    duration: _faker2.default.random.number({\n      'min': 30,\n      'max': 180\n    }),\n    tags: [],\n    type: _lodash2.default.sample(_constants.promptTypes),\n    pings: []\n  }).save();\n};\n\nvar populatePrompt = exports.populatePrompt = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(prompt) {\n    var pings;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _ping2.default.aggregate([{\n              $sample: {\n                size: 5\n              }\n            }]);\n\n          case 2:\n            pings = _context.sent;\n\n            pings.forEach(function (ping) {\n              return prompt.pings.push(ping);\n            });\n            return _context.abrupt('return', prompt.save());\n\n          case 5:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function populatePrompt(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdHMuanMiXSwibmFtZXMiOlsiY3JlYXRlUHJvbXB0IiwiUHJvbXB0IiwibmFtZSIsImZha2VyIiwiY29tcGFueSIsImNhdGNoUGhyYXNlIiwiZHVyYXRpb24iLCJyYW5kb20iLCJudW1iZXIiLCJ0YWdzIiwidHlwZSIsIl8iLCJzYW1wbGUiLCJwcm9tcHRUeXBlcyIsInBpbmdzIiwic2F2ZSIsInBvcHVsYXRlUHJvbXB0IiwicHJvbXB0IiwiUGluZyIsImFnZ3JlZ2F0ZSIsIiRzYW1wbGUiLCJzaXplIiwiZm9yRWFjaCIsInB1c2giLCJwaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7Ozs7O0FBRU8sSUFBTUEsc0NBQWUsU0FBZkEsWUFBZTtBQUFBLFNBQU0sSUFBSUMsZ0JBQUosQ0FBVztBQUMzQ0MsVUFBTUMsZ0JBQU1DLE9BQU4sQ0FBY0MsV0FBZCxFQURxQztBQUUzQ0MsY0FBVUgsZ0JBQU1JLE1BQU4sQ0FBYUMsTUFBYixDQUFvQjtBQUM1QixhQUFPLEVBRHFCO0FBRTVCLGFBQU87QUFGcUIsS0FBcEIsQ0FGaUM7QUFNM0NDLFVBQU0sRUFOcUM7QUFPM0NDLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLHNCQUFULENBUHFDO0FBUTNDQyxXQUFPO0FBUm9DLEdBQVgsRUFTL0JDLElBVCtCLEVBQU47QUFBQSxDQUFyQjs7QUFXQSxJQUFNQztBQUFBLHFFQUFpQixpQkFBTUMsTUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNSQyxlQUFLQyxTQUFMLENBQWUsQ0FBQztBQUNsQ0MsdUJBQVM7QUFDUEMsc0JBQU07QUFEQztBQUR5QixhQUFELENBQWYsQ0FEUTs7QUFBQTtBQUN0QlAsaUJBRHNCOztBQU01QkEsa0JBQU1RLE9BQU4sQ0FBYztBQUFBLHFCQUFRTCxPQUFPSCxLQUFQLENBQWFTLElBQWIsQ0FBa0JDLElBQWxCLENBQVI7QUFBQSxhQUFkO0FBTjRCLDZDQU9yQlAsT0FBT0YsSUFBUCxFQVBxQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOIiwiZmlsZSI6InByb21wdHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9tcHQgZnJvbSAnLi4vbW9kZWxzL3Byb21wdCc7XG5pbXBvcnQgUGluZyBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5pbXBvcnQgZmFrZXIgZnJvbSAnZmFrZXInO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuaW1wb3J0IHtwcm9tcHRUeXBlc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUHJvbXB0ID0gKCkgPT4gbmV3IFByb21wdCh7XG4gIG5hbWU6IGZha2VyLmNvbXBhbnkuY2F0Y2hQaHJhc2UoKSxcbiAgZHVyYXRpb246IGZha2VyLnJhbmRvbS5udW1iZXIoe1xuICAgICdtaW4nOiAzMCxcbiAgICAnbWF4JzogMTgwXG4gIH0pLFxuICB0YWdzOiBbXSxcbiAgdHlwZTogXy5zYW1wbGUocHJvbXB0VHlwZXMpLFxuICBwaW5nczogW11cbn0pLnNhdmUoKVxuXG5leHBvcnQgY29uc3QgcG9wdWxhdGVQcm9tcHQgPSBhc3luYyBwcm9tcHQgPT57XG4gIGNvbnN0IHBpbmdzID0gYXdhaXQgUGluZy5hZ2dyZWdhdGUoW3tcbiAgICAkc2FtcGxlOiB7XG4gICAgICBzaXplOiA1XG4gICAgfVxuICB9XSk7XG4gIHBpbmdzLmZvckVhY2gocGluZyA9PiBwcm9tcHQucGluZ3MucHVzaChwaW5nKSk7XG4gIHJldHVybiBwcm9tcHQuc2F2ZSgpO1xufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompts.js"
      ],
      "names": [
        "createPrompt",
        "Prompt",
        "name",
        "faker",
        "company",
        "catchPhrase",
        "duration",
        "random",
        "number",
        "tags",
        "type",
        "_",
        "sample",
        "promptTypes",
        "pings",
        "save",
        "populatePrompt",
        "prompt",
        "Ping",
        "aggregate",
        "$sample",
        "size",
        "forEach",
        "push",
        "ping"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEO,IAAMA,sCAAe,SAAfA,YAAe;AAAA,SAAM,IAAIC,gBAAJ,CAAW;AAC3CC,UAAMC,gBAAMC,OAAN,CAAcC,WAAd,EADqC;AAE3CC,cAAUH,gBAAMI,MAAN,CAAaC,MAAb,CAAoB;AAC5B,aAAO,EADqB;AAE5B,aAAO;AAFqB,KAApB,CAFiC;AAM3CC,UAAM,EANqC;AAO3CC,UAAMC,iBAAEC,MAAF,CAASC,sBAAT,CAPqC;AAQ3CC,WAAO;AARoC,GAAX,EAS/BC,IAT+B,EAAN;AAAA,CAArB;;AAWA,IAAMC;AAAA,qEAAiB,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,eAAKC,SAAL,CAAe,CAAC;AAClCC,uBAAS;AACPC,sBAAM;AADC;AADyB,aAAD,CAAf,CADQ;;AAAA;AACtBP,iBADsB;;AAM5BA,kBAAMQ,OAAN,CAAc;AAAA,qBAAQL,OAAOH,KAAP,CAAaS,IAAb,CAAkBC,IAAlB,CAAR;AAAA,aAAd;AAN4B,6CAOrBP,OAAOF,IAAP,EAPqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN",
      "file": "prompts.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "sourcesContent": [
        "import Prompt from '../models/prompt';\nimport Ping from '../models/ping';\nimport faker from 'faker';\nimport _ from 'lodash';\n\nimport {promptTypes} from '../util/constants';\n\nexport const createPrompt = () => new Prompt({\n  name: faker.company.catchPhrase(),\n  duration: faker.random.number({\n    'min': 30,\n    'max': 180\n  }),\n  tags: [],\n  type: _.sample(promptTypes),\n  pings: []\n}).save()\n\nexport const populatePrompt = async prompt =>{\n  const pings = await Ping.aggregate([{\n    $sample: {\n      size: 5\n    }\n  }]);\n  pings.forEach(ping => prompt.pings.push(ping));\n  return prompt.save();\n}"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/seeds/cohorts.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "../util/createTeams",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createTeams"
              }
            ]
          },
          {
            "source": "./users",
            "imported": [
              "createStudent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createStudent",
                "local": "createStudent"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createCohort",
            "populateCohort"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createCohort",
              "exported": "createCohort"
            },
            {
              "kind": "local",
              "local": "populateCohort",
              "exported": "populateCohort"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/seeds/cohorts.js",
      "filenameRelative": "/home/tanuj/delta-api/src/seeds/cohorts.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohorts.js",
      "sourceFileName": "cohorts.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohorts"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.populateCohort = exports.createCohort = undefined;\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _prompt = require('../models/prompt');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _createTeams = require('../util/createTeams');\n\nvar _createTeams2 = _interopRequireDefault(_createTeams);\n\nvar _users = require('./users');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar createCohort = exports.createCohort = function createCohort() {\n  return new _cohort2.default({\n    startDate: _faker2.default.date.between('2018-03-01', '2018-05-01'),\n    endDate: _faker2.default.date.future(),\n    name: _faker2.default.commerce.productName()\n  }).save();\n};\n\nvar getPhase = function getPhase(day) {\n  return day > 20 ? day > 45 ? \"Deep Focus\" : \" Focus\" : \"Core\";\n};\n\n// todo: calculate date from cohort\nvar createDay = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n    var cohort = _ref2.cohort,\n        students = _ref2.students,\n        day = _ref2.day;\n    var phase, date, prompts, pingpongs, timeline;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            phase = getPhase(day);\n            date = new Date(cohort.startDate.valueOf());\n\n            date.setDate(cohort.startDate.getDate() + day - 1);\n\n            // let pairs = createTeams(students, 2);\n\n            // get a list of prompts and populate them with their pings\n            _context.next = 5;\n            return _prompt2.default.aggregate([{\n              $sample: {\n                size: 3\n              }\n            }]);\n\n          case 5:\n            prompts = _context.sent;\n            pingpongs = [];\n            timeline = prompts.map(function (prompt) {\n\n              var startTime = new Date(date.valueOf());\n              startTime.setSeconds(0);\n              startTime.setMinutes(45);\n              startTime.setHours(11);\n\n              // let triggerTime = new Date(startTime.valueOf() + prompt.duration);\n              // for(let student of students) {\n              //   for(let ping of prompt.pings) {\n              //     pingpongs.push({\n              //       triggerTime,\n              //       ping,\n              //       by: student,\n              //       to: _.sample(students),\n              //     });\n              //   }\n              // }\n\n              return {\n                prompt: prompt._id,\n                startTime: startTime\n              };\n            });\n            return _context.abrupt('return', new _day2.default({ cohort: cohort._id, day: day, phase: phase, date: date, timeline: timeline }).save());\n\n          case 9:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function createDay(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// todo: this logic needs to be associated with Cohort model itself\nvar populateCohort = exports.populateCohort = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref4) {\n    var cohort = _ref4.cohort,\n        studentCount = _ref4.studentCount,\n        dayCount = _ref4.dayCount;\n    var students, i, student, queries, day;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            students = [];\n            i = 0;\n\n          case 2:\n            if (!(i < studentCount)) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 5;\n            return (0, _users.createStudent)(cohort._id);\n\n          case 5:\n            student = _context2.sent;\n\n            students.push(student);\n\n          case 7:\n            i++;\n            _context2.next = 2;\n            break;\n\n          case 10:\n            // cohort.spotters = createTeams(students, 2);\n            queries = [cohort.save()];\n\n            for (day = 1; day < dayCount; day++) {\n              queries.push(createDay({ cohort: cohort, students: students, day: day }));\n            }\n            return _context2.abrupt('return', Promise.all(queries));\n\n          case 13:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }));\n\n  return function populateCohort(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydHMuanMiXSwibmFtZXMiOlsiY3JlYXRlQ29ob3J0IiwiQ29ob3J0Iiwic3RhcnREYXRlIiwiZmFrZXIiLCJkYXRlIiwiYmV0d2VlbiIsImVuZERhdGUiLCJmdXR1cmUiLCJuYW1lIiwiY29tbWVyY2UiLCJwcm9kdWN0TmFtZSIsInNhdmUiLCJnZXRQaGFzZSIsImRheSIsImNyZWF0ZURheSIsImNvaG9ydCIsInN0dWRlbnRzIiwicGhhc2UiLCJEYXRlIiwidmFsdWVPZiIsInNldERhdGUiLCJnZXREYXRlIiwiUHJvbXB0IiwiYWdncmVnYXRlIiwiJHNhbXBsZSIsInNpemUiLCJwcm9tcHRzIiwicGluZ3BvbmdzIiwidGltZWxpbmUiLCJtYXAiLCJzdGFydFRpbWUiLCJzZXRTZWNvbmRzIiwic2V0TWludXRlcyIsInNldEhvdXJzIiwicHJvbXB0IiwiX2lkIiwiRGF5IiwicG9wdWxhdGVDb2hvcnQiLCJzdHVkZW50Q291bnQiLCJkYXlDb3VudCIsImkiLCJzdHVkZW50IiwicHVzaCIsInF1ZXJpZXMiLCJQcm9taXNlIiwiYWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLHNDQUFlLFNBQWZBLFlBQWU7QUFBQSxTQUFNLElBQUlDLGdCQUFKLENBQVc7QUFDM0NDLGVBQVdDLGdCQUFNQyxJQUFOLENBQVdDLE9BQVgsQ0FBbUIsWUFBbkIsRUFBaUMsWUFBakMsQ0FEZ0M7QUFFM0NDLGFBQVNILGdCQUFNQyxJQUFOLENBQVdHLE1BQVgsRUFGa0M7QUFHM0NDLFVBQU1MLGdCQUFNTSxRQUFOLENBQWVDLFdBQWY7QUFIcUMsR0FBWCxFQUkvQkMsSUFKK0IsRUFBTjtBQUFBLENBQXJCOztBQU9QLElBQU1DLFdBQVcsU0FBWEEsUUFBVztBQUFBLFNBQVFDLE1BQU0sRUFBTixHQUFZQSxNQUFNLEVBQU4sR0FBVyxZQUFYLEdBQTBCLFFBQXRDLEdBQWtELE1BQTFEO0FBQUEsQ0FBakI7O0FBRUE7QUFDQSxJQUFNQztBQUFBLHFFQUFZO0FBQUEsUUFBUUMsTUFBUixTQUFRQSxNQUFSO0FBQUEsUUFBZ0JDLFFBQWhCLFNBQWdCQSxRQUFoQjtBQUFBLFFBQTBCSCxHQUExQixTQUEwQkEsR0FBMUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRVZJLGlCQUZVLEdBRUZMLFNBQVNDLEdBQVQsQ0FGRTtBQUdaVCxnQkFIWSxHQUdMLElBQUljLElBQUosQ0FBU0gsT0FBT2IsU0FBUCxDQUFpQmlCLE9BQWpCLEVBQVQsQ0FISzs7QUFJaEJmLGlCQUFLZ0IsT0FBTCxDQUFhTCxPQUFPYixTQUFQLENBQWlCbUIsT0FBakIsS0FBNkJSLEdBQTdCLEdBQW1DLENBQWhEOztBQUVBOztBQUVBO0FBUmdCO0FBQUEsbUJBU0lTLGlCQUFPQyxTQUFQLENBQWlCLENBQUM7QUFDcENDLHVCQUFTO0FBQ1BDLHNCQUFNO0FBREM7QUFEMkIsYUFBRCxDQUFqQixDQVRKOztBQUFBO0FBU1pDLG1CQVRZO0FBZVpDLHFCQWZZLEdBZUEsRUFmQTtBQWdCWkMsb0JBaEJZLEdBZ0JERixRQUFRRyxHQUFSLENBQVksa0JBQVU7O0FBRW5DLGtCQUFJQyxZQUFZLElBQUlaLElBQUosQ0FBU2QsS0FBS2UsT0FBTCxFQUFULENBQWhCO0FBQ0FXLHdCQUFVQyxVQUFWLENBQXFCLENBQXJCO0FBQ0FELHdCQUFVRSxVQUFWLENBQXFCLEVBQXJCO0FBQ0FGLHdCQUFVRyxRQUFWLENBQW1CLEVBQW5COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQU87QUFDTEMsd0JBQVFBLE9BQU9DLEdBRFY7QUFFTEw7QUFGSyxlQUFQO0FBSUQsYUF2QmMsQ0FoQkM7QUFBQSw2Q0F5Q1QsSUFBSU0sYUFBSixDQUFRLEVBQUNyQixRQUFRQSxPQUFPb0IsR0FBaEIsRUFBcUJ0QixRQUFyQixFQUEwQkksWUFBMUIsRUFBaUNiLFVBQWpDLEVBQXVDd0Isa0JBQXZDLEVBQVIsRUFBMERqQixJQUExRCxFQXpDUzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQU47O0FBNkNBO0FBQ08sSUFBTTBCO0FBQUEsc0VBQWlCO0FBQUEsUUFBUXRCLE1BQVIsU0FBUUEsTUFBUjtBQUFBLFFBQWdCdUIsWUFBaEIsU0FBZ0JBLFlBQWhCO0FBQUEsUUFBOEJDLFFBQTlCLFNBQThCQSxRQUE5QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDeEJ2QixvQkFEd0IsR0FDYixFQURhO0FBRW5Cd0IsYUFGbUIsR0FFZixDQUZlOztBQUFBO0FBQUEsa0JBRVpBLElBQUlGLFlBRlE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxtQkFHTiwwQkFBY3ZCLE9BQU9vQixHQUFyQixDQUhNOztBQUFBO0FBR3RCTSxtQkFIc0I7O0FBSTFCekIscUJBQVMwQixJQUFULENBQWNELE9BQWQ7O0FBSjBCO0FBRU1ELGVBRk47QUFBQTtBQUFBOztBQUFBO0FBTTVCO0FBQ0lHLG1CQVB3QixHQU9kLENBQUM1QixPQUFPSixJQUFQLEVBQUQsQ0FQYzs7QUFRNUIsaUJBQVNFLEdBQVQsR0FBZSxDQUFmLEVBQWtCQSxNQUFNMEIsUUFBeEIsRUFBa0MxQixLQUFsQyxFQUF5QztBQUN2QzhCLHNCQUFRRCxJQUFSLENBQWE1QixVQUFVLEVBQUNDLGNBQUQsRUFBU0Msa0JBQVQsRUFBbUJILFFBQW5CLEVBQVYsQ0FBYjtBQUNEO0FBVjJCLDhDQVdyQitCLFFBQVFDLEdBQVIsQ0FBWUYsT0FBWixDQVhxQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOIiwiZmlsZSI6ImNvaG9ydHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2hvcnQgZnJvbSAnLi4vbW9kZWxzL2NvaG9ydCc7XG5pbXBvcnQgRGF5IGZyb20gJy4uL21vZGVscy9kYXknO1xuaW1wb3J0IFByb21wdCBmcm9tICcuLi9tb2RlbHMvcHJvbXB0JztcbmltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgY3JlYXRlVGVhbXMgZnJvbSAnLi4vdXRpbC9jcmVhdGVUZWFtcyc7XG5pbXBvcnQge2NyZWF0ZVN0dWRlbnR9IGZyb20gJy4vdXNlcnMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlQ29ob3J0ID0gKCkgPT4gbmV3IENvaG9ydCh7XG4gIHN0YXJ0RGF0ZTogZmFrZXIuZGF0ZS5iZXR3ZWVuKCcyMDE4LTAzLTAxJywgJzIwMTgtMDUtMDEnKSxcbiAgZW5kRGF0ZTogZmFrZXIuZGF0ZS5mdXR1cmUoKSxcbiAgbmFtZTogZmFrZXIuY29tbWVyY2UucHJvZHVjdE5hbWUoKVxufSkuc2F2ZSgpXG5cblxuY29uc3QgZ2V0UGhhc2UgPSBkYXkgPT4gKGRheSA+IDIwID8gKGRheSA+IDQ1ID8gXCJEZWVwIEZvY3VzXCIgOiBcIiBGb2N1c1wiKSA6IFwiQ29yZVwiKTtcblxuLy8gdG9kbzogY2FsY3VsYXRlIGRhdGUgZnJvbSBjb2hvcnRcbmNvbnN0IGNyZWF0ZURheSA9IGFzeW5jICh7Y29ob3J0LCBzdHVkZW50cywgZGF5fSkgPT4ge1xuXG4gIGNvbnN0IHBoYXNlID0gZ2V0UGhhc2UoZGF5KTtcbiAgbGV0IGRhdGUgPSBuZXcgRGF0ZShjb2hvcnQuc3RhcnREYXRlLnZhbHVlT2YoKSk7XG4gIGRhdGUuc2V0RGF0ZShjb2hvcnQuc3RhcnREYXRlLmdldERhdGUoKSArIGRheSAtIDEpO1xuXG4gIC8vIGxldCBwYWlycyA9IGNyZWF0ZVRlYW1zKHN0dWRlbnRzLCAyKTtcblxuICAvLyBnZXQgYSBsaXN0IG9mIHByb21wdHMgYW5kIHBvcHVsYXRlIHRoZW0gd2l0aCB0aGVpciBwaW5nc1xuICBsZXQgcHJvbXB0cyA9IGF3YWl0IFByb21wdC5hZ2dyZWdhdGUoW3tcbiAgICAkc2FtcGxlOiB7XG4gICAgICBzaXplOiAzXG4gICAgfVxuICB9XSk7XG5cbiAgbGV0IHBpbmdwb25ncyA9IFtdO1xuICBsZXQgdGltZWxpbmUgPSBwcm9tcHRzLm1hcChwcm9tcHQgPT4ge1xuXG4gICAgbGV0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKGRhdGUudmFsdWVPZigpKTtcbiAgICBzdGFydFRpbWUuc2V0U2Vjb25kcygwKTtcbiAgICBzdGFydFRpbWUuc2V0TWludXRlcyg0NSk7XG4gICAgc3RhcnRUaW1lLnNldEhvdXJzKDExKTtcblxuICAgIC8vIGxldCB0cmlnZ2VyVGltZSA9IG5ldyBEYXRlKHN0YXJ0VGltZS52YWx1ZU9mKCkgKyBwcm9tcHQuZHVyYXRpb24pO1xuICAgIC8vIGZvcihsZXQgc3R1ZGVudCBvZiBzdHVkZW50cykge1xuICAgIC8vICAgZm9yKGxldCBwaW5nIG9mIHByb21wdC5waW5ncykge1xuICAgIC8vICAgICBwaW5ncG9uZ3MucHVzaCh7XG4gICAgLy8gICAgICAgdHJpZ2dlclRpbWUsXG4gICAgLy8gICAgICAgcGluZyxcbiAgICAvLyAgICAgICBieTogc3R1ZGVudCxcbiAgICAvLyAgICAgICB0bzogXy5zYW1wbGUoc3R1ZGVudHMpLFxuICAgIC8vICAgICB9KTtcbiAgICAvLyAgIH1cbiAgICAvLyB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJvbXB0OiBwcm9tcHQuX2lkLFxuICAgICAgc3RhcnRUaW1lXG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gbmV3IERheSh7Y29ob3J0OiBjb2hvcnQuX2lkLCBkYXksIHBoYXNlLCBkYXRlLCB0aW1lbGluZX0pLnNhdmUoKTtcblxufVxuXG4vLyB0b2RvOiB0aGlzIGxvZ2ljIG5lZWRzIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCBDb2hvcnQgbW9kZWwgaXRzZWxmXG5leHBvcnQgY29uc3QgcG9wdWxhdGVDb2hvcnQgPSBhc3luYyAoe2NvaG9ydCwgc3R1ZGVudENvdW50LCBkYXlDb3VudH0pID0+IHtcbiAgbGV0IHN0dWRlbnRzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3R1ZGVudENvdW50OyBpKyspIHtcbiAgICBsZXQgc3R1ZGVudCA9IGF3YWl0IGNyZWF0ZVN0dWRlbnQoY29ob3J0Ll9pZCk7XG4gICAgc3R1ZGVudHMucHVzaChzdHVkZW50KTtcbiAgfVxuICAvLyBjb2hvcnQuc3BvdHRlcnMgPSBjcmVhdGVUZWFtcyhzdHVkZW50cywgMik7XG4gIGxldCBxdWVyaWVzID0gW2NvaG9ydC5zYXZlKCldO1xuICBmb3IgKHZhciBkYXkgPSAxOyBkYXkgPCBkYXlDb3VudDsgZGF5KyspIHtcbiAgICBxdWVyaWVzLnB1c2goY3JlYXRlRGF5KHtjb2hvcnQsIHN0dWRlbnRzLCBkYXl9KSk7XG4gIH1cbiAgcmV0dXJuIFByb21pc2UuYWxsKHF1ZXJpZXMpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohorts.js"
      ],
      "names": [
        "createCohort",
        "Cohort",
        "startDate",
        "faker",
        "date",
        "between",
        "endDate",
        "future",
        "name",
        "commerce",
        "productName",
        "save",
        "getPhase",
        "day",
        "createDay",
        "cohort",
        "students",
        "phase",
        "Date",
        "valueOf",
        "setDate",
        "getDate",
        "Prompt",
        "aggregate",
        "$sample",
        "size",
        "prompts",
        "pingpongs",
        "timeline",
        "map",
        "startTime",
        "setSeconds",
        "setMinutes",
        "setHours",
        "prompt",
        "_id",
        "Day",
        "populateCohort",
        "studentCount",
        "dayCount",
        "i",
        "student",
        "push",
        "queries",
        "Promise",
        "all"
      ],
      "mappings": "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",
      "file": "cohorts.js",
      "sourceRoot": "/home/tanuj/delta-api/src/seeds",
      "sourcesContent": [
        "import Cohort from '../models/cohort';\nimport Day from '../models/day';\nimport Prompt from '../models/prompt';\nimport faker from 'faker';\nimport _ from 'lodash';\n\nimport createTeams from '../util/createTeams';\nimport {createStudent} from './users';\n\nexport const createCohort = () => new Cohort({\n  startDate: faker.date.between('2018-03-01', '2018-05-01'),\n  endDate: faker.date.future(),\n  name: faker.commerce.productName()\n}).save()\n\n\nconst getPhase = day => (day > 20 ? (day > 45 ? \"Deep Focus\" : \" Focus\") : \"Core\");\n\n// todo: calculate date from cohort\nconst createDay = async ({cohort, students, day}) => {\n\n  const phase = getPhase(day);\n  let date = new Date(cohort.startDate.valueOf());\n  date.setDate(cohort.startDate.getDate() + day - 1);\n\n  // let pairs = createTeams(students, 2);\n\n  // get a list of prompts and populate them with their pings\n  let prompts = await Prompt.aggregate([{\n    $sample: {\n      size: 3\n    }\n  }]);\n\n  let pingpongs = [];\n  let timeline = prompts.map(prompt => {\n\n    let startTime = new Date(date.valueOf());\n    startTime.setSeconds(0);\n    startTime.setMinutes(45);\n    startTime.setHours(11);\n\n    // let triggerTime = new Date(startTime.valueOf() + prompt.duration);\n    // for(let student of students) {\n    //   for(let ping of prompt.pings) {\n    //     pingpongs.push({\n    //       triggerTime,\n    //       ping,\n    //       by: student,\n    //       to: _.sample(students),\n    //     });\n    //   }\n    // }\n\n    return {\n      prompt: prompt._id,\n      startTime\n    }\n  });\n\n  return new Day({cohort: cohort._id, day, phase, date, timeline}).save();\n\n}\n\n// todo: this logic needs to be associated with Cohort model itself\nexport const populateCohort = async ({cohort, studentCount, dayCount}) => {\n  let students = [];\n  for (let i = 0; i < studentCount; i++) {\n    let student = await createStudent(cohort._id);\n    students.push(student);\n  }\n  // cohort.spotters = createTeams(students, 2);\n  let queries = [cohort.save()];\n  for (var day = 1; day < dayCount; day++) {\n    queries.push(createDay({cohort, students, day}));\n  }\n  return Promise.all(queries);\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/createTeams.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/createTeams.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/createTeams.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createTeams.js",
      "sourceFileName": "createTeams.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createTeams"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (students, size) {\n  return _lodash2.default.chunk(students, size).map(function (students) {\n    return {\n      teamName: _faker2.default.commerce.productName(),\n      students: students.map(function (s) {\n        return s._id;\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZVRlYW1zLmpzIl0sIm5hbWVzIjpbInN0dWRlbnRzIiwic2l6ZSIsIl8iLCJjaHVuayIsIm1hcCIsInRlYW1OYW1lIiwiZmFrZXIiLCJjb21tZXJjZSIsInByb2R1Y3ROYW1lIiwicyIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlLFVBQUNBLFFBQUQsRUFBV0MsSUFBWDtBQUFBLFNBQW9CQyxpQkFBRUMsS0FBRixDQUFRSCxRQUFSLEVBQWtCQyxJQUFsQixFQUNsQ0csR0FEa0MsQ0FDOUI7QUFBQSxXQUFhO0FBQ2hCQyxnQkFBVUMsZ0JBQU1DLFFBQU4sQ0FBZUMsV0FBZixFQURNO0FBRWhCUixnQkFBVUEsU0FBU0ksR0FBVCxDQUFhO0FBQUEsZUFBS0ssRUFBRUMsR0FBUDtBQUFBLE9BQWI7QUFGTSxLQUFiO0FBQUEsR0FEOEIsQ0FBcEI7QUFBQSxDIiwiZmlsZSI6ImNyZWF0ZVRlYW1zLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5leHBvcnQgZGVmYXVsdCAoc3R1ZGVudHMsIHNpemUpID0+IF8uY2h1bmsoc3R1ZGVudHMsIHNpemUpXG4ubWFwKHN0dWRlbnRzID0+ICh7XG4gIHRlYW1OYW1lOiBmYWtlci5jb21tZXJjZS5wcm9kdWN0TmFtZSgpLFxuICBzdHVkZW50czogc3R1ZGVudHMubWFwKHMgPT4gcy5faWQpLFxufSkpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createTeams.js"
      ],
      "names": [
        "students",
        "size",
        "_",
        "chunk",
        "map",
        "teamName",
        "faker",
        "commerce",
        "productName",
        "s",
        "_id"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,QAAD,EAAWC,IAAX;AAAA,SAAoBC,iBAAEC,KAAF,CAAQH,QAAR,EAAkBC,IAAlB,EAClCG,GADkC,CAC9B;AAAA,WAAa;AAChBC,gBAAUC,gBAAMC,QAAN,CAAeC,WAAf,EADM;AAEhBR,gBAAUA,SAASI,GAAT,CAAa;AAAA,eAAKK,EAAEC,GAAP;AAAA,OAAb;AAFM,KAAb;AAAA,GAD8B,CAApB;AAAA,C",
      "file": "createTeams.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "import faker from 'faker';\nimport _ from 'lodash';\n\nexport default (students, size) => _.chunk(students, size)\n.map(students => ({\n  teamName: faker.commerce.productName(),\n  students: students.map(s => s._id),\n}));\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/util/dbConnect.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "dotenv/config",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dotenv"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/util/dbConnect.js",
      "filenameRelative": "/home/tanuj/delta-api/src/util/dbConnect.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbConnect.js",
      "sourceFileName": "dbConnect.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbConnect"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('dotenv/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _process$env = process.env,\n    NODE_ENV = _process$env.NODE_ENV,\n    MONGO_HOST = _process$env.MONGO_HOST,\n    dbName = _process$env.MONGO_DB,\n    user = _process$env.MONGO_USER,\n    pass = _process$env.MONGO_PWD;\n\n\n_mongoose2.default.set('debug', NODE_ENV === 'development');\n_mongoose2.default.Promise = Promise;\nconsole.log(MONGO_HOST);\n\nexports.default = function () {\n  return _mongoose2.default.connect(MONGO_HOST, { user: user, pass: pass });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJNT05HT19IT1NUIiwiZGJOYW1lIiwiTU9OR09fREIiLCJ1c2VyIiwiTU9OR09fVVNFUiIsInBhc3MiLCJNT05HT19QV0QiLCJtb25nb29zZSIsInNldCIsIlByb21pc2UiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O21CQUNvRkEsUUFBUUMsRztJQUFyRkMsUSxnQkFBQUEsUTtJQUFVQyxVLGdCQUFBQSxVO0lBQXNCQyxNLGdCQUFWQyxRO0lBQThCQyxJLGdCQUFaQyxVO0lBQTZCQyxJLGdCQUFYQyxTOzs7QUFFakVDLG1CQUFTQyxHQUFULENBQWEsT0FBYixFQUFzQlQsYUFBYSxhQUFuQztBQUNBUSxtQkFBU0UsT0FBVCxHQUFtQkEsT0FBbkI7QUFDQUMsUUFBUUMsR0FBUixDQUFZWCxVQUFaOztrQkFDZTtBQUFBLFNBQU1PLG1CQUFTSyxPQUFULENBQWlCWixVQUFqQixFQUE2QixFQUFDRyxVQUFELEVBQU9FLFVBQVAsRUFBN0IsQ0FBTjtBQUFBLEMiLCJmaWxlIjoiZGJDb25uZWN0LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52L2NvbmZpZyc7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge05PREVfRU5WLCBNT05HT19IT1NULCBNT05HT19EQjogZGJOYW1lLCBNT05HT19VU0VSOiB1c2VyLCBNT05HT19QV0Q6IHBhc3N9ID0gcHJvY2Vzcy5lbnY7XG5cbm1vbmdvb3NlLnNldCgnZGVidWcnLCBOT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jyk7XG5tb25nb29zZS5Qcm9taXNlID0gUHJvbWlzZTtcbmNvbnNvbGUubG9nKE1PTkdPX0hPU1QpO1xuZXhwb3J0IGRlZmF1bHQgKCkgPT4gbW9uZ29vc2UuY29ubmVjdChNT05HT19IT1NULCB7dXNlciwgcGFzc30pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbConnect.js"
      ],
      "names": [
        "process",
        "env",
        "NODE_ENV",
        "MONGO_HOST",
        "dbName",
        "MONGO_DB",
        "user",
        "MONGO_USER",
        "pass",
        "MONGO_PWD",
        "mongoose",
        "set",
        "Promise",
        "console",
        "log",
        "connect"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;mBACoFA,QAAQC,G;IAArFC,Q,gBAAAA,Q;IAAUC,U,gBAAAA,U;IAAsBC,M,gBAAVC,Q;IAA8BC,I,gBAAZC,U;IAA6BC,I,gBAAXC,S;;;AAEjEC,mBAASC,GAAT,CAAa,OAAb,EAAsBT,aAAa,aAAnC;AACAQ,mBAASE,OAAT,GAAmBA,OAAnB;AACAC,QAAQC,GAAR,CAAYX,UAAZ;;kBACe;AAAA,SAAMO,mBAASK,OAAT,CAAiBZ,UAAjB,EAA6B,EAACG,UAAD,EAAOE,UAAP,EAA7B,CAAN;AAAA,C",
      "file": "dbConnect.js",
      "sourceRoot": "/home/tanuj/delta-api/src/util",
      "sourcesContent": [
        "import dotenv from 'dotenv/config';\nimport mongoose from 'mongoose';\nconst {NODE_ENV, MONGO_HOST, MONGO_DB: dbName, MONGO_USER: user, MONGO_PWD: pass} = process.env;\n\nmongoose.set('debug', NODE_ENV === 'development');\nmongoose.Promise = Promise;\nconsole.log(MONGO_HOST);\nexport default () => mongoose.connect(MONGO_HOST, {user, pass});\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/database.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/database.js",
      "filenameRelative": "/home/tanuj/delta-api/src/database.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "database.js",
      "sourceFileName": "database.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "database"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000\n  }\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsImFjcXVpcmUiLCJpZGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQ0EsSUFBTUEsWUFBWSxJQUFJQyxtQkFBSixDQUFjLFVBQWQsRUFBeUIsVUFBekIsRUFBb0MsT0FBcEMsRUFBNkM7QUFDM0RDLFFBQU0sV0FEcUQ7QUFFN0RDLFdBQVMsVUFGb0Q7QUFHN0RDLFFBQU07QUFDSkMsU0FBSyxDQUREO0FBRUpDLGFBQVMsS0FGTDtBQUdKQyxVQUFNO0FBSEY7QUFIdUQsQ0FBN0MsQ0FBbEI7QUFTQUMsT0FBT0MsT0FBUCxHQUFnQlQsU0FBaEIiLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJ1xuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZSgncG9zdGdyZXMnLCdwb3N0Z3JlcycsJ3RhbnVqJywge1xuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICBwb29sOiB7XG4gICAgbWF4OiA1LFxuICAgIGFjcXVpcmU6IDMwMDAwLFxuICAgIGlkbGU6IDEwMDAwLFxuICB9XG59KTtcbm1vZHVsZS5leHBvcnRzID1zZXF1ZWxpemUiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "acquire",
        "idle",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAAyB,UAAzB,EAAoC,OAApC,EAA6C;AAC3DC,QAAM,WADqD;AAE7DC,WAAS,UAFoD;AAG7DC,QAAM;AACJC,SAAK,CADD;AAEJC,aAAS,KAFL;AAGJC,UAAM;AAHF;AAHuD,CAA7C,CAAlB;AASAC,OAAOC,OAAP,GAAgBT,SAAhB",
      "file": "database.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "sourcesContent": [
        "import Sequelize from 'sequelize'\nconst sequelize = new Sequelize('postgres','postgres','tanuj', {\n    host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000,\n  }\n});\nmodule.exports =sequelize"
      ]
    },
    "mtime": 1559243369680
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/user.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "updateUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "updateUser",
                "local": "updateUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/user.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/user.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.routes.js",
      "sourceFileName": "user.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _user = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.patch('/', _user.updateUser);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwYXRjaCIsInVwZGF0ZVVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxLQUFQLENBQWEsR0FBYixFQUFrQkMsZ0JBQWxCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJ1c2VyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnJvdXRlci5wYXRjaCgnLycsIHVwZGF0ZVVzZXIpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.routes.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "patch",
        "updateUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,KAAP,CAAa,GAAb,EAAkBC,gBAAlB;;AAEAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "user.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "import express from 'express'\nimport { updateUser } from '../controllers/user.controller'\n\nconst router = express.Router()\n\nrouter.patch('/', updateUser)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/chrome-history.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/chrome-history.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/chrome-history.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.routes.js",
      "sourceFileName": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Express = require('express');\nvar controller = require('../controllers/chrome-history.controller');\n\nvar router = Express.Router();\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert', function (req, res) {\n  var historyitem = req.body.historyitem;\n  console.log(\"welcome\");\n  var gid = req.body.getid;\n\n  //console.log(myurl);\n  var Resource = require('../models/chrome-history');\n  //console.log(historyitem);\n  for (var i = 0; i < historyitem.length; i++) {\n\n    (function (i, historyitem, gid) {\n      Resource.links.sync({ force: false }).then(function () {\n        //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip: historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        }).catch(function (err) {\n          // print the error details\n          console.log(err);\n        });\n      }).catch(function (err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n      });\n    })(i, historyitem, gid);\n  }\n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max', controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJFeHByZXNzIiwicmVxdWlyZSIsImNvbnRyb2xsZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwicmVxIiwicmVzIiwiaGlzdG9yeWl0ZW0iLCJib2R5IiwiY29uc29sZSIsImxvZyIsImdpZCIsImdldGlkIiwiUmVzb3VyY2UiLCJpIiwibGVuZ3RoIiwibGlua3MiLCJzeW5jIiwiZm9yY2UiLCJ0aGVuIiwiY3JlYXRlIiwidXNlcl9pZCIsInVybCIsImlwIiwidmlzaXRlZF90aW1lc3RhbXAiLCJ0aXRsZSIsInZpc2l0Y291bnQiLCJ1c2VyYWdlbnQiLCJjYXRjaCIsImVyciIsImVuZCIsImdldCIsImdldEFsbCIsImdldE1heCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxVQUFRQyxRQUFRLFNBQVIsQ0FBWjtBQUNBLElBQUlDLGFBQVdELFFBQVEsMENBQVIsQ0FBZjs7QUFFQSxJQUFNRSxTQUFPSCxRQUFRSSxNQUFSLEVBQWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUFELE9BQU9FLElBQVAsQ0FBWSxTQUFaLEVBQXNCLFVBQVNDLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUNuQyxNQUFJQyxjQUFZRixJQUFJRyxJQUFKLENBQVNELFdBQXpCO0FBQ0FFLFVBQVFDLEdBQVIsQ0FBWSxTQUFaO0FBQ0EsTUFBSUMsTUFBSU4sSUFBSUcsSUFBSixDQUFTSSxLQUFqQjs7QUFFQTtBQUNBLE1BQUlDLFdBQVNiLFFBQVEsMEJBQVIsQ0FBYjtBQUNBO0FBQ0EsT0FBSSxJQUFJYyxJQUFFLENBQVYsRUFBWUEsSUFBRVAsWUFBWVEsTUFBMUIsRUFBaUNELEdBQWpDLEVBQXFDOztBQUdyQyxLQUFDLFVBQVNBLENBQVQsRUFBV1AsV0FBWCxFQUF1QkksR0FBdkIsRUFBMkI7QUFBQ0UsZUFBU0csS0FBVCxDQUFlQyxJQUFmLENBQW9CLEVBQUNDLE9BQU8sS0FBUixFQUFwQixFQUFvQ0MsSUFBcEMsQ0FBeUMsWUFBWTtBQUNoRjtBQUNFLGVBQU9OLFNBQVNHLEtBQVQsQ0FBZUksTUFBZixDQUFzQjtBQUMzQkMsbUJBQVNWLEdBRGtCO0FBRTNCVyxlQUFLZixZQUFZTyxDQUFaLEVBQWVRLEdBRk87QUFHM0JDLGNBQUtoQixZQUFZTyxDQUFaLEVBQWUsSUFBZixDQUhzQjtBQUkzQlUsNkJBQW1CakIsWUFBWU8sQ0FBWixFQUFlLGVBQWYsQ0FKUTtBQUszQlcsaUJBQU9sQixZQUFZTyxDQUFaLEVBQWUsT0FBZixDQUxvQjtBQU0zQlksc0JBQVluQixZQUFZTyxDQUFaLEVBQWUsWUFBZixDQU5lO0FBTzNCYSxxQkFBV3BCLFlBQVlPLENBQVosRUFBZSxXQUFmO0FBUGdCLFNBQXRCLEVBU05jLEtBVE0sQ0FTQSxVQUFTQyxHQUFULEVBQWM7QUFDakI7QUFDQXBCLGtCQUFRQyxHQUFSLENBQVltQixHQUFaO0FBQ0gsU0FaTSxDQUFQO0FBY0QsT0FoQjBCLEVBaUIxQkQsS0FqQjBCLENBaUJwQixVQUFTQyxHQUFULEVBQWM7QUFDbkI7QUFDQXZCLFlBQUl3QixHQUFKLENBQVEsS0FBUjtBQUNBckIsZ0JBQVFDLEdBQVIsQ0FBWW1CLEdBQVo7QUFDSCxPQXJCNEI7QUFxQjFCLEtBckJILEVBcUJLZixDQXJCTCxFQXFCT1AsV0FyQlAsRUFxQm1CSSxHQXJCbkI7QUFzQkQ7QUFLRixDQXRDRDs7QUF3Q0FULE9BQU82QixHQUFQLENBQVcsYUFBWCxFQUEwQjlCLFdBQVcrQixNQUFyQztBQUNBOUIsT0FBTzZCLEdBQVAsQ0FBVyxNQUFYLEVBQWtCOUIsV0FBV2dDLE1BQTdCO0FBQ0E7O2tCQUVlL0IsTSIsImZpbGUiOiJjaHJvbWUtaGlzdG9yeS5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRXhwcmVzcz1yZXF1aXJlKCdleHByZXNzJylcbnZhciBjb250cm9sbGVyPXJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2Nocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXInKVxuXG5jb25zdCByb3V0ZXI9RXhwcmVzcy5Sb3V0ZXIoKVxuLy9jb25zb2xlLmxvZyhjb250cm9sbGVyLmluc2VydClcbi8vcm91dGVyLmdldCgnLzppZCcsIGNvbnRyb2xsZXIuZ2V0T25lKVxuLy9hcHAudXNlKCcvJyx1LnJvdXRlcilcblxucm91dGVyLnBvc3QoJy9pbnNlcnQnLGZ1bmN0aW9uKHJlcSxyZXMpeyAgXG4gICAgdmFyIGhpc3RvcnlpdGVtPXJlcS5ib2R5Lmhpc3RvcnlpdGVtO1xuICAgIGNvbnNvbGUubG9nKFwid2VsY29tZVwiKTtcbiAgICB2YXIgZ2lkPXJlcS5ib2R5LmdldGlkO1xuICAgIFxuICAgIC8vY29uc29sZS5sb2cobXl1cmwpO1xuICAgIHZhciBSZXNvdXJjZT1yZXF1aXJlKCcuLi9tb2RlbHMvY2hyb21lLWhpc3RvcnknKVxuICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW0pO1xuICAgIGZvcih2YXIgaT0wO2k8aGlzdG9yeWl0ZW0ubGVuZ3RoO2krKyl7XG4gICAgICBcbiAgXG4gICAgKGZ1bmN0aW9uKGksaGlzdG9yeWl0ZW0sZ2lkKXtSZXNvdXJjZS5saW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW1baV0pXG4gICAgICAgIHJldHVybiBSZXNvdXJjZS5saW5rcy5jcmVhdGUoe1xuICAgICAgICAgIHVzZXJfaWQ6IGdpZCxcbiAgICAgICAgICB1cmw6IGhpc3RvcnlpdGVtW2ldLnVybCxcbiAgICAgICAgICBpcDogIGhpc3RvcnlpdGVtW2ldWydpcCddLFxuICAgICAgICAgIHZpc2l0ZWRfdGltZXN0YW1wOiBoaXN0b3J5aXRlbVtpXVsnbGFzdFZpc2l0VGltZSddLFxuICAgICAgICAgIHRpdGxlOiBoaXN0b3J5aXRlbVtpXVsndGl0bGUnXSxcbiAgICAgICAgICB2aXNpdGNvdW50OiBoaXN0b3J5aXRlbVtpXVsndmlzaXRDb3VudCddLFxuICAgICAgICAgIHVzZXJhZ2VudDogaGlzdG9yeWl0ZW1baV1bJ3VzZXJBZ2VudCddXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIC8vIHByaW50IHRoZSBlcnJvciBkZXRhaWxzXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAvLyBwcmludCB0aGUgZXJyb3IgZGV0YWlsc1xuICAgICAgICByZXMuZW5kKCdoaGgnKTtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KX0pKGksaGlzdG9yeWl0ZW0sZ2lkKTtcbiAgfVxuXG4gXG4gIFxuICAgIFxufSk7XG5cbnJvdXRlci5nZXQoJy9hbGxyZXN1bHRzJywgY29udHJvbGxlci5nZXRBbGwpO1xucm91dGVyLmdldCgnL21heCcsY29udHJvbGxlci5nZXRNYXgpO1xuLy9yb3V0ZXIucG9zdCgnL2luc2VydC86aWQnLCBYLmluc2VydCk7IC8vc2hvdWxkIGNoZWNrIHVzaW5nIHBvc3RtYW4gXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.routes.js"
      ],
      "names": [
        "Express",
        "require",
        "controller",
        "router",
        "Router",
        "post",
        "req",
        "res",
        "historyitem",
        "body",
        "console",
        "log",
        "gid",
        "getid",
        "Resource",
        "i",
        "length",
        "links",
        "sync",
        "force",
        "then",
        "create",
        "user_id",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "useragent",
        "catch",
        "err",
        "end",
        "get",
        "getAll",
        "getMax"
      ],
      "mappings": ";;;;;AAAA,IAAIA,UAAQC,QAAQ,SAAR,CAAZ;AACA,IAAIC,aAAWD,QAAQ,0CAAR,CAAf;;AAEA,IAAME,SAAOH,QAAQI,MAAR,EAAb;AACA;AACA;AACA;;AAEAD,OAAOE,IAAP,CAAY,SAAZ,EAAsB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACnC,MAAIC,cAAYF,IAAIG,IAAJ,CAASD,WAAzB;AACAE,UAAQC,GAAR,CAAY,SAAZ;AACA,MAAIC,MAAIN,IAAIG,IAAJ,CAASI,KAAjB;;AAEA;AACA,MAAIC,WAASb,QAAQ,0BAAR,CAAb;AACA;AACA,OAAI,IAAIc,IAAE,CAAV,EAAYA,IAAEP,YAAYQ,MAA1B,EAAiCD,GAAjC,EAAqC;;AAGrC,KAAC,UAASA,CAAT,EAAWP,WAAX,EAAuBI,GAAvB,EAA2B;AAACE,eAASG,KAAT,CAAeC,IAAf,CAAoB,EAACC,OAAO,KAAR,EAApB,EAAoCC,IAApC,CAAyC,YAAY;AAChF;AACE,eAAON,SAASG,KAAT,CAAeI,MAAf,CAAsB;AAC3BC,mBAASV,GADkB;AAE3BW,eAAKf,YAAYO,CAAZ,EAAeQ,GAFO;AAG3BC,cAAKhB,YAAYO,CAAZ,EAAe,IAAf,CAHsB;AAI3BU,6BAAmBjB,YAAYO,CAAZ,EAAe,eAAf,CAJQ;AAK3BW,iBAAOlB,YAAYO,CAAZ,EAAe,OAAf,CALoB;AAM3BY,sBAAYnB,YAAYO,CAAZ,EAAe,YAAf,CANe;AAO3Ba,qBAAWpB,YAAYO,CAAZ,EAAe,WAAf;AAPgB,SAAtB,EASNc,KATM,CASA,UAASC,GAAT,EAAc;AACjB;AACApB,kBAAQC,GAAR,CAAYmB,GAAZ;AACH,SAZM,CAAP;AAcD,OAhB0B,EAiB1BD,KAjB0B,CAiBpB,UAASC,GAAT,EAAc;AACnB;AACAvB,YAAIwB,GAAJ,CAAQ,KAAR;AACArB,gBAAQC,GAAR,CAAYmB,GAAZ;AACH,OArB4B;AAqB1B,KArBH,EAqBKf,CArBL,EAqBOP,WArBP,EAqBmBI,GArBnB;AAsBD;AAKF,CAtCD;;AAwCAT,OAAO6B,GAAP,CAAW,aAAX,EAA0B9B,WAAW+B,MAArC;AACA9B,OAAO6B,GAAP,CAAW,MAAX,EAAkB9B,WAAWgC,MAA7B;AACA;;kBAEe/B,M",
      "file": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "var Express=require('express')\nvar controller=require('../controllers/chrome-history.controller')\n\nconst router=Express.Router()\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert',function(req,res){  \n    var historyitem=req.body.historyitem;\n    console.log(\"welcome\");\n    var gid=req.body.getid;\n    \n    //console.log(myurl);\n    var Resource=require('../models/chrome-history')\n    //console.log(historyitem);\n    for(var i=0;i<historyitem.length;i++){\n      \n  \n    (function(i,historyitem,gid){Resource.links.sync({force: false}).then(function () {\n      //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip:  historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        })\n        .catch(function(err) {\n            // print the error details\n            console.log(err);\n        });\n        \n      })\n      .catch(function(err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n    })})(i,historyitem,gid);\n  }\n\n \n  \n    \n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max',controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexport default router;\n"
      ]
    },
    "mtime": 1559309771692
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/chrome-history.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "getMax"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "getMax",
              "exported": "getMax"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/chrome-history.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/chrome-history.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.controller.js",
      "sourceFileName": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Resource = require('../models/chrome-history');\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  Resource.links.findAll({}).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nvar getOne = exports.getOne = function getOne(req, res) {\n  Resource.links.findAll({ where: {\n      uid: req.params.id\n    } }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar getMax = exports.getMax = function getMax(req, res) {\n  var sequelize = require('sequelize');\n  Resource.links.findAll({\n\n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    raw: true\n  }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n//module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUmVzb3VyY2UiLCJyZXF1aXJlIiwiZ2V0QWxsIiwicmVxIiwicmVzIiwibGlua3MiLCJmaW5kQWxsIiwidGhlbiIsImRhdGEiLCJqc29uIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZ2V0T25lIiwid2hlcmUiLCJ1aWQiLCJwYXJhbXMiLCJpZCIsImdldE1heCIsInNlcXVlbGl6ZSIsImF0dHJpYnV0ZXMiLCJmbiIsImNvbCIsInJhdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxXQUFTQyxRQUFRLDBCQUFSLENBQWI7O0FBRU8sSUFBTUMsMEJBQVEsU0FBUkEsTUFBUSxDQUFTQyxHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFBQ0osV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCLEVBQXZCLEVBQTJCQyxJQUEzQixDQUFnQyxVQUFDQyxJQUFELEVBQVU7QUFDN0VKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBRm9DLEVBRWxDRSxLQUZrQyxDQUU1QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBSm9DO0FBS3RDLENBTE07QUFNQSxJQUFNRywwQkFBUSxTQUFSQSxNQUFRLENBQVNYLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUFDSixXQUFTSyxLQUFULENBQWVDLE9BQWYsQ0FBdUIsRUFBRVMsT0FBTztBQUNyRUMsV0FBS2IsSUFBSWMsTUFBSixDQUFXQztBQURxRCxLQUFULEVBQXZCLEVBRWxDWCxJQUZrQyxDQUU3QixVQUFDQyxJQUFELEVBQVU7QUFDbEJKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBSnNDLEVBSXBDRSxLQUpvQyxDQUk5QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBTnNDO0FBT3RDLENBUE07O0FBVUEsSUFBTVEsMEJBQVEsU0FBUkEsTUFBUSxDQUFTaEIsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQ3BDLE1BQUlnQixZQUFVbkIsUUFBUSxXQUFSLENBQWQ7QUFDQUQsV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCOztBQUV2QmUsZ0JBQVksQ0FBQyxDQUFDRCxVQUFVRSxFQUFWLENBQWEsS0FBYixFQUFvQkYsVUFBVUcsR0FBVixDQUFjLG1CQUFkLENBQXBCLENBQUQsRUFBMEQsTUFBMUQsQ0FBRCxDQUZXO0FBR3ZCQyxTQUFLO0FBSGtCLEdBQXZCLEVBSUVqQixJQUpGLENBSU8sVUFBQ0MsSUFBRCxFQUFVO0FBQ2pCSixRQUFJSyxJQUFKLENBQVNELElBQVQ7QUFDRCxHQU5DLEVBTUNFLEtBTkQsQ0FNTyxVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBUkM7QUFTRCxDQVhNO0FBWU4iLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFJlc291cmNlPXJlcXVpcmUoJy4uL21vZGVscy9jaHJvbWUtaGlzdG9yeScpXG5cbmV4cG9ydCBjb25zdCBnZXRBbGw9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoe30pLnRoZW4oKGRhdGEpID0+IHtcbiAgICByZXMuanNvbihkYXRhKVxuICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgfSlcbn1cbmV4cG9ydCBjb25zdCBnZXRPbmU9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoeyB3aGVyZToge1xuICB1aWQ6IHJlcS5wYXJhbXMuaWRcbn0gfSkudGhlbigoZGF0YSkgPT4ge1xuICByZXMuanNvbihkYXRhKVxufSkuY2F0Y2goKGVycikgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xufSlcbn1cblxuXG5leHBvcnQgY29uc3QgZ2V0TWF4PSBmdW5jdGlvbihyZXEscmVzKXtcbiAgdmFyIHNlcXVlbGl6ZT1yZXF1aXJlKCdzZXF1ZWxpemUnKVxuICBSZXNvdXJjZS5saW5rcy5maW5kQWxsKHsgXG5cbiAgYXR0cmlidXRlczogW1tzZXF1ZWxpemUuZm4oJ21heCcsIHNlcXVlbGl6ZS5jb2woJ3Zpc2l0ZWRfdGltZXN0YW1wJykpLCAndGltZSddXSxcbiAgcmF3OiB0cnVlLFxuIH0pLnRoZW4oKGRhdGEpID0+IHtcbiAgcmVzLmpzb24oZGF0YSlcbn0pLmNhdGNoKChlcnIpID0+IHtcbiAgY29uc29sZS5sb2coZXJyKTtcbn0pXG59XG4gLy9tb2R1bGUuZXhwb3J0cz17XCJnZXRPbmVcIjpnZXRPbmUsXCJnZXRBbGxcIjpnZXRBbGwsXCJnZXRNYXhcIjpnZXRNYXh9Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.controller.js"
      ],
      "names": [
        "Resource",
        "require",
        "getAll",
        "req",
        "res",
        "links",
        "findAll",
        "then",
        "data",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getOne",
        "where",
        "uid",
        "params",
        "id",
        "getMax",
        "sequelize",
        "attributes",
        "fn",
        "col",
        "raw"
      ],
      "mappings": ";;;;;AAAA,IAAIA,WAASC,QAAQ,0BAAR,CAAb;;AAEO,IAAMC,0BAAQ,SAARA,MAAQ,CAASC,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAvB,EAA2BC,IAA3B,CAAgC,UAACC,IAAD,EAAU;AAC7EJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAFoC,EAElCE,KAFkC,CAE5B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GAJoC;AAKtC,CALM;AAMA,IAAMG,0BAAQ,SAARA,MAAQ,CAASX,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAES,OAAO;AACrEC,WAAKb,IAAIc,MAAJ,CAAWC;AADqD,KAAT,EAAvB,EAElCX,IAFkC,CAE7B,UAACC,IAAD,EAAU;AAClBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAJsC,EAIpCE,KAJoC,CAI9B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GANsC;AAOtC,CAPM;;AAUA,IAAMQ,0BAAQ,SAARA,MAAQ,CAAShB,GAAT,EAAaC,GAAb,EAAiB;AACpC,MAAIgB,YAAUnB,QAAQ,WAAR,CAAd;AACAD,WAASK,KAAT,CAAeC,OAAf,CAAuB;;AAEvBe,gBAAY,CAAC,CAACD,UAAUE,EAAV,CAAa,KAAb,EAAoBF,UAAUG,GAAV,CAAc,mBAAd,CAApB,CAAD,EAA0D,MAA1D,CAAD,CAFW;AAGvBC,SAAK;AAHkB,GAAvB,EAIEjB,IAJF,CAIO,UAACC,IAAD,EAAU;AACjBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GANC,EAMCE,KAND,CAMO,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GARC;AASD,CAXM;AAYN",
      "file": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "var Resource=require('../models/chrome-history')\n\nexport const getAll= function(req,res){Resource.links.findAll({}).then((data) => {\n    res.json(data)\n  }).catch((err) => {\n    console.log(err);\n  })\n}\nexport const getOne= function(req,res){Resource.links.findAll({ where: {\n  uid: req.params.id\n} }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n\n\nexport const getMax= function(req,res){\n  var sequelize=require('sequelize')\n  Resource.links.findAll({ \n\n  attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n  raw: true,\n }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n //module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}"
      ]
    },
    "mtime": 1559308068584
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/chrome-history.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/chrome-history.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/chrome-history.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.js",
      "sourceFileName": "chrome-history.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar index = require('../database');\n\nvar links = index.define('history', {\n  user_id: {\n    type: _sequelize2.default.STRING\n  },\n  url: {\n    type: _sequelize2.default.STRING(2000)\n  },\n  ip: {\n    type: _sequelize2.default.STRING\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.STRING\n  },\n  title: {\n    type: _sequelize2.default.STRING\n  },\n  visitcount: {\n    type: _sequelize2.default.INTEGER\n  },\n  useragent: {\n    type: _sequelize2.default.STRING\n  }\n\n}, {\n  freezeTableName: true\n});\nlinks.sync({ force: false }).then(function () {\n  return true;\n});\n\nmodule.exports = { \"links\": links };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmpzIl0sIm5hbWVzIjpbImluZGV4IiwicmVxdWlyZSIsImxpbmtzIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJTVFJJTkciLCJ1cmwiLCJpcCIsInZpc2l0ZWRfdGltZXN0YW1wIiwidGl0bGUiLCJ2aXNpdGNvdW50IiwiSU5URUdFUiIsInVzZXJhZ2VudCIsImZyZWV6ZVRhYmxlTmFtZSIsInN5bmMiLCJmb3JjZSIsInRoZW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBOzs7Ozs7QUFEQSxJQUFNQSxRQUFNQyxRQUFRLGFBQVIsQ0FBWjs7QUFFQSxJQUFJQyxRQUFRRixNQUFNRyxNQUFOLENBQWEsU0FBYixFQUF3QjtBQUNoQ0MsV0FBUztBQUNQQyxVQUFNQyxvQkFBVUM7QUFEVCxHQUR1QjtBQUloQ0MsT0FBSztBQUNISCxVQUFNQyxvQkFBVUMsTUFBVixDQUFpQixJQUFqQjtBQURILEdBSjJCO0FBT2hDRSxNQUFHO0FBQ0RKLFVBQUtDLG9CQUFVQztBQURkLEdBUDZCO0FBVWhDRyxxQkFBa0I7QUFDaEJMLFVBQU1DLG9CQUFVQztBQURBLEdBVmM7QUFhaENJLFNBQ0E7QUFDRU4sVUFBS0Msb0JBQVVDO0FBRGpCLEdBZGdDO0FBaUJoQ0ssY0FDQTtBQUNFUCxVQUFLQyxvQkFBVU87QUFEakIsR0FsQmdDO0FBcUJoQ0MsYUFDQTtBQUNFVCxVQUFNQyxvQkFBVUM7QUFEbEI7O0FBdEJnQyxDQUF4QixFQTJCUDtBQUNEUSxtQkFBaUI7QUFEaEIsQ0EzQk8sQ0FBWjtBQThCRWIsTUFBTWMsSUFBTixDQUFXLEVBQUNDLE9BQU8sS0FBUixFQUFYLEVBQTJCQyxJQUEzQixDQUFnQyxZQUFZO0FBQzFDLFNBQU8sSUFBUDtBQUNELENBRkQ7O0FBSUFDLE9BQU9DLE9BQVAsR0FBZSxFQUFDLFNBQVFsQixLQUFULEVBQWYiLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpbmRleD1yZXF1aXJlKCcuLi9kYXRhYmFzZScpXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IFxudmFyIGxpbmtzID0gaW5kZXguZGVmaW5lKCdoaXN0b3J5Jywge1xuICAgIHVzZXJfaWQ6IHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHVybDoge1xuICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklORygyMDAwKVxuICAgIH0sXG4gICAgaXA6e1xuICAgICAgdHlwZTpTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB2aXNpdGVkX3RpbWVzdGFtcDp7XG4gICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB0aXRsZTpcbiAgICB7XG4gICAgICB0eXBlOlNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHZpc2l0Y291bnQ6XG4gICAge1xuICAgICAgdHlwZTpTZXF1ZWxpemUuSU5URUdFUlxuICAgIH0sXG4gICAgdXNlcmFnZW50OlxuICAgIHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9XG5cblxuICB9LCB7XG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlXG4gIH0pO1xuICBsaW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSk7XG5cbiAgbW9kdWxlLmV4cG9ydHM9e1wibGlua3NcIjpsaW5rc307XG5cblxuXG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.js"
      ],
      "names": [
        "index",
        "require",
        "links",
        "define",
        "user_id",
        "type",
        "Sequelize",
        "STRING",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "INTEGER",
        "useragent",
        "freezeTableName",
        "sync",
        "force",
        "then",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;;;;;AADA,IAAMA,QAAMC,QAAQ,aAAR,CAAZ;;AAEA,IAAIC,QAAQF,MAAMG,MAAN,CAAa,SAAb,EAAwB;AAChCC,WAAS;AACPC,UAAMC,oBAAUC;AADT,GADuB;AAIhCC,OAAK;AACHH,UAAMC,oBAAUC,MAAV,CAAiB,IAAjB;AADH,GAJ2B;AAOhCE,MAAG;AACDJ,UAAKC,oBAAUC;AADd,GAP6B;AAUhCG,qBAAkB;AAChBL,UAAMC,oBAAUC;AADA,GAVc;AAahCI,SACA;AACEN,UAAKC,oBAAUC;AADjB,GAdgC;AAiBhCK,cACA;AACEP,UAAKC,oBAAUO;AADjB,GAlBgC;AAqBhCC,aACA;AACET,UAAMC,oBAAUC;AADlB;;AAtBgC,CAAxB,EA2BP;AACDQ,mBAAiB;AADhB,CA3BO,CAAZ;AA8BEb,MAAMc,IAAN,CAAW,EAACC,OAAO,KAAR,EAAX,EAA2BC,IAA3B,CAAgC,YAAY;AAC1C,SAAO,IAAP;AACD,CAFD;;AAIAC,OAAOC,OAAP,GAAe,EAAC,SAAQlB,KAAT,EAAf",
      "file": "chrome-history.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "const index=require('../database')\nimport Sequelize from 'sequelize'; \nvar links = index.define('history', {\n    user_id: {\n      type: Sequelize.STRING\n    },\n    url: {\n      type: Sequelize.STRING(2000)\n    },\n    ip:{\n      type:Sequelize.STRING\n    },\n    visited_timestamp:{\n      type: Sequelize.STRING\n    },\n    title:\n    {\n      type:Sequelize.STRING\n    },\n    visitcount:\n    {\n      type:Sequelize.INTEGER\n    },\n    useragent:\n    {\n      type: Sequelize.STRING\n    }\n\n\n  }, {\n    freezeTableName: true\n  });\n  links.sync({force: false}).then(function () {\n    return true;\n  });\n\n  module.exports={\"links\":links};\n\n\n\n\n"
      ]
    },
    "mtime": 1559307725396
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/routes/chrome-history.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/routes/chrome-history.routes.js",
      "filenameRelative": "/home/tanuj/delta-api/src/routes/chrome-history.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.routes.js",
      "sourceFileName": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Express = require('express');\nvar controller = require('../controllers/chrome-history.controller');\n\nvar router = Express.Router();\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert', function (req, res) {\n  var historyitem = req.body.historyitem;\n  console.log(\"welcome\");\n  var gid = req.body.getid;\n\n  //console.log(myurl);\n  var Resource = require('../models/chrome-history');\n  //console.log(historyitem);\n  for (var i = 0; i < historyitem.length; i++) {\n\n    (function (i, historyitem, gid) {\n      Resource.links.sync({ force: false }).then(function () {\n        //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip: historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        }).catch(function (err) {\n          // print the error details\n          console.log(err);\n        });\n      }).catch(function (err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n      });\n    })(i, historyitem, gid);\n  }\n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max', controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJFeHByZXNzIiwicmVxdWlyZSIsImNvbnRyb2xsZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwicmVxIiwicmVzIiwiaGlzdG9yeWl0ZW0iLCJib2R5IiwiY29uc29sZSIsImxvZyIsImdpZCIsImdldGlkIiwiUmVzb3VyY2UiLCJpIiwibGVuZ3RoIiwibGlua3MiLCJzeW5jIiwiZm9yY2UiLCJ0aGVuIiwiY3JlYXRlIiwidXNlcl9pZCIsInVybCIsImlwIiwidmlzaXRlZF90aW1lc3RhbXAiLCJ0aXRsZSIsInZpc2l0Y291bnQiLCJ1c2VyYWdlbnQiLCJjYXRjaCIsImVyciIsImVuZCIsImdldCIsImdldEFsbCIsImdldE1heCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxVQUFRQyxRQUFRLFNBQVIsQ0FBWjtBQUNBLElBQUlDLGFBQVdELFFBQVEsMENBQVIsQ0FBZjs7QUFFQSxJQUFNRSxTQUFPSCxRQUFRSSxNQUFSLEVBQWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUFELE9BQU9FLElBQVAsQ0FBWSxTQUFaLEVBQXNCLFVBQVNDLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUNuQyxNQUFJQyxjQUFZRixJQUFJRyxJQUFKLENBQVNELFdBQXpCO0FBQ0FFLFVBQVFDLEdBQVIsQ0FBWSxTQUFaO0FBQ0EsTUFBSUMsTUFBSU4sSUFBSUcsSUFBSixDQUFTSSxLQUFqQjs7QUFFQTtBQUNBLE1BQUlDLFdBQVNiLFFBQVEsMEJBQVIsQ0FBYjtBQUNBO0FBQ0EsT0FBSSxJQUFJYyxJQUFFLENBQVYsRUFBWUEsSUFBRVAsWUFBWVEsTUFBMUIsRUFBaUNELEdBQWpDLEVBQXFDOztBQUdyQyxLQUFDLFVBQVNBLENBQVQsRUFBV1AsV0FBWCxFQUF1QkksR0FBdkIsRUFBMkI7QUFBQ0UsZUFBU0csS0FBVCxDQUFlQyxJQUFmLENBQW9CLEVBQUNDLE9BQU8sS0FBUixFQUFwQixFQUFvQ0MsSUFBcEMsQ0FBeUMsWUFBWTtBQUNoRjtBQUNFLGVBQU9OLFNBQVNHLEtBQVQsQ0FBZUksTUFBZixDQUFzQjtBQUMzQkMsbUJBQVNWLEdBRGtCO0FBRTNCVyxlQUFLZixZQUFZTyxDQUFaLEVBQWVRLEdBRk87QUFHM0JDLGNBQUtoQixZQUFZTyxDQUFaLEVBQWUsSUFBZixDQUhzQjtBQUkzQlUsNkJBQW1CakIsWUFBWU8sQ0FBWixFQUFlLGVBQWYsQ0FKUTtBQUszQlcsaUJBQU9sQixZQUFZTyxDQUFaLEVBQWUsT0FBZixDQUxvQjtBQU0zQlksc0JBQVluQixZQUFZTyxDQUFaLEVBQWUsWUFBZixDQU5lO0FBTzNCYSxxQkFBV3BCLFlBQVlPLENBQVosRUFBZSxXQUFmO0FBUGdCLFNBQXRCLEVBU05jLEtBVE0sQ0FTQSxVQUFTQyxHQUFULEVBQWM7QUFDakI7QUFDQXBCLGtCQUFRQyxHQUFSLENBQVltQixHQUFaO0FBQ0gsU0FaTSxDQUFQO0FBY0QsT0FoQjBCLEVBaUIxQkQsS0FqQjBCLENBaUJwQixVQUFTQyxHQUFULEVBQWM7QUFDbkI7QUFDQXZCLFlBQUl3QixHQUFKLENBQVEsS0FBUjtBQUNBckIsZ0JBQVFDLEdBQVIsQ0FBWW1CLEdBQVo7QUFDSCxPQXJCNEI7QUFxQjFCLEtBckJILEVBcUJLZixDQXJCTCxFQXFCT1AsV0FyQlAsRUFxQm1CSSxHQXJCbkI7QUFzQkQ7QUFLRixDQXRDRDs7QUF3Q0FULE9BQU82QixHQUFQLENBQVcsYUFBWCxFQUEwQjlCLFdBQVcrQixNQUFyQztBQUNBOUIsT0FBTzZCLEdBQVAsQ0FBVyxNQUFYLEVBQWtCOUIsV0FBV2dDLE1BQTdCO0FBQ0E7O2tCQUVlL0IsTSIsImZpbGUiOiJjaHJvbWUtaGlzdG9yeS5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRXhwcmVzcz1yZXF1aXJlKCdleHByZXNzJylcbnZhciBjb250cm9sbGVyPXJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2Nocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXInKVxuXG5jb25zdCByb3V0ZXI9RXhwcmVzcy5Sb3V0ZXIoKVxuLy9jb25zb2xlLmxvZyhjb250cm9sbGVyLmluc2VydClcbi8vcm91dGVyLmdldCgnLzppZCcsIGNvbnRyb2xsZXIuZ2V0T25lKVxuLy9hcHAudXNlKCcvJyx1LnJvdXRlcilcblxucm91dGVyLnBvc3QoJy9pbnNlcnQnLGZ1bmN0aW9uKHJlcSxyZXMpeyAgXG4gICAgdmFyIGhpc3RvcnlpdGVtPXJlcS5ib2R5Lmhpc3RvcnlpdGVtO1xuICAgIGNvbnNvbGUubG9nKFwid2VsY29tZVwiKTtcbiAgICB2YXIgZ2lkPXJlcS5ib2R5LmdldGlkO1xuICAgIFxuICAgIC8vY29uc29sZS5sb2cobXl1cmwpO1xuICAgIHZhciBSZXNvdXJjZT1yZXF1aXJlKCcuLi9tb2RlbHMvY2hyb21lLWhpc3RvcnknKVxuICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW0pO1xuICAgIGZvcih2YXIgaT0wO2k8aGlzdG9yeWl0ZW0ubGVuZ3RoO2krKyl7XG4gICAgICBcbiAgXG4gICAgKGZ1bmN0aW9uKGksaGlzdG9yeWl0ZW0sZ2lkKXtSZXNvdXJjZS5saW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW1baV0pXG4gICAgICAgIHJldHVybiBSZXNvdXJjZS5saW5rcy5jcmVhdGUoe1xuICAgICAgICAgIHVzZXJfaWQ6IGdpZCxcbiAgICAgICAgICB1cmw6IGhpc3RvcnlpdGVtW2ldLnVybCxcbiAgICAgICAgICBpcDogIGhpc3RvcnlpdGVtW2ldWydpcCddLFxuICAgICAgICAgIHZpc2l0ZWRfdGltZXN0YW1wOiBoaXN0b3J5aXRlbVtpXVsnbGFzdFZpc2l0VGltZSddLFxuICAgICAgICAgIHRpdGxlOiBoaXN0b3J5aXRlbVtpXVsndGl0bGUnXSxcbiAgICAgICAgICB2aXNpdGNvdW50OiBoaXN0b3J5aXRlbVtpXVsndmlzaXRDb3VudCddLFxuICAgICAgICAgIHVzZXJhZ2VudDogaGlzdG9yeWl0ZW1baV1bJ3VzZXJBZ2VudCddXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIC8vIHByaW50IHRoZSBlcnJvciBkZXRhaWxzXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAvLyBwcmludCB0aGUgZXJyb3IgZGV0YWlsc1xuICAgICAgICByZXMuZW5kKCdoaGgnKTtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KX0pKGksaGlzdG9yeWl0ZW0sZ2lkKTtcbiAgfVxuXG4gXG4gIFxuICAgIFxufSk7XG5cbnJvdXRlci5nZXQoJy9hbGxyZXN1bHRzJywgY29udHJvbGxlci5nZXRBbGwpO1xucm91dGVyLmdldCgnL21heCcsY29udHJvbGxlci5nZXRNYXgpO1xuLy9yb3V0ZXIucG9zdCgnL2luc2VydC86aWQnLCBYLmluc2VydCk7IC8vc2hvdWxkIGNoZWNrIHVzaW5nIHBvc3RtYW4gXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.routes.js"
      ],
      "names": [
        "Express",
        "require",
        "controller",
        "router",
        "Router",
        "post",
        "req",
        "res",
        "historyitem",
        "body",
        "console",
        "log",
        "gid",
        "getid",
        "Resource",
        "i",
        "length",
        "links",
        "sync",
        "force",
        "then",
        "create",
        "user_id",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "useragent",
        "catch",
        "err",
        "end",
        "get",
        "getAll",
        "getMax"
      ],
      "mappings": ";;;;;AAAA,IAAIA,UAAQC,QAAQ,SAAR,CAAZ;AACA,IAAIC,aAAWD,QAAQ,0CAAR,CAAf;;AAEA,IAAME,SAAOH,QAAQI,MAAR,EAAb;AACA;AACA;AACA;;AAEAD,OAAOE,IAAP,CAAY,SAAZ,EAAsB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACnC,MAAIC,cAAYF,IAAIG,IAAJ,CAASD,WAAzB;AACAE,UAAQC,GAAR,CAAY,SAAZ;AACA,MAAIC,MAAIN,IAAIG,IAAJ,CAASI,KAAjB;;AAEA;AACA,MAAIC,WAASb,QAAQ,0BAAR,CAAb;AACA;AACA,OAAI,IAAIc,IAAE,CAAV,EAAYA,IAAEP,YAAYQ,MAA1B,EAAiCD,GAAjC,EAAqC;;AAGrC,KAAC,UAASA,CAAT,EAAWP,WAAX,EAAuBI,GAAvB,EAA2B;AAACE,eAASG,KAAT,CAAeC,IAAf,CAAoB,EAACC,OAAO,KAAR,EAApB,EAAoCC,IAApC,CAAyC,YAAY;AAChF;AACE,eAAON,SAASG,KAAT,CAAeI,MAAf,CAAsB;AAC3BC,mBAASV,GADkB;AAE3BW,eAAKf,YAAYO,CAAZ,EAAeQ,GAFO;AAG3BC,cAAKhB,YAAYO,CAAZ,EAAe,IAAf,CAHsB;AAI3BU,6BAAmBjB,YAAYO,CAAZ,EAAe,eAAf,CAJQ;AAK3BW,iBAAOlB,YAAYO,CAAZ,EAAe,OAAf,CALoB;AAM3BY,sBAAYnB,YAAYO,CAAZ,EAAe,YAAf,CANe;AAO3Ba,qBAAWpB,YAAYO,CAAZ,EAAe,WAAf;AAPgB,SAAtB,EASNc,KATM,CASA,UAASC,GAAT,EAAc;AACjB;AACApB,kBAAQC,GAAR,CAAYmB,GAAZ;AACH,SAZM,CAAP;AAcD,OAhB0B,EAiB1BD,KAjB0B,CAiBpB,UAASC,GAAT,EAAc;AACnB;AACAvB,YAAIwB,GAAJ,CAAQ,KAAR;AACArB,gBAAQC,GAAR,CAAYmB,GAAZ;AACH,OArB4B;AAqB1B,KArBH,EAqBKf,CArBL,EAqBOP,WArBP,EAqBmBI,GArBnB;AAsBD;AAKF,CAtCD;;AAwCAT,OAAO6B,GAAP,CAAW,aAAX,EAA0B9B,WAAW+B,MAArC;AACA9B,OAAO6B,GAAP,CAAW,MAAX,EAAkB9B,WAAWgC,MAA7B;AACA;;kBAEe/B,M",
      "file": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/delta-api/src/routes",
      "sourcesContent": [
        "var Express=require('express')\nvar controller=require('../controllers/chrome-history.controller')\n\nconst router=Express.Router()\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert',function(req,res){  \n    var historyitem=req.body.historyitem;\n    console.log(\"welcome\");\n    var gid=req.body.getid;\n    \n    //console.log(myurl);\n    var Resource=require('../models/chrome-history')\n    //console.log(historyitem);\n    for(var i=0;i<historyitem.length;i++){\n      \n  \n    (function(i,historyitem,gid){Resource.links.sync({force: false}).then(function () {\n      //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip:  historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        })\n        .catch(function(err) {\n            // print the error details\n            console.log(err);\n        });\n        \n      })\n      .catch(function(err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n    })})(i,historyitem,gid);\n  }\n\n \n  \n    \n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max',controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexport default router;\n"
      ]
    },
    "mtime": 1559309771692
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/controllers/chrome-history.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "getMax"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "getMax",
              "exported": "getMax"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/controllers/chrome-history.controller.js",
      "filenameRelative": "/home/tanuj/delta-api/src/controllers/chrome-history.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.controller.js",
      "sourceFileName": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Resource = require('../models/chrome-history');\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  Resource.links.findAll({}).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nvar getOne = exports.getOne = function getOne(req, res) {\n  Resource.links.findAll({ where: {\n      uid: req.params.id\n    } }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar getMax = exports.getMax = function getMax(req, res) {\n  var sequelize = require('sequelize');\n  Resource.links.findAll({\n\n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    raw: true\n  }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n//module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUmVzb3VyY2UiLCJyZXF1aXJlIiwiZ2V0QWxsIiwicmVxIiwicmVzIiwibGlua3MiLCJmaW5kQWxsIiwidGhlbiIsImRhdGEiLCJqc29uIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZ2V0T25lIiwid2hlcmUiLCJ1aWQiLCJwYXJhbXMiLCJpZCIsImdldE1heCIsInNlcXVlbGl6ZSIsImF0dHJpYnV0ZXMiLCJmbiIsImNvbCIsInJhdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxXQUFTQyxRQUFRLDBCQUFSLENBQWI7O0FBRU8sSUFBTUMsMEJBQVEsU0FBUkEsTUFBUSxDQUFTQyxHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFBQ0osV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCLEVBQXZCLEVBQTJCQyxJQUEzQixDQUFnQyxVQUFDQyxJQUFELEVBQVU7QUFDN0VKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBRm9DLEVBRWxDRSxLQUZrQyxDQUU1QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBSm9DO0FBS3RDLENBTE07QUFNQSxJQUFNRywwQkFBUSxTQUFSQSxNQUFRLENBQVNYLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUFDSixXQUFTSyxLQUFULENBQWVDLE9BQWYsQ0FBdUIsRUFBRVMsT0FBTztBQUNyRUMsV0FBS2IsSUFBSWMsTUFBSixDQUFXQztBQURxRCxLQUFULEVBQXZCLEVBRWxDWCxJQUZrQyxDQUU3QixVQUFDQyxJQUFELEVBQVU7QUFDbEJKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBSnNDLEVBSXBDRSxLQUpvQyxDQUk5QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBTnNDO0FBT3RDLENBUE07O0FBVUEsSUFBTVEsMEJBQVEsU0FBUkEsTUFBUSxDQUFTaEIsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQ3BDLE1BQUlnQixZQUFVbkIsUUFBUSxXQUFSLENBQWQ7QUFDQUQsV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCOztBQUV2QmUsZ0JBQVksQ0FBQyxDQUFDRCxVQUFVRSxFQUFWLENBQWEsS0FBYixFQUFvQkYsVUFBVUcsR0FBVixDQUFjLG1CQUFkLENBQXBCLENBQUQsRUFBMEQsTUFBMUQsQ0FBRCxDQUZXO0FBR3ZCQyxTQUFLO0FBSGtCLEdBQXZCLEVBSUVqQixJQUpGLENBSU8sVUFBQ0MsSUFBRCxFQUFVO0FBQ2pCSixRQUFJSyxJQUFKLENBQVNELElBQVQ7QUFDRCxHQU5DLEVBTUNFLEtBTkQsQ0FNTyxVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBUkM7QUFTRCxDQVhNO0FBWU4iLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFJlc291cmNlPXJlcXVpcmUoJy4uL21vZGVscy9jaHJvbWUtaGlzdG9yeScpXG5cbmV4cG9ydCBjb25zdCBnZXRBbGw9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoe30pLnRoZW4oKGRhdGEpID0+IHtcbiAgICByZXMuanNvbihkYXRhKVxuICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgfSlcbn1cbmV4cG9ydCBjb25zdCBnZXRPbmU9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoeyB3aGVyZToge1xuICB1aWQ6IHJlcS5wYXJhbXMuaWRcbn0gfSkudGhlbigoZGF0YSkgPT4ge1xuICByZXMuanNvbihkYXRhKVxufSkuY2F0Y2goKGVycikgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xufSlcbn1cblxuXG5leHBvcnQgY29uc3QgZ2V0TWF4PSBmdW5jdGlvbihyZXEscmVzKXtcbiAgdmFyIHNlcXVlbGl6ZT1yZXF1aXJlKCdzZXF1ZWxpemUnKVxuICBSZXNvdXJjZS5saW5rcy5maW5kQWxsKHsgXG5cbiAgYXR0cmlidXRlczogW1tzZXF1ZWxpemUuZm4oJ21heCcsIHNlcXVlbGl6ZS5jb2woJ3Zpc2l0ZWRfdGltZXN0YW1wJykpLCAndGltZSddXSxcbiAgcmF3OiB0cnVlLFxuIH0pLnRoZW4oKGRhdGEpID0+IHtcbiAgcmVzLmpzb24oZGF0YSlcbn0pLmNhdGNoKChlcnIpID0+IHtcbiAgY29uc29sZS5sb2coZXJyKTtcbn0pXG59XG4gLy9tb2R1bGUuZXhwb3J0cz17XCJnZXRPbmVcIjpnZXRPbmUsXCJnZXRBbGxcIjpnZXRBbGwsXCJnZXRNYXhcIjpnZXRNYXh9Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.controller.js"
      ],
      "names": [
        "Resource",
        "require",
        "getAll",
        "req",
        "res",
        "links",
        "findAll",
        "then",
        "data",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getOne",
        "where",
        "uid",
        "params",
        "id",
        "getMax",
        "sequelize",
        "attributes",
        "fn",
        "col",
        "raw"
      ],
      "mappings": ";;;;;AAAA,IAAIA,WAASC,QAAQ,0BAAR,CAAb;;AAEO,IAAMC,0BAAQ,SAARA,MAAQ,CAASC,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAvB,EAA2BC,IAA3B,CAAgC,UAACC,IAAD,EAAU;AAC7EJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAFoC,EAElCE,KAFkC,CAE5B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GAJoC;AAKtC,CALM;AAMA,IAAMG,0BAAQ,SAARA,MAAQ,CAASX,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAES,OAAO;AACrEC,WAAKb,IAAIc,MAAJ,CAAWC;AADqD,KAAT,EAAvB,EAElCX,IAFkC,CAE7B,UAACC,IAAD,EAAU;AAClBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAJsC,EAIpCE,KAJoC,CAI9B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GANsC;AAOtC,CAPM;;AAUA,IAAMQ,0BAAQ,SAARA,MAAQ,CAAShB,GAAT,EAAaC,GAAb,EAAiB;AACpC,MAAIgB,YAAUnB,QAAQ,WAAR,CAAd;AACAD,WAASK,KAAT,CAAeC,OAAf,CAAuB;;AAEvBe,gBAAY,CAAC,CAACD,UAAUE,EAAV,CAAa,KAAb,EAAoBF,UAAUG,GAAV,CAAc,mBAAd,CAApB,CAAD,EAA0D,MAA1D,CAAD,CAFW;AAGvBC,SAAK;AAHkB,GAAvB,EAIEjB,IAJF,CAIO,UAACC,IAAD,EAAU;AACjBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GANC,EAMCE,KAND,CAMO,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GARC;AASD,CAXM;AAYN",
      "file": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/delta-api/src/controllers",
      "sourcesContent": [
        "var Resource=require('../models/chrome-history')\n\nexport const getAll= function(req,res){Resource.links.findAll({}).then((data) => {\n    res.json(data)\n  }).catch((err) => {\n    console.log(err);\n  })\n}\nexport const getOne= function(req,res){Resource.links.findAll({ where: {\n  uid: req.params.id\n} }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n\n\nexport const getMax= function(req,res){\n  var sequelize=require('sequelize')\n  Resource.links.findAll({ \n\n  attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n  raw: true,\n }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n //module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}"
      ]
    },
    "mtime": 1559308068584
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/models/chrome-history.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/models/chrome-history.js",
      "filenameRelative": "/home/tanuj/delta-api/src/models/chrome-history.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.js",
      "sourceFileName": "chrome-history.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar index = require('../database');\n\nvar links = index.define('history', {\n  user_id: {\n    type: _sequelize2.default.STRING\n  },\n  url: {\n    type: _sequelize2.default.STRING(2000)\n  },\n  ip: {\n    type: _sequelize2.default.STRING\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.STRING\n  },\n  title: {\n    type: _sequelize2.default.STRING\n  },\n  visitcount: {\n    type: _sequelize2.default.INTEGER\n  },\n  useragent: {\n    type: _sequelize2.default.STRING\n  }\n\n}, {\n  freezeTableName: true\n});\nlinks.sync({ force: false }).then(function () {\n  return true;\n});\n\nmodule.exports = { \"links\": links };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmpzIl0sIm5hbWVzIjpbImluZGV4IiwicmVxdWlyZSIsImxpbmtzIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJTVFJJTkciLCJ1cmwiLCJpcCIsInZpc2l0ZWRfdGltZXN0YW1wIiwidGl0bGUiLCJ2aXNpdGNvdW50IiwiSU5URUdFUiIsInVzZXJhZ2VudCIsImZyZWV6ZVRhYmxlTmFtZSIsInN5bmMiLCJmb3JjZSIsInRoZW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBOzs7Ozs7QUFEQSxJQUFNQSxRQUFNQyxRQUFRLGFBQVIsQ0FBWjs7QUFFQSxJQUFJQyxRQUFRRixNQUFNRyxNQUFOLENBQWEsU0FBYixFQUF3QjtBQUNoQ0MsV0FBUztBQUNQQyxVQUFNQyxvQkFBVUM7QUFEVCxHQUR1QjtBQUloQ0MsT0FBSztBQUNISCxVQUFNQyxvQkFBVUMsTUFBVixDQUFpQixJQUFqQjtBQURILEdBSjJCO0FBT2hDRSxNQUFHO0FBQ0RKLFVBQUtDLG9CQUFVQztBQURkLEdBUDZCO0FBVWhDRyxxQkFBa0I7QUFDaEJMLFVBQU1DLG9CQUFVQztBQURBLEdBVmM7QUFhaENJLFNBQ0E7QUFDRU4sVUFBS0Msb0JBQVVDO0FBRGpCLEdBZGdDO0FBaUJoQ0ssY0FDQTtBQUNFUCxVQUFLQyxvQkFBVU87QUFEakIsR0FsQmdDO0FBcUJoQ0MsYUFDQTtBQUNFVCxVQUFNQyxvQkFBVUM7QUFEbEI7O0FBdEJnQyxDQUF4QixFQTJCUDtBQUNEUSxtQkFBaUI7QUFEaEIsQ0EzQk8sQ0FBWjtBQThCRWIsTUFBTWMsSUFBTixDQUFXLEVBQUNDLE9BQU8sS0FBUixFQUFYLEVBQTJCQyxJQUEzQixDQUFnQyxZQUFZO0FBQzFDLFNBQU8sSUFBUDtBQUNELENBRkQ7O0FBSUFDLE9BQU9DLE9BQVAsR0FBZSxFQUFDLFNBQVFsQixLQUFULEVBQWYiLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpbmRleD1yZXF1aXJlKCcuLi9kYXRhYmFzZScpXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IFxudmFyIGxpbmtzID0gaW5kZXguZGVmaW5lKCdoaXN0b3J5Jywge1xuICAgIHVzZXJfaWQ6IHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHVybDoge1xuICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklORygyMDAwKVxuICAgIH0sXG4gICAgaXA6e1xuICAgICAgdHlwZTpTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB2aXNpdGVkX3RpbWVzdGFtcDp7XG4gICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB0aXRsZTpcbiAgICB7XG4gICAgICB0eXBlOlNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHZpc2l0Y291bnQ6XG4gICAge1xuICAgICAgdHlwZTpTZXF1ZWxpemUuSU5URUdFUlxuICAgIH0sXG4gICAgdXNlcmFnZW50OlxuICAgIHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9XG5cblxuICB9LCB7XG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlXG4gIH0pO1xuICBsaW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSk7XG5cbiAgbW9kdWxlLmV4cG9ydHM9e1wibGlua3NcIjpsaW5rc307XG5cblxuXG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.js"
      ],
      "names": [
        "index",
        "require",
        "links",
        "define",
        "user_id",
        "type",
        "Sequelize",
        "STRING",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "INTEGER",
        "useragent",
        "freezeTableName",
        "sync",
        "force",
        "then",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;;;;;AADA,IAAMA,QAAMC,QAAQ,aAAR,CAAZ;;AAEA,IAAIC,QAAQF,MAAMG,MAAN,CAAa,SAAb,EAAwB;AAChCC,WAAS;AACPC,UAAMC,oBAAUC;AADT,GADuB;AAIhCC,OAAK;AACHH,UAAMC,oBAAUC,MAAV,CAAiB,IAAjB;AADH,GAJ2B;AAOhCE,MAAG;AACDJ,UAAKC,oBAAUC;AADd,GAP6B;AAUhCG,qBAAkB;AAChBL,UAAMC,oBAAUC;AADA,GAVc;AAahCI,SACA;AACEN,UAAKC,oBAAUC;AADjB,GAdgC;AAiBhCK,cACA;AACEP,UAAKC,oBAAUO;AADjB,GAlBgC;AAqBhCC,aACA;AACET,UAAMC,oBAAUC;AADlB;;AAtBgC,CAAxB,EA2BP;AACDQ,mBAAiB;AADhB,CA3BO,CAAZ;AA8BEb,MAAMc,IAAN,CAAW,EAACC,OAAO,KAAR,EAAX,EAA2BC,IAA3B,CAAgC,YAAY;AAC1C,SAAO,IAAP;AACD,CAFD;;AAIAC,OAAOC,OAAP,GAAe,EAAC,SAAQlB,KAAT,EAAf",
      "file": "chrome-history.js",
      "sourceRoot": "/home/tanuj/delta-api/src/models",
      "sourcesContent": [
        "const index=require('../database')\nimport Sequelize from 'sequelize'; \nvar links = index.define('history', {\n    user_id: {\n      type: Sequelize.STRING\n    },\n    url: {\n      type: Sequelize.STRING(2000)\n    },\n    ip:{\n      type:Sequelize.STRING\n    },\n    visited_timestamp:{\n      type: Sequelize.STRING\n    },\n    title:\n    {\n      type:Sequelize.STRING\n    },\n    visitcount:\n    {\n      type:Sequelize.INTEGER\n    },\n    useragent:\n    {\n      type: Sequelize.STRING\n    }\n\n\n  }, {\n    freezeTableName: true\n  });\n  links.sync({force: false}).then(function () {\n    return true;\n  });\n\n  module.exports={\"links\":links};\n\n\n\n\n"
      ]
    },
    "mtime": 1559307725396
  },
  "{\"filename\":\"/home/tanuj/delta-api/src/database.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/delta-api/src/database.js",
      "filenameRelative": "/home/tanuj/delta-api/src/database.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "database.js",
      "sourceFileName": "database.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "database"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000\n  }\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsImFjcXVpcmUiLCJpZGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQ0EsSUFBTUEsWUFBWSxJQUFJQyxtQkFBSixDQUFjLFVBQWQsRUFBeUIsVUFBekIsRUFBb0MsT0FBcEMsRUFBNkM7QUFDM0RDLFFBQU0sV0FEcUQ7QUFFN0RDLFdBQVMsVUFGb0Q7QUFHN0RDLFFBQU07QUFDSkMsU0FBSyxDQUREO0FBRUpDLGFBQVMsS0FGTDtBQUdKQyxVQUFNO0FBSEY7QUFIdUQsQ0FBN0MsQ0FBbEI7QUFTQUMsT0FBT0MsT0FBUCxHQUFnQlQsU0FBaEIiLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovZGVsdGEtYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJ1xuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZSgncG9zdGdyZXMnLCdwb3N0Z3JlcycsJ3RhbnVqJywge1xuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICBwb29sOiB7XG4gICAgbWF4OiA1LFxuICAgIGFjcXVpcmU6IDMwMDAwLFxuICAgIGlkbGU6IDEwMDAwLFxuICB9XG59KTtcbm1vZHVsZS5leHBvcnRzID1zZXF1ZWxpemUiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "acquire",
        "idle",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAAyB,UAAzB,EAAoC,OAApC,EAA6C;AAC3DC,QAAM,WADqD;AAE7DC,WAAS,UAFoD;AAG7DC,QAAM;AACJC,SAAK,CADD;AAEJC,aAAS,KAFL;AAGJC,UAAM;AAHF;AAHuD,CAA7C,CAAlB;AASAC,OAAOC,OAAP,GAAgBT,SAAhB",
      "file": "database.js",
      "sourceRoot": "/home/tanuj/delta-api/src",
      "sourcesContent": [
        "import Sequelize from 'sequelize'\nconst sequelize = new Sequelize('postgres','postgres','tanuj', {\n    host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000,\n  }\n});\nmodule.exports =sequelize"
      ]
    },
    "mtime": 1559243369680
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./server",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "app"
              }
            ]
          },
          {
            "source": "./models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "./seeds/users",
            "imported": [
              "createSuperAdmin"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createSuperAdmin",
                "local": "createSuperAdmin"
              }
            ]
          },
          {
            "source": "./util/dbConnect",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dbConnect"
              }
            ]
          },
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/index.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _server = require('./server');\n\nvar _server2 = _interopRequireDefault(_server);\n\nvar _user = require('./models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _users = require('./seeds/users');\n\nvar _dbConnect = require('./util/dbConnect');\n\nvar _dbConnect2 = _interopRequireDefault(_dbConnect);\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar _process$env = process.env,\n    PORT = _process$env.PORT,\n    DEFAULT_USER = _process$env.DEFAULT_USER;\n\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize.authenticate().then(function () {\n  console.log('Connection has been established successfully.');\n}).catch(function (err) {\n  console.error('Unable to connect to the database:', err);\n});\n\n(0, _dbConnect2.default)().then(function () {\n\n  _user2.default.findOne({ email: DEFAULT_USER }).then(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(user) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user === null)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return (0, _users.createSuperAdmin)();\n\n            case 3:\n\n              _server2.default.listen(PORT, function (err) {\n                if (!err) {\n                  console.log('Server is running on port: ' + PORT);\n                }\n              });\n\n            case 4:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}).catch(function (err) {\n  return console.error('MongoDB connection failure' + err);\n});\n\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiREVGQVVMVF9VU0VSIiwic2VxdWVsaXplIiwiU2VxdWVsaXplIiwiaG9zdCIsImRpYWxlY3QiLCJwb29sIiwibWF4IiwibWluIiwiaWRsZSIsImF1dGhlbnRpY2F0ZSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciIsImVyciIsIlVzZXIiLCJmaW5kT25lIiwiZW1haWwiLCJ1c2VyIiwiYXBwIiwibGlzdGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7bUJBQzZCQSxRQUFRQyxHO0lBQTlCQyxJLGdCQUFBQSxJO0lBQU1DLFksZ0JBQUFBLFk7OztBQUViLElBQU1DLFlBQVksSUFBSUMsbUJBQUosQ0FBYyxVQUFkLEVBQTBCLFVBQTFCLEVBQXNDLE9BQXRDLEVBQStDO0FBQy9EQyxRQUFNLFdBRHlEO0FBRS9EQyxXQUFTLFVBRnNEO0FBRy9EQyxRQUFNO0FBQ0pDLFNBQUssQ0FERDtBQUVKQyxTQUFLLENBRkQ7QUFHSkMsVUFBTTtBQUhGO0FBSHlELENBQS9DLENBQWxCO0FBU0FQLFVBQ0dRLFlBREgsR0FFR0MsSUFGSCxDQUVRLFlBQU07QUFDVkMsVUFBUUMsR0FBUixDQUFZLCtDQUFaO0FBQ0QsQ0FKSCxFQUtHQyxLQUxILENBS1MsZUFBTztBQUNaRixVQUFRRyxLQUFSLENBQWMsb0NBQWQsRUFBb0RDLEdBQXBEO0FBQ0QsQ0FQSDs7QUFVQSwyQkFBWUwsSUFBWixDQUFrQixZQUFNOztBQUV0Qk0saUJBQUtDLE9BQUwsQ0FBYSxFQUFFQyxPQUFPbEIsWUFBVCxFQUFiLEVBQXNDVSxJQUF0QztBQUFBLHVFQUEyQyxpQkFBTVMsSUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsb0JBQ3RDQSxTQUFTLElBRDZCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBRWpDLDhCQUZpQzs7QUFBQTs7QUFLekNDLCtCQUFJQyxNQUFKLENBQVd0QixJQUFYLEVBQWlCLGVBQU87QUFDdEIsb0JBQUksQ0FBQ2dCLEdBQUwsRUFBVTtBQUNSSiwwQkFBUUMsR0FBUixpQ0FBMENiLElBQTFDO0FBQ0Q7QUFDRixlQUpEOztBQUx5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUEzQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVlELENBZEQsRUFjR2MsS0FkSCxDQWNTO0FBQUEsU0FBT0YsUUFBUUcsS0FBUixDQUFjLCtCQUErQkMsR0FBN0MsQ0FBUDtBQUFBLENBZFQ7O0FBZ0JBTyxPQUFPQyxPQUFQLEdBQWV0QixTQUFmIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwIGZyb20gJy4vc2VydmVyJztcbmltcG9ydCBVc2VyIGZyb20gJy4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtjcmVhdGVTdXBlckFkbWlufSBmcm9tICcuL3NlZWRzL3VzZXJzJztcbmltcG9ydCBkYkNvbm5lY3QgZnJvbSAnLi91dGlsL2RiQ29ubmVjdCc7XG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5jb25zdCB7UE9SVCwgREVGQVVMVF9VU0VSfSA9IHByb2Nlc3MuZW52O1xuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKCdwb3N0Z3JlcycsICdwb3N0Z3JlcycsICd0YW51aicsIHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIGRpYWxlY3Q6ICdwb3N0Z3JlcycsXG4gIHBvb2w6IHtcbiAgICBtYXg6IDksXG4gICAgbWluOiAwLFxuICAgIGlkbGU6IDEwMDAwXG4gIH1cbn0pO1xuc2VxdWVsaXplXG4gIC5hdXRoZW50aWNhdGUoKVxuICAudGhlbigoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gaGFzIGJlZW4gZXN0YWJsaXNoZWQgc3VjY2Vzc2Z1bGx5LicpO1xuICB9KVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2U6JywgZXJyKTtcbiAgfSk7XG5cblxuZGJDb25uZWN0KCkudGhlbiggKCkgPT4ge1xuXG4gIFVzZXIuZmluZE9uZSh7IGVtYWlsOiBERUZBVUxUX1VTRVIgfSkudGhlbihhc3luYyB1c2VyID0+IHtcbiAgICBpZih1c2VyID09PSBudWxsKXtcbiAgICAgIGF3YWl0IGNyZWF0ZVN1cGVyQWRtaW4oKTtcbiAgICB9XG5cbiAgICBhcHAubGlzdGVuKFBPUlQsIGVyciA9PiB7XG4gICAgICBpZiAoIWVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydDogJHtQT1JUfWApO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxufSkuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoJ01vbmdvREIgY29ubmVjdGlvbiBmYWlsdXJlJyArIGVycikpO1xuXG5tb2R1bGUuZXhwb3J0cz1zZXF1ZWxpemU7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "process",
        "env",
        "PORT",
        "DEFAULT_USER",
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "min",
        "idle",
        "authenticate",
        "then",
        "console",
        "log",
        "catch",
        "error",
        "err",
        "User",
        "findOne",
        "email",
        "user",
        "app",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;mBAC6BA,QAAQC,G;IAA9BC,I,gBAAAA,I;IAAMC,Y,gBAAAA,Y;;;AAEb,IAAMC,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAA0B,UAA1B,EAAsC,OAAtC,EAA+C;AAC/DC,QAAM,WADyD;AAE/DC,WAAS,UAFsD;AAG/DC,QAAM;AACJC,SAAK,CADD;AAEJC,SAAK,CAFD;AAGJC,UAAM;AAHF;AAHyD,CAA/C,CAAlB;AASAP,UACGQ,YADH,GAEGC,IAFH,CAEQ,YAAM;AACVC,UAAQC,GAAR,CAAY,+CAAZ;AACD,CAJH,EAKGC,KALH,CAKS,eAAO;AACZF,UAAQG,KAAR,CAAc,oCAAd,EAAoDC,GAApD;AACD,CAPH;;AAUA,2BAAYL,IAAZ,CAAkB,YAAM;;AAEtBM,iBAAKC,OAAL,CAAa,EAAEC,OAAOlB,YAAT,EAAb,EAAsCU,IAAtC;AAAA,uEAA2C,iBAAMS,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBACtCA,SAAS,IAD6B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEjC,8BAFiC;;AAAA;;AAKzCC,+BAAIC,MAAJ,CAAWtB,IAAX,EAAiB,eAAO;AACtB,oBAAI,CAACgB,GAAL,EAAU;AACRJ,0BAAQC,GAAR,iCAA0Cb,IAA1C;AACD;AACF,eAJD;;AALyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3C;;AAAA;AAAA;AAAA;AAAA;AAYD,CAdD,EAcGc,KAdH,CAcS;AAAA,SAAOF,QAAQG,KAAR,CAAc,+BAA+BC,GAA7C,CAAP;AAAA,CAdT;;AAgBAO,OAAOC,OAAP,GAAetB,SAAf",
      "file": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "sourcesContent": [
        "import app from './server';\nimport User from './models/user';\nimport {createSuperAdmin} from './seeds/users';\nimport dbConnect from './util/dbConnect';\nimport Sequelize from 'sequelize';\nconst {PORT, DEFAULT_USER} = process.env;\n\nconst sequelize = new Sequelize('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize\n  .authenticate()\n  .then(() => {\n    console.log('Connection has been established successfully.');\n  })\n  .catch(err => {\n    console.error('Unable to connect to the database:', err);\n  });\n\n\ndbConnect().then( () => {\n\n  User.findOne({ email: DEFAULT_USER }).then(async user => {\n    if(user === null){\n      await createSuperAdmin();\n    }\n\n    app.listen(PORT, err => {\n      if (!err) {\n        console.log(`Server is running on port: ${PORT}`);\n      }\n    });\n  });\n\n}).catch(err => console.error('MongoDB connection failure' + err));\n\nmodule.exports=sequelize;\n"
      ]
    },
    "mtime": 1559499396616
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "compression",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "compression"
              }
            ]
          },
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "path",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "path"
              }
            ]
          },
          {
            "source": "./routes/api.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "apiRouter"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/server.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _compression = require('compression');\n\nvar _compression2 = _interopRequireDefault(_compression);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _api = require('./routes/api.routes');\n\nvar _api2 = _interopRequireDefault(_api);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Initialize the Express App\nvar app = new _express2.default();\n\n// Apply body Parser\napp.use((0, _compression2.default)());\napp.use(_bodyParser2.default.json({ limit: '20mb' }));\napp.use(_bodyParser2.default.urlencoded({ limit: '20mb', extended: false }));\n\napp.use('/api', _api2.default);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexports.default = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJFeHByZXNzIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJsaW1pdCIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImFwaVJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUE7QUFDQSxJQUFNQSxNQUFNLElBQUlDLGlCQUFKLEVBQVo7O0FBRUE7QUFDQUQsSUFBSUUsR0FBSixDQUFRLDRCQUFSO0FBQ0FGLElBQUlFLEdBQUosQ0FBUUMscUJBQVdDLElBQVgsQ0FBZ0IsRUFBRUMsT0FBTyxNQUFULEVBQWhCLENBQVI7QUFDQUwsSUFBSUUsR0FBSixDQUFRQyxxQkFBV0csVUFBWCxDQUFzQixFQUFFRCxPQUFPLE1BQVQsRUFBaUJFLFVBQVUsS0FBM0IsRUFBdEIsQ0FBUjs7QUFHQVAsSUFBSUUsR0FBSixDQUFRLE1BQVIsRUFBZ0JNLGFBQWhCO0FBQ0E7O2tCQUVlUixHIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29tcHJlc3Npb24gZnJvbSAnY29tcHJlc3Npb24nO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgYXBpUm91dGVyIGZyb20gJy4vcm91dGVzL2FwaS5yb3V0ZXMnO1xuXG4vLyBJbml0aWFsaXplIHRoZSBFeHByZXNzIEFwcFxuY29uc3QgYXBwID0gbmV3IEV4cHJlc3MoKTtcblxuLy8gQXBwbHkgYm9keSBQYXJzZXJcbmFwcC51c2UoY29tcHJlc3Npb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7IGxpbWl0OiAnMjBtYicgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBsaW1pdDogJzIwbWInLCBleHRlbmRlZDogZmFsc2UgfSkpO1xuXG5cbmFwcC51c2UoJy9hcGknLCBhcGlSb3V0ZXIpO1xuLy8gYXBwLnVzZShFeHByZXNzLnN0YXRpYyhwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vcHVibGljLycpKSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "Express",
        "use",
        "bodyParser",
        "json",
        "limit",
        "urlencoded",
        "extended",
        "apiRouter"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,IAAIC,iBAAJ,EAAZ;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,4BAAR;AACAF,IAAIE,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB,EAAEC,OAAO,MAAT,EAAhB,CAAR;AACAL,IAAIE,GAAJ,CAAQC,qBAAWG,UAAX,CAAsB,EAAED,OAAO,MAAT,EAAiBE,UAAU,KAA3B,EAAtB,CAAR;;AAGAP,IAAIE,GAAJ,CAAQ,MAAR,EAAgBM,aAAhB;AACA;;kBAEeR,G",
      "file": "server.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "sourcesContent": [
        "import Express from 'express';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport apiRouter from './routes/api.routes';\n\n// Initialize the Express App\nconst app = new Express();\n\n// Apply body Parser\napp.use(compression());\napp.use(bodyParser.json({ limit: '20mb' }));\napp.use(bodyParser.urlencoded({ limit: '20mb', extended: false }));\n\n\napp.use('/api', apiRouter);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexport default app;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/api.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "./auth.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "authentication"
              }
            ]
          },
          {
            "source": "./cohort.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cohort"
              }
            ]
          },
          {
            "source": "./educator.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "educator"
              }
            ]
          },
          {
            "source": "./student.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "student"
              }
            ]
          },
          {
            "source": "./prompt.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "prompt"
              }
            ]
          },
          {
            "source": "./ping.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "ping"
              }
            ]
          },
          {
            "source": "./pingpong.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "pingpong"
              }
            ]
          },
          {
            "source": "./mailer.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mailer"
              }
            ]
          },
          {
            "source": "./day.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "days"
              }
            ]
          },
          {
            "source": "./admin.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "admin"
              }
            ]
          },
          {
            "source": "./todo.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "todo"
              }
            ]
          },
          {
            "source": "./note.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "note"
              }
            ]
          },
          {
            "source": "./link.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "link"
              }
            ]
          },
          {
            "source": "./user.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "user"
              }
            ]
          },
          {
            "source": "./chrome-history.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "chromehistory"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "getProfile",
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getProfile",
                "local": "getProfile"
              },
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/api.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/api.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "api.routes.js",
      "sourceFileName": "api.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "api.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _auth = require('./auth.routes');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _cohort = require('./cohort.routes');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _educator = require('./educator.routes');\n\nvar _educator2 = _interopRequireDefault(_educator);\n\nvar _student = require('./student.routes');\n\nvar _student2 = _interopRequireDefault(_student);\n\nvar _prompt = require('./prompt.routes');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _ping = require('./ping.routes');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _pingpong = require('./pingpong.routes');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nvar _mailer = require('./mailer.routes');\n\nvar _mailer2 = _interopRequireDefault(_mailer);\n\nvar _day = require('./day.routes');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _admin = require('./admin.routes');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _todo = require('./todo.routes');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nvar _note = require('./note.routes');\n\nvar _note2 = _interopRequireDefault(_note);\n\nvar _link = require('./link.routes');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _user = require('./user.routes');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _chromeHistory = require('./chrome-history.routes');\n\nvar _chromeHistory2 = _interopRequireDefault(_chromeHistory);\n\nvar _user3 = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n// api doc is accessible in development environment only\nif (process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', _express2.default.static('./doc'));\n}\nrouter.use('/links', _link2.default);\nrouter.use('/chrome-history', _chromeHistory2.default);\nrouter.use(_auth2.default);\n\nrouter.use('/cohorts', _cohort2.default);\nrouter.use('/educators', _educator2.default);\nrouter.use('/students', _student2.default);\nrouter.use('/prompts', _prompt2.default);\nrouter.use('/pings', _ping2.default);\nrouter.use('/pingpongs', _pingpong2.default);\nrouter.use('/mailer', _mailer2.default);\nrouter.use('/days', _day2.default);\nrouter.use('/admin', _admin2.default);\nrouter.use('/todos', _todo2.default);\nrouter.use('/notes', _note2.default);\nrouter.use('/users', _user2.default);\n\nrouter.get('/profile', _user3.populateCurrentUser, _user3.getProfile);\n\nrouter.get('/', function (req, res) {\n\treturn res.send('API home');\n});\nrouter.use('*', function (req, res) {\n\treturn res.sendStatus(404);\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInVzZSIsInN0YXRpYyIsImxpbmsiLCJjaHJvbWVoaXN0b3J5IiwiYXV0aGVudGljYXRpb24iLCJjb2hvcnQiLCJlZHVjYXRvciIsInN0dWRlbnQiLCJwcm9tcHQiLCJwaW5nIiwicGluZ3BvbmciLCJtYWlsZXIiLCJkYXlzIiwiYWRtaW4iLCJ0b2RvIiwibm90ZSIsInVzZXIiLCJnZXQiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0UHJvZmlsZSIsInJlcSIsInJlcyIsInNlbmQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjtBQUNBO0FBQ0EsSUFBR0MsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLGFBQTVCLEVBQTJDO0FBQzFDTCxRQUFPTSxHQUFQLENBQVcsTUFBWCxFQUFtQkwsa0JBQVFNLE1BQVIsQ0FBZSxPQUFmLENBQW5CO0FBQ0E7QUFDRFAsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJFLGNBQXJCO0FBQ0FSLE9BQU9NLEdBQVAsQ0FBVyxpQkFBWCxFQUE2QkcsdUJBQTdCO0FBQ0FULE9BQU9NLEdBQVAsQ0FBV0ksY0FBWDs7QUFFQVYsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJLLGdCQUF2QjtBQUNBWCxPQUFPTSxHQUFQLENBQVcsWUFBWCxFQUF5Qk0sa0JBQXpCO0FBQ0FaLE9BQU9NLEdBQVAsQ0FBVyxXQUFYLEVBQXdCTyxpQkFBeEI7QUFDQWIsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJRLGdCQUF2QjtBQUNBZCxPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQlMsY0FBckI7QUFDQWYsT0FBT00sR0FBUCxDQUFXLFlBQVgsRUFBeUJVLGtCQUF6QjtBQUNBaEIsT0FBT00sR0FBUCxDQUFXLFNBQVgsRUFBc0JXLGdCQUF0QjtBQUNBakIsT0FBT00sR0FBUCxDQUFXLE9BQVgsRUFBb0JZLGFBQXBCO0FBQ0FsQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmEsZUFBckI7QUFDQW5CLE9BQU9NLEdBQVAsQ0FBVyxRQUFYLEVBQXFCYyxjQUFyQjtBQUNBcEIsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJlLGNBQXJCO0FBQ0FyQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmdCLGNBQXJCOztBQUdBdEIsT0FBT3VCLEdBQVAsQ0FBVyxVQUFYLEVBQXVCQywwQkFBdkIsRUFBNENDLGlCQUE1Qzs7QUFFQXpCLE9BQU91QixHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFDRyxHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJQyxJQUFKLENBQVMsVUFBVCxDQUFkO0FBQUEsQ0FBaEI7QUFDQTVCLE9BQU9NLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNvQixHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJRSxVQUFKLENBQWUsR0FBZixDQUFkO0FBQUEsQ0FBaEI7O2tCQUVlN0IsTSIsImZpbGUiOiJhcGkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYXV0aGVudGljYXRpb24gZnJvbSAnLi9hdXRoLnJvdXRlcyc7XG5pbXBvcnQgY29ob3J0IGZyb20gJy4vY29ob3J0LnJvdXRlcyc7XG5pbXBvcnQgZWR1Y2F0b3IgZnJvbSAnLi9lZHVjYXRvci5yb3V0ZXMnO1xuaW1wb3J0IHN0dWRlbnQgZnJvbSAnLi9zdHVkZW50LnJvdXRlcyc7XG5pbXBvcnQgcHJvbXB0IGZyb20gJy4vcHJvbXB0LnJvdXRlcyc7XG5pbXBvcnQgcGluZyBmcm9tICcuL3Bpbmcucm91dGVzJztcbmltcG9ydCBwaW5ncG9uZyBmcm9tICcuL3Bpbmdwb25nLnJvdXRlcyc7XG5pbXBvcnQgbWFpbGVyIGZyb20gJy4vbWFpbGVyLnJvdXRlcyc7XG5pbXBvcnQgZGF5cyBmcm9tICcuL2RheS5yb3V0ZXMnO1xuaW1wb3J0IGFkbWluIGZyb20gJy4vYWRtaW4ucm91dGVzJztcbmltcG9ydCB0b2RvIGZyb20gJy4vdG9kby5yb3V0ZXMnO1xuaW1wb3J0IG5vdGUgZnJvbSAnLi9ub3RlLnJvdXRlcyc7XG5pbXBvcnQgbGluayBmcm9tICcuL2xpbmsucm91dGVzJztcbmltcG9ydCB1c2VyIGZyb20gJy4vdXNlci5yb3V0ZXMnXG5pbXBvcnQgY2hyb21laGlzdG9yeSBmcm9tICcuL2Nocm9tZS1oaXN0b3J5LnJvdXRlcyc7XG5pbXBvcnQge2dldFByb2ZpbGUsIHBvcHVsYXRlQ3VycmVudFVzZXJ9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG4vLyBhcGkgZG9jIGlzIGFjY2Vzc2libGUgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQgb25seVxuaWYocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcblx0cm91dGVyLnVzZSgnL2RvYycsIEV4cHJlc3Muc3RhdGljKCcuL2RvYycpKTtcbn1cbnJvdXRlci51c2UoJy9saW5rcycsIGxpbmspO1xucm91dGVyLnVzZSgnL2Nocm9tZS1oaXN0b3J5JyxjaHJvbWVoaXN0b3J5KVxucm91dGVyLnVzZShhdXRoZW50aWNhdGlvbik7XG5cbnJvdXRlci51c2UoJy9jb2hvcnRzJywgY29ob3J0KTtcbnJvdXRlci51c2UoJy9lZHVjYXRvcnMnLCBlZHVjYXRvcik7XG5yb3V0ZXIudXNlKCcvc3R1ZGVudHMnLCBzdHVkZW50KTtcbnJvdXRlci51c2UoJy9wcm9tcHRzJywgcHJvbXB0KTtcbnJvdXRlci51c2UoJy9waW5ncycsIHBpbmcpO1xucm91dGVyLnVzZSgnL3Bpbmdwb25ncycsIHBpbmdwb25nKTtcbnJvdXRlci51c2UoJy9tYWlsZXInLCBtYWlsZXIpO1xucm91dGVyLnVzZSgnL2RheXMnLCBkYXlzKTtcbnJvdXRlci51c2UoJy9hZG1pbicsIGFkbWluKTtcbnJvdXRlci51c2UoJy90b2RvcycsIHRvZG8pO1xucm91dGVyLnVzZSgnL25vdGVzJywgbm90ZSk7XG5yb3V0ZXIudXNlKCcvdXNlcnMnLCB1c2VyKVxuXG5cbnJvdXRlci5nZXQoJy9wcm9maWxlJywgcG9wdWxhdGVDdXJyZW50VXNlciwgZ2V0UHJvZmlsZSk7XG5cbnJvdXRlci5nZXQoJy8nLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKCdBUEkgaG9tZScpKTtcbnJvdXRlci51c2UoJyonLCAocmVxLCByZXMpID0+IHJlcy5zZW5kU3RhdHVzKDQwNCkpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "api.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "process",
        "env",
        "NODE_ENV",
        "use",
        "static",
        "link",
        "chromehistory",
        "authentication",
        "cohort",
        "educator",
        "student",
        "prompt",
        "ping",
        "pingpong",
        "mailer",
        "days",
        "admin",
        "todo",
        "note",
        "user",
        "get",
        "populateCurrentUser",
        "getProfile",
        "req",
        "res",
        "send",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;AACA;AACA,IAAGC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AAC1CL,QAAOM,GAAP,CAAW,MAAX,EAAmBL,kBAAQM,MAAR,CAAe,OAAf,CAAnB;AACA;AACDP,OAAOM,GAAP,CAAW,QAAX,EAAqBE,cAArB;AACAR,OAAOM,GAAP,CAAW,iBAAX,EAA6BG,uBAA7B;AACAT,OAAOM,GAAP,CAAWI,cAAX;;AAEAV,OAAOM,GAAP,CAAW,UAAX,EAAuBK,gBAAvB;AACAX,OAAOM,GAAP,CAAW,YAAX,EAAyBM,kBAAzB;AACAZ,OAAOM,GAAP,CAAW,WAAX,EAAwBO,iBAAxB;AACAb,OAAOM,GAAP,CAAW,UAAX,EAAuBQ,gBAAvB;AACAd,OAAOM,GAAP,CAAW,QAAX,EAAqBS,cAArB;AACAf,OAAOM,GAAP,CAAW,YAAX,EAAyBU,kBAAzB;AACAhB,OAAOM,GAAP,CAAW,SAAX,EAAsBW,gBAAtB;AACAjB,OAAOM,GAAP,CAAW,OAAX,EAAoBY,aAApB;AACAlB,OAAOM,GAAP,CAAW,QAAX,EAAqBa,eAArB;AACAnB,OAAOM,GAAP,CAAW,QAAX,EAAqBc,cAArB;AACApB,OAAOM,GAAP,CAAW,QAAX,EAAqBe,cAArB;AACArB,OAAOM,GAAP,CAAW,QAAX,EAAqBgB,cAArB;;AAGAtB,OAAOuB,GAAP,CAAW,UAAX,EAAuBC,0BAAvB,EAA4CC,iBAA5C;;AAEAzB,OAAOuB,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIC,IAAJ,CAAS,UAAT,CAAd;AAAA,CAAhB;AACA5B,OAAOM,GAAP,CAAW,GAAX,EAAgB,UAACoB,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIE,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;;kBAEe7B,M",
      "file": "api.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport authentication from './auth.routes';\nimport cohort from './cohort.routes';\nimport educator from './educator.routes';\nimport student from './student.routes';\nimport prompt from './prompt.routes';\nimport ping from './ping.routes';\nimport pingpong from './pingpong.routes';\nimport mailer from './mailer.routes';\nimport days from './day.routes';\nimport admin from './admin.routes';\nimport todo from './todo.routes';\nimport note from './note.routes';\nimport link from './link.routes';\nimport user from './user.routes'\nimport chromehistory from './chrome-history.routes';\nimport {getProfile, populateCurrentUser} from '../controllers/user.controller';\n\nconst router = Express.Router();\n// api doc is accessible in development environment only\nif(process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', Express.static('./doc'));\n}\nrouter.use('/links', link);\nrouter.use('/chrome-history',chromehistory)\nrouter.use(authentication);\n\nrouter.use('/cohorts', cohort);\nrouter.use('/educators', educator);\nrouter.use('/students', student);\nrouter.use('/prompts', prompt);\nrouter.use('/pings', ping);\nrouter.use('/pingpongs', pingpong);\nrouter.use('/mailer', mailer);\nrouter.use('/days', days);\nrouter.use('/admin', admin);\nrouter.use('/todos', todo);\nrouter.use('/notes', note);\nrouter.use('/users', user)\n\n\nrouter.get('/profile', populateCurrentUser, getProfile);\n\nrouter.get('/', (req, res) => res.send('API home'));\nrouter.use('*', (req, res) => res.sendStatus(404));\n\nexport default router;\n"
      ]
    },
    "mtime": 1559500318780
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/auth.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "../controllers/auth.controller",
            "imported": [
              "accessControl",
              "authenticate",
              "signinWithGithub"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "accessControl",
                "local": "accessControl"
              },
              {
                "kind": "named",
                "imported": "authenticate",
                "local": "authenticate"
              },
              {
                "kind": "named",
                "imported": "signinWithGithub",
                "local": "signinWithGithub"
              }
            ]
          },
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/auth.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/auth.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.routes.js",
      "sourceFileName": "auth.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _auth = require('../controllers/auth.controller');\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_auth.accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', _auth.signinWithGithub);\n\nrouter.use(_auth.authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', function (req, res, next) {\n  if (req.jwtData.scope === _authScopes2.default.STUDENT) {\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJhY2Nlc3NDb250cm9sIiwic2lnbmluV2l0aEdpdGh1YiIsImF1dGhlbnRpY2F0ZSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIlNUVURFTlQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXQyxtQkFBWDs7QUFFQTtBQUNBSixPQUFPRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNFLHNCQUFuQzs7QUFFQUwsT0FBT0csR0FBUCxDQUFXRyxrQkFBWDs7QUFFQTtBQUNBTixPQUFPRyxHQUFQLENBQVcsVUFBWCxFQUF1QixVQUFDSSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN6QyxNQUFHRixJQUFJRyxPQUFKLENBQVlDLEtBQVosS0FBc0JDLHFCQUFZQyxPQUFyQyxFQUE2QztBQUMzQztBQUNEO0FBQ0RKO0FBQ0QsQ0FMRDs7a0JBT2VULE0iLCJmaWxlIjoiYXV0aC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCB7YWNjZXNzQ29udHJvbCwgYXV0aGVudGljYXRlLCBzaWduaW5XaXRoR2l0aHVifSBmcm9tICcuLi9jb250cm9sbGVycy9hdXRoLmNvbnRyb2xsZXInO1xuaW1wb3J0IEFVVEhfU0NPUEVTIGZyb20gJy4uL3V0aWwvYXV0aFNjb3Blcyc7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci51c2UoYWNjZXNzQ29udHJvbCk7XG5cbi8vIFRoaXMgcm91dGUgZG9lc24ndCBuZWVkIHRvIGJlIGF1dGhlbnRpY2F0ZWRcbnJvdXRlci51c2UoJy9vYXV0aC9naXRodWIvc2lnbmluJywgc2lnbmluV2l0aEdpdGh1Yik7XG5cbnJvdXRlci51c2UoYXV0aGVudGljYXRlKTtcblxuLy8gUmVzdHJpY3Qgc3R1ZGVudHMgaW4gdGhlc2Ugcm91dGVzXG5yb3V0ZXIudXNlKCcvY29ob3J0cycsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZihyZXEuand0RGF0YS5zY29wZSA9PT0gQVVUSF9TQ09QRVMuU1RVREVOVCl7XG4gICAgLy8gcmVzLnNlbmRTdGF0dXMoNDAzKTtcbiAgfVxuICBuZXh0KCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "accessControl",
        "signinWithGithub",
        "authenticate",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "STUDENT"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,mBAAX;;AAEA;AACAJ,OAAOG,GAAP,CAAW,sBAAX,EAAmCE,sBAAnC;;AAEAL,OAAOG,GAAP,CAAWG,kBAAX;;AAEA;AACAN,OAAOG,GAAP,CAAW,UAAX,EAAuB,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAGF,IAAIG,OAAJ,CAAYC,KAAZ,KAAsBC,qBAAYC,OAArC,EAA6C;AAC3C;AACD;AACDJ;AACD,CALD;;kBAOeT,M",
      "file": "auth.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport {accessControl, authenticate, signinWithGithub} from '../controllers/auth.controller';\nimport AUTH_SCOPES from '../util/authScopes';\n\nconst router = Express.Router();\n\nrouter.use(accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', signinWithGithub);\n\nrouter.use(authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', (req, res, next) => {\n  if(req.jwtData.scope === AUTH_SCOPES.STUDENT){\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/auth.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "superagent",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "request"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./user.controller",
            "imported": [
              "getSpotterTeam"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSpotterTeam",
                "local": "getSpotterTeam"
              }
            ]
          },
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "accessControl",
            "authenticate",
            "signinWithGithub"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "accessControl",
              "exported": "accessControl"
            },
            {
              "kind": "local",
              "local": "authenticate",
              "exported": "authenticate"
            },
            {
              "kind": "local",
              "local": "signinWithGithub",
              "exported": "signinWithGithub"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/auth.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/auth.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.controller.js",
      "sourceFileName": "auth.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signinWithGithub = exports.authenticate = exports.accessControl = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _user = require('../models/user');\n\nvar _user2 = require('./user.controller');\n\nvar _token = require('../util/token');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar accessControl = exports.accessControl = function accessControl(req, res, next) {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n};\n\nvar authenticate = exports.authenticate = function authenticate(req, res, next) {\n  req.jwtData = {};\n\n  next();\n};\n\nvar getProfileFromGithub = function getProfileFromGithub(_ref) {\n  var githubToken = _ref.text;\n  return new Promise(function (resolve, reject) {\n\n    _superagent2.default.get('https://api.github.com/user?' + githubToken).then(function (profileResponse) {\n      var _profileResponse$body = profileResponse.body,\n          email = _profileResponse$body.email,\n          login = _profileResponse$body.login,\n          id = _profileResponse$body.id,\n          name = _profileResponse$body.name,\n          company = _profileResponse$body.company,\n          location = _profileResponse$body.location,\n          bio = _profileResponse$body.bio,\n          avatar_url = _profileResponse$body.avatar_url;\n\n      var profile = { email: email, login: login, id: id, name: name, company: company, location: location, bio: bio, avatar_url: avatar_url };\n\n      _user.User.findOne({ email: email }).then(function (user) {\n        if (user === null) {\n          // User not found. Checking alternate emails!\n          _superagent2.default.get('https://api.github.com/user/emails?' + githubToken).then(function (emailResponse) {\n            var emails = emailResponse.body.map(function (o) {\n              return o.email;\n            });\n            _user.User.findOne({ email: { $in: emails } }).then(function (user) {\n              if (user === null) {\n                reject();\n              } else {\n                // user.emails = emails;\n                resolve({ user: user, profile: profile, githubToken: githubToken });\n              }\n            }).catch(reject);\n          });\n        } else {\n          resolve({ user: user, profile: profile, githubToken: githubToken });\n        }\n      }).catch(reject);\n    }).catch(reject);\n  });\n};\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nvar signinWithGithub = exports.signinWithGithub = function signinWithGithub(req, res) {\n\n  var params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  _superagent2.default.post('https://github.com/login/oauth/access_token').send(params).then(getProfileFromGithub).then(function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3) {\n      var user = _ref3.user,\n          profile = _ref3.profile,\n          githubToken = _ref3.githubToken;\n      var spotterTeam, soalToken;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _user2.getSpotterTeam)(user);\n\n            case 2:\n              spotterTeam = _context.sent;\n\n\n              // User found. Sending a jsonwebtoken to the client!\n              soalToken = (0, _token.getSoalToken)(user, githubToken);\n\n              if (!(user.profile && user.profile.github)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) }));\n\n            case 6:\n              // new user signed up\n              user.profile = _extends({}, user.profile, { github: profile });\n              // Updating user with the github profile\n              user.save().then(function (user) {\n                // Update succeeded\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              }).catch(function (err) {\n                // Update Failed!!!\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              });\n\n            case 8:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }()).catch(function (err) {\n    console.log(err);\n    res.status(404).send('User not found!!!');\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "accessControl",
        "req",
        "res",
        "next",
        "header",
        "process",
        "env",
        "REACT_APP_SERVER",
        "method",
        "send",
        "authenticate",
        "jwtData",
        "getProfileFromGithub",
        "githubToken",
        "text",
        "Promise",
        "resolve",
        "reject",
        "request",
        "get",
        "then",
        "profileResponse",
        "body",
        "email",
        "login",
        "id",
        "name",
        "company",
        "location",
        "bio",
        "avatar_url",
        "profile",
        "User",
        "findOne",
        "user",
        "emails",
        "emailResponse",
        "map",
        "o",
        "$in",
        "catch",
        "signinWithGithub",
        "params",
        "client_id",
        "GITHUB_CLIENT_ID",
        "client_secret",
        "GITHUB_CLIENT_SECRET",
        "code",
        "query",
        "post",
        "spotterTeam",
        "soalToken",
        "github",
        "toObject",
        "save",
        "console",
        "log",
        "err",
        "status"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEO,IAAMA,wCAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;;AAE/CD,MAAIE,MAAJ,CAAW,6BAAX,EAA0CC,QAAQC,GAAR,CAAYC,gBAAtD;AACAL,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,6BAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,mCAA3C;;AAGA;AACA,MAAIH,IAAIO,MAAJ,KAAe,SAAnB,EAA8B;AAC5BN,QAAIO,IAAJ,CAAS,GAAT;AACD,GAFD,MAEO;AACLN;AACD;AAEF,CAdM;;AAgBA,IAAMO,sCAAe,SAAfA,YAAe,CAACT,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9CF,MAAIU,OAAJ,GAAY,EAAZ;;AAIER;AACD,CANI;;AAQP,IAAMS,uBAAuB,SAAvBA,oBAAuB;AAAA,MAAQC,WAAR,QAAEC,IAAF;AAAA,SAAyB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAErFC,yBAAQC,GAAR,CAAY,iCAA+BN,WAA3C,EAAwDO,IAAxD,CAA6D,2BAAmB;AAAA,kCACTC,gBAAgBC,IADP;AAAA,UACvEC,KADuE,yBACvEA,KADuE;AAAA,UAChEC,KADgE,yBAChEA,KADgE;AAAA,UACzDC,EADyD,yBACzDA,EADyD;AAAA,UACrDC,IADqD,yBACrDA,IADqD;AAAA,UAC/CC,OAD+C,yBAC/CA,OAD+C;AAAA,UACtCC,QADsC,yBACtCA,QADsC;AAAA,UAC5BC,GAD4B,yBAC5BA,GAD4B;AAAA,UACvBC,UADuB,yBACvBA,UADuB;;AAE9E,UAAMC,UAAU,EAACR,YAAD,EAAQC,YAAR,EAAeC,MAAf,EAAmBC,UAAnB,EAAyBC,gBAAzB,EAAkCC,kBAAlC,EAA4CC,QAA5C,EAAiDC,sBAAjD,EAAhB;;AAEAE,iBAAKC,OAAL,CAAa,EAACV,YAAD,EAAb,EAAsBH,IAAtB,CAA2B,gBAAQ;AACjC,YAAGc,SAAS,IAAZ,EAAiB;AACf;AACAhB,+BAAQC,GAAR,CAAY,wCAAsCN,WAAlD,EAA+DO,IAA/D,CAAoE,yBAAiB;AACnF,gBAAIe,SAASC,cAAcd,IAAd,CAAmBe,GAAnB,CAAuB;AAAA,qBAAGC,EAAEf,KAAL;AAAA,aAAvB,CAAb;AACAS,uBAAKC,OAAL,CAAa,EAACV,OAAO,EAACgB,KAAKJ,MAAN,EAAR,EAAb,EAAqCf,IAArC,CAA0C,gBAAM;AAC9C,kBAAGc,SAAS,IAAZ,EAAiB;AACfjB;AACD,eAFD,MAEO;AACL;AACAD,wBAAQ,EAACkB,UAAD,EAAOH,gBAAP,EAAgBlB,wBAAhB,EAAR;AACD;AACF,aAPD,EAQC2B,KARD,CAQOvB,MARP;AASD,WAXD;AAYD,SAdD,MAcO;AACLD,kBAAQ,EAACkB,UAAD,EAAOH,gBAAP,EAAgBlB,wBAAhB,EAAR;AACD;AACF,OAlBD,EAmBC2B,KAnBD,CAmBOvB,MAnBP;AAoBD,KAxBD,EAyBCuB,KAzBD,CAyBOvB,MAzBP;AA2BD,GA7BqD,CAAzB;AAAA,CAA7B;;AAgCA;AACO,IAAMwB,8CAAmB,SAAnBA,gBAAmB,CAACxC,GAAD,EAAMC,GAAN,EAAY;;AAE1C,MAAIwC,SAAS;AACXC,eAAWtC,QAAQC,GAAR,CAAYsC,gBADZ;AAEXC,mBAAexC,QAAQC,GAAR,CAAYwC,oBAFhB;AAGXC,UAAM9C,IAAI+C,KAAJ,CAAUD;AAHL,GAAb;;AAMA7B,uBAAQ+B,IAAR,CAAa,6CAAb,EAA4DxC,IAA5D,CAAiEiC,MAAjE,EACCtB,IADD,CACMR,oBADN,EAECQ,IAFD;AAAA,wEAEM;AAAA,UAAQc,IAAR,SAAQA,IAAR;AAAA,UAAcH,OAAd,SAAcA,OAAd;AAAA,UAAuBlB,WAAvB,SAAuBA,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEsB,2BAAeqB,IAAf,CAFtB;;AAAA;AAEEgB,yBAFF;;;AAIJ;AACMC,uBALF,GAKc,yBAAajB,IAAb,EAAmBrB,WAAnB,CALd;;AAAA,oBAMDqB,KAAKH,OAAL,IAAgBG,KAAKH,OAAL,CAAaqB,MAN5B;AAAA;AAAA;AAAA;;AAAA,+CAOKlD,IAAIO,IAAJ,CAAS,EAAC0C,oBAAD,EAAYjB,mBAAUA,KAAKmB,QAAL,EAAV,IAA2BH,wBAA3B,GAAZ,EAAT,CAPL;;AAAA;AASJ;AACAhB,mBAAKH,OAAL,gBAAoBG,KAAKH,OAAzB,IAAkCqB,QAAQrB,OAA1C;AACA;AACAG,mBAAKoB,IAAL,GAAYlC,IAAZ,CAAiB,gBAAM;AACrB;AACAlB,oBAAIO,IAAJ,CAAS,EAAC0C,oBAAD,EAAYjB,mBAAUA,KAAKmB,QAAL,EAAV,IAA2BH,wBAA3B,GAAZ,EAAT;AACD,eAHD,EAGGV,KAHH,CAGS,eAAO;AACd;AACAtC,oBAAIO,IAAJ,CAAS,EAAC0C,oBAAD,EAAYjB,mBAAUA,KAAKmB,QAAL,EAAV,IAA2BH,wBAA3B,GAAZ,EAAT;AACD,eAND;;AAZI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFN;;AAAA;AAAA;AAAA;AAAA,OAqBGV,KArBH,CAqBS,eAAO;AACde,YAAQC,GAAR,CAAYC,GAAZ;AACAvD,QAAIwD,MAAJ,CAAW,GAAX,EAAgBjD,IAAhB,CAAqB,mBAArB;AACD,GAxBD;AA0BD,CAlCM",
      "file": "auth.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport request from 'superagent';\nimport { User, USER_ROLES } from '../models/user';\nimport { getSpotterTeam } from './user.controller';\nimport {getSoalToken} from '../util/token';\n\nexport const accessControl = (req, res, next) => {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n\n}\n\nexport const authenticate = (req, res, next) => {\n  req.jwtData={\n  \n  };\n    \n    next();\n  }\n\nconst getProfileFromGithub = ({text: githubToken}) => new Promise((resolve, reject) => {\n\n  request.get('https://api.github.com/user?'+githubToken).then(profileResponse => {\n    const {email, login, id, name, company, location, bio, avatar_url} = profileResponse.body;\n    const profile = {email, login, id, name, company, location, bio, avatar_url};\n\n    User.findOne({email}).then(user => {\n      if(user === null){\n        // User not found. Checking alternate emails!\n        request.get('https://api.github.com/user/emails?'+githubToken).then(emailResponse => {\n          let emails = emailResponse.body.map(o=>o.email);\n          User.findOne({email: {$in: emails}}).then(user=>{\n            if(user === null){\n              reject();\n            } else {\n              // user.emails = emails;\n              resolve({user, profile, githubToken});\n            }\n          })\n          .catch(reject);\n        });\n      } else {\n        resolve({user, profile, githubToken});\n      }\n    })\n    .catch(reject);\n  })\n  .catch(reject);\n\n});\n\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nexport const signinWithGithub = (req, res)=>{\n\n  let params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  request.post('https://github.com/login/oauth/access_token').send(params)\n  .then(getProfileFromGithub)\n  .then(async ({user, profile, githubToken}) => {\n\n    const spotterTeam = await getSpotterTeam(user);\n\n    // User found. Sending a jsonwebtoken to the client!\n    const soalToken = getSoalToken(user, githubToken);\n    if(user.profile && user.profile.github){\n      return res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }\n    // new user signed up\n    user.profile = { ...user.profile, github: profile };\n    // Updating user with the github profile\n    user.save().then(user=>{\n      // Update succeeded\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }).catch(err => {\n      // Update Failed!!!\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}})\n    });\n  }).catch(err => {\n    console.log(err)\n    res.status(404).send('User not found!!!');\n  })\n\n}\n"
      ]
    },
    "mtime": 1559498895476
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "inherits",
        "possibleConstructorReturn",
        "classCallCheck",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "USER_ROLES",
            "User",
            "Student",
            "Educator"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "USER_ROLES",
              "exported": "USER_ROLES"
            },
            {
              "kind": "local",
              "local": "User",
              "exported": "User"
            },
            {
              "kind": "local",
              "local": "Student",
              "exported": "Student"
            },
            {
              "kind": "local",
              "local": "Educator",
              "exported": "Educator"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/user.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Educator = exports.Student = exports.User = exports.USER_ROLES = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Schema = _mongoose2.default.Schema;\nvar USER_ROLES = exports.USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst'\n};\n\nvar User = exports.User = _mongoose2.default.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String\n  },\n\n  // educator specific fields\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" }\n}));\n\n// can only be used for creation logic\n\nvar Student = exports.Student = function (_User) {\n  _inherits(Student, _User);\n\n  function Student(data) {\n    _classCallCheck(this, Student);\n\n    data && (data.role = USER_ROLES.STUDENT);\n    return _possibleConstructorReturn(this, (Student.__proto__ || Object.getPrototypeOf(Student)).call(this, data));\n  }\n\n  return Student;\n}(User);\n\n// can only be used for creation logic\n\n\nvar Educator = exports.Educator = function (_User2) {\n  _inherits(Educator, _User2);\n\n  function Educator(data) {\n    _classCallCheck(this, Educator);\n\n    data && (data.role = USER_ROLES.EDUCATOR);\n    return _possibleConstructorReturn(this, (Educator.__proto__ || Object.getPrototypeOf(Educator)).call(this, data));\n  }\n\n  return Educator;\n}(User);\n\nexports.default = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkNBVEFMWVNUIiwiVXNlciIsIm1vZGVsIiwibmFtZSIsInR5cGUiLCJyZXF1aXJlZCIsInJvbGUiLCJwcm9maWxlIiwiVHlwZXMiLCJNaXhlZCIsImNvaG9ydHMiLCJPYmplY3RJZCIsInJlZiIsImN1cnJlbnRDb2hvcnQiLCJwYXRoIiwiU3RyaW5nIiwic2VjcmV0IiwiZW1haWwiLCJwcm9ncmFtIiwiZGVmYXVsdCIsImxvY2F0aW9uIiwiU3R1ZGVudCIsImRhdGEiLCJFZHVjYXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO0FBRUEsSUFBTUUsa0NBQWE7QUFDeEJDLFdBQVMsU0FEZTtBQUV4QkMsWUFBVSxVQUZjO0FBR3hCQyxjQUFZLFlBSFk7QUFJeEJDLFlBQVU7QUFKYyxDQUFuQjs7QUFPQSxJQUFNQyxzQkFBT04sbUJBQVNPLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlSLE1BQUosQ0FBVztBQUNwRFMsUUFBTTtBQUNKQyxVQUFNLFFBREY7QUFFSkMsY0FBVTtBQUZOLEdBRDhDO0FBS3BEQyxRQUFNO0FBQ0pGLFVBQU07QUFERixHQUw4QztBQVFwREcsV0FBU2IsT0FBT2MsS0FBUCxDQUFhQyxLQVI4Qjs7QUFVcEQ7QUFDQUMsV0FBUSxDQUFDO0FBQ1BOLFVBQU1WLE9BQU9jLEtBQVAsQ0FBYUcsUUFEWjtBQUVQQyxTQUFLO0FBRkUsR0FBRCxDQVg0QztBQWVwREMsaUJBQWU7QUFDYlQsVUFBTVYsT0FBT2MsS0FBUCxDQUFhRyxRQUROO0FBRWJDLFNBQUs7QUFGUSxHQWZxQztBQW1CcERFLFFBQU1DLE1BbkI4QztBQW9CcERDLFVBQVFELE1BcEI0Qzs7QUFzQnBERSxTQUFPO0FBQ0xiLFVBQU1XO0FBREQsR0F0QjZDOztBQTBCcEQ7QUFDQUcsV0FBUyxFQUFDZCxNQUFLVyxNQUFOLEVBQWNJLFNBQVEsbUJBQXRCLEVBM0IyQztBQTRCcERDLFlBQVUsRUFBQ2hCLE1BQUtXLE1BQU4sRUFBY0ksU0FBUSxXQUF0QjtBQTVCMEMsQ0FBWCxDQUF2QixDQUFiOztBQStCUDs7SUFDYUUsTyxXQUFBQSxPOzs7QUFDWCxtQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUNoQkEsYUFBU0EsS0FBS2hCLElBQUwsR0FBWVYsV0FBV0MsT0FBaEM7QUFEZ0IsNkdBRVZ5QixJQUZVO0FBR2pCOzs7RUFKMEJyQixJOztBQU83Qjs7O0lBQ2FzQixRLFdBQUFBLFE7OztBQUNYLG9CQUFZRCxJQUFaLEVBQWtCO0FBQUE7O0FBQ2hCQSxhQUFTQSxLQUFLaEIsSUFBTCxHQUFZVixXQUFXRSxRQUFoQztBQURnQiwrR0FFVndCLElBRlU7QUFHakI7OztFQUoyQnJCLEk7O2tCQU9mQSxJIiwiZmlsZSI6InVzZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuZXhwb3J0IGNvbnN0IFVTRVJfUk9MRVMgPSB7XG4gIFNUVURFTlQ6ICdTdHVkZW50JyxcbiAgRURVQ0FUT1I6ICdFZHVjYXRvcicsXG4gIFNVUEVSQURNSU46ICdTdXBlcmFkbWluJyxcbiAgQ0FUQUxZU1Q6ICdDYXRhbHlzdCcsXG59O1xuXG5leHBvcnQgY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiAnU3RyaW5nJyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICByb2xlOiB7XG4gICAgdHlwZTogJ1N0cmluZydcbiAgfSxcbiAgcHJvZmlsZTogU2NoZW1hLlR5cGVzLk1peGVkLFxuXG4gIC8vIHN0dWRlbnQgc3BlY2lmaWMgZmllbGRzXG4gIGNvaG9ydHM6W3tcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ29ob3J0J1xuICB9XSxcbiAgY3VycmVudENvaG9ydDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdDb2hvcnQnXG4gIH0sXG4gIHBhdGg6IFN0cmluZyxcbiAgc2VjcmV0OiBTdHJpbmcsXG5cbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gIH0sXG5cbiAgLy8gZWR1Y2F0b3Igc3BlY2lmaWMgZmllbGRzXG4gIHByb2dyYW06IHt0eXBlOlN0cmluZywgZGVmYXVsdDpcIkV4cG9uZW50OlNvZnR3YXJlXCJ9LFxuICBsb2NhdGlvbjoge3R5cGU6U3RyaW5nLCBkZWZhdWx0OlwiSHlkZXJhYmFkXCJ9LFxufSkpO1xuXG4vLyBjYW4gb25seSBiZSB1c2VkIGZvciBjcmVhdGlvbiBsb2dpY1xuZXhwb3J0IGNsYXNzIFN0dWRlbnQgZXh0ZW5kcyBVc2VyIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIGRhdGEgJiYgKGRhdGEucm9sZSA9IFVTRVJfUk9MRVMuU1RVREVOVCk7XG4gICAgc3VwZXIoZGF0YSk7XG4gIH1cbn1cblxuLy8gY2FuIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpb24gbG9naWNcbmV4cG9ydCBjbGFzcyBFZHVjYXRvciBleHRlbmRzIFVzZXIge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgZGF0YSAmJiAoZGF0YS5yb2xlID0gVVNFUl9ST0xFUy5FRFVDQVRPUik7XG4gICAgc3VwZXIoZGF0YSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "USER_ROLES",
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "CATALYST",
        "User",
        "model",
        "name",
        "type",
        "required",
        "role",
        "profile",
        "Types",
        "Mixed",
        "cohorts",
        "ObjectId",
        "ref",
        "currentCohort",
        "path",
        "String",
        "secret",
        "email",
        "program",
        "default",
        "location",
        "Student",
        "data",
        "Educator"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;AAEA,IAAME,kCAAa;AACxBC,WAAS,SADe;AAExBC,YAAU,UAFc;AAGxBC,cAAY,YAHY;AAIxBC,YAAU;AAJc,CAAnB;;AAOA,IAAMC,sBAAON,mBAASO,KAAT,CAAe,MAAf,EAAuB,IAAIR,MAAJ,CAAW;AACpDS,QAAM;AACJC,UAAM,QADF;AAEJC,cAAU;AAFN,GAD8C;AAKpDC,QAAM;AACJF,UAAM;AADF,GAL8C;AAQpDG,WAASb,OAAOc,KAAP,CAAaC,KAR8B;;AAUpD;AACAC,WAAQ,CAAC;AACPN,UAAMV,OAAOc,KAAP,CAAaG,QADZ;AAEPC,SAAK;AAFE,GAAD,CAX4C;AAepDC,iBAAe;AACbT,UAAMV,OAAOc,KAAP,CAAaG,QADN;AAEbC,SAAK;AAFQ,GAfqC;AAmBpDE,QAAMC,MAnB8C;AAoBpDC,UAAQD,MApB4C;;AAsBpDE,SAAO;AACLb,UAAMW;AADD,GAtB6C;;AA0BpD;AACAG,WAAS,EAACd,MAAKW,MAAN,EAAcI,SAAQ,mBAAtB,EA3B2C;AA4BpDC,YAAU,EAAChB,MAAKW,MAAN,EAAcI,SAAQ,WAAtB;AA5B0C,CAAX,CAAvB,CAAb;;AA+BP;;IACaE,O,WAAAA,O;;;AACX,mBAAYC,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWC,OAAhC;AADgB,6GAEVyB,IAFU;AAGjB;;;EAJ0BrB,I;;AAO7B;;;IACasB,Q,WAAAA,Q;;;AACX,oBAAYD,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWE,QAAhC;AADgB,+GAEVwB,IAFU;AAGjB;;;EAJ2BrB,I;;kBAOfA,I",
      "file": "user.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport const USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst',\n};\n\nexport const User = mongoose.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts:[{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String,\n  },\n\n  // educator specific fields\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n}));\n\n// can only be used for creation logic\nexport class Student extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.STUDENT);\n    super(data);\n  }\n}\n\n// can only be used for creation logic\nexport class Educator extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.EDUCATOR);\n    super(data);\n  }\n}\n\nexport default User;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/user.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getProfile",
            "getSpotterTeam",
            "populateCurrentUser",
            "updateUser"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getProfile",
              "exported": "getProfile"
            },
            {
              "kind": "local",
              "local": "getSpotterTeam",
              "exported": "getSpotterTeam"
            },
            {
              "kind": "local",
              "local": "populateCurrentUser",
              "exported": "populateCurrentUser"
            },
            {
              "kind": "local",
              "local": "updateUser",
              "exported": "updateUser"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/user.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/user.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.controller.js",
      "sourceFileName": "user.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateUser = exports.populateCurrentUser = exports.getSpotterTeam = exports.getProfile = undefined;\n\nvar _user = require('../models/user');\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _cohort3 = require('../controllers/cohort.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getProfile = exports.getProfile = function getProfile(req, res) {\n  res.json({ data: req.user });\n};\n\nvar getSpotterTeam = exports.getSpotterTeam = function getSpotterTeam(student) {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var cohort, spotterTeam;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(student);\n\n              if (!(student.role !== _user.USER_ROLES.STUDENT)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 3:\n              _context.next = 5;\n              return _cohort2.default.findById(student.currentCohort).exec();\n\n            case 5:\n              cohort = _context.sent;\n              spotterTeam = cohort.spotters.find(function (team) {\n                return team.students.some(function (s) {\n                  return student._id.equals(s);\n                });\n              });\n\n              if (!(spotterTeam == null)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 9:\n              _context.next = 11;\n              return _user.User.find({ _id: { $in: spotterTeam.students } }, 'name profile.github.avatar_url profile.phone').exec();\n\n            case 11:\n              spotterTeam.students = _context.sent;\n\n              resolve(spotterTeam);\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nvar populateCurrentUser = exports.populateCurrentUser = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _user.User.findById(req.jwtData.user).lean().exec();\n\n          case 3:\n            user = _context2.sent;\n            _context2.next = 6;\n            return getSpotterTeam(user);\n\n          case 6:\n            user.spotterTeam = _context2.sent;\n\n            req.user = user;\n            next();\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(404);\n\n          case 14:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function populateCurrentUser(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar updateUser = exports.updateUser = function updateUser(req, res) {\n  var _req$query = req.query,\n      id = _req$query.id,\n      newCohort = _req$query.newCohort,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  var cohortID = void 0;\n  _user.User.findOne({ _id: id }).lean().then(function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(user) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _cohort2.default.find({ name: newCohort, location: city }).lean().exec().then(function (cohorts) {\n                cohorts.map(function (cohort, i) {\n                  var date = cohort.startDate;\n                  if (date.getFullYear().toString() === year) {\n                    cohortID = cohort._id;\n                  }\n                });\n              });\n\n            case 2:\n              console.log('-----', cohortID);\n              user.currentCohort = cohortID;\n              user.cohorts.push(cohortID);\n              _user.User.findByIdAndUpdate(id, { $set: { cohorts: user.cohorts, currentCohort: user.currentCohort } }).then(function () {\n                return res.send();\n              }).catch(function (e) {\n                return res.sendStatus(500).send(e);\n              });\n\n            case 6:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, undefined);\n    }));\n\n    return function (_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }()).catch(function (e) {\n    return res.sendStatus(500).send(e);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRQcm9maWxlIiwicmVxIiwicmVzIiwianNvbiIsImRhdGEiLCJ1c2VyIiwiZ2V0U3BvdHRlclRlYW0iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJzdHVkZW50Iiwicm9sZSIsIlVTRVJfUk9MRVMiLCJTVFVERU5UIiwiQ29ob3J0IiwiZmluZEJ5SWQiLCJjdXJyZW50Q29ob3J0IiwiZXhlYyIsImNvaG9ydCIsInNwb3R0ZXJUZWFtIiwic3BvdHRlcnMiLCJmaW5kIiwidGVhbSIsInN0dWRlbnRzIiwic29tZSIsIl9pZCIsImVxdWFscyIsInMiLCJVc2VyIiwiJGluIiwicG9wdWxhdGVDdXJyZW50VXNlciIsIm5leHQiLCJqd3REYXRhIiwibGVhbiIsInNlbmRTdGF0dXMiLCJ1cGRhdGVVc2VyIiwicXVlcnkiLCJpZCIsIm5ld0NvaG9ydCIsInllYXIiLCJjaXR5IiwiY29ob3J0SUQiLCJmaW5kT25lIiwidGhlbiIsIm5hbWUiLCJsb2NhdGlvbiIsImNvaG9ydHMiLCJtYXAiLCJpIiwiZGF0ZSIsInN0YXJ0RGF0ZSIsImdldEZ1bGxZZWFyIiwidG9TdHJpbmciLCJwdXNoIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCIkc2V0Iiwic2VuZCIsImNhdGNoIiwiZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBQ0E7Ozs7OztBQUNPLElBQU1BLGtDQUFhLFNBQWJBLFVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdENBLE1BQUlDLElBQUosQ0FBUyxFQUFDQyxNQUFNSCxJQUFJSSxJQUFYLEVBQVQ7QUFDRCxDQUZNOztBQUlBLElBQU1DLDBDQUFpQixTQUFqQkEsY0FBaUI7QUFBQSxTQUFXLElBQUlDLE9BQUo7QUFBQSx1RUFBWSxpQkFBT0MsT0FBUCxFQUFnQkMsTUFBaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ25EQyxzQkFBUUMsR0FBUixDQUFZQyxPQUFaOztBQURtRCxvQkFFaERBLFFBQVFDLElBQVIsS0FBaUJDLGlCQUFXQyxPQUZvQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSwrQ0FJMUNQLFFBQVEsSUFBUixDQUowQzs7QUFBQTtBQUFBO0FBQUEscUJBTWhDUSxpQkFBT0MsUUFBUCxDQUFnQkwsUUFBUU0sYUFBeEIsRUFBdUNDLElBQXZDLEVBTmdDOztBQUFBO0FBTS9DQyxvQkFOK0M7QUFPL0NDLHlCQVArQyxHQU9qQ0QsT0FBT0UsUUFBUCxDQUFnQkMsSUFBaEIsQ0FBcUIsZ0JBQVE7QUFDN0MsdUJBQU9DLEtBQUtDLFFBQUwsQ0FBY0MsSUFBZCxDQUFtQjtBQUFBLHlCQUFLZCxRQUFRZSxHQUFSLENBQVlDLE1BQVosQ0FBbUJDLENBQW5CLENBQUw7QUFBQSxpQkFBbkIsQ0FBUDtBQUNELGVBRmlCLENBUGlDOztBQUFBLG9CQVVoRFIsZUFBZSxJQVZpQztBQUFBO0FBQUE7QUFBQTs7QUFBQSwrQ0FXMUNiLFFBQVEsSUFBUixDQVgwQzs7QUFBQTtBQUFBO0FBQUEscUJBYXRCc0IsV0FBS1AsSUFBTCxDQUFVLEVBQUNJLEtBQUssRUFBQ0ksS0FBS1YsWUFBWUksUUFBbEIsRUFBTixFQUFWLEVBQThDLDhDQUE5QyxFQUE4Rk4sSUFBOUYsRUFic0I7O0FBQUE7QUFhbkRFLDBCQUFZSSxRQWJ1Qzs7QUFjbkRqQixzQkFBUWEsV0FBUjs7QUFkbUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBWjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQUFYO0FBQUEsQ0FBdkI7O0FBaUJBLElBQU1XO0FBQUEsc0VBQXNCLGtCQUFPL0IsR0FBUCxFQUFZQyxHQUFaLEVBQWlCK0IsSUFBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUVaSCxXQUFLYixRQUFMLENBQWNoQixJQUFJaUMsT0FBSixDQUFZN0IsSUFBMUIsRUFBZ0M4QixJQUFoQyxHQUF1Q2hCLElBQXZDLEVBRlk7O0FBQUE7QUFFekJkLGdCQUZ5QjtBQUFBO0FBQUEsbUJBR05DLGVBQWVELElBQWYsQ0FITTs7QUFBQTtBQUcvQkEsaUJBQUtnQixXQUgwQjs7QUFJL0JwQixnQkFBSUksSUFBSixHQUFXQSxJQUFYO0FBQ0E0QjtBQUwrQjtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFPL0IvQixnQkFBSWtDLFVBQUosQ0FBZSxHQUFmOztBQVArQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF0Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOOztBQVlBLElBQU1DLGtDQUFhLFNBQWJBLFVBQWEsQ0FBQ3BDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQUEsbUJBQ0ZELElBQUlxQyxLQURGO0FBQUEsTUFDL0JDLEVBRCtCLGNBQy9CQSxFQUQrQjtBQUFBLE1BQzNCQyxTQUQyQixjQUMzQkEsU0FEMkI7QUFBQSxNQUNoQkMsSUFEZ0IsY0FDaEJBLElBRGdCO0FBQUEsTUFDVkMsSUFEVSxjQUNWQSxJQURVOztBQUV0QyxNQUFJQyxpQkFBSjtBQUNBYixhQUFLYyxPQUFMLENBQWEsRUFBQ2pCLEtBQU1ZLEVBQVAsRUFBYixFQUF5QkosSUFBekIsR0FBZ0NVLElBQWhDO0FBQUEsd0VBQXNDLGtCQUFPeEMsSUFBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxxQkFFOUJXLGlCQUFPTyxJQUFQLENBQVksRUFBQ3VCLE1BQU9OLFNBQVIsRUFBbUJPLFVBQVdMLElBQTlCLEVBQVosRUFBaURQLElBQWpELEdBQXdEaEIsSUFBeEQsR0FBK0QwQixJQUEvRCxDQUFxRSxtQkFBVztBQUNwRkcsd0JBQVFDLEdBQVIsQ0FBYSxVQUFDN0IsTUFBRCxFQUFTOEIsQ0FBVCxFQUFlO0FBQzFCLHNCQUFJQyxPQUFPL0IsT0FBT2dDLFNBQWxCO0FBQ0Esc0JBQUlELEtBQUtFLFdBQUwsR0FBbUJDLFFBQW5CLE9BQWdDYixJQUFwQyxFQUF5QztBQUN2Q0UsK0JBQVd2QixPQUFPTyxHQUFsQjtBQUNEO0FBQ0YsaUJBTEQ7QUFNRCxlQVBLLENBRjhCOztBQUFBO0FBVXBDakIsc0JBQVFDLEdBQVIsVUFBc0JnQyxRQUF0QjtBQUNBdEMsbUJBQUthLGFBQUwsR0FBcUJ5QixRQUFyQjtBQUNBdEMsbUJBQUsyQyxPQUFMLENBQWFPLElBQWIsQ0FBa0JaLFFBQWxCO0FBQ0FiLHlCQUFLMEIsaUJBQUwsQ0FBdUJqQixFQUF2QixFQUEyQixFQUFDa0IsTUFBTyxFQUFDVCxTQUFTM0MsS0FBSzJDLE9BQWYsRUFBd0I5QixlQUFnQmIsS0FBS2EsYUFBN0MsRUFBUixFQUEzQixFQUFpRzJCLElBQWpHLENBQXNHO0FBQUEsdUJBQU0zQyxJQUFJd0QsSUFBSixFQUFOO0FBQUEsZUFBdEcsRUFBd0hDLEtBQXhILENBQThIO0FBQUEsdUJBQUt6RCxJQUFJa0MsVUFBSixDQUFlLEdBQWYsRUFBb0JzQixJQUFwQixDQUF5QkUsQ0FBekIsQ0FBTDtBQUFBLGVBQTlIOztBQWJvQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUF0Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQWVHRCxLQWZILENBZVM7QUFBQSxXQUFLekQsSUFBSWtDLFVBQUosQ0FBZSxHQUFmLEVBQW9Cc0IsSUFBcEIsQ0FBeUJFLENBQXpCLENBQUw7QUFBQSxHQWZUO0FBZ0JELENBbkJNIiwiZmlsZSI6InVzZXIuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtVc2VyLCBVU0VSX1JPTEVTfSBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbmltcG9ydCBDb2hvcnQgZnJvbSAnLi4vbW9kZWxzL2NvaG9ydCc7XG5pbXBvcnQgeyBnZXRDb2hvcnRCeU5hbWUgfSBmcm9tICcuLi9jb250cm9sbGVycy9jb2hvcnQuY29udHJvbGxlcidcbmV4cG9ydCBjb25zdCBnZXRQcm9maWxlID0gKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5qc29uKHtkYXRhOiByZXEudXNlcn0pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0U3BvdHRlclRlYW0gPSBzdHVkZW50ID0+IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+e1xuICBjb25zb2xlLmxvZyhzdHVkZW50KTtcbiAgaWYoc3R1ZGVudC5yb2xlICE9PSBVU0VSX1JPTEVTLlNUVURFTlQpIHtcbiAgICAvLyBTcG90dGVycyBhcmUgaW1wbGVtZW50ZWQgb25seSBmb3Igc3R1ZGVudHNcbiAgICByZXR1cm4gcmVzb2x2ZShudWxsKTtcbiAgfVxuICBsZXQgY29ob3J0ID0gYXdhaXQgQ29ob3J0LmZpbmRCeUlkKHN0dWRlbnQuY3VycmVudENvaG9ydCkuZXhlYygpO1xuICBsZXQgc3BvdHRlclRlYW0gPSBjb2hvcnQuc3BvdHRlcnMuZmluZCh0ZWFtID0+IHtcbiAgICByZXR1cm4gdGVhbS5zdHVkZW50cy5zb21lKHMgPT4gc3R1ZGVudC5faWQuZXF1YWxzKHMpKTtcbiAgfSk7XG4gIGlmKHNwb3R0ZXJUZWFtID09IG51bGwpIHtcbiAgICByZXR1cm4gcmVzb2x2ZShudWxsKTtcbiAgfVxuICBzcG90dGVyVGVhbS5zdHVkZW50cyA9IGF3YWl0IFVzZXIuZmluZCh7X2lkOiB7JGluOiBzcG90dGVyVGVhbS5zdHVkZW50c319LCAnbmFtZSBwcm9maWxlLmdpdGh1Yi5hdmF0YXJfdXJsIHByb2ZpbGUucGhvbmUnKS5leGVjKCk7XG4gIHJlc29sdmUoc3BvdHRlclRlYW0pO1xufSk7XG5cbmV4cG9ydCBjb25zdCBwb3B1bGF0ZUN1cnJlbnRVc2VyID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQocmVxLmp3dERhdGEudXNlcikubGVhbigpLmV4ZWMoKTtcbiAgICB1c2VyLnNwb3R0ZXJUZWFtID0gYXdhaXQgZ2V0U3BvdHRlclRlYW0odXNlcik7XG4gICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgIG5leHQoKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzLnNlbmRTdGF0dXMoNDA0KTtcbiAgfVxufVxuXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVVc2VyID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHtpZCwgbmV3Q29ob3J0LCB5ZWFyLCBjaXR5fSA9IHJlcS5xdWVyeVxuICBsZXQgY29ob3J0SURcbiAgVXNlci5maW5kT25lKHtfaWQgOiBpZH0pLmxlYW4oKS50aGVuKCBhc3luYyAodXNlcikgPT4ge1xuXG4gICAgYXdhaXQgQ29ob3J0LmZpbmQoe25hbWUgOiBuZXdDb2hvcnQsIGxvY2F0aW9uIDogY2l0eX0pLmxlYW4oKS5leGVjKCkudGhlbiggY29ob3J0cyA9PiB7XG4gICAgICBjb2hvcnRzLm1hcCggKGNvaG9ydCwgaSkgPT4ge1xuICAgICAgICBsZXQgZGF0ZSA9IGNvaG9ydC5zdGFydERhdGU7XG4gICAgICAgIGlmIChkYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKT09PXllYXIpe1xuICAgICAgICAgIGNvaG9ydElEID0gY29ob3J0Ll9pZFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gICAgY29uc29sZS5sb2cgKGAtLS0tLWAsIGNvaG9ydElEKVxuICAgIHVzZXIuY3VycmVudENvaG9ydCA9IGNvaG9ydElEXG4gICAgdXNlci5jb2hvcnRzLnB1c2goY29ob3J0SUQpXG4gICAgVXNlci5maW5kQnlJZEFuZFVwZGF0ZShpZCwgeyRzZXQgOiB7Y29ob3J0czogdXNlci5jb2hvcnRzLCBjdXJyZW50Q29ob3J0IDogdXNlci5jdXJyZW50Q29ob3J0fX0pLnRoZW4oKCkgPT4gcmVzLnNlbmQoKSkuY2F0Y2goZSA9PiByZXMuc2VuZFN0YXR1cyg1MDApLnNlbmQoZSkpXG4gICAgXG4gIH0pLmNhdGNoKGUgPT4gcmVzLnNlbmRTdGF0dXMoNTAwKS5zZW5kKGUpKVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "json",
        "data",
        "user",
        "getSpotterTeam",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "student",
        "role",
        "USER_ROLES",
        "STUDENT",
        "Cohort",
        "findById",
        "currentCohort",
        "exec",
        "cohort",
        "spotterTeam",
        "spotters",
        "find",
        "team",
        "students",
        "some",
        "_id",
        "equals",
        "s",
        "User",
        "$in",
        "populateCurrentUser",
        "next",
        "jwtData",
        "lean",
        "sendStatus",
        "updateUser",
        "query",
        "id",
        "newCohort",
        "year",
        "city",
        "cohortID",
        "findOne",
        "then",
        "name",
        "location",
        "cohorts",
        "map",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "push",
        "findByIdAndUpdate",
        "$set",
        "send",
        "catch",
        "e"
      ],
      "mappings": "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",
      "file": "user.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import {User, USER_ROLES} from '../models/user';\n\nimport Cohort from '../models/cohort';\nimport { getCohortByName } from '../controllers/cohort.controller'\nexport const getProfile = (req, res) => {\n  res.json({data: req.user});\n}\n\nexport const getSpotterTeam = student => new Promise(async (resolve, reject) =>{\n  console.log(student);\n  if(student.role !== USER_ROLES.STUDENT) {\n    // Spotters are implemented only for students\n    return resolve(null);\n  }\n  let cohort = await Cohort.findById(student.currentCohort).exec();\n  let spotterTeam = cohort.spotters.find(team => {\n    return team.students.some(s => student._id.equals(s));\n  });\n  if(spotterTeam == null) {\n    return resolve(null);\n  }\n  spotterTeam.students = await User.find({_id: {$in: spotterTeam.students}}, 'name profile.github.avatar_url profile.phone').exec();\n  resolve(spotterTeam);\n});\n\nexport const populateCurrentUser = async (req, res, next) => {\n  try {\n    const user = await User.findById(req.jwtData.user).lean().exec();\n    user.spotterTeam = await getSpotterTeam(user);\n    req.user = user;\n    next();\n  } catch (err) {\n    res.sendStatus(404);\n  }\n}\n\n\nexport const updateUser = (req, res) => {\n  const {id, newCohort, year, city} = req.query\n  let cohortID\n  User.findOne({_id : id}).lean().then( async (user) => {\n\n    await Cohort.find({name : newCohort, location : city}).lean().exec().then( cohorts => {\n      cohorts.map( (cohort, i) => {\n        let date = cohort.startDate;\n        if (date.getFullYear().toString()===year){\n          cohortID = cohort._id\n        }\n      })\n    })\n    console.log (`-----`, cohortID)\n    user.currentCohort = cohortID\n    user.cohorts.push(cohortID)\n    User.findByIdAndUpdate(id, {$set : {cohorts: user.cohorts, currentCohort : user.currentCohort}}).then(() => res.send()).catch(e => res.sendStatus(500).send(e))\n    \n  }).catch(e => res.sendStatus(500).send(e))\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/cohort.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/cohort.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/cohort.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.js",
      "sourceFileName": "cohort.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Cohort', new Schema({\n  startDate: { type: Date, required: true },\n  endDate: Date,\n  name: String,\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" },\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }]\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwic3RhcnREYXRlIiwidHlwZSIsIkRhdGUiLCJyZXF1aXJlZCIsImVuZERhdGUiLCJuYW1lIiwiU3RyaW5nIiwicHJvZ3JhbSIsImRlZmF1bHQiLCJsb2NhdGlvbiIsInNwb3R0ZXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUYsTUFBSixDQUFXO0FBQ2pERyxhQUFXLEVBQUNDLE1BQUtDLElBQU4sRUFBWUMsVUFBUyxJQUFyQixFQURzQztBQUVqREMsV0FBU0YsSUFGd0M7QUFHakRHLFFBQU1DLE1BSDJDO0FBSWpEQyxXQUFTLEVBQUNOLE1BQUtLLE1BQU4sRUFBY0UsU0FBUSxtQkFBdEIsRUFKd0M7QUFLakRDLFlBQVUsRUFBQ1IsTUFBS0ssTUFBTixFQUFjRSxTQUFRLFdBQXRCLEVBTHVDO0FBTWpERSxZQUFVLENBQUM7QUFDVEMsY0FBVUwsTUFERDtBQUVUTSxjQUFVLENBQUM7QUFDVFgsWUFBTUosT0FBT2dCLEtBQVAsQ0FBYUMsUUFEVjtBQUVUQyxXQUFLO0FBRkksS0FBRDtBQUZELEdBQUQ7QUFOdUMsQ0FBWCxDQUF6QixDIiwiZmlsZSI6ImNvaG9ydC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCB7U2NoZW1hfSA9IG1vbmdvb3NlO1xuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnQ29ob3J0JywgbmV3IFNjaGVtYSh7XG4gIHN0YXJ0RGF0ZToge3R5cGU6RGF0ZSwgcmVxdWlyZWQ6dHJ1ZX0sXG4gIGVuZERhdGU6IERhdGUsXG4gIG5hbWU6IFN0cmluZyxcbiAgcHJvZ3JhbToge3R5cGU6U3RyaW5nLCBkZWZhdWx0OlwiRXhwb25lbnQ6U29mdHdhcmVcIn0sXG4gIGxvY2F0aW9uOiB7dHlwZTpTdHJpbmcsIGRlZmF1bHQ6XCJIeWRlcmFiYWRcIn0sXG4gIHNwb3R0ZXJzOiBbe1xuICAgIHRlYW1OYW1lOiBTdHJpbmcsXG4gICAgc3R1ZGVudHM6IFt7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH1dLFxuICB9XSxcbn0pKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "startDate",
        "type",
        "Date",
        "required",
        "endDate",
        "name",
        "String",
        "program",
        "default",
        "location",
        "spotters",
        "teamName",
        "students",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,QAAf,EAAyB,IAAIF,MAAJ,CAAW;AACjDG,aAAW,EAACC,MAAKC,IAAN,EAAYC,UAAS,IAArB,EADsC;AAEjDC,WAASF,IAFwC;AAGjDG,QAAMC,MAH2C;AAIjDC,WAAS,EAACN,MAAKK,MAAN,EAAcE,SAAQ,mBAAtB,EAJwC;AAKjDC,YAAU,EAACR,MAAKK,MAAN,EAAcE,SAAQ,WAAtB,EALuC;AAMjDE,YAAU,CAAC;AACTC,cAAUL,MADD;AAETM,cAAU,CAAC;AACTX,YAAMJ,OAAOgB,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFD,GAAD;AANuC,CAAX,CAAzB,C",
      "file": "cohort.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Cohort', new Schema({\n  startDate: {type:Date, required:true},\n  endDate: Date,\n  name: String,\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n}));\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/cohort.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getCohortStudents"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortStudents",
                "local": "getCohortStudents"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "resetCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetCohortDays",
                "local": "resetCohortDays"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohorts",
            "getCohortByName",
            "getCohort",
            "createCohort",
            "updateCohort",
            "deleteCohort",
            "createSpotters",
            "populateCurrentCohorts",
            "resetSpotters"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohorts",
              "exported": "getCohorts"
            },
            {
              "kind": "local",
              "local": "getCohortByName",
              "exported": "getCohortByName"
            },
            {
              "kind": "local",
              "local": "getCohort",
              "exported": "getCohort"
            },
            {
              "kind": "local",
              "local": "createCohort",
              "exported": "createCohort"
            },
            {
              "kind": "local",
              "local": "updateCohort",
              "exported": "updateCohort"
            },
            {
              "kind": "local",
              "local": "deleteCohort",
              "exported": "deleteCohort"
            },
            {
              "kind": "local",
              "local": "createSpotters",
              "exported": "createSpotters"
            },
            {
              "kind": "local",
              "local": "populateCurrentCohorts",
              "exported": "populateCurrentCohorts"
            },
            {
              "kind": "local",
              "local": "resetSpotters",
              "exported": "resetSpotters"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/cohort.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/cohort.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.controller.js",
      "sourceFileName": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetSpotters = exports.populateCurrentCohorts = exports.createSpotters = exports.deleteCohort = exports.updateCohort = exports.createCohort = exports.getCohort = exports.getCohortByName = exports.getCohorts = undefined;\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _student = require('../controllers/student.controller');\n\nvar _day = require('../controllers/day.controller');\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getCohorts = exports.getCohorts = function getCohorts(req, res) {\n  _cohort2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortByName = exports.getCohortByName = function getCohortByName(req, res) {\n  var _req$query = req.query,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  _cohort2.default.find({ name: req.params.cohortName, location: city }).lean().exec().then(function (cohorts) {\n    cohorts.map(function (cohort, i) {\n      var date = cohort.startDate;\n      if (date.getFullYear().toString() === year) {\n        (0, _student.getCohortStudents)(cohort).then(function (students) {\n          cohort.students = students;\n          res.json({ cohort: cohort });\n        });\n      }\n    });\n  }).catch(function (e) {\n    return res.status(500).send(e);\n  });\n};\n\nvar getCohort = exports.getCohort = function getCohort(req, res) {\n  _cohort2.default.findById(req.params.id).lean().exec().then(function (cohort) {\n    (0, _student.getCohortStudents)(cohort).then(function (students) {\n      cohort.students = students;\n      res.json({ cohort: cohort });\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createCohort = exports.createCohort = function createCohort(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      location = _req$body.location,\n      program = _req$body.program,\n      startDate = _req$body.startDate,\n      endDate = _req$body.endDate;\n\n  startDate = new Date(+startDate);\n  new _cohort2.default({ name: name, location: location, program: program, startDate: startDate, endDate: endDate }).save().then(function (data) {\n    (0, _day.resetCohortDays)(data).catch(function (e) {\n      \"Errored out in create all days\" + e;\n    }).then(function () {\n      return res.status(201).json({ data: data });\n    });\n  }).catch(function (err) {\n    return res.status(500).send({ err: err });\n  });\n};\n\nvar updateCohort = exports.updateCohort = function updateCohort(req, res) {\n  var _req$body2 = req.body,\n      location = _req$body2.location,\n      program = _req$body2.program,\n      startDate = _req$body2.startDate;\n\n  _cohort2.default.findByIdAndUpdate(req.params.id, { location: location, program: program, startDate: startDate }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteCohort = exports.deleteCohort = function deleteCohort(req, res) {\n  _cohort2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createSpotters = exports.createSpotters = function createSpotters(cohort) {\n  return (0, _student.getCohortStudents)(cohort).then(function (students) {\n    students = students.map(function (s) {\n      return s._id;\n    });\n    var p = (0, _createChunks2.default)(students, 3);\n\n    for (var i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i - 1].students = p[i].students.concat(p[i - 1].students);\n        p.pop();\n      }\n    }\n    cohort.spotters = p;\n    return cohort.save();\n  });\n};\n\nvar populateCurrentCohorts = exports.populateCurrentCohorts = function populateCurrentCohorts() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return _cohort2.default.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  }).then(function (cohorts) {\n    //console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\");\n    var p = [];\n    for (var i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]));\n    }\n    return Promise.all(p);\n  }).catch(function (e) {\n    return console.log(\"Errored out in populateCurrentCohorts\" + e);\n  });\n};\n\nvar resetSpotters = exports.resetSpotters = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n\n            _cohort2.default.findById(req.params.cohort_id).then(function (cohort) {\n              return createSpotters(cohort);\n            }).then(function (cohort) {\n              res.send(cohort);\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function resetSpotters(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.controller.js"
      ],
      "names": [
        "getCohorts",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getCohortByName",
        "query",
        "year",
        "city",
        "name",
        "params",
        "cohortName",
        "location",
        "lean",
        "cohorts",
        "map",
        "cohort",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "students",
        "e",
        "getCohort",
        "findById",
        "id",
        "createCohort",
        "body",
        "program",
        "endDate",
        "Date",
        "save",
        "updateCohort",
        "findByIdAndUpdate",
        "deleteCohort",
        "remove",
        "createSpotters",
        "s",
        "_id",
        "p",
        "length",
        "concat",
        "pop",
        "spotters",
        "populateCurrentCohorts",
        "today",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "console",
        "log",
        "push",
        "Promise",
        "all",
        "resetSpotters",
        "cohort_id",
        "sendStatus"
      ],
      "mappings": "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",
      "file": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/cohort';\nimport {getCohortStudents} from '../controllers/student.controller';\nimport {resetCohortDays} from '../controllers/day.controller'\nimport createChunks from \"../util/createChunks\"\n\nexport const getCohorts = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortByName = (req, res) => {\n  let {year, city} = req.query\n  Resource.find({name : req.params.cohortName, location : city}).lean().exec().then( cohorts => {\n    cohorts.map( (cohort, i) => {\n      let date = cohort.startDate;\n      if (date.getFullYear().toString()===year){\n        getCohortStudents(cohort)\n        .then(students => {\n           cohort.students = students;\n          res.json({cohort})\n        })\n      }\n    })\n  }).catch(e => res.status(500).send(e))\n\n}\n\nexport const getCohort = (req, res) => {\n  Resource.findById(req.params.id).lean().exec()\n  .then(cohort => {\n    getCohortStudents(cohort)\n    .then(students => {\n      cohort.students = students;\n      res.json({cohort: cohort})\n    })\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createCohort = (req, res) => {\n  let {name, location, program, startDate, endDate} = req.body;\n  startDate = new Date(+startDate)\n  new Resource({name, location, program, startDate, endDate}).save()\n  .then(data => {\n    resetCohortDays(data).catch(e => {\"Errored out in create all days\" + e})\n  .then(() =>\n    res.status(201).json({data})\n    )\n  })\n  .catch(err => res.status(500).send({err}));\n}\n\nexport const updateCohort = (req, res) => {\n  const {location, program, startDate} = req.body;\n  Resource.findByIdAndUpdate(req.params.id, {location, program, startDate})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteCohort = (req, res) => {\n  Resource.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createSpotters = (cohort) => {\n  return getCohortStudents(cohort).then((students) => {\n    students = students.map(s => s._id)\n    let p = createChunks(students, 3)\n\n    for (let i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i-1].students = p[i].students.concat(p[i - 1].students)\n        p.pop()\n      }\n    }\n    cohort.spotters = p\n    return cohort.save()\n    })\n  }\n\nexport const populateCurrentCohorts = () =>{\n  let today = new Date()\n  let tonight = new Date()\n\n  today.setHours(0)\n  today.setMinutes(0)\n  today.setSeconds(0)\n\n  tonight.setHours(23)\n  tonight.setMinutes(59)\n  tonight.setSeconds(59)\n\n  return Resource.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  })\n  .then( cohorts => {//console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\")\n    let p =[]\n    for (let i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]))\n    }\n    return Promise.all(p)\n  })\n  .catch(e => console.log(\"Errored out in populateCurrentCohorts\" + e))\n\n} \n\nexport const resetSpotters = async (req, res) => {\n\n  Resource.findById(req.params.cohort_id)\n  .then(cohort => createSpotters(cohort))\n  .then(cohort => {\n    res.send(cohort);\n  })\n  .catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/student.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohortStudents",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohortStudents",
              "exported": "getCohortStudents"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/student.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/student.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.controller.js",
      "sourceFileName": "student.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getCohortStudents = undefined;\n\nvar _user = require('../models/user');\n\nvar getCohortStudents = exports.getCohortStudents = function getCohortStudents(cohort) {\n  return _user.Student.find({\n    currentCohort: cohort._id,\n    role: _user.USER_ROLES.STUDENT\n  }).exec();\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user.Student.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user.Student.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role,\n      cohorts = _req$body.cohorts,\n      currentCohort = _req$body.currentCohort;\n\n  new _user.Student({ name: name, email: email, profile: profile, role: role, cohorts: cohorts, currentCohort: currentCohort }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _user.Student.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user.Student.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRDb2hvcnRTdHVkZW50cyIsIlN0dWRlbnQiLCJmaW5kIiwiY3VycmVudENvaG9ydCIsImNvaG9ydCIsIl9pZCIsInJvbGUiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsImV4ZWMiLCJnZXRBbGwiLCJyZXEiLCJyZXMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiYm9keSIsIm5hbWUiLCJlbWFpbCIsInByb2ZpbGUiLCJjb2hvcnRzIiwic2F2ZSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFTyxJQUFNQSxnREFBb0IsU0FBcEJBLGlCQUFvQjtBQUFBLFNBQVVDLGNBQVFDLElBQVIsQ0FBYTtBQUN0REMsbUJBQWVDLE9BQU9DLEdBRGdDO0FBRXREQyxVQUFNQyxpQkFBV0M7QUFGcUMsR0FBYixFQUd4Q0MsSUFId0MsRUFBVjtBQUFBLENBQTFCOztBQUtBLElBQU1DLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENYLGdCQUFRQyxJQUFSLEdBQWVPLElBQWYsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBUUQsSUFBSUUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDWCxnQkFBUW9CLFFBQVIsQ0FBaUJWLElBQUlXLE1BQUosQ0FBV0MsRUFBNUIsRUFBZ0NkLElBQWhDLEdBQ0NJLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLGtCQUMyQkQsSUFBSWMsSUFEL0I7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEtBRHFCLGFBQ3JCQSxLQURxQjtBQUFBLE1BQ2RDLE9BRGMsYUFDZEEsT0FEYztBQUFBLE1BQ0x0QixJQURLLGFBQ0xBLElBREs7QUFBQSxNQUNDdUIsT0FERCxhQUNDQSxPQUREO0FBQUEsTUFDVTFCLGFBRFYsYUFDVUEsYUFEVjs7QUFFbEMsTUFBSUYsYUFBSixDQUFZLEVBQUN5QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUE2QnVCLGdCQUE3QixFQUFzQzFCLDRCQUF0QyxFQUFaLEVBQWtFMkIsSUFBbEUsR0FDQ2pCLElBREQsQ0FDTSxnQkFBUTtBQUNaa0IsWUFBUUMsR0FBUixDQUFZLEVBQUNqQixVQUFELEVBQVo7QUFDQUgsUUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCLEVBQUNDLFVBQUQsRUFBckI7QUFBNkIsR0FIL0IsRUFJQ0MsS0FKRCxDQUlPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FKUDtBQUtELENBUE07O0FBU0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDdEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEMsTUFBTUcsT0FBT0osSUFBSWMsSUFBakI7QUFDQTtBQUNBeEIsZ0JBQVFpQyxpQkFBUixDQUEwQnZCLElBQUlXLE1BQUosQ0FBV0MsRUFBckMsRUFBeUNSLElBQXpDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWmUsWUFBUUMsR0FBUixDQUFZYixHQUFaO0FBQ0FQLFFBQUlLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsR0FBckI7QUFBMEIsR0FKNUI7QUFLRCxDQVJNOztBQVVBLElBQU1nQixnQ0FBWSxTQUFaQSxTQUFZLENBQUN4QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNyQ1gsZ0JBQVFtQyxNQUFSLENBQWUsRUFBQy9CLEtBQUlNLElBQUlXLE1BQUosQ0FBV0MsRUFBaEIsRUFBZixFQUFvQ2QsSUFBcEMsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBTUQsSUFBSXlCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNyQixLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJzdHVkZW50LmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U3R1ZGVudCwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG5leHBvcnQgY29uc3QgZ2V0Q29ob3J0U3R1ZGVudHMgPSBjb2hvcnQgPT4gU3R1ZGVudC5maW5kKHtcbiAgY3VycmVudENvaG9ydDogY29ob3J0Ll9pZCxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5UXG59KS5leGVjKCk7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgU3R1ZGVudC5maW5kKCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldE9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBTdHVkZW50LmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge25hbWUsIGVtYWlsLCBwcm9maWxlLCByb2xlLCBjb2hvcnRzLCBjdXJyZW50Q29ob3J0fSA9IHJlcS5ib2R5O1xuICBuZXcgU3R1ZGVudCh7bmFtZSwgZW1haWwsIHByb2ZpbGUsIHJvbGUsIGNvaG9ydHMsIGN1cnJlbnRDb2hvcnR9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiB7XG4gICAgY29uc29sZS5sb2coe2RhdGF9KTtcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pfSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBkYXRhID0gcmVxLmJvZHk7XG4gIC8vIHRvZG86IGNoZWNrIGlmIHRoZSBjdXJyZW50Q29ob3J0IGlzIHZhbGlkIGFuZCB0aGVuIGNvbnRpbnVlXG4gIFN0dWRlbnQuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgZGF0YSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBTdHVkZW50LnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSkgIFxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.controller.js"
      ],
      "names": [
        "getCohortStudents",
        "Student",
        "find",
        "currentCohort",
        "cohort",
        "_id",
        "role",
        "USER_ROLES",
        "STUDENT",
        "exec",
        "getAll",
        "req",
        "res",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "name",
        "email",
        "profile",
        "cohorts",
        "save",
        "console",
        "log",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,IAAMA,gDAAoB,SAApBA,iBAAoB;AAAA,SAAUC,cAAQC,IAAR,CAAa;AACtDC,mBAAeC,OAAOC,GADgC;AAEtDC,UAAMC,iBAAWC;AAFqC,GAAb,EAGxCC,IAHwC,EAAV;AAAA,CAA1B;;AAKA,IAAMC,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQC,IAAR,GAAeO,IAAf,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACT,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQoB,QAAR,CAAiBV,IAAIW,MAAJ,CAAWC,EAA5B,EAAgCd,IAAhC,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACb,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC2BD,IAAIc,IAD/B;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,KADqB,aACrBA,KADqB;AAAA,MACdC,OADc,aACdA,OADc;AAAA,MACLtB,IADK,aACLA,IADK;AAAA,MACCuB,OADD,aACCA,OADD;AAAA,MACU1B,aADV,aACUA,aADV;;AAElC,MAAIF,aAAJ,CAAY,EAACyB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAA6BuB,gBAA7B,EAAsC1B,4BAAtC,EAAZ,EAAkE2B,IAAlE,GACCjB,IADD,CACM,gBAAQ;AACZkB,YAAQC,GAAR,CAAY,EAACjB,UAAD,EAAZ;AACAH,QAAIK,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB;AAA6B,GAH/B,EAICC,KAJD,CAIO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAJP;AAKD,CAPM;;AASA,IAAMc,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAMG,OAAOJ,IAAIc,IAAjB;AACA;AACAxB,gBAAQiC,iBAAR,CAA0BvB,IAAIW,MAAJ,CAAWC,EAArC,EAAyCR,IAAzC,EACCF,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZe,YAAQC,GAAR,CAAYb,GAAZ;AACAP,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMgB,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCX,gBAAQmC,MAAR,CAAe,EAAC/B,KAAIM,IAAIW,MAAJ,CAAWC,EAAhB,EAAf,EAAoCd,IAApC,GACCI,IADD,CACM;AAAA,WAAMD,IAAIyB,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "student.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import {Student, USER_ROLES} from '../models/user';\n\nexport const getCohortStudents = cohort => Student.find({\n  currentCohort: cohort._id,\n  role: USER_ROLES.STUDENT\n}).exec();\n\nexport const getAll = (req, res) => {\n  Student.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Student.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {name, email, profile, role, cohorts, currentCohort} = req.body;\n  new Student({name, email, profile, role, cohorts, currentCohort}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Student.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Student.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/day.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "slicedToArray",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "dayDetails",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "getCohortDays",
            "getCurrentDays",
            "getToday",
            "createDayPairs",
            "createCohortDays",
            "resetCohortDays",
            "addPromptToTimeline",
            "addContentToDay",
            "removePromptFromTimeline",
            "resetPairs",
            "resetDay"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "dayDetails",
              "exported": "dayDetails"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "getCohortDays",
              "exported": "getCohortDays"
            },
            {
              "kind": "local",
              "local": "getCurrentDays",
              "exported": "getCurrentDays"
            },
            {
              "kind": "local",
              "local": "getToday",
              "exported": "getToday"
            },
            {
              "kind": "local",
              "local": "createDayPairs",
              "exported": "createDayPairs"
            },
            {
              "kind": "local",
              "local": "createCohortDays",
              "exported": "createCohortDays"
            },
            {
              "kind": "local",
              "local": "resetCohortDays",
              "exported": "resetCohortDays"
            },
            {
              "kind": "local",
              "local": "addPromptToTimeline",
              "exported": "addPromptToTimeline"
            },
            {
              "kind": "local",
              "local": "addContentToDay",
              "exported": "addContentToDay"
            },
            {
              "kind": "local",
              "local": "removePromptFromTimeline",
              "exported": "removePromptFromTimeline"
            },
            {
              "kind": "local",
              "local": "resetPairs",
              "exported": "resetPairs"
            },
            {
              "kind": "local",
              "local": "resetDay",
              "exported": "resetDay"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/day.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/day.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.controller.js",
      "sourceFileName": "day.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetDay = exports.resetPairs = exports.removePromptFromTimeline = exports.addContentToDay = exports.addPromptToTimeline = exports.resetCohortDays = exports.createCohortDays = exports.createDayPairs = exports.getToday = exports.getCurrentDays = exports.getCohortDays = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.dayDetails = exports.getAll = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _day2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar dayDetails = exports.dayDetails = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var dayNumber, cohortID;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dayNumber = req.params.dayNumber;\n            cohortID = req.query.cohortID;\n\n            _day2.default.find({ day: dayNumber, cohort: cohortID }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (day) {\n              res.json({ day: day });\n            }).catch(function (e) {\n              return res.status(500).send(e);\n            });\n\n          case 3:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function dayDetails(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _day2.default.findById(req.params.day_id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var data = req.body.data;\n\n  new _day2.default({ data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var phase = req.body.phase;\n\n  _day2.default.findByIdAndUpdate(req.params.day_id, phase).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _day2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortDays = exports.getCohortDays = function getCohortDays(req, res) {\n  _day2.default.find({ cohort: req.params.cohort_id }).populate({\n    path: 'timeline.prompt',\n    populate: { path: 'pings' }\n  }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar todayFilter = function todayFilter() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n};\n\nvar getCurrentDays = exports.getCurrentDays = function getCurrentDays() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _day2.default.find(_extends({}, filter, {\n    date: todayFilter()\n  })).exec();\n};\n\nvar getToday = exports.getToday = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$user, userId, cohort, date, day;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$user = req.user, userId = _req$user._id, cohort = _req$user.currentCohort;\n            date = todayFilter();\n            _context2.next = 5;\n            return _day2.default.findOne({ cohort: cohort, date: date }).populate('timeline.prompt').populate('pingpongs.to').populate('pingpongs.ping').populate('pairs.students').exec();\n\n          case 5:\n            day = _context2.sent;\n\n            // important: ObjectId is not string\n            day.pingpongs = day.pingpongs.filter(function (pp) {\n              return pp.by.equals(userId);\n            });\n            day.timeline = day.timeline.map(function (tl) {\n              var startTime = tl.startTime;\n              startTime.setDate(day.date.getDate());\n              startTime.setFullYear(day.date.getFullYear());\n              startTime.setMonth(day.date.getMonth());\n              return {\n                _id: tl._id,\n                prompt: tl.prompt,\n                startTime: startTime\n              };\n            });\n            res.send({ data: day });\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            console.log(\"Day not found\", _context2.t0);\n            res.sendStatus(404);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function getToday(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar createDayPairs = exports.createDayPairs = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(day) {\n    var students, p, i, _p;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _user2.default.find({\n              'currentCohort': day.cohort\n            }).exec();\n\n          case 2:\n            students = _context3.sent;\n\n            if (!day.data.find(function (x) {\n              return x.type == \"Milestone\";\n            })) {\n              _context3.next = 10;\n              break;\n            }\n\n            // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n            // students = students.map(s => s._id)\n            p = (0, _createChunks2.default)(students, 3);\n\n            for (i = 0; i < p.length; i++) {\n              if (p[i].students.length <= 1) {\n                p[i - 1].students = p[i].students.concat(p[i - 1].students);\n                p.pop();\n              }\n            }\n            day.pairs = p;\n            return _context3.abrupt('return', day);\n\n          case 10:\n\n            // students = students.map(s => s._id)\n            _p = (0, _createChunks2.default)(students, 2);\n\n            day.pairs = _p;\n            // day.save()\n            console.log(\"DAY PAIRS\");\n            return _context3.abrupt('return', day);\n\n          case 14:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  }));\n\n  return function createDayPairs(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getPhase = function getPhase(i) {\n  if (i < 10) return 'Week 0';\n  if (i < 39) return 'Core';\n  if (i < 67) return 'Focus';\n  if (i < 81) return 'Deep Focus';\n  if (i < 95) return 'Capstone Product';\n  return 'Career';\n};\n\nvar createDays = function createDays(cohortId, cohortStartDate, fromDay, count) {\n  count = +count;\n  var dayDate = new Date(cohortStartDate.getTime());\n  var allDays = [];\n  for (var i = fromDay; i < fromDay + count; i++) {\n\n    var dDate = new Date(dayDate.getTime());\n    dDate.setDate(dDate.getDate() + i);\n\n    var ms = dDate.getTime();\n    dDate.setHours(0);\n    dDate.setMinutes(1);\n\n    var day = new _day2.default({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline: []\n    }).save();\n    allDays.push(day);\n  }\n\n  return Promise.all(allDays);\n};\n\nvar createCohortDays = exports.createCohortDays = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _ref5, _ref6, latestDay, cohort, nextDay, days;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _day2.default.find({ cohort: req.params.cohort_id }).sort({ day: -1 }).limit(1);\n\n          case 3:\n            _ref5 = _context4.sent;\n            _ref6 = _slicedToArray(_ref5, 1);\n            latestDay = _ref6[0];\n            _context4.next = 8;\n            return _cohort2.default.findOne({ _id: req.params.cohort_id });\n\n          case 8:\n            cohort = _context4.sent;\n            nextDay = latestDay === null ? 1 : 1 + latestDay.day;\n            _context4.next = 12;\n            return createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n\n          case 12:\n            days = _context4.sent;\n\n            res.send(days);\n            _context4.next = 20;\n            break;\n\n          case 16:\n            _context4.prev = 16;\n            _context4.t0 = _context4['catch'](0);\n\n            console.error(_context4.t0);\n            res.sendStatus(404);\n\n          case 20:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined, [[0, 16]]);\n  }));\n\n  return function createCohortDays(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar resetCohortDays = exports.resetCohortDays = function resetCohortDays(_ref7) {\n  var _id = _ref7._id,\n      startDate = _ref7.startDate;\n\n  return createDays(_id, startDate, 1, 108);\n};\n\nvar addPromptToTimeline = exports.addPromptToTimeline = function addPromptToTimeline(req, res) {\n  var _req$body = req.body,\n      startTime = _req$body.startTime,\n      prompt = _req$body.prompt;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $push: { \"timeline\": { startTime: startTime, prompt: prompt } }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).populate({\n      path: 'timeline.prompt',\n      populate: { path: 'pings' }\n    }).populate('pairs.students').exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar addContentToDay = exports.addContentToDay = function addContentToDay(req, res) {\n  var data = req.body;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $set: { 'data': data }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar removePromptFromTimeline = exports.removePromptFromTimeline = function removePromptFromTimeline(req, res) {\n  var _req$params = req.params,\n      day_id = _req$params.day_id,\n      timeline_id = _req$params.timeline_id;\n\n  _day2.default.update({ '_id': day_id, 'timeline._id': timeline_id }, { $pull: { 'timeline': { _id: timeline_id } } }).then(function (data) {\n    res.json({ data: data });\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n};\n\nvar resetPairs = exports.resetPairs = function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _day2.default.findById(req.params.day_id).populate('pairs.students').exec();\n\n          case 3:\n            day = _context5.sent;\n            _context5.next = 6;\n            return createDayPairs(day);\n\n          case 6:\n            day = _context5.sent;\n\n            day.save();\n            data = day.pairs;\n\n            res.send({ data: data });\n            _context5.next = 15;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined, [[0, 12]]);\n  }));\n\n  return function resetPairs(_x9, _x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar resetDay = exports.resetDay = function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var replicate, day;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            replicate = req.body.replicate;\n            _context6.next = 3;\n            return _day2.default.findById(replicate);\n\n          case 3:\n            day = _context6.sent;\n\n            _day2.default.findByIdAndUpdate(req.params.day_id, { $set: {\n                timeline: day.timeline,\n                phase: day.phase,\n                data: day.data\n              } }, { new: true }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).then(function (data) {\n              res.send({ data: data });\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 5:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined);\n  }));\n\n  return function resetDay(_x11, _x12) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Day",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "dayDetails",
        "dayNumber",
        "params",
        "cohortID",
        "query",
        "day",
        "cohort",
        "populate",
        "path",
        "e",
        "getOne",
        "findById",
        "day_id",
        "create",
        "body",
        "save",
        "update",
        "phase",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "id",
        "getCohortDays",
        "cohort_id",
        "todayFilter",
        "today",
        "Date",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "$gte",
        "$lt",
        "getCurrentDays",
        "filter",
        "date",
        "getToday",
        "user",
        "userId",
        "_id",
        "currentCohort",
        "findOne",
        "pingpongs",
        "pp",
        "by",
        "equals",
        "timeline",
        "map",
        "startTime",
        "tl",
        "setDate",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "prompt",
        "console",
        "log",
        "sendStatus",
        "createDayPairs",
        "User",
        "students",
        "x",
        "type",
        "p",
        "i",
        "length",
        "concat",
        "pop",
        "pairs",
        "getPhase",
        "createDays",
        "cohortId",
        "cohortStartDate",
        "fromDay",
        "count",
        "dayDate",
        "getTime",
        "allDays",
        "dDate",
        "ms",
        "push",
        "Promise",
        "all",
        "createCohortDays",
        "sort",
        "limit",
        "latestDay",
        "Cohort",
        "nextDay",
        "startDate",
        "days",
        "error",
        "resetCohortDays",
        "addPromptToTimeline",
        "$push",
        "addContentToDay",
        "$set",
        "removePromptFromTimeline",
        "timeline_id",
        "$pull",
        "resetPairs",
        "resetDay",
        "replicate",
        "new"
      ],
      "mappings": "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",
      "file": "day.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Day from '../models/day';\nimport Cohort from '../models/cohort'\nimport User from \"../models/user\";\nimport createChunks from \"../util/createChunks\" \n\nexport const getAll = (req, res) => {\n  Day.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const dayDetails = async (req, res) => {\n  const {dayNumber} = req.params\n  let {cohortID} = req.query\n  Day.find({day : dayNumber, cohort : cohortID})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n    })\n  .populate('pingpongs.ping')\n  .populate('pairs.students')\n  .exec().then(day => {\n    res.json({day})\n  }).catch(e => res.status(500).send(e))\n}\n\nexport const getOne = (req, res) => {\n  Day.findById(req.params.day_id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {data} = req.body;\n  new Day({data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const {phase} = req.body;\n  Day.findByIdAndUpdate(req.params.day_id, phase)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Day.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortDays = (req, res) => {\n  Day.find({cohort:req.params.cohort_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n      })\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec()\n    .then(data => res.json({data}))\n    .catch(err => res.status(500).send(err));\n}\n\nconst todayFilter = () => {\n  const today = new Date();\n  const tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n}\n\n\nexport const getCurrentDays = (filter = {}) => {\n  return Day.find({\n    ...filter,\n    date: todayFilter()\n  }).exec();\n}\n\nexport const getToday = async (req, res) => {\n  try {\n    const {_id: userId, currentCohort: cohort} = req.user;\n    const date = todayFilter();\n    const day = await Day.findOne({cohort, date})\n    .populate('timeline.prompt')\n    .populate('pingpongs.to')\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec();\n      // important: ObjectId is not string\n    day.pingpongs = day.pingpongs.filter(pp => pp.by.equals(userId));\n    day.timeline = day.timeline.map(tl => {\n      let startTime = tl.startTime;\n      startTime.setDate(day.date.getDate());\n      startTime.setFullYear(day.date.getFullYear());\n      startTime.setMonth(day.date.getMonth());\n      return {\n        _id: tl._id,\n        prompt: tl.prompt,\n        startTime\n      }\n    })\n    res.send({data:day});\n  } catch (err) {\n    console.log(\"Day not found\", err);\n    res.sendStatus(404);\n  }\n}\n\nexport const createDayPairs = async (day) => { \n\n    let students = await User.find({\n      'currentCohort': day.cohort\n    }).exec()\n    \n    if(day.data.find(x=> x.type==\"Milestone\")) {\n      // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 3)\n       for (let i = 0; i < p.length; i++) {\n         if (p[i].students.length <= 1) {\n           p[i-1].students = p[i].students.concat(p[i - 1].students)\n           p.pop()\n         }\n       }\n       day.pairs = p\n       return day \n    } else {\n\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 2)  \n      day.pairs = p\n      // day.save()\n      console.log(\"DAY PAIRS\")\n      return day\n  }\n}\n\nconst getPhase = i => {\n  if(i<10) return 'Week 0';\n  if(i<39) return 'Core';\n  if(i<67) return 'Focus';\n  if(i<81) return 'Deep Focus';\n  if(i<95) return 'Capstone Product';\n  return 'Career';\n}\n\nconst createDays = (cohortId, cohortStartDate, fromDay, count) => {\n  count = +count;\n  let dayDate = new Date(cohortStartDate.getTime());\n  let allDays =[];\n  for (let i = fromDay; i < fromDay + count; i++) {\n\n      let dDate=new Date(dayDate.getTime());\n      dDate.setDate(dDate.getDate() + i);\n\n      let ms = dDate.getTime();\n      dDate.setHours(0)\n      dDate.setMinutes(1)\n\n      let day = new Day({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline:[],\n    }).save()\n    allDays.push(day)\n  }\n\n  return Promise.all(allDays)\n}\n\nexport const createCohortDays = async (req, res) => {\n  try {\n    let [latestDay] = await Day.find({cohort : req.params.cohort_id}).sort({day : -1}).limit(1);\n    let cohort = await Cohort.findOne({_id : req.params.cohort_id});\n    let nextDay = latestDay === null ? 1 : (1 + latestDay.day);\n    let days = await createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n    res.send(days);\n  } catch(err) {\n    console.error(err);\n    res.sendStatus(404);\n  }\n\n}\n\nexport const resetCohortDays = ({_id, startDate}) => {\n  return createDays(_id, startDate, 1, 108);\n\n}\n\nexport const addPromptToTimeline = (req, res) => {\n  const {startTime, prompt} = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $push: {\"timeline\": {startTime, prompt}}\n  })\n  .then(data => {\n    Day.findById({_id: day_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n    })\n    .populate('pairs.students')\n    .exec()\n    .then( data => {\n       res.json({data})\n    }).catch(err => {\n      console.log(err);\n    })\n  })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const addContentToDay = (req, res) => {\n  const data = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $set: {'data': data}\n  })\n  .then( data => {\n    Day.findById({_id: day_id})\n      .exec()\n      .then(data => {\n        res.json({data})\n       })\n      .catch(err => {\n        console.log(err);\n        })\n    })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)\n  })\n}\n\nexport const removePromptFromTimeline = (req, res) => {\n  const {day_id, timeline_id} = req.params;\n  Day.update(\n    {'_id': day_id, 'timeline._id': timeline_id},\n    { $pull: { 'timeline': {_id: timeline_id} }}\n  )\n  .then( data => {\n    res.json({data})\n  })\n  .catch(err => {\n    res.status(500).send(err)\n  });\n}\n\nexport const resetPairs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id)\n    .populate('pairs.students')\n    .exec();\n    day = await createDayPairs(day);\n    day.save();\n    const data = day.pairs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport const resetDay = async (req, res) => {\n  const {replicate} = req.body;\n  const day = await Day.findById(replicate);\n  Day.findByIdAndUpdate(req.params.day_id, {$set : {\n    timeline: day.timeline,\n    phase: day.phase,\n    data: day.data,\n  }}, {new: true})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n  })\n  .then(data => {\n    res.send({data})\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/day.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/day.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/day.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.js",
      "sourceFileName": "day.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Day', new Schema({\n  date: {\n    type: Date\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n    // required: true\n  },\n  phase: {\n    type: String\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwiZGF0ZSIsInR5cGUiLCJEYXRlIiwiZGF5IiwiTnVtYmVyIiwibWluIiwibWF4IiwiZGF0YSIsImNvaG9ydCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJwaGFzZSIsIlN0cmluZyIsInBhaXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsInRpbWVsaW5lIiwicHJvbXB0Iiwic3RhcnRUaW1lIiwiTWl4ZWQiLCJwaW5ncG9uZ3MiLCJ0cmlnZ2VyVGltZSIsImJ5IiwidG8iLCJwaW5nIiwicG9uZyIsImNvbGxlY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLEtBQWYsRUFBc0IsSUFBSUYsTUFBSixDQUFXO0FBQzlDRyxRQUFNO0FBQ0pDLFVBQU1DO0FBQ047QUFGSSxHQUR3QztBQUs5Q0MsT0FBSztBQUNIRixVQUFNRyxNQURIO0FBRUhDLFNBQUssQ0FGRjtBQUdIQyxTQUFLO0FBSEYsR0FMeUM7QUFVOUNDLFFBQU0sQ0FBQyxFQUFELENBVndDO0FBVzlDQyxVQUFRO0FBQ05QLFVBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxTQUFLO0FBQ0w7QUFITSxHQVhzQztBQWdCOUNDLFNBQU87QUFDTFgsVUFBTVk7QUFERCxHQWhCdUM7QUFtQjlDQyxTQUFPLENBQUM7QUFDTkMsY0FBVUYsTUFESjtBQUVORyxjQUFVLENBQUM7QUFDVGYsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURWO0FBRVRDLFdBQUs7QUFGSSxLQUFEO0FBRkosR0FBRCxDQW5CdUM7O0FBMkI5Q00sWUFBVSxDQUFDO0FBQ1RDLFlBQVE7QUFDTmpCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxXQUFLO0FBRkMsS0FEQztBQUtUUSxlQUFXakIsSUFMRjtBQU1USyxVQUFNVixPQUFPWSxLQUFQLENBQWFXO0FBTlYsR0FBRCxDQTNCb0M7O0FBb0M5Q0MsYUFBVyxDQUFDO0FBQ1ZDLGlCQUFhcEIsSUFESDtBQUVWcUIsUUFBSTtBQUNGdEIsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURqQjtBQUVGQyxXQUFLO0FBRkgsS0FGTTtBQU1WYSxRQUFJO0FBQ0Z2QixZQUFNSixPQUFPWSxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFdBQUs7QUFGSCxLQU5NO0FBVVZjLFVBQU07QUFDSnhCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxXQUFLO0FBRkQsS0FWSTtBQWNWZSxVQUFNN0IsT0FBT1ksS0FBUCxDQUFhVztBQWRULEdBQUQ7O0FBcENtQyxDQUFYLEVBcURsQztBQUNETyxjQUFZO0FBRFgsQ0FyRGtDLENBQXRCLEMiLCJmaWxlIjoiZGF5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdEYXknLCBuZXcgU2NoZW1hKHtcbiAgZGF0ZToge1xuICAgIHR5cGU6IERhdGUsXG4gICAgLy8gcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZGF5OiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIG1pbjogMSxcbiAgICBtYXg6IDUwMFxuICB9LFxuICBkYXRhOiBbe31dLFxuICBjb2hvcnQ6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ29ob3J0JyxcbiAgICAvLyByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBwaGFzZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgcGFpcnM6IFt7XG4gICAgdGVhbU5hbWU6IFN0cmluZyxcbiAgICBzdHVkZW50czogW3tcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfV0sXG4gIH1dLFxuXG4gIHRpbWVsaW5lOiBbe1xuICAgIHByb21wdDoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnUHJvbXB0J1xuICAgIH0sXG4gICAgc3RhcnRUaW1lOiBEYXRlLFxuICAgIGRhdGE6IFNjaGVtYS5UeXBlcy5NaXhlZFxuICB9XSxcblxuICBwaW5ncG9uZ3M6IFt7XG4gICAgdHJpZ2dlclRpbWU6IERhdGUsXG4gICAgYnk6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfSxcbiAgICB0bzoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIHBpbmc6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1BpbmcnXG4gICAgfSxcbiAgICBwb25nOiBTY2hlbWEuVHlwZXMuTWl4ZWRcbiAgfV1cblxufSwge1xuICBjb2xsZWN0aW9uOiAnZGF5cydcbn0pKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "date",
        "type",
        "Date",
        "day",
        "Number",
        "min",
        "max",
        "data",
        "cohort",
        "Types",
        "ObjectId",
        "ref",
        "phase",
        "String",
        "pairs",
        "teamName",
        "students",
        "timeline",
        "prompt",
        "startTime",
        "Mixed",
        "pingpongs",
        "triggerTime",
        "by",
        "to",
        "ping",
        "pong",
        "collection"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,KAAf,EAAsB,IAAIF,MAAJ,CAAW;AAC9CG,QAAM;AACJC,UAAMC;AACN;AAFI,GADwC;AAK9CC,OAAK;AACHF,UAAMG,MADH;AAEHC,SAAK,CAFF;AAGHC,SAAK;AAHF,GALyC;AAU9CC,QAAM,CAAC,EAAD,CAVwC;AAW9CC,UAAQ;AACNP,UAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,SAAK;AACL;AAHM,GAXsC;AAgB9CC,SAAO;AACLX,UAAMY;AADD,GAhBuC;AAmB9CC,SAAO,CAAC;AACNC,cAAUF,MADJ;AAENG,cAAU,CAAC;AACTf,YAAMJ,OAAOY,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFJ,GAAD,CAnBuC;;AA2B9CM,YAAU,CAAC;AACTC,YAAQ;AACNjB,YAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,WAAK;AAFC,KADC;AAKTQ,eAAWjB,IALF;AAMTK,UAAMV,OAAOY,KAAP,CAAaW;AANV,GAAD,CA3BoC;;AAoC9CC,aAAW,CAAC;AACVC,iBAAapB,IADH;AAEVqB,QAAI;AACFtB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KAFM;AAMVa,QAAI;AACFvB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KANM;AAUVc,UAAM;AACJxB,YAAMJ,OAAOY,KAAP,CAAaC,QADf;AAEJC,WAAK;AAFD,KAVI;AAcVe,UAAM7B,OAAOY,KAAP,CAAaW;AAdT,GAAD;;AApCmC,CAAX,EAqDlC;AACDO,cAAY;AADX,CArDkC,CAAtB,C",
      "file": "day.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Day', new Schema({\n  date: {\n    type: Date,\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort',\n    // required: true\n  },\n  phase: {\n    type: String,\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/createChunks.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/createChunks.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/createChunks.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createChunks.js",
      "sourceFileName": "createChunks.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createChunks"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (array, number) {\n  array = _lodash2.default.shuffle(array);\n  var chunks = _lodash2.default.chunk(array, number);\n  chunks = chunks.map(function (element) {\n    return {\n      teamName: _faker2.default.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element\n    };\n  });\n\n  return chunks;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUNodW5rcy5qcyJdLCJuYW1lcyI6WyJhcnJheSIsIm51bWJlciIsIl8iLCJzaHVmZmxlIiwiY2h1bmtzIiwiY2h1bmsiLCJtYXAiLCJlbGVtZW50IiwidGVhbU5hbWUiLCJmYWtlciIsImZha2UiLCJzdHVkZW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlLFVBQUNBLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUNoQ0QsVUFBUUUsaUJBQUVDLE9BQUYsQ0FBVUgsS0FBVixDQUFSO0FBQ0EsTUFBSUksU0FBU0YsaUJBQUVHLEtBQUYsQ0FBUUwsS0FBUixFQUFlQyxNQUFmLENBQWI7QUFDQUcsV0FBU0EsT0FBT0UsR0FBUCxDQUFXLFVBQUNDLE9BQUQsRUFBYTtBQUMvQixXQUFPO0FBQ0xDLGdCQUFVQyxnQkFBTUMsSUFBTixDQUFXLDRDQUFYLENBREw7QUFFTEMsZ0JBQVVKO0FBRkwsS0FBUDtBQUlELEdBTFEsQ0FBVDs7QUFPQSxTQUFPSCxNQUFQO0FBQ0QsQyIsImZpbGUiOiJjcmVhdGVDaHVua3MuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZha2VyIGZyb20gJ2Zha2VyJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBkZWZhdWx0IChhcnJheSwgbnVtYmVyKSA9PiB7XG4gIGFycmF5ID0gXy5zaHVmZmxlKGFycmF5KTtcbiAgbGV0IGNodW5rcyA9IF8uY2h1bmsoYXJyYXksIG51bWJlcik7XG4gIGNodW5rcyA9IGNodW5rcy5tYXAoKGVsZW1lbnQpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgdGVhbU5hbWU6IGZha2VyLmZha2UoXCJ7e2NvbXBhbnkuYnNBZGplY3RpdmV9fS17e2NvbXBhbnkuYnNOb3VufX1cIiksXG4gICAgICBzdHVkZW50czogZWxlbWVudCxcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIGNodW5rcztcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createChunks.js"
      ],
      "names": [
        "array",
        "number",
        "_",
        "shuffle",
        "chunks",
        "chunk",
        "map",
        "element",
        "teamName",
        "faker",
        "fake",
        "students"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,KAAD,EAAQC,MAAR,EAAmB;AAChCD,UAAQE,iBAAEC,OAAF,CAAUH,KAAV,CAAR;AACA,MAAII,SAASF,iBAAEG,KAAF,CAAQL,KAAR,EAAeC,MAAf,CAAb;AACAG,WAASA,OAAOE,GAAP,CAAW,UAACC,OAAD,EAAa;AAC/B,WAAO;AACLC,gBAAUC,gBAAMC,IAAN,CAAW,4CAAX,CADL;AAELC,gBAAUJ;AAFL,KAAP;AAID,GALQ,CAAT;;AAOA,SAAOH,MAAP;AACD,C",
      "file": "createChunks.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import faker from 'faker';\nimport _ from 'lodash';\n\nexport default (array, number) => {\n  array = _.shuffle(array);\n  let chunks = _.chunk(array, number);\n  chunks = chunks.map((element) => {\n    return {\n      teamName: faker.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element,\n    }\n  })\n\n  return chunks;\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/token.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getSoalToken",
            "getFakeToken"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getSoalToken",
              "exported": "getSoalToken"
            },
            {
              "kind": "local",
              "local": "getFakeToken",
              "exported": "getFakeToken"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/token.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/token.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "token.js",
      "sourceFileName": "token.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "token"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFakeToken = exports.getSoalToken = undefined;\n\nvar _user = require('../models/user');\n\nvar _authScopes = require('./authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getScope = function getScope(user) {\n  switch (user.role) {\n    case _user.USER_ROLES.EDUCATOR:\n      return _authScopes2.default.EDUCATOR;\n    case _user.USER_ROLES.SUPERADMIN:\n      return _authScopes2.default.ALL;\n    default:\n      return _authScopes2.default.STUDENT;\n  }\n};\n\nvar getSoalToken = exports.getSoalToken = function getSoalToken(user) {\n  var githubToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return _jsonwebtoken2.default.sign({\n    user: user._id,\n    githubToken: githubToken,\n    scope: getScope(user)\n  }, process.env.JWT_SECRET);\n};\n\nvar getFakeToken = exports.getFakeToken = function getFakeToken() {\n  var fakeAdmin = {\n    _id: '234932498',\n    role: _user.USER_ROLES.SUPERADMIN\n  };\n  return getSoalToken(fakeAdmin);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuLmpzIl0sIm5hbWVzIjpbImdldFNjb3BlIiwidXNlciIsInJvbGUiLCJVU0VSX1JPTEVTIiwiRURVQ0FUT1IiLCJBVVRIX1NDT1BFUyIsIlNVUEVSQURNSU4iLCJBTEwiLCJTVFVERU5UIiwiZ2V0U29hbFRva2VuIiwiZ2l0aHViVG9rZW4iLCJqd3QiLCJzaWduIiwiX2lkIiwic2NvcGUiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImdldEZha2VUb2tlbiIsImZha2VBZG1pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFdBQVcsU0FBWEEsUUFBVyxPQUFRO0FBQ3ZCLFVBQU9DLEtBQUtDLElBQVo7QUFDRSxTQUFLQyxpQkFBV0MsUUFBaEI7QUFBMEIsYUFBT0MscUJBQVlELFFBQW5CO0FBQzFCLFNBQUtELGlCQUFXRyxVQUFoQjtBQUE0QixhQUFPRCxxQkFBWUUsR0FBbkI7QUFDNUI7QUFBUyxhQUFPRixxQkFBWUcsT0FBbkI7QUFIWDtBQUtELENBTkQ7O0FBUU8sSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxDQUFDUixJQUFEO0FBQUEsTUFBT1MsV0FBUCx1RUFBbUIsSUFBbkI7QUFBQSxTQUE0QkMsdUJBQUlDLElBQUosQ0FBUztBQUMvRFgsVUFBTUEsS0FBS1ksR0FEb0Q7QUFFL0RILDRCQUYrRDtBQUcvREksV0FBT2QsU0FBU0MsSUFBVDtBQUh3RCxHQUFULEVBSXJEYyxRQUFRQyxHQUFSLENBQVlDLFVBSnlDLENBQTVCO0FBQUEsQ0FBckI7O0FBT0EsSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxHQUFNO0FBQ2hDLE1BQU1DLFlBQVk7QUFDaEJOLFNBQUssV0FEVztBQUVoQlgsVUFBTUMsaUJBQVdHO0FBRkQsR0FBbEI7QUFJQSxTQUFPRyxhQUFhVSxTQUFiLENBQVA7QUFDRCxDQU5NIiwiZmlsZSI6InRva2VuLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IEFVVEhfU0NPUEVTIGZyb20gJy4vYXV0aFNjb3Blcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5cbmNvbnN0IGdldFNjb3BlID0gdXNlciA9PiB7XG4gIHN3aXRjaCh1c2VyLnJvbGUpIHtcbiAgICBjYXNlIFVTRVJfUk9MRVMuRURVQ0FUT1I6IHJldHVybiBBVVRIX1NDT1BFUy5FRFVDQVRPUjtcbiAgICBjYXNlIFVTRVJfUk9MRVMuU1VQRVJBRE1JTjogcmV0dXJuIEFVVEhfU0NPUEVTLkFMTDtcbiAgICBkZWZhdWx0OiByZXR1cm4gQVVUSF9TQ09QRVMuU1RVREVOVDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0U29hbFRva2VuID0gKHVzZXIsIGdpdGh1YlRva2VuPW51bGwpID0+IGp3dC5zaWduKHtcbiAgdXNlcjogdXNlci5faWQsXG4gIGdpdGh1YlRva2VuLFxuICBzY29wZTogZ2V0U2NvcGUodXNlciksXG59LCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKTtcblxuXG5leHBvcnQgY29uc3QgZ2V0RmFrZVRva2VuID0gKCkgPT4ge1xuICBjb25zdCBmYWtlQWRtaW4gPSB7XG4gICAgX2lkOiAnMjM0OTMyNDk4JyxcbiAgICByb2xlOiBVU0VSX1JPTEVTLlNVUEVSQURNSU4sXG4gIH1cbiAgcmV0dXJuIGdldFNvYWxUb2tlbihmYWtlQWRtaW4pO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "token.js"
      ],
      "names": [
        "getScope",
        "user",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "AUTH_SCOPES",
        "SUPERADMIN",
        "ALL",
        "STUDENT",
        "getSoalToken",
        "githubToken",
        "jwt",
        "sign",
        "_id",
        "scope",
        "process",
        "env",
        "JWT_SECRET",
        "getFakeToken",
        "fakeAdmin"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,OAAQ;AACvB,UAAOC,KAAKC,IAAZ;AACE,SAAKC,iBAAWC,QAAhB;AAA0B,aAAOC,qBAAYD,QAAnB;AAC1B,SAAKD,iBAAWG,UAAhB;AAA4B,aAAOD,qBAAYE,GAAnB;AAC5B;AAAS,aAAOF,qBAAYG,OAAnB;AAHX;AAKD,CAND;;AAQO,IAAMC,sCAAe,SAAfA,YAAe,CAACR,IAAD;AAAA,MAAOS,WAAP,uEAAmB,IAAnB;AAAA,SAA4BC,uBAAIC,IAAJ,CAAS;AAC/DX,UAAMA,KAAKY,GADoD;AAE/DH,4BAF+D;AAG/DI,WAAOd,SAASC,IAAT;AAHwD,GAAT,EAIrDc,QAAQC,GAAR,CAAYC,UAJyC,CAA5B;AAAA,CAArB;;AAOA,IAAMC,sCAAe,SAAfA,YAAe,GAAM;AAChC,MAAMC,YAAY;AAChBN,SAAK,WADW;AAEhBX,UAAMC,iBAAWG;AAFD,GAAlB;AAIA,SAAOG,aAAaU,SAAb,CAAP;AACD,CANM",
      "file": "token.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import {USER_ROLES} from '../models/user';\nimport AUTH_SCOPES from './authScopes';\nimport jwt from 'jsonwebtoken';\n\nconst getScope = user => {\n  switch(user.role) {\n    case USER_ROLES.EDUCATOR: return AUTH_SCOPES.EDUCATOR;\n    case USER_ROLES.SUPERADMIN: return AUTH_SCOPES.ALL;\n    default: return AUTH_SCOPES.STUDENT;\n  }\n}\n\nexport const getSoalToken = (user, githubToken=null) => jwt.sign({\n  user: user._id,\n  githubToken,\n  scope: getScope(user),\n}, process.env.JWT_SECRET);\n\n\nexport const getFakeToken = () => {\n  const fakeAdmin = {\n    _id: '234932498',\n    role: USER_ROLES.SUPERADMIN,\n  }\n  return getSoalToken(fakeAdmin);\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/authScopes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/authScopes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/authScopes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "authScopes.js",
      "sourceFileName": "authScopes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "authScopes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhTY29wZXMuanMiXSwibmFtZXMiOlsiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkFMTCJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQWU7QUFDYkEsV0FBUyxTQURJO0FBRWJDLFlBQVUsVUFGRztBQUdiQyxjQUFZLFlBSEM7QUFJYkMsT0FBSztBQUpRLEMiLCJmaWxlIjoiYXV0aFNjb3Blcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIFNUVURFTlQ6ICdzdHVkZW50JyxcbiAgRURVQ0FUT1I6ICdlZHVjYXRvcicsXG4gIFNVUEVSQURNSU46ICdzdXBlcmFkbWluJyxcbiAgQUxMOiAnYWxsJyxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "authScopes.js"
      ],
      "names": [
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "ALL"
      ],
      "mappings": ";;;;;kBAAe;AACbA,WAAS,SADI;AAEbC,YAAU,UAFG;AAGbC,cAAY,YAHC;AAIbC,OAAK;AAJQ,C",
      "file": "authScopes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "export default {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all',\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/cohort.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getCohortDays",
              "createCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortDays",
                "local": "getCohortDays"
              },
              {
                "kind": "named",
                "imported": "createCohortDays",
                "local": "createCohortDays"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName",
              "getCohorts",
              "getCohort",
              "createCohort",
              "updateCohort",
              "deleteCohort",
              "resetSpotters"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              },
              {
                "kind": "named",
                "imported": "getCohorts",
                "local": "getCohorts"
              },
              {
                "kind": "named",
                "imported": "getCohort",
                "local": "getCohort"
              },
              {
                "kind": "named",
                "imported": "createCohort",
                "local": "createCohort"
              },
              {
                "kind": "named",
                "imported": "updateCohort",
                "local": "updateCohort"
              },
              {
                "kind": "named",
                "imported": "deleteCohort",
                "local": "deleteCohort"
              },
              {
                "kind": "named",
                "imported": "resetSpotters",
                "local": "resetSpotters"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/cohort.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/cohort.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.routes.js",
      "sourceFileName": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _cohort = require('../controllers/cohort.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', _cohort.getCohorts);\nrouter.get('/:cohortName', _cohort.getCohortByName);\nrouter.get('/id/:id', _cohort.getCohort);\nrouter.post('/', _cohort.createCohort);\nrouter.patch('/:id', _cohort.updateCohort);\nrouter.delete('/:id', _cohort.deleteCohort);\n\nrouter.get('/:cohort_id/days', _day.getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', _day.createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', _roles.allowSuperAdminOnly, _cohort.resetSpotters);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldENvaG9ydHMiLCJnZXRDb2hvcnRCeU5hbWUiLCJnZXRDb2hvcnQiLCJwb3N0IiwiY3JlYXRlQ29ob3J0IiwicGF0Y2giLCJ1cGRhdGVDb2hvcnQiLCJkZWxldGUiLCJkZWxldGVDb2hvcnQiLCJnZXRDb2hvcnREYXlzIiwiY3JlYXRlQ29ob3J0RGF5cyIsImFsbG93U3VwZXJBZG1pbk9ubHkiLCJyZXNldFNwb3R0ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFHQTs7Ozs7O0FBTUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxrQkFBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGNBQVgsRUFBMkJFLHVCQUEzQjtBQUNBTCxPQUFPRyxHQUFQLENBQVcsU0FBWCxFQUFzQkcsaUJBQXRCO0FBQ0FOLE9BQU9PLElBQVAsQ0FBWSxHQUFaLEVBQWlCQyxvQkFBakI7QUFDQVIsT0FBT1MsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLG9CQUFyQjtBQUNBVixPQUFPVyxNQUFQLENBQWMsTUFBZCxFQUFzQkMsb0JBQXRCOztBQUVBWixPQUFPRyxHQUFQLENBQVcsa0JBQVgsRUFBK0JVLGtCQUEvQjtBQUNBOzs7Ozs7OztBQVFBYixPQUFPTyxJQUFQLENBQVksa0JBQVosRUFBZ0NPLHFCQUFoQzs7QUFFQWQsT0FBT1MsS0FBUCxDQUFhLDRCQUFiLEVBQTJDTSwwQkFBM0MsRUFBZ0VDLHFCQUFoRTs7a0JBRWVoQixNIiwiZmlsZSI6ImNvaG9ydC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IGdldENvaG9ydERheXMsIGNyZWF0ZUNvaG9ydERheXMgfSBmcm9tICcuLi9jb250cm9sbGVycy9kYXkuY29udHJvbGxlcic7XG5pbXBvcnQgeyBnZXRDb2hvcnRCeU5hbWUsIGdldENvaG9ydHMsIGdldENvaG9ydCwgY3JlYXRlQ29ob3J0LCB1cGRhdGVDb2hvcnQsIGRlbGV0ZUNvaG9ydCwgcmVzZXRTcG90dGVycyB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2NvaG9ydC5jb250cm9sbGVyJztcbmltcG9ydCB7IGFsbG93U3VwZXJBZG1pbk9ubHkgfSBmcm9tICcuLi9jb250cm9sbGVycy9yb2xlcy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxuXG4vKipcbiAqIEBhcGkge2dldH0gL2NvaG9ydHMgR2V0IGFsbCBjb2hvcnRzXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgR2V0Q29ob3J0c1xuICogQGFwaUdyb3VwIENvaG9ydFxuICovXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0Q29ob3J0cyk7XG5yb3V0ZXIuZ2V0KCcvOmNvaG9ydE5hbWUnLCBnZXRDb2hvcnRCeU5hbWUpO1xucm91dGVyLmdldCgnL2lkLzppZCcsIGdldENvaG9ydCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZUNvaG9ydCk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGVDb2hvcnQpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZUNvaG9ydCk7XG5cbnJvdXRlci5nZXQoJy86Y29ob3J0X2lkL2RheXMnLCBnZXRDb2hvcnREYXlzKTtcbi8qKlxuICogQGFwaSB7cG9zdH0gL2NvaG9ydHMvOmNvaG9ydF9pZC9kYXlzIEFkZCBkYXlzIHRvIGFuIGV4aXN0aW5nIGNvaG9ydFxuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIEV4dGVuZENvaG9ydFxuICogQGFwaUdyb3VwIENvaG9ydFxuICpcbiAqIEBhcGlQYXJhbSB7U3RyaW5nfSBjb3VudCBOdW1iZXIgb2YgZGF5cyB0byBiZSBhZGRlZCB0byB0aGUgY29ob3J0LlxuICovXG5yb3V0ZXIucG9zdCgnLzpjb2hvcnRfaWQvZGF5cycsIGNyZWF0ZUNvaG9ydERheXMpO1xuXG5yb3V0ZXIucGF0Y2goJy86Y29ob3J0X2lkL3Nwb3R0ZXJzL3Jlc2V0JywgYWxsb3dTdXBlckFkbWluT25seSwgcmVzZXRTcG90dGVycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getCohorts",
        "getCohortByName",
        "getCohort",
        "post",
        "createCohort",
        "patch",
        "updateCohort",
        "delete",
        "deleteCohort",
        "getCohortDays",
        "createCohortDays",
        "allowSuperAdminOnly",
        "resetSpotters"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAGA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,kBAAhB;AACAJ,OAAOG,GAAP,CAAW,cAAX,EAA2BE,uBAA3B;AACAL,OAAOG,GAAP,CAAW,SAAX,EAAsBG,iBAAtB;AACAN,OAAOO,IAAP,CAAY,GAAZ,EAAiBC,oBAAjB;AACAR,OAAOS,KAAP,CAAa,MAAb,EAAqBC,oBAArB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,oBAAtB;;AAEAZ,OAAOG,GAAP,CAAW,kBAAX,EAA+BU,kBAA/B;AACA;;;;;;;;AAQAb,OAAOO,IAAP,CAAY,kBAAZ,EAAgCO,qBAAhC;;AAEAd,OAAOS,KAAP,CAAa,4BAAb,EAA2CM,0BAA3C,EAAgEC,qBAAhE;;kBAEehB,M",
      "file": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport { getCohortDays, createCohortDays } from '../controllers/day.controller';\nimport { getCohortByName, getCohorts, getCohort, createCohort, updateCohort, deleteCohort, resetSpotters } from '../controllers/cohort.controller';\nimport { allowSuperAdminOnly } from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', getCohorts);\nrouter.get('/:cohortName', getCohortByName);\nrouter.get('/id/:id', getCohort);\nrouter.post('/', createCohort);\nrouter.patch('/:id', updateCohort);\nrouter.delete('/:id', deleteCohort);\n\nrouter.get('/:cohort_id/days', getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', allowSuperAdminOnly, resetSpotters);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/roles.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "allowSuperAdminOnly"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "allowSuperAdminOnly",
              "exported": "allowSuperAdminOnly"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/roles.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/roles.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "roles.controller.js",
      "sourceFileName": "roles.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "roles.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.allowSuperAdminOnly = undefined;\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Restrict students in these routes\nvar allowSuperAdminOnly = exports.allowSuperAdminOnly = function allowSuperAdminOnly(req, res, next) {\n  switch (req.jwtData.scope) {\n    case _authScopes2.default.ALL:\n    case _authScopes2.default.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGVzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiYWxsb3dTdXBlckFkbWluT25seSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIkFMTCIsIlNVUEVSQURNSU4iLCJzdGF0dXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztBQUVBO0FBQ08sSUFBTUEsb0RBQXNCLFNBQXRCQSxtQkFBc0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDckQsVUFBT0YsSUFBSUcsT0FBSixDQUFZQyxLQUFuQjtBQUNFLFNBQUtDLHFCQUFZQyxHQUFqQjtBQUNBLFNBQUtELHFCQUFZRSxVQUFqQjtBQUNFTDtBQUNBO0FBQ0Y7QUFDRUQsVUFBSU8sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLG1DQUFyQjtBQU5KO0FBUUQsQ0FUTSIsImZpbGUiOiJyb2xlcy5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVVUSF9TQ09QRVMgZnJvbSAnLi4vdXRpbC9hdXRoU2NvcGVzJztcblxuLy8gUmVzdHJpY3Qgc3R1ZGVudHMgaW4gdGhlc2Ugcm91dGVzXG5leHBvcnQgY29uc3QgYWxsb3dTdXBlckFkbWluT25seSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBzd2l0Y2gocmVxLmp3dERhdGEuc2NvcGUpIHtcbiAgICBjYXNlIEFVVEhfU0NPUEVTLkFMTDpcbiAgICBjYXNlIEFVVEhfU0NPUEVTLlNVUEVSQURNSU46XG4gICAgICBuZXh0KCk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoJ1lvdSBkbyBub3QgaGF2ZSBhZG1pbiBwcml2aWxlZ2VzIScpO1xuICB9XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "roles.controller.js"
      ],
      "names": [
        "allowSuperAdminOnly",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "ALL",
        "SUPERADMIN",
        "status",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACO,IAAMA,oDAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrD,UAAOF,IAAIG,OAAJ,CAAYC,KAAnB;AACE,SAAKC,qBAAYC,GAAjB;AACA,SAAKD,qBAAYE,UAAjB;AACEL;AACA;AACF;AACED,UAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mCAArB;AANJ;AAQD,CATM",
      "file": "roles.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import AUTH_SCOPES from '../util/authScopes';\n\n// Restrict students in these routes\nexport const allowSuperAdminOnly = (req, res, next) => {\n  switch(req.jwtData.scope) {\n    case AUTH_SCOPES.ALL:\n    case AUTH_SCOPES.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/educator.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/educator.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/educator.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/educator.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.routes.js",
      "sourceFileName": "educator.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _educator = require('../controllers/educator.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _educator.getAll);\nrouter.post('/', _educator.create);\nrouter.get('/:id', _educator.getOne);\nrouter.patch('/:id', _educator.update);\nrouter.delete('/:id', _educator.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwiZ2V0IiwiZ2V0QWxsIiwicG9zdCIsImNyZWF0ZSIsImdldE9uZSIsInBhdGNoIiwidXBkYXRlIiwiZGVsZXRlIiwiZGVsZXRlT25lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGdCQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsZ0JBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxnQkFBbkI7QUFDQVAsT0FBT1EsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLGdCQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsbUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJlZHVjYXRvci5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2VkdWNhdG9yLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,gBAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,gBAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,gBAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,gBAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,mBAAtB;;kBAEeX,M",
      "file": "educator.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/educator.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/educator.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/educator.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/educator.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.controller.js",
      "sourceFileName": "educator.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user2.default.find({ $or: [{ role: _user.USER_ROLES.EDUCATOR }, { role: _user.USER_ROLES.SUPERADMIN }] }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(req);\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role;\n\n  new _user2.default({ name: name, email: email, profile: profile, role: role }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  _user2.default.findByIdAndUpdate(req.params.id).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiZ2V0QWxsIiwicmVxIiwicmVzIiwiUmVzb3VyY2UiLCJmaW5kIiwiJG9yIiwicm9sZSIsIlVTRVJfUk9MRVMiLCJFRFVDQVRPUiIsIlNVUEVSQURNSU4iLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwibmFtZSIsImVtYWlsIiwicHJvZmlsZSIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsQ0FBYyxFQUFFQyxLQUFJLENBQUUsRUFBQ0MsTUFBTUMsaUJBQVdDLFFBQWxCLEVBQUYsRUFBK0IsRUFBQ0YsTUFBTUMsaUJBQVdFLFVBQWxCLEVBQS9CLENBQU4sRUFBZCxFQUFxRkMsSUFBckYsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVQsSUFBSVUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPWixJQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNqQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNnQixRQUFULENBQWtCbEIsSUFBSW1CLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENxQixVQUFRQyxHQUFSLENBQVl2QixHQUFaO0FBRGtDLGtCQUVJQSxJQUFJd0IsSUFGUjtBQUFBLE1BRTNCQyxJQUYyQixhQUUzQkEsSUFGMkI7QUFBQSxNQUVyQkMsS0FGcUIsYUFFckJBLEtBRnFCO0FBQUEsTUFFZEMsT0FGYyxhQUVkQSxPQUZjO0FBQUEsTUFFTHRCLElBRkssYUFFTEEsSUFGSzs7QUFHbEMsTUFBSUgsY0FBSixDQUFhLEVBQUN1QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUFiLEVBQTRDdUIsSUFBNUMsR0FDQ2xCLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlhLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQixFQUFDQyxVQUFELEVBQXJCLENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pTLFlBQVFDLEdBQVIsQ0FBWVAsR0FBWjtBQUNBZixRQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCO0FBQTBCLEdBSjVCO0FBS0QsQ0FSTTs7QUFVQSxJQUFNYSwwQkFBUyxTQUFUQSxNQUFTLENBQUM3QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVM0QixpQkFBVCxDQUEyQjlCLElBQUltQixNQUFKLENBQVdDLEVBQXRDLEVBQ0NWLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTWUsZ0NBQVksU0FBWkEsU0FBWSxDQUFDL0IsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTOEIsTUFBVCxDQUFnQixFQUFDQyxLQUFJakMsSUFBSW1CLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1ULElBQUlpQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDckIsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoiZWR1Y2F0b3IuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc291cmNlLCB7IFVTRVJfUk9MRVMgfSBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCh7ICRvcjpbIHtyb2xlOiBVU0VSX1JPTEVTLkVEVUNBVE9SfSwge3JvbGU6IFVTRVJfUk9MRVMuU1VQRVJBRE1JTn0gXX0pLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zb2xlLmxvZyhyZXEpXG4gIGNvbnN0IHtuYW1lLCBlbWFpbCwgcHJvZmlsZSwgcm9sZSB9ID0gcmVxLmJvZHk7XG4gIG5ldyBSZXNvdXJjZSh7bmFtZSwgZW1haWwsIHByb2ZpbGUsIHJvbGUgfSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4gcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "$or",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "SUPERADMIN",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "email",
        "profile",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,CAAc,EAAEC,KAAI,CAAE,EAACC,MAAMC,iBAAWC,QAAlB,EAAF,EAA+B,EAACF,MAAMC,iBAAWE,UAAlB,EAA/B,CAAN,EAAd,EAAqFC,IAArF,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACjB,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASgB,QAAT,CAAkBlB,IAAImB,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACrB,GAAD,EAAMC,GAAN,EAAc;AAClCqB,UAAQC,GAAR,CAAYvB,GAAZ;AADkC,kBAEIA,IAAIwB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,KAFqB,aAErBA,KAFqB;AAAA,MAEdC,OAFc,aAEdA,OAFc;AAAA,MAELtB,IAFK,aAELA,IAFK;;AAGlC,MAAIH,cAAJ,CAAa,EAACuB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAAb,EAA4CuB,IAA5C,GACClB,IADD,CACM;AAAA,WAAQT,IAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAf,QAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMa,0BAAS,SAATA,MAAS,CAAC7B,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAAS4B,iBAAT,CAA2B9B,IAAImB,MAAJ,CAAWC,EAAtC,EACCV,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMe,gCAAY,SAAZA,SAAY,CAAC/B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS8B,MAAT,CAAgB,EAACC,KAAIjC,IAAImB,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMT,IAAIiC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "educator.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource, { USER_ROLES } from '../models/user';\n\nexport const getAll = (req, res) => {\n  Resource.find({ $or:[ {role: USER_ROLES.EDUCATOR}, {role: USER_ROLES.SUPERADMIN} ]}).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(req)\n  const {name, email, profile, role } = req.body;\n  new Resource({name, email, profile, role }).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  Resource.findByIdAndUpdate(req.params.id)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/student.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/student.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/student.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.routes.js",
      "sourceFileName": "student.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _student = require('../controllers/student.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _student.getAll);\nrouter.post('/', _student.create);\nrouter.get('/:id', _student.getOne);\nrouter.patch('/:id', _student.update);\nrouter.delete('/:id', _student.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsZUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLGVBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxlQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsZUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGtCQUF0Qjs7a0JBRWVYLE0iLCJmaWxlIjoic3R1ZGVudC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3N0dWRlbnQuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,eAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,eAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,eAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,eAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,kBAAtB;;kBAEeX,M",
      "file": "student.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/student.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/prompt.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/prompt.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/prompt.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/prompt.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.routes.js",
      "sourceFileName": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _prompt = require('../controllers/prompt.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _prompt.getAll);\nrouter.post('/', _prompt.create);\nrouter.get('/:id', _prompt.getOne);\nrouter.patch('/:id', _prompt.update);\nrouter.delete('/:id', _prompt.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsInBvc3QiLCJjcmVhdGUiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImRlbGV0ZSIsImRlbGV0ZU9uZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxjQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsY0FBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLGNBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxjQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsaUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwcm9tcHQucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9wcm9tcHQuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,cAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,cAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,cAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,cAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,iBAAtB;;kBAEeX,M",
      "file": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/prompt.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/prompt.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/prompt.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/prompt.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.controller.js",
      "sourceFileName": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _prompt = require(\"../models/prompt\");\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _prompt2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _prompt2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Prompt\");\n  var _req$body = req.body,\n      name = _req$body.name,\n      duration = _req$body.duration,\n      pings = _req$body.pings,\n      type = _req$body.type;\n\n  console.log(req);\n  new _prompt2.default({ name: name, duration: duration, pings: pings, type: type }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      name = _req$body2.name,\n      type = _req$body2.type,\n      duration = _req$body2.duration,\n      pings = _req$body2.pings,\n      tags = _req$body2.tags;\n\n  _prompt2.default.findByIdAndUpdate(req.params.id, { name: name, type: type, duration: duration, pings: pings, tags: tags }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _prompt2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.sendStatus(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldEFsbCIsInJlcSIsInJlcyIsIlJlc291cmNlIiwiZmluZCIsImV4ZWMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJuYW1lIiwiZHVyYXRpb24iLCJwaW5ncyIsInR5cGUiLCJzYXZlIiwidXBkYXRlIiwidGFncyIsImZpbmRCeUlkQW5kVXBkYXRlIiwiZGVsZXRlT25lIiwicmVtb3ZlIiwiX2lkIiwic2VuZFN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFTyxJQUFNQSwwQkFBUyxTQUFUQSxNQUFTLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU0MsSUFBVCxHQUFnQkMsSUFBaEIsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU1csUUFBVCxDQUFrQmIsSUFBSWMsTUFBSixDQUFXQyxFQUE3QixFQUFpQ1gsSUFBakMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNSywwQkFBUyxTQUFUQSxNQUFTLENBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ2dCLFVBQVFDLEdBQVIsQ0FBWSxrQkFBWjtBQURrQyxrQkFFSWxCLElBQUltQixJQUZSO0FBQUEsTUFFM0JDLElBRjJCLGFBRTNCQSxJQUYyQjtBQUFBLE1BRXJCQyxRQUZxQixhQUVyQkEsUUFGcUI7QUFBQSxNQUVYQyxLQUZXLGFBRVhBLEtBRlc7QUFBQSxNQUVKQyxJQUZJLGFBRUpBLElBRkk7O0FBR2xDTixVQUFRQyxHQUFSLENBQVlsQixHQUFaO0FBQ0EsTUFBSUUsZ0JBQUosQ0FBYSxFQUFDa0IsVUFBRCxFQUFPQyxrQkFBUCxFQUFpQkMsWUFBakIsRUFBd0JDLFVBQXhCLEVBQWIsRUFBNENDLElBQTVDLEdBQ0NuQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU8sZUFBTztBQUNaUyxZQUFRQyxHQUFSLENBQVlQLEdBQVo7QUFDQVYsUUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQjtBQUEwQixHQUo1QjtBQUtELENBVE07O0FBV0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDekIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxtQkFDWUQsSUFBSW1CLElBRGhCO0FBQUEsTUFDMUJDLElBRDBCLGNBQzFCQSxJQUQwQjtBQUFBLE1BQ3BCRyxJQURvQixjQUNwQkEsSUFEb0I7QUFBQSxNQUNkRixRQURjLGNBQ2RBLFFBRGM7QUFBQSxNQUNKQyxLQURJLGNBQ0pBLEtBREk7QUFBQSxNQUNHSSxJQURILGNBQ0dBLElBREg7O0FBRWxDeEIsbUJBQVN5QixpQkFBVCxDQUEyQjNCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUssVUFBRixFQUFRRyxVQUFSLEVBQWNGLGtCQUFkLEVBQXdCQyxZQUF4QixFQUErQkksVUFBL0IsRUFBMUMsRUFDQ3JCLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWlCLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzVCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxtQkFBUzJCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSTlCLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUk4QixVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDdkIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSThCLFVBQUosQ0FBZSxHQUFmLEVBQW9CckIsSUFBcEIsQ0FBeUJDLEdBQXpCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwcm9tcHQuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc291cmNlIGZyb20gJy4uL21vZGVscy9wcm9tcHQnO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2coXCJJbiBjcmVhdGUgUHJvbXB0XCIpXG4gIGNvbnN0IHtuYW1lLCBkdXJhdGlvbiwgcGluZ3MsIHR5cGV9ID0gcmVxLmJvZHk7XG4gIGNvbnNvbGUubG9nKHJlcSk7XG4gIG5ldyBSZXNvdXJjZSh7bmFtZSwgZHVyYXRpb24sIHBpbmdzLCB0eXBlfSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4gcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IG5hbWUsIHR5cGUsIGR1cmF0aW9uLCBwaW5ncywgdGFncyB9ID0gcmVxLmJvZHk7XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHsgbmFtZSwgdHlwZSwgZHVyYXRpb24sIHBpbmdzLCB0YWdzIH0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKCgpID0+IHJlcy5zZW5kU3RhdHVzKDIwNCkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnNlbmRTdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "duration",
        "pings",
        "type",
        "save",
        "update",
        "tags",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClCgB,UAAQC,GAAR,CAAY,kBAAZ;AADkC,kBAEIlB,IAAImB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,QAFqB,aAErBA,QAFqB;AAAA,MAEXC,KAFW,aAEXA,KAFW;AAAA,MAEJC,IAFI,aAEJA,IAFI;;AAGlCN,UAAQC,GAAR,CAAYlB,GAAZ;AACA,MAAIE,gBAAJ,CAAa,EAACkB,UAAD,EAAOC,kBAAP,EAAiBC,YAAjB,EAAwBC,UAAxB,EAAb,EAA4CC,IAA5C,GACCnB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CATM;;AAWA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACYD,IAAImB,IADhB;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBG,IADoB,cACpBA,IADoB;AAAA,MACdF,QADc,cACdA,QADc;AAAA,MACJC,KADI,cACJA,KADI;AAAA,MACGI,IADH,cACGA,IADH;;AAElCxB,mBAASyB,iBAAT,CAA2B3B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEK,UAAF,EAAQG,UAAR,EAAcF,kBAAd,EAAwBC,YAAxB,EAA+BI,UAA/B,EAA1C,EACCrB,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMiB,gCAAY,SAAZA,SAAY,CAAC5B,GAAD,EAAMC,GAAN,EAAc;AACrCC,mBAAS2B,MAAT,CAAgB,EAACC,KAAI9B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI8B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECvB,KAFD,CAEO;AAAA,WAAOP,IAAI8B,UAAJ,CAAe,GAAf,EAAoBrB,IAApB,CAAyBC,GAAzB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/prompt';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Prompt\")\n  const {name, duration, pings, type} = req.body;\n  console.log(req);\n  new Resource({name, duration, pings, type}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const { name, type, duration, pings, tags } = req.body;\n  Resource.findByIdAndUpdate(req.params.id, { name, type, duration, pings, tags })\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.sendStatus(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/prompt.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/prompt.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/prompt.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.js",
      "sourceFileName": "prompt.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nmodule.exports = _mongoose2.default.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping'\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkdXJhdGlvbiIsIk51bWJlciIsInRhZ3MiLCJwaW5ncyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJkYXRhIiwiTWl4ZWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQRSxPQUFPQyxPQUFQLEdBQWlCRixtQkFBU0csS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUosTUFBSixDQUFXO0FBQ25ESyxRQUFNO0FBQ0pDLFVBQU1DLE1BREY7QUFFSkMsY0FBVTtBQUZOLEdBRDZDO0FBS25EQyxZQUFVQyxNQUx5QyxFQUtqQztBQUNsQkMsUUFBTSxDQUFDSixNQUFELENBTjZDO0FBT25ESyxTQUFPLENBQUM7QUFDTk4sVUFBTU4sT0FBT2EsS0FBUCxDQUFhQyxRQURiO0FBRU5DLFNBQUs7QUFGQyxHQUFELENBUDRDO0FBV25EVCxRQUFNQyxNQVg2QztBQVluRFMsUUFBTWhCLE9BQU9hLEtBQVAsQ0FBYUk7QUFaZ0MsQ0FBWCxDQUF6QixDQUFqQiIsImZpbGUiOiJwcm9tcHQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnUHJvbXB0JywgbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZHVyYXRpb246IE51bWJlciwgLy8gaW4gTWludXRlc1xuICB0YWdzOiBbU3RyaW5nXSxcbiAgcGluZ3M6IFt7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1BpbmcnLFxuICB9XSxcbiAgdHlwZTogU3RyaW5nLFxuICBkYXRhOiBTY2hlbWEuVHlwZXMuTWl4ZWRcbn0pKTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "module",
        "exports",
        "model",
        "name",
        "type",
        "String",
        "required",
        "duration",
        "Number",
        "tags",
        "pings",
        "Types",
        "ObjectId",
        "ref",
        "data",
        "Mixed"
      ],
      "mappings": ";;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEPE,OAAOC,OAAP,GAAiBF,mBAASG,KAAT,CAAe,QAAf,EAAyB,IAAIJ,MAAJ,CAAW;AACnDK,QAAM;AACJC,UAAMC,MADF;AAEJC,cAAU;AAFN,GAD6C;AAKnDC,YAAUC,MALyC,EAKjC;AAClBC,QAAM,CAACJ,MAAD,CAN6C;AAOnDK,SAAO,CAAC;AACNN,UAAMN,OAAOa,KAAP,CAAaC,QADb;AAENC,SAAK;AAFC,GAAD,CAP4C;AAWnDT,QAAMC,MAX6C;AAYnDS,QAAMhB,OAAOa,KAAP,CAAaI;AAZgC,CAAX,CAAzB,CAAjB",
      "file": "prompt.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nmodule.exports = mongoose.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping',\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/ping.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/ping.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/ping.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/ping.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.routes.js",
      "sourceFileName": "ping.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _ping = require('../controllers/ping.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _ping.getAll);\nrouter.post('/', _ping.create);\nrouter.get('/:id', _ping.getOne);\nrouter.patch('/:id', _ping.update);\nrouter.delete('/:id', _ping.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwaW5nLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcGluZy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "ping.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/ping.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/ping.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/ping.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/ping.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.controller.js",
      "sourceFileName": "ping.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _ping2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _ping2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      type = _req$body.type,\n      ttl = _req$body.ttl,\n      tags = _req$body.tags,\n      data = _req$body.data;\n\n  new _ping2.default({ type: type, ttl: ttl, tags: tags, data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      type = _req$body2.type,\n      ttl = _req$body2.ttl,\n      tags = _req$body2.tags,\n      data = _req$body2.data;\n\n  _ping2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _ping2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImJvZHkiLCJ0eXBlIiwidHRsIiwidGFncyIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxrQkFDRkQsSUFBSWlCLElBREY7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEdBRHFCLGFBQ3JCQSxHQURxQjtBQUFBLE1BQ2hCQyxJQURnQixhQUNoQkEsSUFEZ0I7QUFBQSxNQUNWYixJQURVLGFBQ1ZBLElBRFU7O0FBRWxDLE1BQUlMLGNBQUosQ0FBYSxFQUFDZ0IsVUFBRCxFQUFPQyxRQUFQLEVBQVlDLFVBQVosRUFBa0JiLFVBQWxCLEVBQWIsRUFBc0NjLElBQXRDLEdBQ0NoQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FMTTs7QUFPQSxJQUFNVywwQkFBUyxTQUFUQSxNQUFTLENBQUN0QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLG1CQUNERCxJQUFJaUIsSUFESDtBQUFBLE1BQzFCQyxJQUQwQixjQUMxQkEsSUFEMEI7QUFBQSxNQUNwQkMsR0FEb0IsY0FDcEJBLEdBRG9CO0FBQUEsTUFDZkMsSUFEZSxjQUNmQSxJQURlO0FBQUEsTUFDVGIsSUFEUyxjQUNUQSxJQURTOztBQUVsQ0wsaUJBQVNxQixpQkFBVCxDQUEyQnZCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUcsVUFBRixFQUFRQyxRQUFSLEVBQWFDLFVBQWIsRUFBbUJiLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWEsZ0NBQVksU0FBWkEsU0FBWSxDQUFDeEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTdUIsTUFBVCxDQUFnQixFQUFDQyxLQUFJMUIsSUFBSWMsTUFBSixDQUFXQyxFQUFoQixFQUFoQixFQUFxQ1gsSUFBckMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBTUosSUFBSTBCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNuQixLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwaW5nLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dHlwZSwgdHRsLCB0YWdzLCBkYXRhfSA9IHJlcS5ib2R5O1xuICBuZXcgUmVzb3VyY2Uoe3R5cGUsIHR0bCwgdGFncywgZGF0YX0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyB0eXBlLCB0dGwsIHRhZ3MsIGRhdGF9ID0gcmVxLmJvZHlcbiAgUmVzb3VyY2UuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgeyB0eXBlLCB0dGwsIHRhZ3MsIGRhdGF9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UucmVtb3ZlKHtfaWQ6cmVxLnBhcmFtcy5pZH0pLmV4ZWMoKVxuICAudGhlbigoKSA9PiByZXMuc2VuZFN0YXR1cygyMDQpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "type",
        "ttl",
        "tags",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACFD,IAAIiB,IADF;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,GADqB,aACrBA,GADqB;AAAA,MAChBC,IADgB,aAChBA,IADgB;AAAA,MACVb,IADU,aACVA,IADU;;AAElC,MAAIL,cAAJ,CAAa,EAACgB,UAAD,EAAOC,QAAP,EAAYC,UAAZ,EAAkBb,UAAlB,EAAb,EAAsCc,IAAtC,GACChB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMW,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACDD,IAAIiB,IADH;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBC,GADoB,cACpBA,GADoB;AAAA,MACfC,IADe,cACfA,IADe;AAAA,MACTb,IADS,cACTA,IADS;;AAElCL,iBAASqB,iBAAT,CAA2BvB,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEG,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBb,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMa,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAASuB,MAAT,CAAgB,EAACC,KAAI1B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI0B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECnB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "ping.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/ping';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {type, ttl, tags, data} = req.body;\n  new Resource({type, ttl, tags, data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const { type, ttl, tags, data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/ping.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getIntentionPing"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getIntentionPing",
              "exported": "getIntentionPing"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/ping.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/ping.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.js",
      "sourceFileName": "ping.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIntentionPing = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Ping = _mongoose2.default.model('Ping', new Schema({\n  data: Schema.Types.Mixed,\n  tags: [],\n  ttl: Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String\n}));\n\nvar getIntentionPing = exports.getIntentionPing = function getIntentionPing() {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var pingData, ping;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pingData = { type: 'Intention' };\n              _context.next = 3;\n              return Ping.findOne(pingData).exec();\n\n            case 3:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 6:\n              _context.next = 8;\n              return new Ping(pingData).save();\n\n            case 8:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 11:\n\n              reject();\n\n            case 12:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nexports.default = Ping;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJQaW5nIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInRhZ3MiLCJ0dGwiLCJOdW1iZXIiLCJ0eXBlIiwiU3RyaW5nIiwia2luZCIsInF1ZXN0aW9uVHlwZSIsImdldEludGVudGlvblBpbmciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInBpbmdEYXRhIiwiZmluZE9uZSIsImV4ZWMiLCJwaW5nIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLFFBQUssRUFGd0M7QUFHN0NDLE9BQUlDLE1BSHlDLEVBR2pDO0FBQ1pDLFFBQU1DLE1BSnVDO0FBSzdDQyxRQUFNRCxNQUx1QztBQU03Q0UsZ0JBQWNGO0FBTitCLENBQVgsQ0FBdkIsQ0FBYjs7QUFTTyxJQUFNRyw4Q0FBbUIsU0FBbkJBLGdCQUFtQjtBQUFBLFNBQU0sSUFBSUMsT0FBSjtBQUFBLHVFQUFZLGlCQUFPQyxPQUFQLEVBQWdCQyxNQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDNUNDLHNCQUQ0QyxHQUNqQyxFQUFDUixNQUFNLFdBQVAsRUFEaUM7QUFBQTtBQUFBLHFCQUUvQlIsS0FBS2lCLE9BQUwsQ0FBYUQsUUFBYixFQUF1QkUsSUFBdkIsRUFGK0I7O0FBQUE7QUFFNUNDLGtCQUY0Qzs7QUFBQSxvQkFHN0NBLFNBQVMsSUFIb0M7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBSXZDTCxRQUFRSyxJQUFSLENBSnVDOztBQUFBO0FBQUE7QUFBQSxxQkFPbkMsSUFBSW5CLElBQUosQ0FBU2dCLFFBQVQsRUFBbUJJLElBQW5CLEVBUG1DOztBQUFBO0FBT2hERCxrQkFQZ0Q7O0FBQUEsb0JBUTdDQSxTQUFTLElBUm9DO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVN2Q0wsUUFBUUssSUFBUixDQVR1Qzs7QUFBQTs7QUFZaERKOztBQVpnRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQU47QUFBQSxDQUF6Qjs7a0JBZ0JRZixJIiwiZmlsZSI6InBpbmcuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuY29uc3QgUGluZyA9IG1vbmdvb3NlLm1vZGVsKCdQaW5nJywgbmV3IFNjaGVtYSh7XG4gIGRhdGE6U2NoZW1hLlR5cGVzLk1peGVkLFxuICB0YWdzOltdLFxuICB0dGw6TnVtYmVyLCAvL3NlY29uZHNcbiAgdHlwZTogU3RyaW5nLFxuICBraW5kOiBTdHJpbmcsXG4gIHF1ZXN0aW9uVHlwZTogU3RyaW5nLFxufSkpO1xuXG5leHBvcnQgY29uc3QgZ2V0SW50ZW50aW9uUGluZyA9ICgpID0+IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgbGV0IHBpbmdEYXRhID0ge3R5cGU6ICdJbnRlbnRpb24nfVxuICBsZXQgcGluZyA9IGF3YWl0IFBpbmcuZmluZE9uZShwaW5nRGF0YSkuZXhlYygpO1xuICBpZihwaW5nICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIHJlc29sdmUocGluZyk7XG4gIH1cblxuICBwaW5nID0gYXdhaXQgbmV3IFBpbmcocGluZ0RhdGEpLnNhdmUoKTtcbiAgaWYocGluZyAhPT0gbnVsbCkge1xuICAgIHJldHVybiByZXNvbHZlKHBpbmcpO1xuICB9XG5cbiAgcmVqZWN0KCk7XG5cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBQaW5nO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Ping",
        "model",
        "data",
        "Types",
        "Mixed",
        "tags",
        "ttl",
        "Number",
        "type",
        "String",
        "kind",
        "questionType",
        "getIntentionPing",
        "Promise",
        "resolve",
        "reject",
        "pingData",
        "findOne",
        "exec",
        "ping",
        "save"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,QAAK,EAFwC;AAG7CC,OAAIC,MAHyC,EAGjC;AACZC,QAAMC,MAJuC;AAK7CC,QAAMD,MALuC;AAM7CE,gBAAcF;AAN+B,CAAX,CAAvB,CAAb;;AASO,IAAMG,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5CC,sBAD4C,GACjC,EAACR,MAAM,WAAP,EADiC;AAAA;AAAA,qBAE/BR,KAAKiB,OAAL,CAAaD,QAAb,EAAuBE,IAAvB,EAF+B;;AAAA;AAE5CC,kBAF4C;;AAAA,oBAG7CA,SAAS,IAHoC;AAAA;AAAA;AAAA;;AAAA,+CAIvCL,QAAQK,IAAR,CAJuC;;AAAA;AAAA;AAAA,qBAOnC,IAAInB,IAAJ,CAASgB,QAAT,EAAmBI,IAAnB,EAPmC;;AAAA;AAOhDD,kBAPgD;;AAAA,oBAQ7CA,SAAS,IARoC;AAAA;AAAA;AAAA;;AAAA,+CASvCL,QAAQK,IAAR,CATuC;;AAAA;;AAYhDJ;;AAZgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA,CAAzB;;kBAgBQf,I",
      "file": "ping.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Ping = mongoose.model('Ping', new Schema({\n  data:Schema.Types.Mixed,\n  tags:[],\n  ttl:Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String,\n}));\n\nexport const getIntentionPing = () => new Promise(async (resolve, reject) => {\n  let pingData = {type: 'Intention'}\n  let ping = await Ping.findOne(pingData).exec();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  ping = await new Ping(pingData).save();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  reject();\n\n});\n\nexport default Ping;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/pingpong.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "addPong"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/pingpong.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/pingpong.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.routes.js",
      "sourceFileName": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.post('/:pingpong_id/pongs', _pingpong2.default);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmdwb25nLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwicG9zdCIsImFkZFBvbmciXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLElBQVAsQ0FBWSxxQkFBWixFQUFtQ0Msa0JBQW5DOztrQkFFZUosTSIsImZpbGUiOiJwaW5ncG9uZy5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBhZGRQb25nIGZyb20gJy4uL2NvbnRyb2xsZXJzL3Bpbmdwb25nLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIucG9zdCgnLzpwaW5ncG9uZ19pZC9wb25ncycsIGFkZFBvbmcpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "post",
        "addPong"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,IAAP,CAAY,qBAAZ,EAAmCC,kBAAnC;;kBAEeJ,M",
      "file": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport addPong from '../controllers/pingpong.controller';\n\nconst router = Express.Router();\n\nrouter.post('/:pingpong_id/pongs', addPong);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/pingpong.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "../models/ping",
            "imported": [
              "getIntentionPing"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getIntentionPing",
                "local": "getIntentionPing"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "addPong",
            "populatePingpongs",
            "resetPingpongs"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "addPong",
              "exported": "addPong"
            },
            {
              "kind": "local",
              "local": "populatePingpongs",
              "exported": "populatePingpongs"
            },
            {
              "kind": "local",
              "local": "resetPingpongs",
              "exported": "resetPingpongs"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/pingpong.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/pingpong.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.controller.js",
      "sourceFileName": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetPingpongs = exports.populatePingpongs = exports.addPong = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _prompt2 = require('../models/prompt');\n\nvar _prompt3 = _interopRequireDefault(_prompt2);\n\nvar _ping = require('../models/ping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar addPong = exports.addPong = function addPong(req, res) {\n  var pong = req.body.pong;\n  var pingpong_id = req.params.pingpong_id;\n\n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n\n  _day2.default.findOneAndUpdate({ 'pingpongs._id': pingpong_id }, { $set: { 'pingpongs.$.pong': pong } }).then(function (data) {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({ data: data });\n    }\n  }).catch(function (err) {\n    res.sendStatus(500);\n  });\n};\n\nvar createPingPong = function createPingPong(ping, user, day, triggerTime) {\n  var pingpong = {\n    triggerTime: triggerTime,\n    ping: ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user);\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n};\n\nvar populatePingpongs = exports.populatePingpongs = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(day) {\n    var users, timeline, pingpongs, intentionPing, i, _timeline$i, prompt, startTime, _prompt, pings, _loop, k;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _user2.default.find({\n              currentCohort: day.cohort\n            });\n\n          case 2:\n            users = _context.sent;\n\n\n            // get all prompts from day timeline\n            // for all prompt\n\n            timeline = day.timeline, pingpongs = day.pingpongs;\n            _context.next = 6;\n            return (0, _ping.getIntentionPing)();\n\n          case 6:\n            intentionPing = _context.sent;\n\n            day.pingpongs = users.map(function (user) {\n              return createPingPong(intentionPing, user, day);\n            });\n\n            i = 0;\n\n          case 9:\n            if (!(i < timeline.length)) {\n              _context.next = 25;\n              break;\n            }\n\n            _timeline$i = timeline[i], prompt = _timeline$i.prompt, startTime = _timeline$i.startTime;\n\n            startTime.setDate(day.date.getDate());\n            startTime.setFullYear(day.date.getFullYear());\n            startTime.setMonth(day.date.getMonth());\n            console.log(\"Prompt\" + prompt);\n\n            _context.next = 17;\n            return _prompt3.default.findById(prompt);\n\n          case 17:\n            prompt = _context.sent;\n            _prompt = prompt, pings = _prompt.pings;\n\n            console.log(\"PINGS\" + pings);\n\n            _loop = function _loop() {\n              var ping = pings[k];\n              console.log(ping);\n\n              var triggerTime = new Date(startTime.valueOf() + prompt.duration * 60 * 1000);\n\n              day.pingpongs = users.map(function (user) {\n                return createPingPong(ping, user, day, triggerTime);\n              }).concat(day.pingpongs);\n              // console.log(pingpongs)\n            };\n\n            for (k = 0; k < pings.length; k++) {\n              _loop();\n            }\n\n          case 22:\n            i++;\n            _context.next = 9;\n            break;\n\n          case 25:\n\n            console.log(\"PING POPULATE:\");\n            return _context.abrupt('return', day);\n\n          case 27:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function populatePingpongs(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar resetPingpongs = exports.resetPingpongs = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _day2.default.findById(req.params.day_id);\n\n          case 3:\n            day = _context2.sent;\n            _context2.next = 6;\n            return populatePingpongs(day);\n\n          case 6:\n            day = _context2.sent;\n\n            day.save();\n            data = day.pingpongs;\n\n            res.send({ data: data });\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 12]]);\n  }));\n\n  return function resetPingpongs(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.default = addPong;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.controller.js"
      ],
      "names": [
        "addPong",
        "req",
        "res",
        "pong",
        "body",
        "pingpong_id",
        "params",
        "Day",
        "findOneAndUpdate",
        "$set",
        "then",
        "data",
        "status",
        "send",
        "json",
        "catch",
        "sendStatus",
        "createPingPong",
        "ping",
        "user",
        "day",
        "triggerTime",
        "pingpong",
        "by",
        "type",
        "to",
        "getStudentPair",
        "populatePingpongs",
        "User",
        "find",
        "currentCohort",
        "cohort",
        "users",
        "timeline",
        "pingpongs",
        "intentionPing",
        "map",
        "i",
        "length",
        "prompt",
        "startTime",
        "setDate",
        "date",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "console",
        "log",
        "Prompt",
        "findById",
        "pings",
        "k",
        "Date",
        "valueOf",
        "duration",
        "concat",
        "resetPingpongs",
        "day_id",
        "save"
      ],
      "mappings": "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",
      "file": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport Day from '../models/day';\nimport User from '../models/user';\nimport Prompt from '../models/prompt';\nimport {getIntentionPing} from '../models/ping';\n\nexport const addPong = (req,res) => {\n  const{pong} = req.body;\n  let {pingpong_id} = req.params\n  \n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n  Day.findOneAndUpdate(\n    {'pingpongs._id': pingpong_id},\n    {$set:{'pingpongs.$.pong':pong}},\n  ).then(data => {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({data});\n    }\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n\nconst createPingPong = (ping, user, day, triggerTime) => {\n  let pingpong = {\n    triggerTime,\n    ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user)\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n}\n\n\nexport const populatePingpongs = async (day) => {\n  let users = await User.find({\n    currentCohort: day.cohort\n  });\n\n  // get all prompts from day timeline\n  // for all prompt\n\n  let {timeline,pingpongs} = day;\n\n  let intentionPing = await getIntentionPing();\n  day.pingpongs = users.map(user => createPingPong(intentionPing, user, day));\n\n  for (var i = 0; i < timeline.length; i++) {\n    let {prompt, startTime} = timeline[i];\n    startTime.setDate(day.date.getDate());\n    startTime.setFullYear(day.date.getFullYear());\n    startTime.setMonth(day.date.getMonth());\n    console.log(\"Prompt\"+prompt)\n\n    prompt = await Prompt.findById(prompt);\n    let {pings} = prompt;\n    console.log(\"PINGS\"+pings)\n\n    for (var k = 0; k < pings.length; k++) {\n      let ping = pings[k];\n      console.log(ping)\n\n      let triggerTime = new Date(startTime.valueOf() + prompt.duration*60*1000);\n\n      day.pingpongs = users.map(user => createPingPong(ping, user, day, triggerTime)).concat(day.pingpongs);\n      // console.log(pingpongs)\n    }\n\n  }\n\n  console.log(\"PING POPULATE:\")\n  return day\n}\n\n\nexport const resetPingpongs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id);\n    day = await populatePingpongs(day);\n    day.save();\n    const data = day.pingpongs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport default addPong;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/mailer.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/mailer.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/mailer.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.routes.js",
      "sourceFileName": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar router = require('express').Router();\n\nvar _require = require('../controllers/mailer.controller'),\n    mailer = _require.mailer,\n    submit = _require.submit;\n\nrouter.get('/', mailer);\nrouter.post('/submit', submit);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsIm1haWxlciIsInN1Ym1pdCIsImdldCIsInBvc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVNDLFFBQVEsU0FBUixFQUFtQkMsTUFBbkIsRUFBZjs7ZUFFeUJELFFBQVEsa0NBQVIsQztJQUFsQkUsTSxZQUFBQSxNO0lBQVFDLE0sWUFBQUEsTTs7QUFFZkosT0FBT0ssR0FBUCxDQUFXLEdBQVgsRUFBZ0JGLE1BQWhCO0FBQ0FILE9BQU9NLElBQVAsQ0FBWSxTQUFaLEVBQXVCRixNQUF2Qjs7QUFFQUcsT0FBT0MsT0FBUCxHQUFpQlIsTUFBakIiLCJmaWxlIjoibWFpbGVyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvdXRlciA9IHJlcXVpcmUoJ2V4cHJlc3MnKS5Sb3V0ZXIoKVxuXG5jb25zdCB7bWFpbGVyLCBzdWJtaXR9ID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvbWFpbGVyLmNvbnRyb2xsZXInKVxuXG5yb3V0ZXIuZ2V0KCcvJywgbWFpbGVyKVxucm91dGVyLnBvc3QoJy9zdWJtaXQnLCBzdWJtaXQpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.routes.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "mailer",
        "submit",
        "get",
        "post",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;eAEyBD,QAAQ,kCAAR,C;IAAlBE,M,YAAAA,M;IAAQC,M,YAAAA,M;;AAEfJ,OAAOK,GAAP,CAAW,GAAX,EAAgBF,MAAhB;AACAH,OAAOM,IAAP,CAAY,SAAZ,EAAuBF,MAAvB;;AAEAG,OAAOC,OAAP,GAAiBR,MAAjB",
      "file": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "const router = require('express').Router()\n\nconst {mailer, submit} = require('../controllers/mailer.controller')\n\nrouter.get('/', mailer)\nrouter.post('/submit', submit)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/mailer.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "nodemailer",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "nodemailer"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/mailer.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/mailer.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.controller.js",
      "sourceFileName": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _nodemailer = require('nodemailer');\n\nvar _nodemailer2 = _interopRequireDefault(_nodemailer);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n'use strict';\n\n// transport service using which it can send emails in this case gmail\nvar transporter = _nodemailer2.default.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.MAILER_EMAIL,\n    pass: process.env.MAILER_PASSWORD\n  }\n});\n\nvar mailer = function mailer(req, res) {\n  res.send('/client/emailSender.html');\n};\n\nvar submit = function submit(req, res) {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal' // plain text body\n  };\n\n  _user2.default.find({ email: req.body.email.toString() }, function (err, existingUser) {\n    if (!err && existingUser.length != 0) {\n      transporter.sendMail(mailOptions, function (err, info) {\n        if (err) console.log(err);else console.log(info);\n      });\n\n      res.redirect('/');\n    }\n  });\n};\n\nmodule.exports = { mailer: mailer, submit: submit };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInRyYW5zcG9ydGVyIiwibm9kZW1haWxlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJhdXRoIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJNQUlMRVJfRU1BSUwiLCJwYXNzIiwiTUFJTEVSX1BBU1NXT1JEIiwibWFpbGVyIiwicmVxIiwicmVzIiwic2VuZCIsInN1Ym1pdCIsIm1haWxPcHRpb25zIiwiZnJvbSIsInRvIiwiYm9keSIsImVtYWlsIiwidG9TdHJpbmciLCJzdWJqZWN0IiwiaHRtbCIsIlVzZXIiLCJmaW5kIiwiZXJyIiwiZXhpc3RpbmdVc2VyIiwibGVuZ3RoIiwic2VuZE1haWwiLCJpbmZvIiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBOztBQUVBO0FBQ0EsSUFBSUEsY0FBY0MscUJBQVdDLGVBQVgsQ0FBMkI7QUFDNUNDLFdBQVMsT0FEbUM7QUFFNUNDLFFBQU07QUFDQ0MsVUFBTUMsUUFBUUMsR0FBUixDQUFZQyxZQURuQjtBQUVDQyxVQUFNSCxRQUFRQyxHQUFSLENBQVlHO0FBRm5CO0FBRnNDLENBQTNCLENBQWxCOztBQVFBLElBQU1DLFNBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQkEsTUFBSUMsSUFBSixDQUFTLDBCQUFUO0FBQ0QsQ0FGRDs7QUFJQSxJQUFNQyxTQUFTLFNBQVRBLE1BQVMsQ0FBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7O0FBRTNCO0FBQ0EsTUFBSUcsY0FBYztBQUNoQkMsVUFBTVgsUUFBUUMsR0FBUixDQUFZQyxZQURGLEVBQ2dCO0FBQ2hDVSxRQUFJTixJQUFJTyxJQUFKLENBQVNDLEtBQVQsQ0FBZUMsUUFBZixFQUZZLEVBRWU7QUFDL0JDLGFBQVMsOEJBSE8sRUFHeUI7QUFDekNDLFVBQU0sMkZBSlUsQ0FJaUY7QUFKakYsR0FBbEI7O0FBT0FDLGlCQUFLQyxJQUFMLENBQVUsRUFBQ0wsT0FBT1IsSUFBSU8sSUFBSixDQUFTQyxLQUFULENBQWVDLFFBQWYsRUFBUixFQUFWLEVBQThDLFVBQVNLLEdBQVQsRUFBY0MsWUFBZCxFQUEyQjtBQUN2RSxRQUFHLENBQUNELEdBQUQsSUFBU0MsYUFBYUMsTUFBYixJQUF1QixDQUFuQyxFQUF1QztBQUNyQzVCLGtCQUFZNkIsUUFBWixDQUFxQmIsV0FBckIsRUFBa0MsVUFBVVUsR0FBVixFQUFlSSxJQUFmLEVBQXFCO0FBQ3ZELFlBQUdKLEdBQUgsRUFDRUssUUFBUUMsR0FBUixDQUFZTixHQUFaLEVBREYsS0FHRUssUUFBUUMsR0FBUixDQUFZRixJQUFaO0FBQ0QsT0FMRDs7QUFPQWpCLFVBQUlvQixRQUFKLENBQWEsR0FBYjtBQUNEO0FBQ0YsR0FYRDtBQVlELENBdEJEOztBQXdCQUMsT0FBT0MsT0FBUCxHQUFpQixFQUFDeEIsY0FBRCxFQUFTSSxjQUFULEVBQWpCIiwiZmlsZSI6Im1haWxlci5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbm9kZW1haWxlciBmcm9tICdub2RlbWFpbGVyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgVXNlciBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbid1c2Ugc3RyaWN0J1xuXG4vLyB0cmFuc3BvcnQgc2VydmljZSB1c2luZyB3aGljaCBpdCBjYW4gc2VuZCBlbWFpbHMgaW4gdGhpcyBjYXNlIGdtYWlsXG52YXIgdHJhbnNwb3J0ZXIgPSBub2RlbWFpbGVyLmNyZWF0ZVRyYW5zcG9ydCh7XG4gc2VydmljZTogJ2dtYWlsJyxcbiBhdXRoOiB7XG4gICAgICAgIHVzZXI6IHByb2Nlc3MuZW52Lk1BSUxFUl9FTUFJTCxcbiAgICAgICAgcGFzczogcHJvY2Vzcy5lbnYuTUFJTEVSX1BBU1NXT1JEXG4gICAgfVxufSk7XG5cbmNvbnN0IG1haWxlciA9IChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZCgnL2NsaWVudC9lbWFpbFNlbmRlci5odG1sJylcbn1cblxuY29uc3Qgc3VibWl0ID0gKHJlcSwgcmVzKSA9PiB7XG5cbiAgLy8gY29uZmlndXJhdGlvbiBvYmplY3Qgd2hlcmUgd2Ugd2lsbCBjb25maWd1cmUgYWxsIGVtYWlsIGRldGFpbHNcbiAgdmFyIG1haWxPcHRpb25zID0ge1xuICAgIGZyb206IHByb2Nlc3MuZW52Lk1BSUxFUl9FTUFJTCwgLy8gc2VuZGVyIGFkZHJlc3NcbiAgICB0bzogcmVxLmJvZHkuZW1haWwudG9TdHJpbmcoKSwgLy8gbGlzdCBvZiByZWNlaXZlcnNcbiAgICBzdWJqZWN0OiAnUGxlYXNlIFNpZ25VcCB0byBTT0FMIFBvcnRhbCcsIC8vIFN1YmplY3QgbGluZVxuICAgIGh0bWw6ICc8cD5IaSBjbGljayBvbiB0aGlzIDwvcD48YT5saW5rPC9hPjxwPiB0byBTaWduVXAgdG8gU2Nob29sIG9mIEFjY2VsZXJhdGVkIExlYXJuaW5nIFBvcnRhbCcvLyBwbGFpbiB0ZXh0IGJvZHlcbiAgfTtcblxuICBVc2VyLmZpbmQoe2VtYWlsOiByZXEuYm9keS5lbWFpbC50b1N0cmluZygpfSwgZnVuY3Rpb24oZXJyLCBleGlzdGluZ1VzZXIpe1xuICAgIGlmKCFlcnIgJiYgKGV4aXN0aW5nVXNlci5sZW5ndGggIT0gMCkpIHtcbiAgICAgIHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxPcHRpb25zLCBmdW5jdGlvbiAoZXJyLCBpbmZvKSB7XG4gICAgICBpZihlcnIpXG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgIGVsc2VcbiAgICAgICAgY29uc29sZS5sb2coaW5mbyk7XG4gICAgICB9KVxuXG4gICAgICByZXMucmVkaXJlY3QoJy8nKVxuICAgIH1cbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7bWFpbGVyLCBzdWJtaXR9Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.controller.js"
      ],
      "names": [
        "transporter",
        "nodemailer",
        "createTransport",
        "service",
        "auth",
        "user",
        "process",
        "env",
        "MAILER_EMAIL",
        "pass",
        "MAILER_PASSWORD",
        "mailer",
        "req",
        "res",
        "send",
        "submit",
        "mailOptions",
        "from",
        "to",
        "body",
        "email",
        "toString",
        "subject",
        "html",
        "User",
        "find",
        "err",
        "existingUser",
        "length",
        "sendMail",
        "info",
        "console",
        "log",
        "redirect",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;AAEA;AACA,IAAIA,cAAcC,qBAAWC,eAAX,CAA2B;AAC5CC,WAAS,OADmC;AAE5CC,QAAM;AACCC,UAAMC,QAAQC,GAAR,CAAYC,YADnB;AAECC,UAAMH,QAAQC,GAAR,CAAYG;AAFnB;AAFsC,CAA3B,CAAlB;;AAQA,IAAMC,SAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,MAAIC,IAAJ,CAAS,0BAAT;AACD,CAFD;;AAIA,IAAMC,SAAS,SAATA,MAAS,CAACH,GAAD,EAAMC,GAAN,EAAc;;AAE3B;AACA,MAAIG,cAAc;AAChBC,UAAMX,QAAQC,GAAR,CAAYC,YADF,EACgB;AAChCU,QAAIN,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAFY,EAEe;AAC/BC,aAAS,8BAHO,EAGyB;AACzCC,UAAM,2FAJU,CAIiF;AAJjF,GAAlB;;AAOAC,iBAAKC,IAAL,CAAU,EAACL,OAAOR,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAAR,EAAV,EAA8C,UAASK,GAAT,EAAcC,YAAd,EAA2B;AACvE,QAAG,CAACD,GAAD,IAASC,aAAaC,MAAb,IAAuB,CAAnC,EAAuC;AACrC5B,kBAAY6B,QAAZ,CAAqBb,WAArB,EAAkC,UAAUU,GAAV,EAAeI,IAAf,EAAqB;AACvD,YAAGJ,GAAH,EACEK,QAAQC,GAAR,CAAYN,GAAZ,EADF,KAGEK,QAAQC,GAAR,CAAYF,IAAZ;AACD,OALD;;AAOAjB,UAAIoB,QAAJ,CAAa,GAAb;AACD;AACF,GAXD;AAYD,CAtBD;;AAwBAC,OAAOC,OAAP,GAAiB,EAACxB,cAAD,EAASI,cAAT,EAAjB",
      "file": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import nodemailer from 'nodemailer';\nimport mongoose from 'mongoose';\nimport User from '../models/user';\n\n'use strict'\n\n// transport service using which it can send emails in this case gmail\nvar transporter = nodemailer.createTransport({\n service: 'gmail',\n auth: {\n        user: process.env.MAILER_EMAIL,\n        pass: process.env.MAILER_PASSWORD\n    }\n});\n\nconst mailer = (req, res) => {\n  res.send('/client/emailSender.html')\n}\n\nconst submit = (req, res) => {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal'// plain text body\n  };\n\n  User.find({email: req.body.email.toString()}, function(err, existingUser){\n    if(!err && (existingUser.length != 0)) {\n      transporter.sendMail(mailOptions, function (err, info) {\n      if(err)\n        console.log(err)\n      else\n        console.log(info);\n      })\n\n      res.redirect('/')\n    }\n  })\n}\n\nmodule.exports = {mailer, submit}"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/day.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getOne",
              "dayDetails",
              "update",
              "getAll",
              "addPromptToTimeline",
              "getToday",
              "updatePongs",
              "addContentToDay",
              "removePromptFromTimeline",
              "resetPairs",
              "resetDay"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "dayDetails",
                "local": "dayDetails"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "addPromptToTimeline",
                "local": "addPromptToTimeline"
              },
              {
                "kind": "named",
                "imported": "getToday",
                "local": "getToday"
              },
              {
                "kind": "named",
                "imported": "updatePongs",
                "local": "updatePongs"
              },
              {
                "kind": "named",
                "imported": "addContentToDay",
                "local": "addContentToDay"
              },
              {
                "kind": "named",
                "imported": "removePromptFromTimeline",
                "local": "removePromptFromTimeline"
              },
              {
                "kind": "named",
                "imported": "resetPairs",
                "local": "resetPairs"
              },
              {
                "kind": "named",
                "imported": "resetDay",
                "local": "resetDay"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "resetPingpongs"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetPingpongs",
                "local": "resetPingpongs"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/day.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/day.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.routes.js",
      "sourceFileName": "day.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _user = require('../controllers/user.controller');\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', _day.getAll);\nrouter.get('/:dayNumber/dn', _day.dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', _user.populateCurrentUser, _day.getToday);\nrouter.get('/:day_id/dId', _day.getOne);\nrouter.patch('/:day_id', _day.update);\nrouter.patch('/:day_id/timeline', _day.addPromptToTimeline);\nrouter.patch('/:day_id/content', _day.addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', _day.removePromptFromTimeline);\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', _day.resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', _pingpong.resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', _day.resetPairs);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsImRheURldGFpbHMiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0VG9kYXkiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImFkZFByb21wdFRvVGltZWxpbmUiLCJhZGRDb250ZW50VG9EYXkiLCJyZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUiLCJyZXNldERheSIsInJlc2V0UGluZ3BvbmdzIiwicmVzZXRQYWlycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUE7Ozs7OztBQU1BRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsV0FBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGdCQUFYLEVBQTZCRSxlQUE3QjtBQUNBO0FBQ0FMLE9BQU9HLEdBQVAsQ0FBVyxRQUFYLEVBQXFCRyx5QkFBckIsRUFBMENDLGFBQTFDO0FBQ0FQLE9BQU9HLEdBQVAsQ0FBVyxjQUFYLEVBQTJCSyxXQUEzQjtBQUNBUixPQUFPUyxLQUFQLENBQWEsVUFBYixFQUF5QkMsV0FBekI7QUFDQVYsT0FBT1MsS0FBUCxDQUFhLG1CQUFiLEVBQWtDRSx3QkFBbEM7QUFDQVgsT0FBT1MsS0FBUCxDQUFhLGtCQUFiLEVBQWlDRyxvQkFBakM7QUFDQVosT0FBT1MsS0FBUCxDQUFhLGlDQUFiLEVBQWdESSw2QkFBaEQ7O0FBRUE7Ozs7Ozs7OztBQVNBYixPQUFPUyxLQUFQLENBQWEsZ0JBQWIsRUFBK0JLLGFBQS9COztBQUVBOzs7Ozs7O0FBT0FkLE9BQU9TLEtBQVAsQ0FBYSwwQkFBYixFQUF5Q00sd0JBQXpDOztBQUVBOzs7Ozs7O0FBT0FmLE9BQU9TLEtBQVAsQ0FBYSxzQkFBYixFQUFxQ08sZUFBckM7O2tCQUVlaEIsTSIsImZpbGUiOiJkYXkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldE9uZSwgZGF5RGV0YWlscywgdXBkYXRlLCBnZXRBbGwsIGFkZFByb21wdFRvVGltZWxpbmUsIGdldFRvZGF5LFxuICB1cGRhdGVQb25ncywgYWRkQ29udGVudFRvRGF5LCByZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUsIHJlc2V0UGFpcnMsIHJlc2V0RGF5fSBmcm9tICcuLi9jb250cm9sbGVycy9kYXkuY29udHJvbGxlcic7XG5pbXBvcnQge3BvcHVsYXRlQ3VycmVudFVzZXJ9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlcic7XG5pbXBvcnQge3Jlc2V0UGluZ3BvbmdzfSBmcm9tICcuLi9jb250cm9sbGVycy9waW5ncG9uZy5jb250cm9sbGVyJztcbmltcG9ydCB7YWxsb3dTdXBlckFkbWluT25seX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcm9sZXMuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbi8qKlxuICogQGFwaSB7Z2V0fSAvZGF5cyBHZXQgYWxsIGRheXNcbiAqIEBhcGlIZWFkZXIge1N0cmluZ30gYXV0aG9yaXphdGlvbiBKV1QgVG9rZW4uXG4gKiBAYXBpTmFtZSBHZXREYXlzXG4gKiBAYXBpR3JvdXAgRGF5XG4gKi9cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLmdldCgnLzpkYXlOdW1iZXIvZG4nLCBkYXlEZXRhaWxzKTtcbi8vIEFzc3VtaW5nIG9ubHkgc3R1ZGVudHMgd2lsbCBiZSBhY2Nlc3NpbmcgdGhlIHBhdGhcbnJvdXRlci5nZXQoJy90b2RheScsIHBvcHVsYXRlQ3VycmVudFVzZXIsIGdldFRvZGF5KTtcbnJvdXRlci5nZXQoJy86ZGF5X2lkL2RJZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkJywgdXBkYXRlKTtcbnJvdXRlci5wYXRjaCgnLzpkYXlfaWQvdGltZWxpbmUnLCBhZGRQcm9tcHRUb1RpbWVsaW5lKTtcbnJvdXRlci5wYXRjaCgnLzpkYXlfaWQvY29udGVudCcsIGFkZENvbnRlbnRUb0RheSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3RpbWVsaW5lcy86dGltZWxpbmVfaWQnLCByZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUpXG5cbi8qKlxuICogQGFwaSB7cGF0Y2h9IC9kYXlzLzpkYXlfaWQvcmVzZXQgUmVzZXQgZGF5IG9mIGEgY29ob3J0XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXREYXlcbiAqIEBhcGlHcm91cCBEYXlcbiAqXG4gKiBAYXBpUGFyYW0ge1N0cmluZ30gcmVwbGljYXRlIERheSB1bmlxdWUgSUQgdG8gY29weSBmcm9tLlxuICovXG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3Jlc2V0JywgcmVzZXREYXkpO1xuXG4vKipcbiAqIEBhcGkge3BhdGNofSAvOmRheV9pZC9waW5ncG9uZ3MvcmVzZXQgUmVzZXQgcGluZ3BvbmdzIGZvciB0aGUgZGF5XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXRQaW5ncG9uZ3NcbiAqIEBhcGlHcm91cCBEYXlcbiAqL1xucm91dGVyLnBhdGNoKCcvOmRheV9pZC9waW5ncG9uZ3MvcmVzZXQnLCByZXNldFBpbmdwb25ncyk7XG5cbi8qKlxuICogQGFwaSB7cGF0Y2h9IC86ZGF5X2lkL3BhaXJzL3Jlc2V0IFJlc2V0IHBhaXJzIGZvciB0aGUgZGF5XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXRQYWlyc1xuICogQGFwaUdyb3VwIERheVxuICovXG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3BhaXJzL3Jlc2V0JywgcmVzZXRQYWlycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "dayDetails",
        "populateCurrentUser",
        "getToday",
        "getOne",
        "patch",
        "update",
        "addPromptToTimeline",
        "addContentToDay",
        "removePromptFromTimeline",
        "resetDay",
        "resetPingpongs",
        "resetPairs"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,WAAhB;AACAJ,OAAOG,GAAP,CAAW,gBAAX,EAA6BE,eAA7B;AACA;AACAL,OAAOG,GAAP,CAAW,QAAX,EAAqBG,yBAArB,EAA0CC,aAA1C;AACAP,OAAOG,GAAP,CAAW,cAAX,EAA2BK,WAA3B;AACAR,OAAOS,KAAP,CAAa,UAAb,EAAyBC,WAAzB;AACAV,OAAOS,KAAP,CAAa,mBAAb,EAAkCE,wBAAlC;AACAX,OAAOS,KAAP,CAAa,kBAAb,EAAiCG,oBAAjC;AACAZ,OAAOS,KAAP,CAAa,iCAAb,EAAgDI,6BAAhD;;AAEA;;;;;;;;;AASAb,OAAOS,KAAP,CAAa,gBAAb,EAA+BK,aAA/B;;AAEA;;;;;;;AAOAd,OAAOS,KAAP,CAAa,0BAAb,EAAyCM,wBAAzC;;AAEA;;;;;;;AAOAf,OAAOS,KAAP,CAAa,sBAAb,EAAqCO,eAArC;;kBAEehB,M",
      "file": "day.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getOne, dayDetails, update, getAll, addPromptToTimeline, getToday,\n  updatePongs, addContentToDay, removePromptFromTimeline, resetPairs, resetDay} from '../controllers/day.controller';\nimport {populateCurrentUser} from '../controllers/user.controller';\nimport {resetPingpongs} from '../controllers/pingpong.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', getAll);\nrouter.get('/:dayNumber/dn', dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', populateCurrentUser, getToday);\nrouter.get('/:day_id/dId', getOne);\nrouter.patch('/:day_id', update);\nrouter.patch('/:day_id/timeline', addPromptToTimeline);\nrouter.patch('/:day_id/content', addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', removePromptFromTimeline)\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', resetPairs);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/admin.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/admin.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "switchUser"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/admin.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/admin.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.routes.js",
      "sourceFileName": "admin.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _admin = require('../controllers/admin.controller');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_roles.allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', _admin2.default);\n\nrouter.use('*', function (req, res) {\n  return res.sendStatus(404);\n});\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwidXNlIiwiYWxsb3dTdXBlckFkbWluT25seSIsInN3aXRjaFVzZXIiLCJyZXEiLCJyZXMiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVdDLDBCQUFYO0FBQ0FKLE9BQU9HLEdBQVAsQ0FBVyx1QkFBWCxFQUFvQ0UsZUFBcEM7O0FBRUFMLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNHLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLElBQUlDLFVBQUosQ0FBZSxHQUFmLENBQWQ7QUFBQSxDQUFoQjtrQkFDZVIsTSIsImZpbGUiOiJhZG1pbi5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBzd2l0Y2hVc2VyIGZyb20gJy4uL2NvbnRyb2xsZXJzL2FkbWluLmNvbnRyb2xsZXInO1xuaW1wb3J0IHthbGxvd1N1cGVyQWRtaW5Pbmx5fSBmcm9tICcuLi9jb250cm9sbGVycy9yb2xlcy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnVzZShhbGxvd1N1cGVyQWRtaW5Pbmx5KTtcbnJvdXRlci51c2UoJy9zd2l0Y2hfdXNlci86dXNlcl9pZCcsIHN3aXRjaFVzZXIpO1xuXG5yb3V0ZXIudXNlKCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZFN0YXR1cyg0MDQpKTtcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "allowSuperAdminOnly",
        "switchUser",
        "req",
        "res",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,0BAAX;AACAJ,OAAOG,GAAP,CAAW,uBAAX,EAAoCE,eAApC;;AAEAL,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;kBACeR,M",
      "file": "admin.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport switchUser from '../controllers/admin.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\nrouter.use(allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', switchUser);\n\nrouter.use('*', (req, res) => res.sendStatus(404));\nexport default router;"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/admin.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/admin.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/admin.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.controller.js",
      "sourceFileName": "admin.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _token = require('../util/token');\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n// get Access as a student with id\nvar switchUser = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var user_id, user, soalToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user_id = req.params.user_id;\n            _context.prev = 1;\n            _context.next = 4;\n            return _user2.default.findById(user_id).exec();\n\n          case 4:\n            user = _context.sent;\n            soalToken = (0, _token.getSoalToken)(user);\n\n            res.send({ soalToken: soalToken });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context['catch'](1);\n\n            console.log(_context.t0);\n            res.status(404).send('User not found with id ' + user_id);\n\n          case 13:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined, [[1, 9]]);\n  }));\n\n  return function switchUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.default = switchUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsic3dpdGNoVXNlciIsInJlcSIsInJlcyIsInVzZXJfaWQiLCJwYXJhbXMiLCJVc2VyIiwiZmluZEJ5SWQiLCJleGVjIiwidXNlciIsInNvYWxUb2tlbiIsInNlbmQiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQTtBQUNBLElBQU1BO0FBQUEscUVBQWEsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVkMsbUJBRFUsR0FDQ0YsSUFBSUcsTUFETCxDQUNWRCxPQURVO0FBQUE7QUFBQTtBQUFBLG1CQUlJRSxlQUFLQyxRQUFMLENBQWNILE9BQWQsRUFBdUJJLElBQXZCLEVBSko7O0FBQUE7QUFJVEMsZ0JBSlM7QUFLVEMscUJBTFMsR0FLRyx5QkFBYUQsSUFBYixDQUxIOztBQU1mTixnQkFBSVEsSUFBSixDQUFTLEVBQUNELG9CQUFELEVBQVQ7QUFOZTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFRZkUsb0JBQVFDLEdBQVI7QUFDQVYsZ0JBQUlXLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQiw2QkFBK0NQLE9BQS9DOztBQVRlO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7a0JBYWVILFUiLCJmaWxlIjoiYWRtaW4uY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZXRTb2FsVG9rZW59IGZyb20gJy4uL3V0aWwvdG9rZW4nO1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG4vLyBnZXQgQWNjZXNzIGFzIGEgc3R1ZGVudCB3aXRoIGlkXG5jb25zdCBzd2l0Y2hVc2VyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHt1c2VyX2lkfSA9IHJlcS5wYXJhbXM7XG5cbiAgdHJ5e1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKHVzZXJfaWQpLmV4ZWMoKTtcbiAgICBjb25zdCBzb2FsVG9rZW4gPSBnZXRTb2FsVG9rZW4odXNlcik7XG4gICAgcmVzLnNlbmQoe3NvYWxUb2tlbn0pO1xuICB9IGNhdGNoKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDQwNCkuc2VuZChgVXNlciBub3QgZm91bmQgd2l0aCBpZCAke3VzZXJfaWR9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgc3dpdGNoVXNlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.controller.js"
      ],
      "names": [
        "switchUser",
        "req",
        "res",
        "user_id",
        "params",
        "User",
        "findById",
        "exec",
        "user",
        "soalToken",
        "send",
        "console",
        "log",
        "status"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;;;;;;;AAEA;AACA,IAAMA;AAAA,qEAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,mBADU,GACCF,IAAIG,MADL,CACVD,OADU;AAAA;AAAA;AAAA,mBAIIE,eAAKC,QAAL,CAAcH,OAAd,EAAuBI,IAAvB,EAJJ;;AAAA;AAITC,gBAJS;AAKTC,qBALS,GAKG,yBAAaD,IAAb,CALH;;AAMfN,gBAAIQ,IAAJ,CAAS,EAACD,oBAAD,EAAT;AANe;AAAA;;AAAA;AAAA;AAAA;;AAQfE,oBAAQC,GAAR;AACAV,gBAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,6BAA+CP,OAA/C;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAaeH,U",
      "file": "admin.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import {getSoalToken} from '../util/token';\nimport User from '../models/user';\n\n// get Access as a student with id\nconst switchUser = async (req, res) => {\n  const {user_id} = req.params;\n\n  try{\n    const user = await User.findById(user_id).exec();\n    const soalToken = getSoalToken(user);\n    res.send({soalToken});\n  } catch(err) {\n    console.log(err)\n    res.status(404).send(`User not found with id ${user_id}`);\n  }\n}\n\nexport default switchUser;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/todo.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/todo.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne",
              "getStudentToDos",
              "updateAll",
              "deleteMultiple"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              },
              {
                "kind": "named",
                "imported": "getStudentToDos",
                "local": "getStudentToDos"
              },
              {
                "kind": "named",
                "imported": "updateAll",
                "local": "updateAll"
              },
              {
                "kind": "named",
                "imported": "deleteMultiple",
                "local": "deleteMultiple"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/todo.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/todo.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.routes.js",
      "sourceFileName": "todo.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _todo = require('../controllers/todo.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _todo.getAll);\nrouter.post('/', _todo.create);\nrouter.get('/:id', _todo.getOne);\nrouter.patch('/:id', _todo.update);\nrouter.patch('/', _todo.updateAll);\nrouter.delete('/:id', _todo.deleteOne);\nrouter.delete('/', _todo.deleteMultiple);\nrouter.get('/student/:studentID', _todo.getStudentToDos);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8ucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJ1cGRhdGVBbGwiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJkZWxldGVNdWx0aXBsZSIsImdldFN0dWRlbnRUb0RvcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxZQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsWUFBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLFlBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxZQUFyQjtBQUNBVCxPQUFPUSxLQUFQLENBQWEsR0FBYixFQUFrQkUsZUFBbEI7QUFDQVYsT0FBT1csTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FaLE9BQU9XLE1BQVAsQ0FBYyxHQUFkLEVBQW1CRSxvQkFBbkI7QUFDQWIsT0FBT0csR0FBUCxDQUFXLHFCQUFYLEVBQWtDVyxxQkFBbEM7O2tCQUdlZCxNIiwiZmlsZSI6InRvZG8ucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lLCBnZXRTdHVkZW50VG9Eb3MsIHVwZGF0ZUFsbCwgZGVsZXRlTXVsdGlwbGV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3RvZG8uY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLnBhdGNoKCcvJywgdXBkYXRlQWxsKVxucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5yb3V0ZXIuZGVsZXRlKCcvJywgZGVsZXRlTXVsdGlwbGUpXG5yb3V0ZXIuZ2V0KCcvc3R1ZGVudC86c3R1ZGVudElEJywgZ2V0U3R1ZGVudFRvRG9zKTtcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "updateAll",
        "delete",
        "deleteOne",
        "deleteMultiple",
        "getStudentToDos"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOQ,KAAP,CAAa,GAAb,EAAkBE,eAAlB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAZ,OAAOW,MAAP,CAAc,GAAd,EAAmBE,oBAAnB;AACAb,OAAOG,GAAP,CAAW,qBAAX,EAAkCW,qBAAlC;;kBAGed,M",
      "file": "todo.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne, getStudentToDos, updateAll, deleteMultiple} from '../controllers/todo.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.patch('/', updateAll)\nrouter.delete('/:id', deleteOne);\nrouter.delete('/', deleteMultiple)\nrouter.get('/student/:studentID', getStudentToDos);\n\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/todo.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/todo",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Todo"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentToDos",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "updateAll",
            "deleteMultiple"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentToDos",
              "exported": "getStudentToDos"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "updateAll",
              "exported": "updateAll"
            },
            {
              "kind": "local",
              "local": "deleteMultiple",
              "exported": "deleteMultiple"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/todo.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/todo.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.controller.js",
      "sourceFileName": "todo.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteMultiple = exports.updateAll = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentToDos = undefined;\n\nvar _user = require('../models/user');\n\nvar _todo = require('../models/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentToDos = exports.getStudentToDos = function getStudentToDos(req, res) {\n  _todo2.default.find({\n    student: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _todo2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _todo2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      text = _req$body.text,\n      student = _req$body.student,\n      createTime = _req$body.createTime,\n      color = _req$body.color;\n\n  new _todo2.default({ text: text, student: student, createTime: createTime, color: color }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _todo2.default.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _todo2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar updateAll = exports.updateAll = function updateAll(req, res) {\n  _todo2.default.update({}, { $set: { done: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteMultiple = exports.deleteMultiple = function deleteMultiple(req, res) {\n  _todo2.default.update({ done: true }, { $set: { deleted: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50VG9Eb3MiLCJyZXEiLCJyZXMiLCJUb2RvIiwiZmluZCIsInN0dWRlbnQiLCJwYXJhbXMiLCJzdHVkZW50SUQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJjb25zb2xlIiwibG9nIiwiZXJyIiwic3RhdHVzIiwic2VuZCIsImdldEFsbCIsImdldE9uZSIsImZpbmRCeUlkIiwiaWQiLCJjcmVhdGUiLCJib2R5IiwidGV4dCIsImNyZWF0ZVRpbWUiLCJjb2xvciIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiLCJ1cGRhdGVBbGwiLCIkc2V0IiwiZG9uZSIsIm11bHRpIiwiZGVsZXRlTXVsdGlwbGUiLCJkZWxldGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLDRDQUFrQixTQUFsQkEsZUFBa0IsQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDMUNDLGlCQUFLQyxJQUFMLENBQVU7QUFDVkMsYUFBU0osSUFBSUssTUFBSixDQUFXQztBQURWLEdBQVYsRUFFQ0MsSUFGRCxHQUdDQyxJQUhELENBR007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUhOLEVBSUNDLEtBSkQsQ0FJTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FQRDtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENDLGlCQUFLQyxJQUFMLEdBQVlJLElBQVosR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVAsSUFB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LFdBQVFQLElBQUlRLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWkMsWUFBUUMsR0FBUixDQUFZQyxHQUFaO0FBQ0FiLFFBQUljLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckI7QUFDRCxHQUxEO0FBTUQsQ0FQTTs7QUFTQSxJQUFNdUIsMENBQWlCLFNBQWpCQSxjQUFpQixDQUFDckMsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDMUNDLGlCQUFLeUIsTUFBTCxDQUFZLEVBQUNRLE1BQUssSUFBTixFQUFaLEVBQXlCLEVBQUNELE1BQU0sRUFBQ0ksU0FBUyxJQUFWLEVBQVAsRUFBekIsRUFBa0QsRUFBQ0YsT0FBTyxJQUFSLEVBQWxELEVBQ0M1QixJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FMRDtBQU1ELENBUE0iLCJmaWxlIjoidG9kby5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7U3R1ZGVudCwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IFRvZG8gZnJvbSAnLi4vbW9kZWxzL3RvZG8nXG5cbmV4cG9ydCBjb25zdCBnZXRTdHVkZW50VG9Eb3MgPSAocmVxLHJlcykgPT4ge1xuICBUb2RvLmZpbmQoe1xuICBzdHVkZW50OiByZXEucGFyYW1zLnN0dWRlbnRJRCxcbn0pLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKVxuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldEFsbCA9IChyZXEsIHJlcykgPT4ge1xuICBUb2RvLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFRvZG8uZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dGV4dCxzdHVkZW50LCBjcmVhdGVUaW1lLCBjb2xvcn0gPSByZXEuYm9keTtcbiAgbmV3IFRvZG8oe3RleHQsc3R1ZGVudCwgY3JlYXRlVGltZSwgY29sb3J9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiB7XG4gICAgY29uc29sZS5sb2coe2RhdGF9KTtcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pfSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBkYXRhID0gcmVxLmJvZHk7XG4gIC8vIHRvZG86IGNoZWNrIGlmIHRoZSBjdXJyZW50Q29ob3J0IGlzIHZhbGlkIGFuZCB0aGVuIGNvbnRpbnVlXG4gIFRvZG8uZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgZGF0YSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBUb2RvLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSkgIFxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlQWxsID0gKHJlcSwgcmVzKSA9PiB7IFxuICBUb2RvLnVwZGF0ZSh7fSwgeyRzZXQ6IHtkb25lOiB0cnVlfX0sIHttdWx0aTogdHJ1ZX0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xuICB9KVxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlTXVsdGlwbGUgPSAocmVxLCByZXMpID0+IHtcbiAgVG9kby51cGRhdGUoe2RvbmU6dHJ1ZX0sIHskc2V0OiB7ZGVsZXRlZDogdHJ1ZX19LCB7bXVsdGk6IHRydWV9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTtcbiAgfSlcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.controller.js"
      ],
      "names": [
        "getStudentToDos",
        "req",
        "res",
        "Todo",
        "find",
        "student",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "createTime",
        "color",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus",
        "updateAll",
        "$set",
        "done",
        "multi",
        "deleteMultiple",
        "deleted"
      ],
      "mappings": "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",
      "file": "todo.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "\nimport {Student, USER_ROLES} from '../models/user';\nimport Todo from '../models/todo'\n\nexport const getStudentToDos = (req,res) => {\n  Todo.find({\n  student: req.params.studentID,\n}).exec()\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)\n  });\n}\n\nexport const getAll = (req, res) => {\n  Todo.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Todo.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {text,student, createTime, color} = req.body;\n  new Todo({text,student, createTime, color}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Todo.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Todo.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n\nexport const updateAll = (req, res) => { \n  Todo.update({}, {$set: {done: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n\nexport const deleteMultiple = (req, res) => {\n  Todo.update({done:true}, {$set: {deleted: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/todo.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/todo.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/todo.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.js",
      "sourceFileName": "todo.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Todo', new Schema({\n  text: { type: String, required: true },\n  deleted: { type: Boolean, default: false },\n  done: { type: Boolean, default: false },\n  createTime: Date,\n  color: String,\n  student: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJkb25lIiwiY3JlYXRlVGltZSIsIkRhdGUiLCJjb2xvciIsInN0dWRlbnQiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0lBQ09BLE0sR0FBVUMsa0IsQ0FBVkQsTTtrQkFFUUMsbUJBQVNDLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlGLE1BQUosQ0FBVztBQUMvQ0csUUFBTSxFQUFDQyxNQUFLQyxNQUFOLEVBQWNDLFVBQVMsSUFBdkIsRUFEeUM7QUFFL0NDLFdBQVMsRUFBQ0gsTUFBS0ksT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBRnNDO0FBRy9DQyxRQUFNLEVBQUNOLE1BQUtJLE9BQU4sRUFBZUMsU0FBUSxLQUF2QixFQUh5QztBQUkvQ0UsY0FBWUMsSUFKbUM7QUFLL0NDLFNBQU9SLE1BTHdDO0FBTS9DUyxXQUFTO0FBQ0xWLFVBQU1KLE9BQU9lLEtBQVAsQ0FBYUMsUUFEZDtBQUVMQyxTQUFLO0FBRkE7QUFOc0MsQ0FBWCxDQUF2QixDIiwiZmlsZSI6InRvZG8uanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1RvZG8nLCBuZXcgU2NoZW1hKHtcbiAgdGV4dDoge3R5cGU6U3RyaW5nLCByZXF1aXJlZDp0cnVlfSxcbiAgZGVsZXRlZDoge3R5cGU6Qm9vbGVhbiwgZGVmYXVsdDpmYWxzZX0sXG4gIGRvbmU6IHt0eXBlOkJvb2xlYW4sIGRlZmF1bHQ6ZmFsc2V9LFxuICBjcmVhdGVUaW1lOiBEYXRlLFxuICBjb2xvcjogU3RyaW5nLFxuICBzdHVkZW50OiB7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH1cbiAgfSlcbilcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "deleted",
        "Boolean",
        "default",
        "done",
        "createTime",
        "Date",
        "color",
        "student",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,WAAS,EAACH,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAFsC;AAG/CC,QAAM,EAACN,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAHyC;AAI/CE,cAAYC,IAJmC;AAK/CC,SAAOR,MALwC;AAM/CS,WAAS;AACLV,UAAMJ,OAAOe,KAAP,CAAaC,QADd;AAELC,SAAK;AAFA;AANsC,CAAX,CAAvB,C",
      "file": "todo.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Todo', new Schema({\n  text: {type:String, required:true},\n  deleted: {type:Boolean, default:false},\n  done: {type:Boolean, default:false},\n  createTime: Date,\n  color: String,\n  student: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }\n  })\n)\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/note.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/note.controller",
            "imported": [
              "getStudentNotes",
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getStudentNotes",
                "local": "getStudentNotes"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/note.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/note.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.routes.js",
      "sourceFileName": "note.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _note = require('../controllers/note.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _note.getAll);\nrouter.post('/', _note.create);\nrouter.get('/:id', _note.getOne);\nrouter.patch('/:id', _note.update);\nrouter.delete('/:id', _note.deleteOne);\nrouter.get('/student/:studentID', _note.getStudentNotes);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJnZXRTdHVkZW50Tm90ZXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FYLE9BQU9HLEdBQVAsQ0FBVyxxQkFBWCxFQUFrQ1MscUJBQWxDOztrQkFFZVosTSIsImZpbGUiOiJub3RlLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRTdHVkZW50Tm90ZXMsIGdldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9ub3RlLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xucm91dGVyLmdldCgnL3N0dWRlbnQvOnN0dWRlbnRJRCcsIGdldFN0dWRlbnROb3Rlcyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne",
        "getStudentNotes"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAX,OAAOG,GAAP,CAAW,qBAAX,EAAkCS,qBAAlC;;kBAEeZ,M",
      "file": "note.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getStudentNotes, getAll, getOne, create, update, deleteOne} from '../controllers/note.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\nrouter.get('/student/:studentID', getStudentNotes);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/note.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/note",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentNotes",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentNotes",
              "exported": "getStudentNotes"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/note.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/note.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.controller.js",
      "sourceFileName": "note.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentNotes = undefined;\n\nvar _note = require(\"../models/note\");\n\nvar _note2 = _interopRequireDefault(_note);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentNotes = exports.getStudentNotes = function getStudentNotes(req, res) {\n  _note2.default.find({\n    user: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  console.log(\" in get all\");\n  _note2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _note2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Note\");\n  var _req$body = req.body,\n      text = _req$body.text,\n      user = _req$body.user,\n      color = _req$body.color,\n      createdTime = _req$body.createdTime;\n  // console.log(req);\n\n  new _note2.default({ text: text, user: user, color: color, createdTime: createdTime }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      text = _req$body2.text,\n      color = _req$body2.color,\n      deleted = _req$body2.deleted;\n\n  _note2.default.findByIdAndUpdate(req.params.id, { text: text, color: color, deleted: deleted }).then(function (data) {\n    res.json({ data: data });\n    console.log(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n\n  _note2.default.remove({ _id: req.params.id }).exec().then(function (data) {\n    return res.send(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50Tm90ZXMiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJ1c2VyIiwicGFyYW1zIiwic3R1ZGVudElEIiwiZXhlYyIsInRoZW4iLCJqc29uIiwiZGF0YSIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsImVyciIsInN0YXR1cyIsInNlbmQiLCJnZXRBbGwiLCJnZXRPbmUiLCJmaW5kQnlJZCIsImlkIiwiY3JlYXRlIiwiYm9keSIsInRleHQiLCJjb2xvciIsImNyZWF0ZWRUaW1lIiwic2F2ZSIsInVwZGF0ZSIsImRlbGV0ZWQiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFHTyxJQUFNQSw0Q0FBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNDQyxpQkFBU0MsSUFBVCxDQUFjO0FBQ1pDLFVBQU9KLElBQUlLLE1BQUosQ0FBV0M7QUFETixHQUFkLEVBRUdDLElBRkgsR0FFVUMsSUFGVixDQUVlO0FBQUEsV0FBUVAsSUFBSVEsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FGZixFQUdJQyxLQUhKLENBR1UsZUFBTztBQUNiQyxZQUFRQyxHQUFSLENBQVlDLEdBQVo7QUFDQWIsUUFBSWMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUEwQixHQUw5QjtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENXLFVBQVFDLEdBQVIsQ0FBWSxhQUFaO0FBQ0FYLGlCQUFTQyxJQUFULEdBQWdCSSxJQUFoQixHQUNDQyxJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTztBQUFBLFdBQU9WLElBQUljLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckIsQ0FBUDtBQUFBLEdBRlA7QUFHRCxDQUxNOztBQU9BLElBQU1JLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ2xCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxpQkFBU2lCLFFBQVQsQ0FBa0JuQixJQUFJSyxNQUFKLENBQVdlLEVBQTdCLEVBQWlDYixJQUFqQyxHQUNDQyxJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTztBQUFBLFdBQU9WLElBQUljLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckIsQ0FBUDtBQUFBLEdBRlA7QUFHRCxDQUpNOztBQU1BLElBQU1PLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ3JCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDVyxVQUFRQyxHQUFSLENBQVksZ0JBQVo7QUFEa0Msa0JBRUliLElBQUlzQixJQUZSO0FBQUEsTUFFM0JDLElBRjJCLGFBRTNCQSxJQUYyQjtBQUFBLE1BRXRCbkIsSUFGc0IsYUFFdEJBLElBRnNCO0FBQUEsTUFFakJvQixLQUZpQixhQUVqQkEsS0FGaUI7QUFBQSxNQUVYQyxXQUZXLGFBRVhBLFdBRlc7QUFHbEM7O0FBQ0EsTUFBSXZCLGNBQUosQ0FBYSxFQUFDcUIsVUFBRCxFQUFNbkIsVUFBTixFQUFXb0IsWUFBWCxFQUFpQkMsd0JBQWpCLEVBQWIsRUFBNENDLElBQTVDLEdBQ0NsQixJQURELENBQ007QUFBQSxXQUFRUCxJQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQk4sSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU8sZUFBTztBQUNaQyxZQUFRQyxHQUFSLENBQVlDLEdBQVo7QUFDQWIsUUFBSWMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUEwQixHQUo1QjtBQUtELENBVE07O0FBV0EsSUFBTWEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDM0IsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxtQkFDSEQsSUFBSXNCLElBREQ7QUFBQSxNQUMzQkMsSUFEMkIsY0FDM0JBLElBRDJCO0FBQUEsTUFDckJDLEtBRHFCLGNBQ3JCQSxLQURxQjtBQUFBLE1BQ2RJLE9BRGMsY0FDZEEsT0FEYzs7QUFFbEMxQixpQkFBUzJCLGlCQUFULENBQTJCN0IsSUFBSUssTUFBSixDQUFXZSxFQUF0QyxFQUF5QyxFQUFDRyxVQUFELEVBQU9DLFlBQVAsRUFBY0ksZ0JBQWQsRUFBekMsRUFDQ3BCLElBREQsQ0FDTSxnQkFBUTtBQUNaUCxRQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFUO0FBQ0FFLFlBQVFDLEdBQVIsQ0FBWUgsSUFBWjtBQUNELEdBSkQsRUFLQ0MsS0FMRCxDQUtPO0FBQUEsV0FBT1YsSUFBSWMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQixDQUFQO0FBQUEsR0FMUDtBQU1ELENBUk07O0FBVUEsSUFBTWdCLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzlCLEdBQUQsRUFBTUMsR0FBTixFQUFjOztBQUVyQ0MsaUJBQVM2QixNQUFULENBQWdCLEVBQUNDLEtBQUloQyxJQUFJSyxNQUFKLENBQVdlLEVBQWhCLEVBQWhCLEVBQXFDYixJQUFyQyxHQUNDQyxJQURELENBQ00sVUFBQ0UsSUFBRDtBQUFBLFdBQVVULElBQUllLElBQUosQ0FBU04sSUFBVCxDQUFWO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPVixJQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FMTSIsImZpbGUiOiJub3RlLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSBmcm9tICcuLi9tb2RlbHMvbm90ZSc7XG5cblxuZXhwb3J0IGNvbnN0IGdldFN0dWRlbnROb3RlcyA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5maW5kKHtcbiAgICB1c2VyIDogcmVxLnBhcmFtcy5zdHVkZW50SURcbiAgfSkuZXhlYygpLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pXG4gICAgKS5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9XG4gICAgKTtcblxufVxuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiIGluIGdldCBhbGxcIik7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2coXCJJbiBjcmVhdGUgTm90ZVwiKVxuICBjb25zdCB7dGV4dCx1c2VyLGNvbG9yLGNyZWF0ZWRUaW1lfSA9IHJlcS5ib2R5O1xuICAvLyBjb25zb2xlLmxvZyhyZXEpO1xuICBuZXcgUmVzb3VyY2Uoe3RleHQsdXNlcixjb2xvcixjcmVhdGVkVGltZX0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge3RleHQsIGNvbG9yLCBkZWxldGVkfSA9IHJlcS5ib2R5O1xuICBSZXNvdXJjZS5maW5kQnlJZEFuZFVwZGF0ZShyZXEucGFyYW1zLmlkLHt0ZXh0LCBjb2xvciwgZGVsZXRlZH0pXG4gIC50aGVuKGRhdGEgPT4ge1xuICAgIHJlcy5qc29uKHtkYXRhfSk7XG4gICAgY29uc29sZS5sb2coZGF0YSk7XG4gIH0pXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgXG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKGRhdGEpID0+IHJlcy5zZW5kKGRhdGEpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.controller.js"
      ],
      "names": [
        "getStudentNotes",
        "req",
        "res",
        "Resource",
        "find",
        "user",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "color",
        "createdTime",
        "save",
        "update",
        "deleted",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAGO,IAAMA,4CAAkB,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CC,iBAASC,IAAT,CAAc;AACZC,UAAOJ,IAAIK,MAAJ,CAAWC;AADN,GAAd,EAEGC,IAFH,GAEUC,IAFV,CAEe;AAAA,WAAQP,IAAIQ,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GAFf,EAGIC,KAHJ,CAGU,eAAO;AACbC,YAAQC,GAAR,CAAYC,GAAZ;AACAb,QAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AAA0B,GAL9B;AAQD,CATM;;AAWA,IAAMG,0BAAS,SAATA,MAAS,CAACjB,GAAD,EAAMC,GAAN,EAAc;AAClCW,UAAQC,GAAR,CAAY,aAAZ;AACAX,iBAASC,IAAT,GAAgBI,IAAhB,GACCC,IADD,CACM;AAAA,WAAQP,IAAIQ,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOV,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMI,0BAAS,SAATA,MAAS,CAAClB,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASiB,QAAT,CAAkBnB,IAAIK,MAAJ,CAAWe,EAA7B,EAAiCb,IAAjC,GACCC,IADD,CACM;AAAA,WAAQP,IAAIQ,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOV,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMO,0BAAS,SAATA,MAAS,CAACrB,GAAD,EAAMC,GAAN,EAAc;AAClCW,UAAQC,GAAR,CAAY,gBAAZ;AADkC,kBAEIb,IAAIsB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAEtBnB,IAFsB,aAEtBA,IAFsB;AAAA,MAEjBoB,KAFiB,aAEjBA,KAFiB;AAAA,MAEXC,WAFW,aAEXA,WAFW;AAGlC;;AACA,MAAIvB,cAAJ,CAAa,EAACqB,UAAD,EAAMnB,UAAN,EAAWoB,YAAX,EAAiBC,wBAAjB,EAAb,EAA4CC,IAA5C,GACClB,IADD,CACM;AAAA,WAAQP,IAAIc,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZC,YAAQC,GAAR,CAAYC,GAAZ;AACAb,QAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AAA0B,GAJ5B;AAKD,CATM;;AAWA,IAAMa,0BAAS,SAATA,MAAS,CAAC3B,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACHD,IAAIsB,IADD;AAAA,MAC3BC,IAD2B,cAC3BA,IAD2B;AAAA,MACrBC,KADqB,cACrBA,KADqB;AAAA,MACdI,OADc,cACdA,OADc;;AAElC1B,iBAAS2B,iBAAT,CAA2B7B,IAAIK,MAAJ,CAAWe,EAAtC,EAAyC,EAACG,UAAD,EAAOC,YAAP,EAAcI,gBAAd,EAAzC,EACCpB,IADD,CACM,gBAAQ;AACZP,QAAIQ,IAAJ,CAAS,EAACC,UAAD,EAAT;AACAE,YAAQC,GAAR,CAAYH,IAAZ;AACD,GAJD,EAKCC,KALD,CAKO;AAAA,WAAOV,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAAP;AAAA,GALP;AAMD,CARM;;AAUA,IAAMgB,gCAAY,SAAZA,SAAY,CAAC9B,GAAD,EAAMC,GAAN,EAAc;;AAErCC,iBAAS6B,MAAT,CAAgB,EAACC,KAAIhC,IAAIK,MAAJ,CAAWe,EAAhB,EAAhB,EAAqCb,IAArC,GACCC,IADD,CACM,UAACE,IAAD;AAAA,WAAUT,IAAIe,IAAJ,CAASN,IAAT,CAAV;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOV,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAAP;AAAA,GAFP;AAGD,CALM",
      "file": "note.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/note';\n\n\nexport const getStudentNotes = (req, res) => {\n  Resource.find({\n    user : req.params.studentID\n  }).exec().then(data => res.json({data})\n    ).catch(err => {\n      console.log(err);\n      res.status(500).send(err)}\n    );\n\n}\n\nexport const getAll = (req, res) => {\n  console.log(\" in get all\");\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Note\")\n  const {text,user,color,createdTime} = req.body;\n  // console.log(req);\n  new Resource({text,user,color,createdTime}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const {text, color, deleted} = req.body;\n  Resource.findByIdAndUpdate(req.params.id,{text, color, deleted})\n  .then(data => {\n    res.json({data});\n    console.log(data);\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  \n  Resource.remove({_id:req.params.id}).exec()\n  .then((data) => res.send(data))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/note.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "./user.js",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/note.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/note.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.js",
      "sourceFileName": "note.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('./user.js');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Note', new Schema({\n  text: { type: String, required: true },\n  createdTime: Date,\n  deleted: { type: Boolean, default: false },\n  color: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJjcmVhdGVkVGltZSIsIkRhdGUiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJjb2xvciIsInVzZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUVBOzs7Ozs7SUFET0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLE1BQWYsRUFBdUIsSUFBSUYsTUFBSixDQUFXO0FBQy9DRyxRQUFNLEVBQUNDLE1BQUtDLE1BQU4sRUFBY0MsVUFBUyxJQUF2QixFQUR5QztBQUUvQ0MsZUFBYUMsSUFGa0M7QUFHL0NDLFdBQVMsRUFBQ0wsTUFBS00sT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBSHNDO0FBSS9DQyxTQUFPUCxNQUp3QztBQUsvQ1EsUUFBTTtBQUNGVCxVQUFNSixPQUFPYyxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFNBQUs7QUFGSDs7QUFMeUMsQ0FBWCxDQUF2QixDIiwiZmlsZSI6Im5vdGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcbmltcG9ydCBVc2VyIGZyb20gXCIuL3VzZXIuanNcIjtcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdOb3RlJywgbmV3IFNjaGVtYSh7XG4gIHRleHQ6IHt0eXBlOlN0cmluZywgcmVxdWlyZWQ6dHJ1ZX0sXG4gIGNyZWF0ZWRUaW1lOiBEYXRlLFxuICBkZWxldGVkOiB7dHlwZTpCb29sZWFuLCBkZWZhdWx0OmZhbHNlfSxcbiAgY29sb3I6IFN0cmluZyxcbiAgdXNlcjoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICBcbiAgfSkpOyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "createdTime",
        "Date",
        "deleted",
        "Boolean",
        "default",
        "color",
        "user",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;AAEA;;;;;;IADOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,eAAaC,IAFkC;AAG/CC,WAAS,EAACL,MAAKM,OAAN,EAAeC,SAAQ,KAAvB,EAHsC;AAI/CC,SAAOP,MAJwC;AAK/CQ,QAAM;AACFT,UAAMJ,OAAOc,KAAP,CAAaC,QADjB;AAEFC,SAAK;AAFH;;AALyC,CAAX,CAAvB,C",
      "file": "note.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\nimport User from \"./user.js\";\nexport default mongoose.model('Note', new Schema({\n  text: {type:String, required:true},\n  createdTime: Date,\n  deleted: {type:Boolean, default:false},\n  color: String,\n  user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n  \n  }));"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/link.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/link.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/link.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/link.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.routes.js",
      "sourceFileName": "link.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _link = require('../controllers/link.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _link.getAll);\nrouter.post('/', _link.create);\nrouter.get('/:id', _link.getOne);\nrouter.patch('/:id', _link.update);\nrouter.delete('/:id', _link.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJsaW5rLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvbGluay5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "link.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/link.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/link.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/link",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../util/watsonURL",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getWatsonData"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/link.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/link.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.controller.js",
      "sourceFileName": "link.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _link = require('../models/link');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _watsonURL = require('../util/watsonURL');\n\nvar _watsonURL2 = _interopRequireDefault(_watsonURL);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _link2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _link2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  // console.log(\"This is links POST\")\n  console.log(req.body);\n\n  var text = req.body.text;\n\n  console.log(req.body);\n  (0, _watsonURL2.default)(text).then(function (d) {\n    // console.log(link)\n    return new _link2.default({ data: d, url: text }).save().catch(function (e) {\n      return e;\n    });\n  }).then(function (data) {\n    return res.status(200).json({\n      \"response_type\": \"in_channel\",\n      \"text\": \"Thanks for sharing! Your URL has been added\",\n      \"attachments\": [{\n        \"text\": text }]\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body = req.body,\n      url = _req$body.url,\n      data = _req$body.data;\n\n  _link2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _link2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwidGV4dCIsImQiLCJ1cmwiLCJzYXZlIiwiZSIsInVwZGF0ZSIsImZpbmRCeUlkQW5kVXBkYXRlIiwidHlwZSIsInR0bCIsInRhZ3MiLCJkZWxldGVPbmUiLCJyZW1vdmUiLCJfaWQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEM7QUFDQWdCLFVBQVFDLEdBQVIsQ0FBWWxCLElBQUltQixJQUFoQjs7QUFGa0MsTUFJM0JDLElBSjJCLEdBSW5CcEIsSUFBSW1CLElBSmUsQ0FJM0JDLElBSjJCOztBQUtsQ0gsVUFBUUMsR0FBUixDQUFZbEIsSUFBSW1CLElBQWhCO0FBQ0EsMkJBQWNDLElBQWQsRUFDQ2YsSUFERCxDQUNNLGFBQUs7QUFDVDtBQUNELFdBQU8sSUFBSUgsY0FBSixDQUFhLEVBQUNLLE1BQUtjLENBQU4sRUFBU0MsS0FBSUYsSUFBYixFQUFiLEVBQ05HLElBRE0sR0FFTmYsS0FGTSxDQUVBLGFBQUs7QUFBQyxhQUFPZ0IsQ0FBUDtBQUFTLEtBRmYsQ0FBUDtBQU1BLEdBVEQsRUFVQ25CLElBVkQsQ0FVTTtBQUFBLFdBQVFKLElBQUlRLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUNqQyx1QkFBaUIsWUFEZ0I7QUFFakMsY0FBUSw2Q0FGeUI7QUFHakMscUJBQWUsQ0FDWDtBQUNJLGdCQUFRYyxJQURaLEVBRFc7QUFIa0IsS0FBckIsQ0FBUjtBQUFBLEdBVk4sRUFrQkNaLEtBbEJELENBa0JPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FsQlA7QUFtQkE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0QsQ0FoQ007O0FBa0NBLElBQU1jLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ3pCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQUEsa0JBQ1pELElBQUltQixJQURRO0FBQUEsTUFDMUJHLEdBRDBCLGFBQzFCQSxHQUQwQjtBQUFBLE1BQ3BCZixJQURvQixhQUNwQkEsSUFEb0I7O0FBRWxDTCxpQkFBU3dCLGlCQUFULENBQTJCMUIsSUFBSWMsTUFBSixDQUFXQyxFQUF0QyxFQUEwQyxFQUFFWSxVQUFGLEVBQVFDLFFBQVIsRUFBYUMsVUFBYixFQUFtQnRCLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTW1CLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzlCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxpQkFBUzZCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSWhDLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUlnQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDekIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoibGluay5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVzb3VyY2UgZnJvbSAnLi4vbW9kZWxzL2xpbmsnO1xuaW1wb3J0IGdldFdhdHNvbkRhdGEgZnJvbSAnLi4vdXRpbC93YXRzb25VUkwnXG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICAvLyBjb25zb2xlLmxvZyhcIlRoaXMgaXMgbGlua3MgUE9TVFwiKVxuICBjb25zb2xlLmxvZyhyZXEuYm9keSlcblxuICBjb25zdCB7dGV4dH0gPSByZXEuYm9keTtcbiAgY29uc29sZS5sb2cocmVxLmJvZHkpXG4gIGdldFdhdHNvbkRhdGEodGV4dClcbiAgLnRoZW4oZCA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cobGluaylcbiAgIHJldHVybiBuZXcgUmVzb3VyY2Uoe2RhdGE6ZCwgdXJsOnRleHR9KVxuICAgLnNhdmUoKVxuICAgLmNhdGNoKGUgPT4ge3JldHVybiBlfSlcblxuXG5cbiAgfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgXCJyZXNwb25zZV90eXBlXCI6IFwiaW5fY2hhbm5lbFwiLFxuICAgIFwidGV4dFwiOiBcIlRoYW5rcyBmb3Igc2hhcmluZyEgWW91ciBVUkwgaGFzIGJlZW4gYWRkZWRcIiAsXG4gICAgXCJhdHRhY2htZW50c1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwidGV4dFwiOiB0ZXh0ICAgICAgICB9XG4gICAgXVxufSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG4gIC8vIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuXG4gIC8vIGNvbnNvbGUubG9nKGRhdGEpXG5cbiAgLy8gY29uc3Qge3VybH0gPSByZXEuYm9keTtcbiAgLy8gbmV3IFJlc291cmNlKHt1cmwsIGRhdGF9KS5zYXZlKClcbiAgLy8gXG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyB1cmwgLCBkYXRhfSA9IHJlcS5ib2R5XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHsgdHlwZSwgdHRsLCB0YWdzLCBkYXRhfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "text",
        "d",
        "url",
        "save",
        "e",
        "update",
        "findByIdAndUpdate",
        "type",
        "ttl",
        "tags",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClC;AACAgB,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;;AAFkC,MAI3BC,IAJ2B,GAInBpB,IAAImB,IAJe,CAI3BC,IAJ2B;;AAKlCH,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;AACA,2BAAcC,IAAd,EACCf,IADD,CACM,aAAK;AACT;AACD,WAAO,IAAIH,cAAJ,CAAa,EAACK,MAAKc,CAAN,EAASC,KAAIF,IAAb,EAAb,EACNG,IADM,GAENf,KAFM,CAEA,aAAK;AAAC,aAAOgB,CAAP;AAAS,KAFf,CAAP;AAMA,GATD,EAUCnB,IAVD,CAUM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjC,uBAAiB,YADgB;AAEjC,cAAQ,6CAFyB;AAGjC,qBAAe,CACX;AACI,gBAAQc,IADZ,EADW;AAHkB,KAArB,CAAR;AAAA,GAVN,EAkBCZ,KAlBD,CAkBO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAlBP;AAmBA;;AAEA;;AAEA;AACA;AACA;AACD,CAhCM;;AAkCA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACZD,IAAImB,IADQ;AAAA,MAC1BG,GAD0B,aAC1BA,GAD0B;AAAA,MACpBf,IADoB,aACpBA,IADoB;;AAElCL,iBAASwB,iBAAT,CAA2B1B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEY,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBtB,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMmB,gCAAY,SAAZA,SAAY,CAAC9B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS6B,MAAT,CAAgB,EAACC,KAAIhC,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAIgC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECzB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "link.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/link';\nimport getWatsonData from '../util/watsonURL'\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  // console.log(\"This is links POST\")\n  console.log(req.body)\n\n  const {text} = req.body;\n  console.log(req.body)\n  getWatsonData(text)\n  .then(d => {\n    // console.log(link)\n   return new Resource({data:d, url:text})\n   .save()\n   .catch(e => {return e})\n\n\n\n  })\n  .then(data => res.status(200).json({\n    \"response_type\": \"in_channel\",\n    \"text\": \"Thanks for sharing! Your URL has been added\" ,\n    \"attachments\": [\n        {\n            \"text\": text        }\n    ]\n}))\n  .catch(err => res.status(500).send(err));\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n}\n\nexport const update = (req, res) => {\n  const { url , data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/link.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/link.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/link.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.js",
      "sourceFileName": "link.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Link = _mongoose2.default.model('Link', new Schema({\n  data: Schema.Types.Mixed,\n  url: String\n}));\n\nexports.default = Link;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJMaW5rIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInVybCIsIlN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLE9BQUtDO0FBRndDLENBQVgsQ0FBdkIsQ0FBYjs7a0JBS2VOLEkiLCJmaWxlIjoibGluay5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCB7U2NoZW1hfSA9IG1vbmdvb3NlO1xuXG5jb25zdCBMaW5rID0gbW9uZ29vc2UubW9kZWwoJ0xpbmsnLCBuZXcgU2NoZW1hKHtcbiAgZGF0YTpTY2hlbWEuVHlwZXMuTWl4ZWQsXG4gIHVybDogU3RyaW5nXG59KSk7XG5cbmV4cG9ydCBkZWZhdWx0IExpbms7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Link",
        "model",
        "data",
        "Types",
        "Mixed",
        "url",
        "String"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,OAAKC;AAFwC,CAAX,CAAvB,CAAb;;kBAKeN,I",
      "file": "link.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Link = mongoose.model('Link', new Schema({\n  data:Schema.Types.Mixed,\n  url: String\n}));\n\nexport default Link;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/watsonURL.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/watsonURL.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/watsonURL.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "watsonURL.js",
      "sourceFileName": "watsonURL.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "watsonURL"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _process$env = process.env,\n    WATSONUSER = _process$env.WATSONUSER,\n    WATSONPASS = _process$env.WATSONPASS;\n\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\nvar getWatsonData = function getWatsonData(link) {\n\n  var urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n  var urlRegex = new RegExp(urlFormat);\n\n  return new Promise(function (resolve, reject) {\n    console.log(\"$$$$$$$$$$$$$$\");\n    console.log(link);\n    console.log(urlRegex);\n\n    if (link.match(urlRegex)) {\n\n      var options = {\n        url: link,\n        features: {\n          concepts: {},\n          keywords: {\n            'sentiment': true,\n            'emotion': true\n          },\n          categories: {},\n          entities: {},\n          metadata: {},\n          relations: {},\n          semantic_roles: {}\n        }\n      };\n      nlu.analyze(options, function (err, res) {\n        if (err) {\n          console.log(err);\n          reject();\n        }\n        resolve(res);\n      });\n    } else {\n      reject(\"Please enter a valid URL\");\n    }\n  });\n};\n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexports.default = getWatsonData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdHNvblVSTC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiV0FUU09OVVNFUiIsIldBVFNPTlBBU1MiLCJOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEiLCJyZXF1aXJlIiwiY29uZmlnIiwic2lsZW50Iiwibmx1IiwidmVyc2lvbiIsInVybCIsImdldFdhdHNvbkRhdGEiLCJsaW5rIiwidXJsRm9ybWF0IiwidXJsUmVnZXgiLCJSZWdFeHAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJtYXRjaCIsIm9wdGlvbnMiLCJmZWF0dXJlcyIsImNvbmNlcHRzIiwia2V5d29yZHMiLCJjYXRlZ29yaWVzIiwiZW50aXRpZXMiLCJtZXRhZGF0YSIsInJlbGF0aW9ucyIsInNlbWFudGljX3JvbGVzIiwiYW5hbHl6ZSIsImVyciIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7bUJBQWtDQSxRQUFRQyxHO0lBQWxDQyxVLGdCQUFBQSxVO0lBQVlDLFUsZ0JBQUFBLFU7O0FBQ3BCLElBQUlDLGlDQUFpQ0MsUUFBUSw2REFBUixDQUFyQztBQUNBQSxRQUFRLFFBQVIsRUFBa0JDLE1BQWxCLENBQXlCO0FBQ3ZCQyxVQUFRO0FBRGUsQ0FBekIsRSxDQUVJOztBQUVKLElBQUlDLE1BQU0sSUFBSUosOEJBQUosQ0FBbUM7QUFDM0NLLFdBQVMsWUFEa0M7QUFFM0NDLE9BQUs7QUFGc0MsQ0FBbkMsQ0FBVjs7QUFNQSxJQUFNQyxnQkFBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLElBQUQsRUFBVTs7QUFFaEMsTUFBSUMsWUFBWSxtRkFBaEI7QUFDQSxNQUFJQyxXQUFXLElBQUlDLE1BQUosQ0FBV0YsU0FBWCxDQUFmOztBQUtDLFNBQU8sSUFBSUcsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBU0MsTUFBVCxFQUFvQjtBQUN0Q0MsWUFBUUMsR0FBUixDQUFZLGdCQUFaO0FBQ0FELFlBQVFDLEdBQVIsQ0FBWVIsSUFBWjtBQUNBTyxZQUFRQyxHQUFSLENBQVlOLFFBQVo7O0FBRUMsUUFBSUYsS0FBS1MsS0FBTCxDQUFXUCxRQUFYLENBQUosRUFBeUI7O0FBRzFCLFVBQUlRLFVBQVU7QUFDWlosYUFBS0UsSUFETztBQUVaVyxrQkFBVTtBQUNSQyxvQkFBVSxFQURGO0FBRVJDLG9CQUFVO0FBQ1IseUJBQWEsSUFETDtBQUVSLHVCQUFXO0FBRkgsV0FGRjtBQU1SQyxzQkFBWSxFQU5KO0FBT1JDLG9CQUFVLEVBUEY7QUFRUkMsb0JBQVUsRUFSRjtBQVNSQyxxQkFBVyxFQVRIO0FBVVJDLDBCQUFnQjtBQVZSO0FBRkUsT0FBZDtBQWVBdEIsVUFBSXVCLE9BQUosQ0FBWVQsT0FBWixFQUFxQixVQUFDVSxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQyxZQUFJRCxHQUFKLEVBQVM7QUFDUGIsa0JBQVFDLEdBQVIsQ0FBWVksR0FBWjtBQUNBZDtBQUNEO0FBQ0RELGdCQUFRZ0IsR0FBUjtBQUNELE9BTkQ7QUFPRCxLQXpCRSxNQXlCSTtBQUNMZixhQUFPLDBCQUFQO0FBQ0Q7QUFDQyxHQWpDTSxDQUFQO0FBa0NBLENBMUNEOztBQTRDQTs7a0JBRWVQLGEiLCJmaWxlIjoid2F0c29uVVJMLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgV0FUU09OVVNFUiwgV0FUU09OUEFTU30gPSBwcm9jZXNzLmVudlxudmFyIE5hdHVyYWxMYW5ndWFnZVVuZGVyc3RhbmRpbmdWMSA9IHJlcXVpcmUoJ3dhdHNvbi1kZXZlbG9wZXItY2xvdWQvbmF0dXJhbC1sYW5ndWFnZS11bmRlcnN0YW5kaW5nL3YxLmpzJyk7XG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoe1xuICBzaWxlbnQ6IHRydWVcbn0pOyAvLyAgb3B0aW9uYWxcblxudmFyIG5sdSA9IG5ldyBOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEoe1xuICB2ZXJzaW9uOiAnMjAxOC0wNC0wNScsXG4gIHVybDogJ2h0dHBzOi8vZ2F0ZXdheS53YXRzb25wbGF0Zm9ybS5uZXQvbmF0dXJhbC1sYW5ndWFnZS11bmRlcnN0YW5kaW5nL2FwaSdcbn0pO1xuXG5cbmNvbnN0IGdldFdhdHNvbkRhdGEgPSAobGluaykgPT4ge1xuXG5sZXQgdXJsRm9ybWF0ID0gL1stYS16QS1aMC05QDolX1xcKy5+Iz8mLy89XXsyLDI1Nn1cXC5bYS16XXsyLDR9XFxiKFxcL1stYS16QS1aMC05QDolX1xcKy5+Iz8mLy89XSopPy9naTtcbmxldCB1cmxSZWdleCA9IG5ldyBSZWdFeHAodXJsRm9ybWF0KVxuXG5cblxuXG4gcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIiQkJCQkJCQkJCQkJCQkXCIpXG4gIGNvbnNvbGUubG9nKGxpbmspXG4gIGNvbnNvbGUubG9nKHVybFJlZ2V4KVxuICAgXG4gICBpZiAobGluay5tYXRjaCh1cmxSZWdleCkpe1xuXG5cbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgdXJsOiBsaW5rLFxuICAgIGZlYXR1cmVzOiB7XG4gICAgICBjb25jZXB0czoge30sXG4gICAgICBrZXl3b3Jkczoge1xuICAgICAgICAnc2VudGltZW50JzogdHJ1ZSxcbiAgICAgICAgJ2Vtb3Rpb24nOiB0cnVlXG4gICAgICB9LFxuICAgICAgY2F0ZWdvcmllczoge30sXG4gICAgICBlbnRpdGllczoge30sXG4gICAgICBtZXRhZGF0YToge30sXG4gICAgICByZWxhdGlvbnM6IHt9LFxuICAgICAgc2VtYW50aWNfcm9sZXM6IHt9XG4gICAgfVxuICB9O1xuICBubHUuYW5hbHl6ZShvcHRpb25zLCAoZXJyLCByZXMpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgcmVqZWN0KCk7XG4gICAgfVxuICAgIHJlc29sdmUocmVzKTtcbiAgfSk7XG59IGVsc2Uge1xuICByZWplY3QoXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBVUkxcIilcbn1cbiB9KVxufSBcblxuLy8gZ2V0V2F0c29uRGF0YShcImdvb2dsZS5jb21cIikudGhlbihkID0+IGNvbnNvbGUubG9nKGQpKS5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuXG5leHBvcnQgZGVmYXVsdCBnZXRXYXRzb25EYXRhIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "watsonURL.js"
      ],
      "names": [
        "process",
        "env",
        "WATSONUSER",
        "WATSONPASS",
        "NaturalLanguageUnderstandingV1",
        "require",
        "config",
        "silent",
        "nlu",
        "version",
        "url",
        "getWatsonData",
        "link",
        "urlFormat",
        "urlRegex",
        "RegExp",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "match",
        "options",
        "features",
        "concepts",
        "keywords",
        "categories",
        "entities",
        "metadata",
        "relations",
        "semantic_roles",
        "analyze",
        "err",
        "res"
      ],
      "mappings": ";;;;;mBAAkCA,QAAQC,G;IAAlCC,U,gBAAAA,U;IAAYC,U,gBAAAA,U;;AACpB,IAAIC,iCAAiCC,QAAQ,6DAAR,CAArC;AACAA,QAAQ,QAAR,EAAkBC,MAAlB,CAAyB;AACvBC,UAAQ;AADe,CAAzB,E,CAEI;;AAEJ,IAAIC,MAAM,IAAIJ,8BAAJ,CAAmC;AAC3CK,WAAS,YADkC;AAE3CC,OAAK;AAFsC,CAAnC,CAAV;;AAMA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAU;;AAEhC,MAAIC,YAAY,mFAAhB;AACA,MAAIC,WAAW,IAAIC,MAAJ,CAAWF,SAAX,CAAf;;AAKC,SAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACtCC,YAAQC,GAAR,CAAY,gBAAZ;AACAD,YAAQC,GAAR,CAAYR,IAAZ;AACAO,YAAQC,GAAR,CAAYN,QAAZ;;AAEC,QAAIF,KAAKS,KAAL,CAAWP,QAAX,CAAJ,EAAyB;;AAG1B,UAAIQ,UAAU;AACZZ,aAAKE,IADO;AAEZW,kBAAU;AACRC,oBAAU,EADF;AAERC,oBAAU;AACR,yBAAa,IADL;AAER,uBAAW;AAFH,WAFF;AAMRC,sBAAY,EANJ;AAORC,oBAAU,EAPF;AAQRC,oBAAU,EARF;AASRC,qBAAW,EATH;AAURC,0BAAgB;AAVR;AAFE,OAAd;AAeAtB,UAAIuB,OAAJ,CAAYT,OAAZ,EAAqB,UAACU,GAAD,EAAMC,GAAN,EAAc;AACjC,YAAID,GAAJ,EAAS;AACPb,kBAAQC,GAAR,CAAYY,GAAZ;AACAd;AACD;AACDD,gBAAQgB,GAAR;AACD,OAND;AAOD,KAzBE,MAyBI;AACLf,aAAO,0BAAP;AACD;AACC,GAjCM,CAAP;AAkCA,CA1CD;;AA4CA;;kBAEeP,a",
      "file": "watsonURL.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "const { WATSONUSER, WATSONPASS} = process.env\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\n\nconst getWatsonData = (link) => {\n\nlet urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\nlet urlRegex = new RegExp(urlFormat)\n\n\n\n\n return new Promise((resolve,reject) => {\n  console.log(\"$$$$$$$$$$$$$$\")\n  console.log(link)\n  console.log(urlRegex)\n   \n   if (link.match(urlRegex)){\n\n\n  var options = {\n    url: link,\n    features: {\n      concepts: {},\n      keywords: {\n        'sentiment': true,\n        'emotion': true\n      },\n      categories: {},\n      entities: {},\n      metadata: {},\n      relations: {},\n      semantic_roles: {}\n    }\n  };\n  nlu.analyze(options, (err, res) => {\n    if (err) {\n      console.log(err);\n      reject();\n    }\n    resolve(res);\n  });\n} else {\n  reject(\"Please enter a valid URL\")\n}\n })\n} \n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexport default getWatsonData"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "updateUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "updateUser",
                "local": "updateUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.routes.js",
      "sourceFileName": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _user = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.patch('/', _user.updateUser);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwYXRjaCIsInVwZGF0ZVVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxLQUFQLENBQWEsR0FBYixFQUFrQkMsZ0JBQWxCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJ1c2VyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnJvdXRlci5wYXRjaCgnLycsIHVwZGF0ZVVzZXIpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.routes.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "patch",
        "updateUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,KAAP,CAAa,GAAb,EAAkBC,gBAAlB;;AAEAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import express from 'express'\nimport { updateUser } from '../controllers/user.controller'\n\nconst router = express.Router()\n\nrouter.patch('/', updateUser)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.routes.js",
      "sourceFileName": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Express = require('express');\nvar controller = require('../controllers/chrome-history.controller');\n\nvar router = Express.Router();\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert', function (req, res) {\n  var historyitem = req.body.historyitem;\n  console.log(\"welcome\");\n  var gid = req.body.getid;\n\n  //console.log(myurl);\n  var Resource = require('../models/chrome-history');\n  //console.log(historyitem);\n  for (var i = 0; i < historyitem.length; i++) {\n\n    (function (i, historyitem, gid) {\n      Resource.links.sync({ force: false }).then(function () {\n        //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip: historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        }).catch(function (err) {\n          // print the error details\n          console.log(err);\n        });\n      }).catch(function (err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n      });\n    })(i, historyitem, gid);\n  }\n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max', controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJFeHByZXNzIiwicmVxdWlyZSIsImNvbnRyb2xsZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwicmVxIiwicmVzIiwiaGlzdG9yeWl0ZW0iLCJib2R5IiwiY29uc29sZSIsImxvZyIsImdpZCIsImdldGlkIiwiUmVzb3VyY2UiLCJpIiwibGVuZ3RoIiwibGlua3MiLCJzeW5jIiwiZm9yY2UiLCJ0aGVuIiwiY3JlYXRlIiwidXNlcl9pZCIsInVybCIsImlwIiwidmlzaXRlZF90aW1lc3RhbXAiLCJ0aXRsZSIsInZpc2l0Y291bnQiLCJ1c2VyYWdlbnQiLCJjYXRjaCIsImVyciIsImVuZCIsImdldCIsImdldEFsbCIsImdldE1heCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxVQUFRQyxRQUFRLFNBQVIsQ0FBWjtBQUNBLElBQUlDLGFBQVdELFFBQVEsMENBQVIsQ0FBZjs7QUFFQSxJQUFNRSxTQUFPSCxRQUFRSSxNQUFSLEVBQWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUFELE9BQU9FLElBQVAsQ0FBWSxTQUFaLEVBQXNCLFVBQVNDLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUNuQyxNQUFJQyxjQUFZRixJQUFJRyxJQUFKLENBQVNELFdBQXpCO0FBQ0FFLFVBQVFDLEdBQVIsQ0FBWSxTQUFaO0FBQ0EsTUFBSUMsTUFBSU4sSUFBSUcsSUFBSixDQUFTSSxLQUFqQjs7QUFFQTtBQUNBLE1BQUlDLFdBQVNiLFFBQVEsMEJBQVIsQ0FBYjtBQUNBO0FBQ0EsT0FBSSxJQUFJYyxJQUFFLENBQVYsRUFBWUEsSUFBRVAsWUFBWVEsTUFBMUIsRUFBaUNELEdBQWpDLEVBQXFDOztBQUdyQyxLQUFDLFVBQVNBLENBQVQsRUFBV1AsV0FBWCxFQUF1QkksR0FBdkIsRUFBMkI7QUFBQ0UsZUFBU0csS0FBVCxDQUFlQyxJQUFmLENBQW9CLEVBQUNDLE9BQU8sS0FBUixFQUFwQixFQUFvQ0MsSUFBcEMsQ0FBeUMsWUFBWTtBQUNoRjtBQUNFLGVBQU9OLFNBQVNHLEtBQVQsQ0FBZUksTUFBZixDQUFzQjtBQUMzQkMsbUJBQVNWLEdBRGtCO0FBRTNCVyxlQUFLZixZQUFZTyxDQUFaLEVBQWVRLEdBRk87QUFHM0JDLGNBQUtoQixZQUFZTyxDQUFaLEVBQWUsSUFBZixDQUhzQjtBQUkzQlUsNkJBQW1CakIsWUFBWU8sQ0FBWixFQUFlLGVBQWYsQ0FKUTtBQUszQlcsaUJBQU9sQixZQUFZTyxDQUFaLEVBQWUsT0FBZixDQUxvQjtBQU0zQlksc0JBQVluQixZQUFZTyxDQUFaLEVBQWUsWUFBZixDQU5lO0FBTzNCYSxxQkFBV3BCLFlBQVlPLENBQVosRUFBZSxXQUFmO0FBUGdCLFNBQXRCLEVBU05jLEtBVE0sQ0FTQSxVQUFTQyxHQUFULEVBQWM7QUFDakI7QUFDQXBCLGtCQUFRQyxHQUFSLENBQVltQixHQUFaO0FBQ0gsU0FaTSxDQUFQO0FBY0QsT0FoQjBCLEVBaUIxQkQsS0FqQjBCLENBaUJwQixVQUFTQyxHQUFULEVBQWM7QUFDbkI7QUFDQXZCLFlBQUl3QixHQUFKLENBQVEsS0FBUjtBQUNBckIsZ0JBQVFDLEdBQVIsQ0FBWW1CLEdBQVo7QUFDSCxPQXJCNEI7QUFxQjFCLEtBckJILEVBcUJLZixDQXJCTCxFQXFCT1AsV0FyQlAsRUFxQm1CSSxHQXJCbkI7QUFzQkQ7QUFLRixDQXRDRDs7QUF3Q0FULE9BQU82QixHQUFQLENBQVcsYUFBWCxFQUEwQjlCLFdBQVcrQixNQUFyQztBQUNBOUIsT0FBTzZCLEdBQVAsQ0FBVyxNQUFYLEVBQWtCOUIsV0FBV2dDLE1BQTdCO0FBQ0E7O2tCQUVlL0IsTSIsImZpbGUiOiJjaHJvbWUtaGlzdG9yeS5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRXhwcmVzcz1yZXF1aXJlKCdleHByZXNzJylcbnZhciBjb250cm9sbGVyPXJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2Nocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXInKVxuXG5jb25zdCByb3V0ZXI9RXhwcmVzcy5Sb3V0ZXIoKVxuLy9jb25zb2xlLmxvZyhjb250cm9sbGVyLmluc2VydClcbi8vcm91dGVyLmdldCgnLzppZCcsIGNvbnRyb2xsZXIuZ2V0T25lKVxuLy9hcHAudXNlKCcvJyx1LnJvdXRlcilcblxucm91dGVyLnBvc3QoJy9pbnNlcnQnLGZ1bmN0aW9uKHJlcSxyZXMpeyAgXG4gICAgdmFyIGhpc3RvcnlpdGVtPXJlcS5ib2R5Lmhpc3RvcnlpdGVtO1xuICAgIGNvbnNvbGUubG9nKFwid2VsY29tZVwiKTtcbiAgICB2YXIgZ2lkPXJlcS5ib2R5LmdldGlkO1xuICAgIFxuICAgIC8vY29uc29sZS5sb2cobXl1cmwpO1xuICAgIHZhciBSZXNvdXJjZT1yZXF1aXJlKCcuLi9tb2RlbHMvY2hyb21lLWhpc3RvcnknKVxuICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW0pO1xuICAgIGZvcih2YXIgaT0wO2k8aGlzdG9yeWl0ZW0ubGVuZ3RoO2krKyl7XG4gICAgICBcbiAgXG4gICAgKGZ1bmN0aW9uKGksaGlzdG9yeWl0ZW0sZ2lkKXtSZXNvdXJjZS5saW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW1baV0pXG4gICAgICAgIHJldHVybiBSZXNvdXJjZS5saW5rcy5jcmVhdGUoe1xuICAgICAgICAgIHVzZXJfaWQ6IGdpZCxcbiAgICAgICAgICB1cmw6IGhpc3RvcnlpdGVtW2ldLnVybCxcbiAgICAgICAgICBpcDogIGhpc3RvcnlpdGVtW2ldWydpcCddLFxuICAgICAgICAgIHZpc2l0ZWRfdGltZXN0YW1wOiBoaXN0b3J5aXRlbVtpXVsnbGFzdFZpc2l0VGltZSddLFxuICAgICAgICAgIHRpdGxlOiBoaXN0b3J5aXRlbVtpXVsndGl0bGUnXSxcbiAgICAgICAgICB2aXNpdGNvdW50OiBoaXN0b3J5aXRlbVtpXVsndmlzaXRDb3VudCddLFxuICAgICAgICAgIHVzZXJhZ2VudDogaGlzdG9yeWl0ZW1baV1bJ3VzZXJBZ2VudCddXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIC8vIHByaW50IHRoZSBlcnJvciBkZXRhaWxzXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAvLyBwcmludCB0aGUgZXJyb3IgZGV0YWlsc1xuICAgICAgICByZXMuZW5kKCdoaGgnKTtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KX0pKGksaGlzdG9yeWl0ZW0sZ2lkKTtcbiAgfVxuXG4gXG4gIFxuICAgIFxufSk7XG5cbnJvdXRlci5nZXQoJy9hbGxyZXN1bHRzJywgY29udHJvbGxlci5nZXRBbGwpO1xucm91dGVyLmdldCgnL21heCcsY29udHJvbGxlci5nZXRNYXgpO1xuLy9yb3V0ZXIucG9zdCgnL2luc2VydC86aWQnLCBYLmluc2VydCk7IC8vc2hvdWxkIGNoZWNrIHVzaW5nIHBvc3RtYW4gXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.routes.js"
      ],
      "names": [
        "Express",
        "require",
        "controller",
        "router",
        "Router",
        "post",
        "req",
        "res",
        "historyitem",
        "body",
        "console",
        "log",
        "gid",
        "getid",
        "Resource",
        "i",
        "length",
        "links",
        "sync",
        "force",
        "then",
        "create",
        "user_id",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "useragent",
        "catch",
        "err",
        "end",
        "get",
        "getAll",
        "getMax"
      ],
      "mappings": ";;;;;AAAA,IAAIA,UAAQC,QAAQ,SAAR,CAAZ;AACA,IAAIC,aAAWD,QAAQ,0CAAR,CAAf;;AAEA,IAAME,SAAOH,QAAQI,MAAR,EAAb;AACA;AACA;AACA;;AAEAD,OAAOE,IAAP,CAAY,SAAZ,EAAsB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACnC,MAAIC,cAAYF,IAAIG,IAAJ,CAASD,WAAzB;AACAE,UAAQC,GAAR,CAAY,SAAZ;AACA,MAAIC,MAAIN,IAAIG,IAAJ,CAASI,KAAjB;;AAEA;AACA,MAAIC,WAASb,QAAQ,0BAAR,CAAb;AACA;AACA,OAAI,IAAIc,IAAE,CAAV,EAAYA,IAAEP,YAAYQ,MAA1B,EAAiCD,GAAjC,EAAqC;;AAGrC,KAAC,UAASA,CAAT,EAAWP,WAAX,EAAuBI,GAAvB,EAA2B;AAACE,eAASG,KAAT,CAAeC,IAAf,CAAoB,EAACC,OAAO,KAAR,EAApB,EAAoCC,IAApC,CAAyC,YAAY;AAChF;AACE,eAAON,SAASG,KAAT,CAAeI,MAAf,CAAsB;AAC3BC,mBAASV,GADkB;AAE3BW,eAAKf,YAAYO,CAAZ,EAAeQ,GAFO;AAG3BC,cAAKhB,YAAYO,CAAZ,EAAe,IAAf,CAHsB;AAI3BU,6BAAmBjB,YAAYO,CAAZ,EAAe,eAAf,CAJQ;AAK3BW,iBAAOlB,YAAYO,CAAZ,EAAe,OAAf,CALoB;AAM3BY,sBAAYnB,YAAYO,CAAZ,EAAe,YAAf,CANe;AAO3Ba,qBAAWpB,YAAYO,CAAZ,EAAe,WAAf;AAPgB,SAAtB,EASNc,KATM,CASA,UAASC,GAAT,EAAc;AACjB;AACApB,kBAAQC,GAAR,CAAYmB,GAAZ;AACH,SAZM,CAAP;AAcD,OAhB0B,EAiB1BD,KAjB0B,CAiBpB,UAASC,GAAT,EAAc;AACnB;AACAvB,YAAIwB,GAAJ,CAAQ,KAAR;AACArB,gBAAQC,GAAR,CAAYmB,GAAZ;AACH,OArB4B;AAqB1B,KArBH,EAqBKf,CArBL,EAqBOP,WArBP,EAqBmBI,GArBnB;AAsBD;AAKF,CAtCD;;AAwCAT,OAAO6B,GAAP,CAAW,aAAX,EAA0B9B,WAAW+B,MAArC;AACA9B,OAAO6B,GAAP,CAAW,MAAX,EAAkB9B,WAAWgC,MAA7B;AACA;;kBAEe/B,M",
      "file": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "var Express=require('express')\nvar controller=require('../controllers/chrome-history.controller')\n\nconst router=Express.Router()\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert',function(req,res){  \n    var historyitem=req.body.historyitem;\n    console.log(\"welcome\");\n    var gid=req.body.getid;\n    \n    //console.log(myurl);\n    var Resource=require('../models/chrome-history')\n    //console.log(historyitem);\n    for(var i=0;i<historyitem.length;i++){\n      \n  \n    (function(i,historyitem,gid){Resource.links.sync({force: false}).then(function () {\n      //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip:  historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        })\n        .catch(function(err) {\n            // print the error details\n            console.log(err);\n        });\n        \n      })\n      .catch(function(err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n    })})(i,historyitem,gid);\n  }\n\n \n  \n    \n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max',controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexport default router;\n"
      ]
    },
    "mtime": 1559309771692
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "getMax"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "getMax",
              "exported": "getMax"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.controller.js",
      "sourceFileName": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Resource = require('../models/chrome-history');\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  Resource.links.findAll({}).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nvar getOne = exports.getOne = function getOne(req, res) {\n  Resource.links.findAll({ where: {\n      uid: req.params.id\n    } }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar getMax = exports.getMax = function getMax(req, res) {\n  var sequelize = require('sequelize');\n  Resource.links.findAll({\n\n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    raw: true\n  }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n//module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUmVzb3VyY2UiLCJyZXF1aXJlIiwiZ2V0QWxsIiwicmVxIiwicmVzIiwibGlua3MiLCJmaW5kQWxsIiwidGhlbiIsImRhdGEiLCJqc29uIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZ2V0T25lIiwid2hlcmUiLCJ1aWQiLCJwYXJhbXMiLCJpZCIsImdldE1heCIsInNlcXVlbGl6ZSIsImF0dHJpYnV0ZXMiLCJmbiIsImNvbCIsInJhdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxXQUFTQyxRQUFRLDBCQUFSLENBQWI7O0FBRU8sSUFBTUMsMEJBQVEsU0FBUkEsTUFBUSxDQUFTQyxHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFBQ0osV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCLEVBQXZCLEVBQTJCQyxJQUEzQixDQUFnQyxVQUFDQyxJQUFELEVBQVU7QUFDN0VKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBRm9DLEVBRWxDRSxLQUZrQyxDQUU1QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBSm9DO0FBS3RDLENBTE07QUFNQSxJQUFNRywwQkFBUSxTQUFSQSxNQUFRLENBQVNYLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUFDSixXQUFTSyxLQUFULENBQWVDLE9BQWYsQ0FBdUIsRUFBRVMsT0FBTztBQUNyRUMsV0FBS2IsSUFBSWMsTUFBSixDQUFXQztBQURxRCxLQUFULEVBQXZCLEVBRWxDWCxJQUZrQyxDQUU3QixVQUFDQyxJQUFELEVBQVU7QUFDbEJKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBSnNDLEVBSXBDRSxLQUpvQyxDQUk5QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBTnNDO0FBT3RDLENBUE07O0FBVUEsSUFBTVEsMEJBQVEsU0FBUkEsTUFBUSxDQUFTaEIsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQ3BDLE1BQUlnQixZQUFVbkIsUUFBUSxXQUFSLENBQWQ7QUFDQUQsV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCOztBQUV2QmUsZ0JBQVksQ0FBQyxDQUFDRCxVQUFVRSxFQUFWLENBQWEsS0FBYixFQUFvQkYsVUFBVUcsR0FBVixDQUFjLG1CQUFkLENBQXBCLENBQUQsRUFBMEQsTUFBMUQsQ0FBRCxDQUZXO0FBR3ZCQyxTQUFLO0FBSGtCLEdBQXZCLEVBSUVqQixJQUpGLENBSU8sVUFBQ0MsSUFBRCxFQUFVO0FBQ2pCSixRQUFJSyxJQUFKLENBQVNELElBQVQ7QUFDRCxHQU5DLEVBTUNFLEtBTkQsQ0FNTyxVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBUkM7QUFTRCxDQVhNO0FBWU4iLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFJlc291cmNlPXJlcXVpcmUoJy4uL21vZGVscy9jaHJvbWUtaGlzdG9yeScpXG5cbmV4cG9ydCBjb25zdCBnZXRBbGw9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoe30pLnRoZW4oKGRhdGEpID0+IHtcbiAgICByZXMuanNvbihkYXRhKVxuICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgfSlcbn1cbmV4cG9ydCBjb25zdCBnZXRPbmU9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoeyB3aGVyZToge1xuICB1aWQ6IHJlcS5wYXJhbXMuaWRcbn0gfSkudGhlbigoZGF0YSkgPT4ge1xuICByZXMuanNvbihkYXRhKVxufSkuY2F0Y2goKGVycikgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xufSlcbn1cblxuXG5leHBvcnQgY29uc3QgZ2V0TWF4PSBmdW5jdGlvbihyZXEscmVzKXtcbiAgdmFyIHNlcXVlbGl6ZT1yZXF1aXJlKCdzZXF1ZWxpemUnKVxuICBSZXNvdXJjZS5saW5rcy5maW5kQWxsKHsgXG5cbiAgYXR0cmlidXRlczogW1tzZXF1ZWxpemUuZm4oJ21heCcsIHNlcXVlbGl6ZS5jb2woJ3Zpc2l0ZWRfdGltZXN0YW1wJykpLCAndGltZSddXSxcbiAgcmF3OiB0cnVlLFxuIH0pLnRoZW4oKGRhdGEpID0+IHtcbiAgcmVzLmpzb24oZGF0YSlcbn0pLmNhdGNoKChlcnIpID0+IHtcbiAgY29uc29sZS5sb2coZXJyKTtcbn0pXG59XG4gLy9tb2R1bGUuZXhwb3J0cz17XCJnZXRPbmVcIjpnZXRPbmUsXCJnZXRBbGxcIjpnZXRBbGwsXCJnZXRNYXhcIjpnZXRNYXh9Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.controller.js"
      ],
      "names": [
        "Resource",
        "require",
        "getAll",
        "req",
        "res",
        "links",
        "findAll",
        "then",
        "data",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getOne",
        "where",
        "uid",
        "params",
        "id",
        "getMax",
        "sequelize",
        "attributes",
        "fn",
        "col",
        "raw"
      ],
      "mappings": ";;;;;AAAA,IAAIA,WAASC,QAAQ,0BAAR,CAAb;;AAEO,IAAMC,0BAAQ,SAARA,MAAQ,CAASC,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAvB,EAA2BC,IAA3B,CAAgC,UAACC,IAAD,EAAU;AAC7EJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAFoC,EAElCE,KAFkC,CAE5B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GAJoC;AAKtC,CALM;AAMA,IAAMG,0BAAQ,SAARA,MAAQ,CAASX,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAES,OAAO;AACrEC,WAAKb,IAAIc,MAAJ,CAAWC;AADqD,KAAT,EAAvB,EAElCX,IAFkC,CAE7B,UAACC,IAAD,EAAU;AAClBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAJsC,EAIpCE,KAJoC,CAI9B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GANsC;AAOtC,CAPM;;AAUA,IAAMQ,0BAAQ,SAARA,MAAQ,CAAShB,GAAT,EAAaC,GAAb,EAAiB;AACpC,MAAIgB,YAAUnB,QAAQ,WAAR,CAAd;AACAD,WAASK,KAAT,CAAeC,OAAf,CAAuB;;AAEvBe,gBAAY,CAAC,CAACD,UAAUE,EAAV,CAAa,KAAb,EAAoBF,UAAUG,GAAV,CAAc,mBAAd,CAApB,CAAD,EAA0D,MAA1D,CAAD,CAFW;AAGvBC,SAAK;AAHkB,GAAvB,EAIEjB,IAJF,CAIO,UAACC,IAAD,EAAU;AACjBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GANC,EAMCE,KAND,CAMO,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GARC;AASD,CAXM;AAYN",
      "file": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "var Resource=require('../models/chrome-history')\n\nexport const getAll= function(req,res){Resource.links.findAll({}).then((data) => {\n    res.json(data)\n  }).catch((err) => {\n    console.log(err);\n  })\n}\nexport const getOne= function(req,res){Resource.links.findAll({ where: {\n  uid: req.params.id\n} }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n\n\nexport const getMax= function(req,res){\n  var sequelize=require('sequelize')\n  Resource.links.findAll({ \n\n  attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n  raw: true,\n }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n //module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}"
      ]
    },
    "mtime": 1559308068584
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.js",
      "sourceFileName": "chrome-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar index = require('../database');\n\nvar links = index.define('history', {\n  user_id: {\n    type: _sequelize2.default.STRING\n  },\n  url: {\n    type: _sequelize2.default.STRING(2000)\n  },\n  ip: {\n    type: _sequelize2.default.STRING\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.STRING\n  },\n  title: {\n    type: _sequelize2.default.STRING\n  },\n  visitcount: {\n    type: _sequelize2.default.INTEGER\n  },\n  useragent: {\n    type: _sequelize2.default.STRING\n  }\n\n}, {\n  freezeTableName: true\n});\nlinks.sync({ force: false }).then(function () {\n  return true;\n});\n\nmodule.exports = { \"links\": links };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmpzIl0sIm5hbWVzIjpbImluZGV4IiwicmVxdWlyZSIsImxpbmtzIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJTVFJJTkciLCJ1cmwiLCJpcCIsInZpc2l0ZWRfdGltZXN0YW1wIiwidGl0bGUiLCJ2aXNpdGNvdW50IiwiSU5URUdFUiIsInVzZXJhZ2VudCIsImZyZWV6ZVRhYmxlTmFtZSIsInN5bmMiLCJmb3JjZSIsInRoZW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBOzs7Ozs7QUFEQSxJQUFNQSxRQUFNQyxRQUFRLGFBQVIsQ0FBWjs7QUFFQSxJQUFJQyxRQUFRRixNQUFNRyxNQUFOLENBQWEsU0FBYixFQUF3QjtBQUNoQ0MsV0FBUztBQUNQQyxVQUFNQyxvQkFBVUM7QUFEVCxHQUR1QjtBQUloQ0MsT0FBSztBQUNISCxVQUFNQyxvQkFBVUMsTUFBVixDQUFpQixJQUFqQjtBQURILEdBSjJCO0FBT2hDRSxNQUFHO0FBQ0RKLFVBQUtDLG9CQUFVQztBQURkLEdBUDZCO0FBVWhDRyxxQkFBa0I7QUFDaEJMLFVBQU1DLG9CQUFVQztBQURBLEdBVmM7QUFhaENJLFNBQ0E7QUFDRU4sVUFBS0Msb0JBQVVDO0FBRGpCLEdBZGdDO0FBaUJoQ0ssY0FDQTtBQUNFUCxVQUFLQyxvQkFBVU87QUFEakIsR0FsQmdDO0FBcUJoQ0MsYUFDQTtBQUNFVCxVQUFNQyxvQkFBVUM7QUFEbEI7O0FBdEJnQyxDQUF4QixFQTJCUDtBQUNEUSxtQkFBaUI7QUFEaEIsQ0EzQk8sQ0FBWjtBQThCRWIsTUFBTWMsSUFBTixDQUFXLEVBQUNDLE9BQU8sS0FBUixFQUFYLEVBQTJCQyxJQUEzQixDQUFnQyxZQUFZO0FBQzFDLFNBQU8sSUFBUDtBQUNELENBRkQ7O0FBSUFDLE9BQU9DLE9BQVAsR0FBZSxFQUFDLFNBQVFsQixLQUFULEVBQWYiLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpbmRleD1yZXF1aXJlKCcuLi9kYXRhYmFzZScpXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IFxudmFyIGxpbmtzID0gaW5kZXguZGVmaW5lKCdoaXN0b3J5Jywge1xuICAgIHVzZXJfaWQ6IHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHVybDoge1xuICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklORygyMDAwKVxuICAgIH0sXG4gICAgaXA6e1xuICAgICAgdHlwZTpTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB2aXNpdGVkX3RpbWVzdGFtcDp7XG4gICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB0aXRsZTpcbiAgICB7XG4gICAgICB0eXBlOlNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHZpc2l0Y291bnQ6XG4gICAge1xuICAgICAgdHlwZTpTZXF1ZWxpemUuSU5URUdFUlxuICAgIH0sXG4gICAgdXNlcmFnZW50OlxuICAgIHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9XG5cblxuICB9LCB7XG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlXG4gIH0pO1xuICBsaW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSk7XG5cbiAgbW9kdWxlLmV4cG9ydHM9e1wibGlua3NcIjpsaW5rc307XG5cblxuXG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.js"
      ],
      "names": [
        "index",
        "require",
        "links",
        "define",
        "user_id",
        "type",
        "Sequelize",
        "STRING",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "INTEGER",
        "useragent",
        "freezeTableName",
        "sync",
        "force",
        "then",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;;;;;AADA,IAAMA,QAAMC,QAAQ,aAAR,CAAZ;;AAEA,IAAIC,QAAQF,MAAMG,MAAN,CAAa,SAAb,EAAwB;AAChCC,WAAS;AACPC,UAAMC,oBAAUC;AADT,GADuB;AAIhCC,OAAK;AACHH,UAAMC,oBAAUC,MAAV,CAAiB,IAAjB;AADH,GAJ2B;AAOhCE,MAAG;AACDJ,UAAKC,oBAAUC;AADd,GAP6B;AAUhCG,qBAAkB;AAChBL,UAAMC,oBAAUC;AADA,GAVc;AAahCI,SACA;AACEN,UAAKC,oBAAUC;AADjB,GAdgC;AAiBhCK,cACA;AACEP,UAAKC,oBAAUO;AADjB,GAlBgC;AAqBhCC,aACA;AACET,UAAMC,oBAAUC;AADlB;;AAtBgC,CAAxB,EA2BP;AACDQ,mBAAiB;AADhB,CA3BO,CAAZ;AA8BEb,MAAMc,IAAN,CAAW,EAACC,OAAO,KAAR,EAAX,EAA2BC,IAA3B,CAAgC,YAAY;AAC1C,SAAO,IAAP;AACD,CAFD;;AAIAC,OAAOC,OAAP,GAAe,EAAC,SAAQlB,KAAT,EAAf",
      "file": "chrome-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "const index=require('../database')\nimport Sequelize from 'sequelize'; \nvar links = index.define('history', {\n    user_id: {\n      type: Sequelize.STRING\n    },\n    url: {\n      type: Sequelize.STRING(2000)\n    },\n    ip:{\n      type:Sequelize.STRING\n    },\n    visited_timestamp:{\n      type: Sequelize.STRING\n    },\n    title:\n    {\n      type:Sequelize.STRING\n    },\n    visitcount:\n    {\n      type:Sequelize.INTEGER\n    },\n    useragent:\n    {\n      type: Sequelize.STRING\n    }\n\n\n  }, {\n    freezeTableName: true\n  });\n  links.sync({force: false}).then(function () {\n    return true;\n  });\n\n  module.exports={\"links\":links};\n\n\n\n\n"
      ]
    },
    "mtime": 1559307725396
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/database.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/database.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/database.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "database.js",
      "sourceFileName": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "database"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000\n  }\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsImFjcXVpcmUiLCJpZGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQ0EsSUFBTUEsWUFBWSxJQUFJQyxtQkFBSixDQUFjLFVBQWQsRUFBeUIsVUFBekIsRUFBb0MsT0FBcEMsRUFBNkM7QUFDM0RDLFFBQU0sV0FEcUQ7QUFFN0RDLFdBQVMsVUFGb0Q7QUFHN0RDLFFBQU07QUFDSkMsU0FBSyxDQUREO0FBRUpDLGFBQVMsS0FGTDtBQUdKQyxVQUFNO0FBSEY7QUFIdUQsQ0FBN0MsQ0FBbEI7QUFTQUMsT0FBT0MsT0FBUCxHQUFnQlQsU0FBaEIiLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJ1xuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZSgncG9zdGdyZXMnLCdwb3N0Z3JlcycsJ3RhbnVqJywge1xuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICBwb29sOiB7XG4gICAgbWF4OiA1LFxuICAgIGFjcXVpcmU6IDMwMDAwLFxuICAgIGlkbGU6IDEwMDAwLFxuICB9XG59KTtcbm1vZHVsZS5leHBvcnRzID1zZXF1ZWxpemUiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "acquire",
        "idle",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAAyB,UAAzB,EAAoC,OAApC,EAA6C;AAC3DC,QAAM,WADqD;AAE7DC,WAAS,UAFoD;AAG7DC,QAAM;AACJC,SAAK,CADD;AAEJC,aAAS,KAFL;AAGJC,UAAM;AAHF;AAHuD,CAA7C,CAAlB;AASAC,OAAOC,OAAP,GAAgBT,SAAhB",
      "file": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "sourcesContent": [
        "import Sequelize from 'sequelize'\nconst sequelize = new Sequelize('postgres','postgres','tanuj', {\n    host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000,\n  }\n});\nmodule.exports =sequelize"
      ]
    },
    "mtime": 1559243369680
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "paths"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "paths",
                "local": "paths"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createSuperAdmin",
            "createStudent"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createSuperAdmin",
              "exported": "createSuperAdmin"
            },
            {
              "kind": "local",
              "local": "createStudent",
              "exported": "createStudent"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStudent = exports.createSuperAdmin = undefined;\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createSuperAdmin = exports.createSuperAdmin = function createSuperAdmin() {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.SUPERADMIN,\n    email: process.env.DEFAULT_USER\n  }).save();\n};\n\nvar createStudent = exports.createStudent = function createStudent(currentCohortId) {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.STUDENT,\n    cohorts: [currentCohortId],\n    currentCohort: currentCohortId,\n    email: _faker2.default.internet.email(),\n    path: _lodash2.default.sample(_constants.paths)\n  }).save();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVN1cGVyQWRtaW4iLCJVc2VyIiwibmFtZSIsImZha2VyIiwiZmluZE5hbWUiLCJyb2xlIiwiVVNFUl9ST0xFUyIsIlNVUEVSQURNSU4iLCJlbWFpbCIsInByb2Nlc3MiLCJlbnYiLCJERUZBVUxUX1VTRVIiLCJzYXZlIiwiY3JlYXRlU3R1ZGVudCIsImN1cnJlbnRDb2hvcnRJZCIsIlNUVURFTlQiLCJjb2hvcnRzIiwiY3VycmVudENvaG9ydCIsImludGVybmV0IiwicGF0aCIsIl8iLCJzYW1wbGUiLCJwYXRocyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsOENBQW1CLFNBQW5CQSxnQkFBbUI7QUFBQSxTQUFNLElBQUlDLGNBQUosQ0FBUztBQUM3Q0MsVUFBTUMsZ0JBQU1ELElBQU4sQ0FBV0UsUUFBWCxFQUR1QztBQUU3Q0MsVUFBTUMsaUJBQVdDLFVBRjRCO0FBRzdDQyxXQUFPQyxRQUFRQyxHQUFSLENBQVlDO0FBSDBCLEdBQVQsRUFJbkNDLElBSm1DLEVBQU47QUFBQSxDQUF6Qjs7QUFPQSxJQUFNQyx3Q0FBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLGVBQUQ7QUFBQSxTQUFxQixJQUFJYixjQUFKLENBQVM7QUFDekRDLFVBQU1DLGdCQUFNRCxJQUFOLENBQVdFLFFBQVgsRUFEbUQ7QUFFekRDLFVBQU1DLGlCQUFXUyxPQUZ3QztBQUd6REMsYUFBUyxDQUFDRixlQUFELENBSGdEO0FBSXpERyxtQkFBZUgsZUFKMEM7QUFLekROLFdBQU9MLGdCQUFNZSxRQUFOLENBQWVWLEtBQWYsRUFMa0Q7QUFNekRXLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLGdCQUFUO0FBTm1ELEdBQVQsRUFPL0NWLElBUCtDLEVBQXJCO0FBQUEsQ0FBdEIiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQge2RlZmF1bHQgYXMgVXNlciwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtwYXRoc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN1cGVyQWRtaW4gPSAoKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVVBFUkFETUlOLFxuICBlbWFpbDogcHJvY2Vzcy5lbnYuREVGQVVMVF9VU0VSLFxufSkuc2F2ZSgpXG5cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN0dWRlbnQgPSAoY3VycmVudENvaG9ydElkKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5ULFxuICBjb2hvcnRzOiBbY3VycmVudENvaG9ydElkXSxcbiAgY3VycmVudENvaG9ydDogY3VycmVudENvaG9ydElkLFxuICBlbWFpbDogZmFrZXIuaW50ZXJuZXQuZW1haWwoKSxcbiAgcGF0aDogXy5zYW1wbGUocGF0aHMpLFxufSkuc2F2ZSgpXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "createSuperAdmin",
        "User",
        "name",
        "faker",
        "findName",
        "role",
        "USER_ROLES",
        "SUPERADMIN",
        "email",
        "process",
        "env",
        "DEFAULT_USER",
        "save",
        "createStudent",
        "currentCohortId",
        "STUDENT",
        "cohorts",
        "currentCohort",
        "internet",
        "path",
        "_",
        "sample",
        "paths"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,cAAJ,CAAS;AAC7CC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADuC;AAE7CC,UAAMC,iBAAWC,UAF4B;AAG7CC,WAAOC,QAAQC,GAAR,CAAYC;AAH0B,GAAT,EAInCC,IAJmC,EAAN;AAAA,CAAzB;;AAOA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,eAAD;AAAA,SAAqB,IAAIb,cAAJ,CAAS;AACzDC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADmD;AAEzDC,UAAMC,iBAAWS,OAFwC;AAGzDC,aAAS,CAACF,eAAD,CAHgD;AAIzDG,mBAAeH,eAJ0C;AAKzDN,WAAOL,gBAAMe,QAAN,CAAeV,KAAf,EALkD;AAMzDW,UAAMC,iBAAEC,MAAF,CAASC,gBAAT;AANmD,GAAT,EAO/CV,IAP+C,EAArB;AAAA,CAAtB",
      "file": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import faker from 'faker';\nimport {default as User, USER_ROLES} from '../models/user';\nimport {paths} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createSuperAdmin = () => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.SUPERADMIN,\n  email: process.env.DEFAULT_USER,\n}).save()\n\n\nexport const createStudent = (currentCohortId) => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.STUDENT,\n  cohorts: [currentCohortId],\n  currentCohort: currentCohortId,\n  email: faker.internet.email(),\n  path: _.sample(paths),\n}).save()\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/constants.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "promptTypes",
            "pingKinds",
            "pingTypes",
            "paths",
            "questionTypes",
            "defaultQuestionOptions"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "promptTypes",
              "exported": "promptTypes"
            },
            {
              "kind": "local",
              "local": "pingKinds",
              "exported": "pingKinds"
            },
            {
              "kind": "local",
              "local": "pingTypes",
              "exported": "pingTypes"
            },
            {
              "kind": "local",
              "local": "paths",
              "exported": "paths"
            },
            {
              "kind": "local",
              "local": "questionTypes",
              "exported": "questionTypes"
            },
            {
              "kind": "local",
              "local": "defaultQuestionOptions",
              "exported": "defaultQuestionOptions"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/constants.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/constants.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "constants.js",
      "sourceFileName": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "constants"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar promptTypes = exports.promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nvar pingKinds = exports.pingKinds = ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nvar pingTypes = exports.pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nvar paths = exports.paths = ['Front End', 'Back End'];\nvar questionTypes = exports.questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nvar defaultQuestionOptions = exports.defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJwcm9tcHRUeXBlcyIsInBpbmdLaW5kcyIsInBpbmdUeXBlcyIsInBhdGhzIiwicXVlc3Rpb25UeXBlcyIsImRlZmF1bHRRdWVzdGlvbk9wdGlvbnMiLCJTbGlkZXIiLCJvcHRpb25zIiwiUmF0aW5nIiwiU2VsZWN0TXVsdGlwbGUiLCJSYWRpbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxvQ0FBYyxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCLEVBQXFDLGtCQUFyQyxFQUF5RCxZQUF6RCxFQUF1RSxlQUF2RSxFQUF3RixpQkFBeEYsQ0FBcEI7QUFDQSxJQUFNQyxnQ0FBYSxDQUFDLFNBQUQsRUFBWSxNQUFaLEVBQW9CLFNBQXBCLEVBQStCLFNBQS9CLEVBQTBDLFFBQTFDLEVBQW9ELFFBQXBELENBQW5CO0FBQ0EsSUFBTUMsZ0NBQVksQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixFQUE0QixTQUE1QixFQUF1QyxNQUF2QyxFQUErQyxXQUEvQyxDQUFsQjtBQUNBLElBQU1DLHdCQUFRLENBQUMsV0FBRCxFQUFjLFVBQWQsQ0FBZDtBQUNBLElBQU1DLHdDQUFnQixDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLGdCQUFyQixFQUF1QyxPQUF2QyxDQUF0QjtBQUNBLElBQU1DLDBEQUF5QjtBQUNwQ0MsVUFBUSxFQUFFQyxTQUFTLENBQUMsVUFBRCxFQUFhLEtBQWIsRUFBb0IsTUFBcEIsRUFBNEIsV0FBNUIsQ0FBWCxFQUQ0QjtBQUVwQ0MsVUFBUSxFQUY0QjtBQUdwQ0Msa0JBQWdCLEVBQUVGLFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYLEVBSG9CO0FBSXBDRyxTQUFPLEVBQUVILFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYO0FBSjZCLENBQS9CIiwiZmlsZSI6ImNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcHJvbXB0VHlwZXMgPSBbJ01ldGFMZWFybmluZycsICdDYXRhbHlzdCBTZXNzaW9uJywgJ1BhaXIgUHJvZ3JhbW1pbmcnLCAnQXNzZXNzbWVudCcsICdRdWVzdGlvbiBIb3VyJywgJ1NoYXJpbmcgU2Vzc2lvbiddO1xuZXhwb3J0IGNvbnN0IHBpbmdLaW5kcyA9ICBbJ2V4cGxvcmUnLCAna25vdycsICdvYnNlcnZlJywgJ3JlZmxlY3QnLCAncmV2aWV3JywgJ3Vud2luZCddO1xuZXhwb3J0IGNvbnN0IHBpbmdUeXBlcyA9IFsnUGFpcicsICdDb2hvcnQnLCAnUGVlcnMnLCAnQ29udGVudCcsICdTZWxmJywgJ0ludGVudGlvbiddO1xuZXhwb3J0IGNvbnN0IHBhdGhzID0gWydGcm9udCBFbmQnLCAnQmFjayBFbmQnXTtcbmV4cG9ydCBjb25zdCBxdWVzdGlvblR5cGVzID0gWydTbGlkZXInLCAnUmF0aW5nJywgJ1NlbGVjdE11bHRpcGxlJywgJ1JhZGlvJ107XG5leHBvcnQgY29uc3QgZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyA9IHtcbiAgU2xpZGVyOiB7IG9wdGlvbnM6IFsnVmVyeSBiYWQnLCAnQmFkJywgJ0dvb2QnLCAnVmVyeSBnb29kJ10gfSxcbiAgUmF0aW5nOiB7fSxcbiAgU2VsZWN0TXVsdGlwbGU6IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbiAgUmFkaW86IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "promptTypes",
        "pingKinds",
        "pingTypes",
        "paths",
        "questionTypes",
        "defaultQuestionOptions",
        "Slider",
        "options",
        "Rating",
        "SelectMultiple",
        "Radio"
      ],
      "mappings": ";;;;;AAAO,IAAMA,oCAAc,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,kBAArC,EAAyD,YAAzD,EAAuE,eAAvE,EAAwF,iBAAxF,CAApB;AACA,IAAMC,gCAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,QAApD,CAAnB;AACA,IAAMC,gCAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC,MAAvC,EAA+C,WAA/C,CAAlB;AACA,IAAMC,wBAAQ,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,IAAMC,wCAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,gBAArB,EAAuC,OAAvC,CAAtB;AACA,IAAMC,0DAAyB;AACpCC,UAAQ,EAAEC,SAAS,CAAC,UAAD,EAAa,KAAb,EAAoB,MAApB,EAA4B,WAA5B,CAAX,EAD4B;AAEpCC,UAAQ,EAF4B;AAGpCC,kBAAgB,EAAEF,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX,EAHoB;AAIpCG,SAAO,EAAEH,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX;AAJ6B,CAA/B",
      "file": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "export const promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nexport const pingKinds =  ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nexport const pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nexport const paths = ['Front End', 'Back End'];\nexport const questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nexport const defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "dotenv/config",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dotenv"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbConnect.js",
      "sourceFileName": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbConnect"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('dotenv/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _process$env = process.env,\n    NODE_ENV = _process$env.NODE_ENV,\n    MONGO_HOST = _process$env.MONGO_HOST,\n    dbName = _process$env.MONGO_DB,\n    user = _process$env.MONGO_USER,\n    pass = _process$env.MONGO_PWD;\n\n\n_mongoose2.default.set('debug', NODE_ENV === 'development');\n_mongoose2.default.Promise = Promise;\nconsole.log(MONGO_HOST);\n\nexports.default = function () {\n  return _mongoose2.default.connect(MONGO_HOST, { user: user, pass: pass });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJNT05HT19IT1NUIiwiZGJOYW1lIiwiTU9OR09fREIiLCJ1c2VyIiwiTU9OR09fVVNFUiIsInBhc3MiLCJNT05HT19QV0QiLCJtb25nb29zZSIsInNldCIsIlByb21pc2UiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O21CQUNvRkEsUUFBUUMsRztJQUFyRkMsUSxnQkFBQUEsUTtJQUFVQyxVLGdCQUFBQSxVO0lBQXNCQyxNLGdCQUFWQyxRO0lBQThCQyxJLGdCQUFaQyxVO0lBQTZCQyxJLGdCQUFYQyxTOzs7QUFFakVDLG1CQUFTQyxHQUFULENBQWEsT0FBYixFQUFzQlQsYUFBYSxhQUFuQztBQUNBUSxtQkFBU0UsT0FBVCxHQUFtQkEsT0FBbkI7QUFDQUMsUUFBUUMsR0FBUixDQUFZWCxVQUFaOztrQkFDZTtBQUFBLFNBQU1PLG1CQUFTSyxPQUFULENBQWlCWixVQUFqQixFQUE2QixFQUFDRyxVQUFELEVBQU9FLFVBQVAsRUFBN0IsQ0FBTjtBQUFBLEMiLCJmaWxlIjoiZGJDb25uZWN0LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52L2NvbmZpZyc7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge05PREVfRU5WLCBNT05HT19IT1NULCBNT05HT19EQjogZGJOYW1lLCBNT05HT19VU0VSOiB1c2VyLCBNT05HT19QV0Q6IHBhc3N9ID0gcHJvY2Vzcy5lbnY7XG5cbm1vbmdvb3NlLnNldCgnZGVidWcnLCBOT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jyk7XG5tb25nb29zZS5Qcm9taXNlID0gUHJvbWlzZTtcbmNvbnNvbGUubG9nKE1PTkdPX0hPU1QpO1xuZXhwb3J0IGRlZmF1bHQgKCkgPT4gbW9uZ29vc2UuY29ubmVjdChNT05HT19IT1NULCB7dXNlciwgcGFzc30pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbConnect.js"
      ],
      "names": [
        "process",
        "env",
        "NODE_ENV",
        "MONGO_HOST",
        "dbName",
        "MONGO_DB",
        "user",
        "MONGO_USER",
        "pass",
        "MONGO_PWD",
        "mongoose",
        "set",
        "Promise",
        "console",
        "log",
        "connect"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;mBACoFA,QAAQC,G;IAArFC,Q,gBAAAA,Q;IAAUC,U,gBAAAA,U;IAAsBC,M,gBAAVC,Q;IAA8BC,I,gBAAZC,U;IAA6BC,I,gBAAXC,S;;;AAEjEC,mBAASC,GAAT,CAAa,OAAb,EAAsBT,aAAa,aAAnC;AACAQ,mBAASE,OAAT,GAAmBA,OAAnB;AACAC,QAAQC,GAAR,CAAYX,UAAZ;;kBACe;AAAA,SAAMO,mBAASK,OAAT,CAAiBZ,UAAjB,EAA6B,EAACG,UAAD,EAAOE,UAAP,EAA7B,CAAN;AAAA,C",
      "file": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import dotenv from 'dotenv/config';\nimport mongoose from 'mongoose';\nconst {NODE_ENV, MONGO_HOST, MONGO_DB: dbName, MONGO_USER: user, MONGO_PWD: pass} = process.env;\n\nmongoose.set('debug', NODE_ENV === 'development');\nmongoose.Promise = Promise;\nconsole.log(MONGO_HOST);\nexport default () => mongoose.connect(MONGO_HOST, {user, pass});\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./server",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "app"
              }
            ]
          },
          {
            "source": "./models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "./seeds/users",
            "imported": [
              "createSuperAdmin"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createSuperAdmin",
                "local": "createSuperAdmin"
              }
            ]
          },
          {
            "source": "./util/dbConnect",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dbConnect"
              }
            ]
          },
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/index.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _server = require('./server');\n\nvar _server2 = _interopRequireDefault(_server);\n\nvar _user = require('./models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _users = require('./seeds/users');\n\nvar _dbConnect = require('./util/dbConnect');\n\nvar _dbConnect2 = _interopRequireDefault(_dbConnect);\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar _process$env = process.env,\n    PORT = _process$env.PORT,\n    DEFAULT_USER = _process$env.DEFAULT_USER;\n\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize.authenticate().then(function () {\n  console.log('Connection has been established successfully.');\n}).catch(function (err) {\n  console.error('Unable to connect to the database:', err);\n});\n\n(0, _dbConnect2.default)().then(function () {\n\n  _user2.default.findOne({ email: DEFAULT_USER }).then(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(user) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user === null)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return (0, _users.createSuperAdmin)();\n\n            case 3:\n\n              _server2.default.listen(PORT, function (err) {\n                if (!err) {\n                  console.log('Server is running on port: ' + PORT);\n                }\n              });\n\n            case 4:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}).catch(function (err) {\n  return console.error('MongoDB connection failure' + err);\n});\n\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiREVGQVVMVF9VU0VSIiwic2VxdWVsaXplIiwiU2VxdWVsaXplIiwiaG9zdCIsImRpYWxlY3QiLCJwb29sIiwibWF4IiwibWluIiwiaWRsZSIsImF1dGhlbnRpY2F0ZSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciIsImVyciIsIlVzZXIiLCJmaW5kT25lIiwiZW1haWwiLCJ1c2VyIiwiYXBwIiwibGlzdGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7bUJBQzZCQSxRQUFRQyxHO0lBQTlCQyxJLGdCQUFBQSxJO0lBQU1DLFksZ0JBQUFBLFk7OztBQUViLElBQU1DLFlBQVksSUFBSUMsbUJBQUosQ0FBYyxVQUFkLEVBQTBCLFVBQTFCLEVBQXNDLE9BQXRDLEVBQStDO0FBQy9EQyxRQUFNLFdBRHlEO0FBRS9EQyxXQUFTLFVBRnNEO0FBRy9EQyxRQUFNO0FBQ0pDLFNBQUssQ0FERDtBQUVKQyxTQUFLLENBRkQ7QUFHSkMsVUFBTTtBQUhGO0FBSHlELENBQS9DLENBQWxCO0FBU0FQLFVBQ0dRLFlBREgsR0FFR0MsSUFGSCxDQUVRLFlBQU07QUFDVkMsVUFBUUMsR0FBUixDQUFZLCtDQUFaO0FBQ0QsQ0FKSCxFQUtHQyxLQUxILENBS1MsZUFBTztBQUNaRixVQUFRRyxLQUFSLENBQWMsb0NBQWQsRUFBb0RDLEdBQXBEO0FBQ0QsQ0FQSDs7QUFVQSwyQkFBWUwsSUFBWixDQUFrQixZQUFNOztBQUV0Qk0saUJBQUtDLE9BQUwsQ0FBYSxFQUFFQyxPQUFPbEIsWUFBVCxFQUFiLEVBQXNDVSxJQUF0QztBQUFBLHVFQUEyQyxpQkFBTVMsSUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsb0JBQ3RDQSxTQUFTLElBRDZCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBRWpDLDhCQUZpQzs7QUFBQTs7QUFLekNDLCtCQUFJQyxNQUFKLENBQVd0QixJQUFYLEVBQWlCLGVBQU87QUFDdEIsb0JBQUksQ0FBQ2dCLEdBQUwsRUFBVTtBQUNSSiwwQkFBUUMsR0FBUixpQ0FBMENiLElBQTFDO0FBQ0Q7QUFDRixlQUpEOztBQUx5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUEzQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVlELENBZEQsRUFjR2MsS0FkSCxDQWNTO0FBQUEsU0FBT0YsUUFBUUcsS0FBUixDQUFjLCtCQUErQkMsR0FBN0MsQ0FBUDtBQUFBLENBZFQ7O0FBZ0JBTyxPQUFPQyxPQUFQLEdBQWV0QixTQUFmIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwIGZyb20gJy4vc2VydmVyJztcbmltcG9ydCBVc2VyIGZyb20gJy4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtjcmVhdGVTdXBlckFkbWlufSBmcm9tICcuL3NlZWRzL3VzZXJzJztcbmltcG9ydCBkYkNvbm5lY3QgZnJvbSAnLi91dGlsL2RiQ29ubmVjdCc7XG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5jb25zdCB7UE9SVCwgREVGQVVMVF9VU0VSfSA9IHByb2Nlc3MuZW52O1xuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKCdwb3N0Z3JlcycsICdwb3N0Z3JlcycsICd0YW51aicsIHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIGRpYWxlY3Q6ICdwb3N0Z3JlcycsXG4gIHBvb2w6IHtcbiAgICBtYXg6IDksXG4gICAgbWluOiAwLFxuICAgIGlkbGU6IDEwMDAwXG4gIH1cbn0pO1xuc2VxdWVsaXplXG4gIC5hdXRoZW50aWNhdGUoKVxuICAudGhlbigoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gaGFzIGJlZW4gZXN0YWJsaXNoZWQgc3VjY2Vzc2Z1bGx5LicpO1xuICB9KVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2U6JywgZXJyKTtcbiAgfSk7XG5cblxuZGJDb25uZWN0KCkudGhlbiggKCkgPT4ge1xuXG4gIFVzZXIuZmluZE9uZSh7IGVtYWlsOiBERUZBVUxUX1VTRVIgfSkudGhlbihhc3luYyB1c2VyID0+IHtcbiAgICBpZih1c2VyID09PSBudWxsKXtcbiAgICAgIGF3YWl0IGNyZWF0ZVN1cGVyQWRtaW4oKTtcbiAgICB9XG5cbiAgICBhcHAubGlzdGVuKFBPUlQsIGVyciA9PiB7XG4gICAgICBpZiAoIWVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydDogJHtQT1JUfWApO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxufSkuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoJ01vbmdvREIgY29ubmVjdGlvbiBmYWlsdXJlJyArIGVycikpO1xuXG5tb2R1bGUuZXhwb3J0cz1zZXF1ZWxpemU7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "process",
        "env",
        "PORT",
        "DEFAULT_USER",
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "min",
        "idle",
        "authenticate",
        "then",
        "console",
        "log",
        "catch",
        "error",
        "err",
        "User",
        "findOne",
        "email",
        "user",
        "app",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;mBAC6BA,QAAQC,G;IAA9BC,I,gBAAAA,I;IAAMC,Y,gBAAAA,Y;;;AAEb,IAAMC,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAA0B,UAA1B,EAAsC,OAAtC,EAA+C;AAC/DC,QAAM,WADyD;AAE/DC,WAAS,UAFsD;AAG/DC,QAAM;AACJC,SAAK,CADD;AAEJC,SAAK,CAFD;AAGJC,UAAM;AAHF;AAHyD,CAA/C,CAAlB;AASAP,UACGQ,YADH,GAEGC,IAFH,CAEQ,YAAM;AACVC,UAAQC,GAAR,CAAY,+CAAZ;AACD,CAJH,EAKGC,KALH,CAKS,eAAO;AACZF,UAAQG,KAAR,CAAc,oCAAd,EAAoDC,GAApD;AACD,CAPH;;AAUA,2BAAYL,IAAZ,CAAkB,YAAM;;AAEtBM,iBAAKC,OAAL,CAAa,EAAEC,OAAOlB,YAAT,EAAb,EAAsCU,IAAtC;AAAA,uEAA2C,iBAAMS,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBACtCA,SAAS,IAD6B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEjC,8BAFiC;;AAAA;;AAKzCC,+BAAIC,MAAJ,CAAWtB,IAAX,EAAiB,eAAO;AACtB,oBAAI,CAACgB,GAAL,EAAU;AACRJ,0BAAQC,GAAR,iCAA0Cb,IAA1C;AACD;AACF,eAJD;;AALyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3C;;AAAA;AAAA;AAAA;AAAA;AAYD,CAdD,EAcGc,KAdH,CAcS;AAAA,SAAOF,QAAQG,KAAR,CAAc,+BAA+BC,GAA7C,CAAP;AAAA,CAdT;;AAgBAO,OAAOC,OAAP,GAAetB,SAAf",
      "file": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "sourcesContent": [
        "import app from './server';\nimport User from './models/user';\nimport {createSuperAdmin} from './seeds/users';\nimport dbConnect from './util/dbConnect';\nimport Sequelize from 'sequelize';\nconst {PORT, DEFAULT_USER} = process.env;\n\nconst sequelize = new Sequelize('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize\n  .authenticate()\n  .then(() => {\n    console.log('Connection has been established successfully.');\n  })\n  .catch(err => {\n    console.error('Unable to connect to the database:', err);\n  });\n\n\ndbConnect().then( () => {\n\n  User.findOne({ email: DEFAULT_USER }).then(async user => {\n    if(user === null){\n      await createSuperAdmin();\n    }\n\n    app.listen(PORT, err => {\n      if (!err) {\n        console.log(`Server is running on port: ${PORT}`);\n      }\n    });\n  });\n\n}).catch(err => console.error('MongoDB connection failure' + err));\n\nmodule.exports=sequelize;\n"
      ]
    },
    "mtime": 1559242947688
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "compression",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "compression"
              }
            ]
          },
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "path",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "path"
              }
            ]
          },
          {
            "source": "./routes/api.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "apiRouter"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/server.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _compression = require('compression');\n\nvar _compression2 = _interopRequireDefault(_compression);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _api = require('./routes/api.routes');\n\nvar _api2 = _interopRequireDefault(_api);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Initialize the Express App\nvar app = new _express2.default();\n\n// Apply body Parser\napp.use((0, _compression2.default)());\napp.use(_bodyParser2.default.json({ limit: '20mb' }));\napp.use(_bodyParser2.default.urlencoded({ limit: '20mb', extended: false }));\n\napp.use('/api', _api2.default);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexports.default = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJFeHByZXNzIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJsaW1pdCIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImFwaVJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUE7QUFDQSxJQUFNQSxNQUFNLElBQUlDLGlCQUFKLEVBQVo7O0FBRUE7QUFDQUQsSUFBSUUsR0FBSixDQUFRLDRCQUFSO0FBQ0FGLElBQUlFLEdBQUosQ0FBUUMscUJBQVdDLElBQVgsQ0FBZ0IsRUFBRUMsT0FBTyxNQUFULEVBQWhCLENBQVI7QUFDQUwsSUFBSUUsR0FBSixDQUFRQyxxQkFBV0csVUFBWCxDQUFzQixFQUFFRCxPQUFPLE1BQVQsRUFBaUJFLFVBQVUsS0FBM0IsRUFBdEIsQ0FBUjs7QUFHQVAsSUFBSUUsR0FBSixDQUFRLE1BQVIsRUFBZ0JNLGFBQWhCO0FBQ0E7O2tCQUVlUixHIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29tcHJlc3Npb24gZnJvbSAnY29tcHJlc3Npb24nO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgYXBpUm91dGVyIGZyb20gJy4vcm91dGVzL2FwaS5yb3V0ZXMnO1xuXG4vLyBJbml0aWFsaXplIHRoZSBFeHByZXNzIEFwcFxuY29uc3QgYXBwID0gbmV3IEV4cHJlc3MoKTtcblxuLy8gQXBwbHkgYm9keSBQYXJzZXJcbmFwcC51c2UoY29tcHJlc3Npb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7IGxpbWl0OiAnMjBtYicgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBsaW1pdDogJzIwbWInLCBleHRlbmRlZDogZmFsc2UgfSkpO1xuXG5cbmFwcC51c2UoJy9hcGknLCBhcGlSb3V0ZXIpO1xuLy8gYXBwLnVzZShFeHByZXNzLnN0YXRpYyhwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vcHVibGljLycpKSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "Express",
        "use",
        "bodyParser",
        "json",
        "limit",
        "urlencoded",
        "extended",
        "apiRouter"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,IAAIC,iBAAJ,EAAZ;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,4BAAR;AACAF,IAAIE,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB,EAAEC,OAAO,MAAT,EAAhB,CAAR;AACAL,IAAIE,GAAJ,CAAQC,qBAAWG,UAAX,CAAsB,EAAED,OAAO,MAAT,EAAiBE,UAAU,KAA3B,EAAtB,CAAR;;AAGAP,IAAIE,GAAJ,CAAQ,MAAR,EAAgBM,aAAhB;AACA;;kBAEeR,G",
      "file": "server.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "sourcesContent": [
        "import Express from 'express';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport apiRouter from './routes/api.routes';\n\n// Initialize the Express App\nconst app = new Express();\n\n// Apply body Parser\napp.use(compression());\napp.use(bodyParser.json({ limit: '20mb' }));\napp.use(bodyParser.urlencoded({ limit: '20mb', extended: false }));\n\n\napp.use('/api', apiRouter);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexport default app;\n"
      ]
    },
    "mtime": 1559244910072
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/api.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "./auth.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "authentication"
              }
            ]
          },
          {
            "source": "./cohort.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cohort"
              }
            ]
          },
          {
            "source": "./educator.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "educator"
              }
            ]
          },
          {
            "source": "./student.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "student"
              }
            ]
          },
          {
            "source": "./prompt.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "prompt"
              }
            ]
          },
          {
            "source": "./ping.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "ping"
              }
            ]
          },
          {
            "source": "./pingpong.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "pingpong"
              }
            ]
          },
          {
            "source": "./mailer.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mailer"
              }
            ]
          },
          {
            "source": "./day.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "days"
              }
            ]
          },
          {
            "source": "./admin.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "admin"
              }
            ]
          },
          {
            "source": "./todo.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "todo"
              }
            ]
          },
          {
            "source": "./note.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "note"
              }
            ]
          },
          {
            "source": "./link.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "link"
              }
            ]
          },
          {
            "source": "./user.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "user"
              }
            ]
          },
          {
            "source": "./chrome-history.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "chromehistory"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "getProfile",
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getProfile",
                "local": "getProfile"
              },
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/api.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/api.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "api.routes.js",
      "sourceFileName": "api.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "api.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _auth = require('./auth.routes');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _cohort = require('./cohort.routes');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _educator = require('./educator.routes');\n\nvar _educator2 = _interopRequireDefault(_educator);\n\nvar _student = require('./student.routes');\n\nvar _student2 = _interopRequireDefault(_student);\n\nvar _prompt = require('./prompt.routes');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _ping = require('./ping.routes');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _pingpong = require('./pingpong.routes');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nvar _mailer = require('./mailer.routes');\n\nvar _mailer2 = _interopRequireDefault(_mailer);\n\nvar _day = require('./day.routes');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _admin = require('./admin.routes');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _todo = require('./todo.routes');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nvar _note = require('./note.routes');\n\nvar _note2 = _interopRequireDefault(_note);\n\nvar _link = require('./link.routes');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _user = require('./user.routes');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _chromeHistory = require('./chrome-history.routes');\n\nvar _chromeHistory2 = _interopRequireDefault(_chromeHistory);\n\nvar _user3 = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n// api doc is accessible in development environment only\nif (process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', _express2.default.static('./doc'));\n}\nrouter.use('/links', _link2.default);\nrouter.use('/chrome-history', _chromeHistory2.default);\nrouter.use(_auth2.default);\n\nrouter.use('/cohorts', _cohort2.default);\nrouter.use('/educators', _educator2.default);\nrouter.use('/students', _student2.default);\nrouter.use('/prompts', _prompt2.default);\nrouter.use('/pings', _ping2.default);\nrouter.use('/pingpongs', _pingpong2.default);\nrouter.use('/mailer', _mailer2.default);\nrouter.use('/days', _day2.default);\nrouter.use('/admin', _admin2.default);\nrouter.use('/todos', _todo2.default);\nrouter.use('/notes', _note2.default);\nrouter.use('/users', _user2.default);\n\nrouter.get('/profile', _user3.populateCurrentUser, _user3.getProfile);\n\nrouter.get('/', function (req, res) {\n\treturn res.send('API home');\n});\nrouter.use('*', function (req, res) {\n\treturn res.sendStatus(404);\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInVzZSIsInN0YXRpYyIsImxpbmsiLCJjaHJvbWVoaXN0b3J5IiwiYXV0aGVudGljYXRpb24iLCJjb2hvcnQiLCJlZHVjYXRvciIsInN0dWRlbnQiLCJwcm9tcHQiLCJwaW5nIiwicGluZ3BvbmciLCJtYWlsZXIiLCJkYXlzIiwiYWRtaW4iLCJ0b2RvIiwibm90ZSIsInVzZXIiLCJnZXQiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0UHJvZmlsZSIsInJlcSIsInJlcyIsInNlbmQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjtBQUNBO0FBQ0EsSUFBR0MsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLGFBQTVCLEVBQTJDO0FBQzFDTCxRQUFPTSxHQUFQLENBQVcsTUFBWCxFQUFtQkwsa0JBQVFNLE1BQVIsQ0FBZSxPQUFmLENBQW5CO0FBQ0E7QUFDRFAsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJFLGNBQXJCO0FBQ0FSLE9BQU9NLEdBQVAsQ0FBVyxpQkFBWCxFQUE2QkcsdUJBQTdCO0FBQ0FULE9BQU9NLEdBQVAsQ0FBV0ksY0FBWDs7QUFFQVYsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJLLGdCQUF2QjtBQUNBWCxPQUFPTSxHQUFQLENBQVcsWUFBWCxFQUF5Qk0sa0JBQXpCO0FBQ0FaLE9BQU9NLEdBQVAsQ0FBVyxXQUFYLEVBQXdCTyxpQkFBeEI7QUFDQWIsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJRLGdCQUF2QjtBQUNBZCxPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQlMsY0FBckI7QUFDQWYsT0FBT00sR0FBUCxDQUFXLFlBQVgsRUFBeUJVLGtCQUF6QjtBQUNBaEIsT0FBT00sR0FBUCxDQUFXLFNBQVgsRUFBc0JXLGdCQUF0QjtBQUNBakIsT0FBT00sR0FBUCxDQUFXLE9BQVgsRUFBb0JZLGFBQXBCO0FBQ0FsQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmEsZUFBckI7QUFDQW5CLE9BQU9NLEdBQVAsQ0FBVyxRQUFYLEVBQXFCYyxjQUFyQjtBQUNBcEIsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJlLGNBQXJCO0FBQ0FyQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmdCLGNBQXJCOztBQUdBdEIsT0FBT3VCLEdBQVAsQ0FBVyxVQUFYLEVBQXVCQywwQkFBdkIsRUFBNENDLGlCQUE1Qzs7QUFFQXpCLE9BQU91QixHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFDRyxHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJQyxJQUFKLENBQVMsVUFBVCxDQUFkO0FBQUEsQ0FBaEI7QUFDQTVCLE9BQU9NLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNvQixHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJRSxVQUFKLENBQWUsR0FBZixDQUFkO0FBQUEsQ0FBaEI7O2tCQUVlN0IsTSIsImZpbGUiOiJhcGkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYXV0aGVudGljYXRpb24gZnJvbSAnLi9hdXRoLnJvdXRlcyc7XG5pbXBvcnQgY29ob3J0IGZyb20gJy4vY29ob3J0LnJvdXRlcyc7XG5pbXBvcnQgZWR1Y2F0b3IgZnJvbSAnLi9lZHVjYXRvci5yb3V0ZXMnO1xuaW1wb3J0IHN0dWRlbnQgZnJvbSAnLi9zdHVkZW50LnJvdXRlcyc7XG5pbXBvcnQgcHJvbXB0IGZyb20gJy4vcHJvbXB0LnJvdXRlcyc7XG5pbXBvcnQgcGluZyBmcm9tICcuL3Bpbmcucm91dGVzJztcbmltcG9ydCBwaW5ncG9uZyBmcm9tICcuL3Bpbmdwb25nLnJvdXRlcyc7XG5pbXBvcnQgbWFpbGVyIGZyb20gJy4vbWFpbGVyLnJvdXRlcyc7XG5pbXBvcnQgZGF5cyBmcm9tICcuL2RheS5yb3V0ZXMnO1xuaW1wb3J0IGFkbWluIGZyb20gJy4vYWRtaW4ucm91dGVzJztcbmltcG9ydCB0b2RvIGZyb20gJy4vdG9kby5yb3V0ZXMnO1xuaW1wb3J0IG5vdGUgZnJvbSAnLi9ub3RlLnJvdXRlcyc7XG5pbXBvcnQgbGluayBmcm9tICcuL2xpbmsucm91dGVzJztcbmltcG9ydCB1c2VyIGZyb20gJy4vdXNlci5yb3V0ZXMnO1xuaW1wb3J0IGNocm9tZWhpc3RvcnkgZnJvbSAnLi9jaHJvbWUtaGlzdG9yeS5yb3V0ZXMnO1xuaW1wb3J0IHtnZXRQcm9maWxlLCBwb3B1bGF0ZUN1cnJlbnRVc2VyfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuLy8gYXBpIGRvYyBpcyBhY2Nlc3NpYmxlIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50IG9ubHlcbmlmKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG5cdHJvdXRlci51c2UoJy9kb2MnLCBFeHByZXNzLnN0YXRpYygnLi9kb2MnKSk7XG59XG5yb3V0ZXIudXNlKCcvbGlua3MnLCBsaW5rKTtcbnJvdXRlci51c2UoJy9jaHJvbWUtaGlzdG9yeScsY2hyb21laGlzdG9yeSlcbnJvdXRlci51c2UoYXV0aGVudGljYXRpb24pO1xuXG5yb3V0ZXIudXNlKCcvY29ob3J0cycsIGNvaG9ydCk7XG5yb3V0ZXIudXNlKCcvZWR1Y2F0b3JzJywgZWR1Y2F0b3IpO1xucm91dGVyLnVzZSgnL3N0dWRlbnRzJywgc3R1ZGVudCk7XG5yb3V0ZXIudXNlKCcvcHJvbXB0cycsIHByb21wdCk7XG5yb3V0ZXIudXNlKCcvcGluZ3MnLCBwaW5nKTtcbnJvdXRlci51c2UoJy9waW5ncG9uZ3MnLCBwaW5ncG9uZyk7XG5yb3V0ZXIudXNlKCcvbWFpbGVyJywgbWFpbGVyKTtcbnJvdXRlci51c2UoJy9kYXlzJywgZGF5cyk7XG5yb3V0ZXIudXNlKCcvYWRtaW4nLCBhZG1pbik7XG5yb3V0ZXIudXNlKCcvdG9kb3MnLCB0b2RvKTtcbnJvdXRlci51c2UoJy9ub3RlcycsIG5vdGUpO1xucm91dGVyLnVzZSgnL3VzZXJzJywgdXNlcilcblxuXG5yb3V0ZXIuZ2V0KCcvcHJvZmlsZScsIHBvcHVsYXRlQ3VycmVudFVzZXIsIGdldFByb2ZpbGUpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZCgnQVBJIGhvbWUnKSk7XG5yb3V0ZXIudXNlKCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZFN0YXR1cyg0MDQpKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "api.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "process",
        "env",
        "NODE_ENV",
        "use",
        "static",
        "link",
        "chromehistory",
        "authentication",
        "cohort",
        "educator",
        "student",
        "prompt",
        "ping",
        "pingpong",
        "mailer",
        "days",
        "admin",
        "todo",
        "note",
        "user",
        "get",
        "populateCurrentUser",
        "getProfile",
        "req",
        "res",
        "send",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;AACA;AACA,IAAGC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AAC1CL,QAAOM,GAAP,CAAW,MAAX,EAAmBL,kBAAQM,MAAR,CAAe,OAAf,CAAnB;AACA;AACDP,OAAOM,GAAP,CAAW,QAAX,EAAqBE,cAArB;AACAR,OAAOM,GAAP,CAAW,iBAAX,EAA6BG,uBAA7B;AACAT,OAAOM,GAAP,CAAWI,cAAX;;AAEAV,OAAOM,GAAP,CAAW,UAAX,EAAuBK,gBAAvB;AACAX,OAAOM,GAAP,CAAW,YAAX,EAAyBM,kBAAzB;AACAZ,OAAOM,GAAP,CAAW,WAAX,EAAwBO,iBAAxB;AACAb,OAAOM,GAAP,CAAW,UAAX,EAAuBQ,gBAAvB;AACAd,OAAOM,GAAP,CAAW,QAAX,EAAqBS,cAArB;AACAf,OAAOM,GAAP,CAAW,YAAX,EAAyBU,kBAAzB;AACAhB,OAAOM,GAAP,CAAW,SAAX,EAAsBW,gBAAtB;AACAjB,OAAOM,GAAP,CAAW,OAAX,EAAoBY,aAApB;AACAlB,OAAOM,GAAP,CAAW,QAAX,EAAqBa,eAArB;AACAnB,OAAOM,GAAP,CAAW,QAAX,EAAqBc,cAArB;AACApB,OAAOM,GAAP,CAAW,QAAX,EAAqBe,cAArB;AACArB,OAAOM,GAAP,CAAW,QAAX,EAAqBgB,cAArB;;AAGAtB,OAAOuB,GAAP,CAAW,UAAX,EAAuBC,0BAAvB,EAA4CC,iBAA5C;;AAEAzB,OAAOuB,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIC,IAAJ,CAAS,UAAT,CAAd;AAAA,CAAhB;AACA5B,OAAOM,GAAP,CAAW,GAAX,EAAgB,UAACoB,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIE,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;;kBAEe7B,M",
      "file": "api.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport authentication from './auth.routes';\nimport cohort from './cohort.routes';\nimport educator from './educator.routes';\nimport student from './student.routes';\nimport prompt from './prompt.routes';\nimport ping from './ping.routes';\nimport pingpong from './pingpong.routes';\nimport mailer from './mailer.routes';\nimport days from './day.routes';\nimport admin from './admin.routes';\nimport todo from './todo.routes';\nimport note from './note.routes';\nimport link from './link.routes';\nimport user from './user.routes';\nimport chromehistory from './chrome-history.routes';\nimport {getProfile, populateCurrentUser} from '../controllers/user.controller';\n\nconst router = Express.Router();\n// api doc is accessible in development environment only\nif(process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', Express.static('./doc'));\n}\nrouter.use('/links', link);\nrouter.use('/chrome-history',chromehistory)\nrouter.use(authentication);\n\nrouter.use('/cohorts', cohort);\nrouter.use('/educators', educator);\nrouter.use('/students', student);\nrouter.use('/prompts', prompt);\nrouter.use('/pings', ping);\nrouter.use('/pingpongs', pingpong);\nrouter.use('/mailer', mailer);\nrouter.use('/days', days);\nrouter.use('/admin', admin);\nrouter.use('/todos', todo);\nrouter.use('/notes', note);\nrouter.use('/users', user)\n\n\nrouter.get('/profile', populateCurrentUser, getProfile);\n\nrouter.get('/', (req, res) => res.send('API home'));\nrouter.use('*', (req, res) => res.sendStatus(404));\n\nexport default router;\n"
      ]
    },
    "mtime": 1559311356740
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/auth.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "../controllers/auth.controller",
            "imported": [
              "accessControl",
              "authenticate",
              "signinWithGithub"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "accessControl",
                "local": "accessControl"
              },
              {
                "kind": "named",
                "imported": "authenticate",
                "local": "authenticate"
              },
              {
                "kind": "named",
                "imported": "signinWithGithub",
                "local": "signinWithGithub"
              }
            ]
          },
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/auth.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/auth.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.routes.js",
      "sourceFileName": "auth.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _auth = require('../controllers/auth.controller');\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_auth.accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', _auth.signinWithGithub);\n\nrouter.use(_auth.authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', function (req, res, next) {\n  if (req.jwtData.scope === _authScopes2.default.STUDENT) {\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJhY2Nlc3NDb250cm9sIiwic2lnbmluV2l0aEdpdGh1YiIsImF1dGhlbnRpY2F0ZSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIlNUVURFTlQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXQyxtQkFBWDs7QUFFQTtBQUNBSixPQUFPRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNFLHNCQUFuQzs7QUFFQUwsT0FBT0csR0FBUCxDQUFXRyxrQkFBWDs7QUFFQTtBQUNBTixPQUFPRyxHQUFQLENBQVcsVUFBWCxFQUF1QixVQUFDSSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN6QyxNQUFHRixJQUFJRyxPQUFKLENBQVlDLEtBQVosS0FBc0JDLHFCQUFZQyxPQUFyQyxFQUE2QztBQUMzQztBQUNEO0FBQ0RKO0FBQ0QsQ0FMRDs7a0JBT2VULE0iLCJmaWxlIjoiYXV0aC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCB7YWNjZXNzQ29udHJvbCwgYXV0aGVudGljYXRlLCBzaWduaW5XaXRoR2l0aHVifSBmcm9tICcuLi9jb250cm9sbGVycy9hdXRoLmNvbnRyb2xsZXInO1xuaW1wb3J0IEFVVEhfU0NPUEVTIGZyb20gJy4uL3V0aWwvYXV0aFNjb3Blcyc7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci51c2UoYWNjZXNzQ29udHJvbCk7XG5cbi8vIFRoaXMgcm91dGUgZG9lc24ndCBuZWVkIHRvIGJlIGF1dGhlbnRpY2F0ZWRcbnJvdXRlci51c2UoJy9vYXV0aC9naXRodWIvc2lnbmluJywgc2lnbmluV2l0aEdpdGh1Yik7XG5cbnJvdXRlci51c2UoYXV0aGVudGljYXRlKTtcblxuLy8gUmVzdHJpY3Qgc3R1ZGVudHMgaW4gdGhlc2Ugcm91dGVzXG5yb3V0ZXIudXNlKCcvY29ob3J0cycsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZihyZXEuand0RGF0YS5zY29wZSA9PT0gQVVUSF9TQ09QRVMuU1RVREVOVCl7XG4gICAgLy8gcmVzLnNlbmRTdGF0dXMoNDAzKTtcbiAgfVxuICBuZXh0KCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "accessControl",
        "signinWithGithub",
        "authenticate",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "STUDENT"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,mBAAX;;AAEA;AACAJ,OAAOG,GAAP,CAAW,sBAAX,EAAmCE,sBAAnC;;AAEAL,OAAOG,GAAP,CAAWG,kBAAX;;AAEA;AACAN,OAAOG,GAAP,CAAW,UAAX,EAAuB,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAGF,IAAIG,OAAJ,CAAYC,KAAZ,KAAsBC,qBAAYC,OAArC,EAA6C;AAC3C;AACD;AACDJ;AACD,CALD;;kBAOeT,M",
      "file": "auth.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport {accessControl, authenticate, signinWithGithub} from '../controllers/auth.controller';\nimport AUTH_SCOPES from '../util/authScopes';\n\nconst router = Express.Router();\n\nrouter.use(accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', signinWithGithub);\n\nrouter.use(authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', (req, res, next) => {\n  if(req.jwtData.scope === AUTH_SCOPES.STUDENT){\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/auth.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "superagent",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "request"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./user.controller",
            "imported": [
              "getSpotterTeam"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSpotterTeam",
                "local": "getSpotterTeam"
              }
            ]
          },
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "accessControl",
            "authenticate",
            "signinWithGithub"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "accessControl",
              "exported": "accessControl"
            },
            {
              "kind": "local",
              "local": "authenticate",
              "exported": "authenticate"
            },
            {
              "kind": "local",
              "local": "signinWithGithub",
              "exported": "signinWithGithub"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/auth.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/auth.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.controller.js",
      "sourceFileName": "auth.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signinWithGithub = exports.authenticate = exports.accessControl = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _user = require('../models/user');\n\nvar _user2 = require('./user.controller');\n\nvar _token = require('../util/token');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar accessControl = exports.accessControl = function accessControl(req, res, next) {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n};\n\nvar authenticate = exports.authenticate = function authenticate(req, res, next) {\n  req.jwtData = {};\n\n  next();\n};\n\nvar getProfileFromGithub = function getProfileFromGithub(_ref) {\n  var githubToken = _ref.text;\n  return new Promise(function (resolve, reject) {\n\n    _superagent2.default.get('https://api.github.com/user?' + githubToken).then(function (profileResponse) {\n      var _profileResponse$body = profileResponse.body,\n          email = _profileResponse$body.email,\n          login = _profileResponse$body.login,\n          id = _profileResponse$body.id,\n          name = _profileResponse$body.name,\n          company = _profileResponse$body.company,\n          location = _profileResponse$body.location,\n          bio = _profileResponse$body.bio,\n          avatar_url = _profileResponse$body.avatar_url;\n\n      var profile = { email: email, login: login, id: id, name: name, company: company, location: location, bio: bio, avatar_url: avatar_url };\n\n      _user.User.findOne({ email: email }).then(function (user) {\n        if (user === null) {\n          // User not found. Checking alternate emails!\n          _superagent2.default.get('https://api.github.com/user/emails?' + githubToken).then(function (emailResponse) {\n            var emails = emailResponse.body.map(function (o) {\n              return o.email;\n            });\n            _user.User.findOne({ email: { $in: emails } }).then(function (user) {\n              if (user === null) {\n                reject();\n              } else {\n                // user.emails = emails;\n                resolve({ user: user, profile: profile, githubToken: githubToken });\n              }\n            }).catch(reject);\n          });\n        } else {\n          resolve({ user: user, profile: profile, githubToken: githubToken });\n        }\n      }).catch(reject);\n    }).catch(reject);\n  });\n};\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nvar signinWithGithub = exports.signinWithGithub = function signinWithGithub(req, res) {\n\n  var params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  _superagent2.default.post('https://github.com/login/oauth/access_token').send(params).then(getProfileFromGithub).then(function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3) {\n      var user = _ref3.user,\n          profile = _ref3.profile,\n          githubToken = _ref3.githubToken;\n      var spotterTeam, soalToken;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _user2.getSpotterTeam)(user);\n\n            case 2:\n              spotterTeam = _context.sent;\n\n\n              // User found. Sending a jsonwebtoken to the client!\n              soalToken = (0, _token.getSoalToken)(user, githubToken);\n\n              if (!(user.profile && user.profile.github)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) }));\n\n            case 6:\n              // new user signed up\n              user.profile = _extends({}, user.profile, { github: profile });\n              // Updating user with the github profile\n              user.save().then(function (user) {\n                // Update succeeded\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              }).catch(function (err) {\n                // Update Failed!!!\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              });\n\n            case 8:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }()).catch(function (err) {\n    console.log(err);\n    res.status(404).send('User not found!!!');\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "accessControl",
        "req",
        "res",
        "next",
        "header",
        "process",
        "env",
        "REACT_APP_SERVER",
        "method",
        "send",
        "authenticate",
        "jwtData",
        "getProfileFromGithub",
        "githubToken",
        "text",
        "Promise",
        "resolve",
        "reject",
        "request",
        "get",
        "then",
        "profileResponse",
        "body",
        "email",
        "login",
        "id",
        "name",
        "company",
        "location",
        "bio",
        "avatar_url",
        "profile",
        "User",
        "findOne",
        "user",
        "emails",
        "emailResponse",
        "map",
        "o",
        "$in",
        "catch",
        "signinWithGithub",
        "params",
        "client_id",
        "GITHUB_CLIENT_ID",
        "client_secret",
        "GITHUB_CLIENT_SECRET",
        "code",
        "query",
        "post",
        "spotterTeam",
        "soalToken",
        "github",
        "toObject",
        "save",
        "console",
        "log",
        "err",
        "status"
      ],
      "mappings": "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",
      "file": "auth.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport request from 'superagent';\nimport { User, USER_ROLES } from '../models/user';\nimport { getSpotterTeam } from './user.controller';\nimport {getSoalToken} from '../util/token';\n\nexport const accessControl = (req, res, next) => {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n\n}\n\nexport const authenticate = (req, res, next) => {\nreq.jwtData={\n\n};\n  \n  next();\n}\n\nconst getProfileFromGithub = ({text: githubToken}) => new Promise((resolve, reject) => {\n\n  request.get('https://api.github.com/user?'+githubToken).then(profileResponse => {\n    const {email, login, id, name, company, location, bio, avatar_url} = profileResponse.body;\n    const profile = {email, login, id, name, company, location, bio, avatar_url};\n\n    User.findOne({email}).then(user => {\n      if(user === null){\n        // User not found. Checking alternate emails!\n        request.get('https://api.github.com/user/emails?'+githubToken).then(emailResponse => {\n          let emails = emailResponse.body.map(o=>o.email);\n          User.findOne({email: {$in: emails}}).then(user=>{\n            if(user === null){\n              reject();\n            } else {\n              // user.emails = emails;\n              resolve({user, profile, githubToken});\n            }\n          })\n          .catch(reject);\n        });\n      } else {\n        resolve({user, profile, githubToken});\n      }\n    })\n    .catch(reject);\n  })\n  .catch(reject);\n\n});\n\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nexport const signinWithGithub = (req, res)=>{\n\n  let params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  request.post('https://github.com/login/oauth/access_token').send(params)\n  .then(getProfileFromGithub)\n  .then(async ({user, profile, githubToken}) => {\n\n    const spotterTeam = await getSpotterTeam(user);\n\n    // User found. Sending a jsonwebtoken to the client!\n    const soalToken = getSoalToken(user, githubToken);\n    if(user.profile && user.profile.github){\n      return res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }\n    // new user signed up\n    user.profile = { ...user.profile, github: profile };\n    // Updating user with the github profile\n    user.save().then(user=>{\n      // Update succeeded\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }).catch(err => {\n      // Update Failed!!!\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}})\n    });\n  }).catch(err => {\n    console.log(err)\n    res.status(404).send('User not found!!!');\n  })\n\n}\n"
      ]
    },
    "mtime": 1559213792755
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "inherits",
        "possibleConstructorReturn",
        "classCallCheck",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "USER_ROLES",
            "User",
            "Student",
            "Educator"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "USER_ROLES",
              "exported": "USER_ROLES"
            },
            {
              "kind": "local",
              "local": "User",
              "exported": "User"
            },
            {
              "kind": "local",
              "local": "Student",
              "exported": "Student"
            },
            {
              "kind": "local",
              "local": "Educator",
              "exported": "Educator"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/user.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Educator = exports.Student = exports.User = exports.USER_ROLES = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Schema = _mongoose2.default.Schema;\nvar USER_ROLES = exports.USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst'\n};\n\nvar User = exports.User = _mongoose2.default.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String\n  },\n\n  // educator specific fields\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" }\n}));\n\n// can only be used for creation logic\n\nvar Student = exports.Student = function (_User) {\n  _inherits(Student, _User);\n\n  function Student(data) {\n    _classCallCheck(this, Student);\n\n    data && (data.role = USER_ROLES.STUDENT);\n    return _possibleConstructorReturn(this, (Student.__proto__ || Object.getPrototypeOf(Student)).call(this, data));\n  }\n\n  return Student;\n}(User);\n\n// can only be used for creation logic\n\n\nvar Educator = exports.Educator = function (_User2) {\n  _inherits(Educator, _User2);\n\n  function Educator(data) {\n    _classCallCheck(this, Educator);\n\n    data && (data.role = USER_ROLES.EDUCATOR);\n    return _possibleConstructorReturn(this, (Educator.__proto__ || Object.getPrototypeOf(Educator)).call(this, data));\n  }\n\n  return Educator;\n}(User);\n\nexports.default = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkNBVEFMWVNUIiwiVXNlciIsIm1vZGVsIiwibmFtZSIsInR5cGUiLCJyZXF1aXJlZCIsInJvbGUiLCJwcm9maWxlIiwiVHlwZXMiLCJNaXhlZCIsImNvaG9ydHMiLCJPYmplY3RJZCIsInJlZiIsImN1cnJlbnRDb2hvcnQiLCJwYXRoIiwiU3RyaW5nIiwic2VjcmV0IiwiZW1haWwiLCJwcm9ncmFtIiwiZGVmYXVsdCIsImxvY2F0aW9uIiwiU3R1ZGVudCIsImRhdGEiLCJFZHVjYXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO0FBRUEsSUFBTUUsa0NBQWE7QUFDeEJDLFdBQVMsU0FEZTtBQUV4QkMsWUFBVSxVQUZjO0FBR3hCQyxjQUFZLFlBSFk7QUFJeEJDLFlBQVU7QUFKYyxDQUFuQjs7QUFPQSxJQUFNQyxzQkFBT04sbUJBQVNPLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlSLE1BQUosQ0FBVztBQUNwRFMsUUFBTTtBQUNKQyxVQUFNLFFBREY7QUFFSkMsY0FBVTtBQUZOLEdBRDhDO0FBS3BEQyxRQUFNO0FBQ0pGLFVBQU07QUFERixHQUw4QztBQVFwREcsV0FBU2IsT0FBT2MsS0FBUCxDQUFhQyxLQVI4Qjs7QUFVcEQ7QUFDQUMsV0FBUSxDQUFDO0FBQ1BOLFVBQU1WLE9BQU9jLEtBQVAsQ0FBYUcsUUFEWjtBQUVQQyxTQUFLO0FBRkUsR0FBRCxDQVg0QztBQWVwREMsaUJBQWU7QUFDYlQsVUFBTVYsT0FBT2MsS0FBUCxDQUFhRyxRQUROO0FBRWJDLFNBQUs7QUFGUSxHQWZxQztBQW1CcERFLFFBQU1DLE1BbkI4QztBQW9CcERDLFVBQVFELE1BcEI0Qzs7QUFzQnBERSxTQUFPO0FBQ0xiLFVBQU1XO0FBREQsR0F0QjZDOztBQTBCcEQ7QUFDQUcsV0FBUyxFQUFDZCxNQUFLVyxNQUFOLEVBQWNJLFNBQVEsbUJBQXRCLEVBM0IyQztBQTRCcERDLFlBQVUsRUFBQ2hCLE1BQUtXLE1BQU4sRUFBY0ksU0FBUSxXQUF0QjtBQTVCMEMsQ0FBWCxDQUF2QixDQUFiOztBQStCUDs7SUFDYUUsTyxXQUFBQSxPOzs7QUFDWCxtQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUNoQkEsYUFBU0EsS0FBS2hCLElBQUwsR0FBWVYsV0FBV0MsT0FBaEM7QUFEZ0IsNkdBRVZ5QixJQUZVO0FBR2pCOzs7RUFKMEJyQixJOztBQU83Qjs7O0lBQ2FzQixRLFdBQUFBLFE7OztBQUNYLG9CQUFZRCxJQUFaLEVBQWtCO0FBQUE7O0FBQ2hCQSxhQUFTQSxLQUFLaEIsSUFBTCxHQUFZVixXQUFXRSxRQUFoQztBQURnQiwrR0FFVndCLElBRlU7QUFHakI7OztFQUoyQnJCLEk7O2tCQU9mQSxJIiwiZmlsZSI6InVzZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuZXhwb3J0IGNvbnN0IFVTRVJfUk9MRVMgPSB7XG4gIFNUVURFTlQ6ICdTdHVkZW50JyxcbiAgRURVQ0FUT1I6ICdFZHVjYXRvcicsXG4gIFNVUEVSQURNSU46ICdTdXBlcmFkbWluJyxcbiAgQ0FUQUxZU1Q6ICdDYXRhbHlzdCcsXG59O1xuXG5leHBvcnQgY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiAnU3RyaW5nJyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICByb2xlOiB7XG4gICAgdHlwZTogJ1N0cmluZydcbiAgfSxcbiAgcHJvZmlsZTogU2NoZW1hLlR5cGVzLk1peGVkLFxuXG4gIC8vIHN0dWRlbnQgc3BlY2lmaWMgZmllbGRzXG4gIGNvaG9ydHM6W3tcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ29ob3J0J1xuICB9XSxcbiAgY3VycmVudENvaG9ydDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdDb2hvcnQnXG4gIH0sXG4gIHBhdGg6IFN0cmluZyxcbiAgc2VjcmV0OiBTdHJpbmcsXG5cbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gIH0sXG5cbiAgLy8gZWR1Y2F0b3Igc3BlY2lmaWMgZmllbGRzXG4gIHByb2dyYW06IHt0eXBlOlN0cmluZywgZGVmYXVsdDpcIkV4cG9uZW50OlNvZnR3YXJlXCJ9LFxuICBsb2NhdGlvbjoge3R5cGU6U3RyaW5nLCBkZWZhdWx0OlwiSHlkZXJhYmFkXCJ9LFxufSkpO1xuXG4vLyBjYW4gb25seSBiZSB1c2VkIGZvciBjcmVhdGlvbiBsb2dpY1xuZXhwb3J0IGNsYXNzIFN0dWRlbnQgZXh0ZW5kcyBVc2VyIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIGRhdGEgJiYgKGRhdGEucm9sZSA9IFVTRVJfUk9MRVMuU1RVREVOVCk7XG4gICAgc3VwZXIoZGF0YSk7XG4gIH1cbn1cblxuLy8gY2FuIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpb24gbG9naWNcbmV4cG9ydCBjbGFzcyBFZHVjYXRvciBleHRlbmRzIFVzZXIge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgZGF0YSAmJiAoZGF0YS5yb2xlID0gVVNFUl9ST0xFUy5FRFVDQVRPUik7XG4gICAgc3VwZXIoZGF0YSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "USER_ROLES",
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "CATALYST",
        "User",
        "model",
        "name",
        "type",
        "required",
        "role",
        "profile",
        "Types",
        "Mixed",
        "cohorts",
        "ObjectId",
        "ref",
        "currentCohort",
        "path",
        "String",
        "secret",
        "email",
        "program",
        "default",
        "location",
        "Student",
        "data",
        "Educator"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;AAEA,IAAME,kCAAa;AACxBC,WAAS,SADe;AAExBC,YAAU,UAFc;AAGxBC,cAAY,YAHY;AAIxBC,YAAU;AAJc,CAAnB;;AAOA,IAAMC,sBAAON,mBAASO,KAAT,CAAe,MAAf,EAAuB,IAAIR,MAAJ,CAAW;AACpDS,QAAM;AACJC,UAAM,QADF;AAEJC,cAAU;AAFN,GAD8C;AAKpDC,QAAM;AACJF,UAAM;AADF,GAL8C;AAQpDG,WAASb,OAAOc,KAAP,CAAaC,KAR8B;;AAUpD;AACAC,WAAQ,CAAC;AACPN,UAAMV,OAAOc,KAAP,CAAaG,QADZ;AAEPC,SAAK;AAFE,GAAD,CAX4C;AAepDC,iBAAe;AACbT,UAAMV,OAAOc,KAAP,CAAaG,QADN;AAEbC,SAAK;AAFQ,GAfqC;AAmBpDE,QAAMC,MAnB8C;AAoBpDC,UAAQD,MApB4C;;AAsBpDE,SAAO;AACLb,UAAMW;AADD,GAtB6C;;AA0BpD;AACAG,WAAS,EAACd,MAAKW,MAAN,EAAcI,SAAQ,mBAAtB,EA3B2C;AA4BpDC,YAAU,EAAChB,MAAKW,MAAN,EAAcI,SAAQ,WAAtB;AA5B0C,CAAX,CAAvB,CAAb;;AA+BP;;IACaE,O,WAAAA,O;;;AACX,mBAAYC,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWC,OAAhC;AADgB,6GAEVyB,IAFU;AAGjB;;;EAJ0BrB,I;;AAO7B;;;IACasB,Q,WAAAA,Q;;;AACX,oBAAYD,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWE,QAAhC;AADgB,+GAEVwB,IAFU;AAGjB;;;EAJ2BrB,I;;kBAOfA,I",
      "file": "user.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport const USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst',\n};\n\nexport const User = mongoose.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts:[{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String,\n  },\n\n  // educator specific fields\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n}));\n\n// can only be used for creation logic\nexport class Student extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.STUDENT);\n    super(data);\n  }\n}\n\n// can only be used for creation logic\nexport class Educator extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.EDUCATOR);\n    super(data);\n  }\n}\n\nexport default User;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/user.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getProfile",
            "getSpotterTeam",
            "populateCurrentUser",
            "updateUser"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getProfile",
              "exported": "getProfile"
            },
            {
              "kind": "local",
              "local": "getSpotterTeam",
              "exported": "getSpotterTeam"
            },
            {
              "kind": "local",
              "local": "populateCurrentUser",
              "exported": "populateCurrentUser"
            },
            {
              "kind": "local",
              "local": "updateUser",
              "exported": "updateUser"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/user.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/user.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.controller.js",
      "sourceFileName": "user.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateUser = exports.populateCurrentUser = exports.getSpotterTeam = exports.getProfile = undefined;\n\nvar _user = require('../models/user');\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _cohort3 = require('../controllers/cohort.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getProfile = exports.getProfile = function getProfile(req, res) {\n  res.json({ data: req.user });\n};\n\nvar getSpotterTeam = exports.getSpotterTeam = function getSpotterTeam(student) {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var cohort, spotterTeam;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(student);\n\n              if (!(student.role !== _user.USER_ROLES.STUDENT)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 3:\n              _context.next = 5;\n              return _cohort2.default.findById(student.currentCohort).exec();\n\n            case 5:\n              cohort = _context.sent;\n              spotterTeam = cohort.spotters.find(function (team) {\n                return team.students.some(function (s) {\n                  return student._id.equals(s);\n                });\n              });\n\n              if (!(spotterTeam == null)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 9:\n              _context.next = 11;\n              return _user.User.find({ _id: { $in: spotterTeam.students } }, 'name profile.github.avatar_url profile.phone').exec();\n\n            case 11:\n              spotterTeam.students = _context.sent;\n\n              resolve(spotterTeam);\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nvar populateCurrentUser = exports.populateCurrentUser = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _user.User.findById(req.jwtData.user).lean().exec();\n\n          case 3:\n            user = _context2.sent;\n            _context2.next = 6;\n            return getSpotterTeam(user);\n\n          case 6:\n            user.spotterTeam = _context2.sent;\n\n            req.user = user;\n            next();\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(404);\n\n          case 14:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function populateCurrentUser(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar updateUser = exports.updateUser = function updateUser(req, res) {\n  var _req$query = req.query,\n      id = _req$query.id,\n      newCohort = _req$query.newCohort,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  var cohortID = void 0;\n  _user.User.findOne({ _id: id }).lean().then(function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(user) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _cohort2.default.find({ name: newCohort, location: city }).lean().exec().then(function (cohorts) {\n                cohorts.map(function (cohort, i) {\n                  var date = cohort.startDate;\n                  if (date.getFullYear().toString() === year) {\n                    cohortID = cohort._id;\n                  }\n                });\n              });\n\n            case 2:\n              console.log('-----', cohortID);\n              user.currentCohort = cohortID;\n              user.cohorts.push(cohortID);\n              _user.User.findByIdAndUpdate(id, { $set: { cohorts: user.cohorts, currentCohort: user.currentCohort } }).then(function () {\n                return res.send();\n              }).catch(function (e) {\n                return res.sendStatus(500).send(e);\n              });\n\n            case 6:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, undefined);\n    }));\n\n    return function (_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }()).catch(function (e) {\n    return res.sendStatus(500).send(e);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRQcm9maWxlIiwicmVxIiwicmVzIiwianNvbiIsImRhdGEiLCJ1c2VyIiwiZ2V0U3BvdHRlclRlYW0iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJzdHVkZW50Iiwicm9sZSIsIlVTRVJfUk9MRVMiLCJTVFVERU5UIiwiQ29ob3J0IiwiZmluZEJ5SWQiLCJjdXJyZW50Q29ob3J0IiwiZXhlYyIsImNvaG9ydCIsInNwb3R0ZXJUZWFtIiwic3BvdHRlcnMiLCJmaW5kIiwidGVhbSIsInN0dWRlbnRzIiwic29tZSIsIl9pZCIsImVxdWFscyIsInMiLCJVc2VyIiwiJGluIiwicG9wdWxhdGVDdXJyZW50VXNlciIsIm5leHQiLCJqd3REYXRhIiwibGVhbiIsInNlbmRTdGF0dXMiLCJ1cGRhdGVVc2VyIiwicXVlcnkiLCJpZCIsIm5ld0NvaG9ydCIsInllYXIiLCJjaXR5IiwiY29ob3J0SUQiLCJmaW5kT25lIiwidGhlbiIsIm5hbWUiLCJsb2NhdGlvbiIsImNvaG9ydHMiLCJtYXAiLCJpIiwiZGF0ZSIsInN0YXJ0RGF0ZSIsImdldEZ1bGxZZWFyIiwidG9TdHJpbmciLCJwdXNoIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCIkc2V0Iiwic2VuZCIsImNhdGNoIiwiZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBQ0E7Ozs7OztBQUNPLElBQU1BLGtDQUFhLFNBQWJBLFVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdENBLE1BQUlDLElBQUosQ0FBUyxFQUFDQyxNQUFNSCxJQUFJSSxJQUFYLEVBQVQ7QUFDRCxDQUZNOztBQUlBLElBQU1DLDBDQUFpQixTQUFqQkEsY0FBaUI7QUFBQSxTQUFXLElBQUlDLE9BQUo7QUFBQSx1RUFBWSxpQkFBT0MsT0FBUCxFQUFnQkMsTUFBaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ25EQyxz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RjhCOztBQUFBO0FBVXBDakIsc0JBQVFDLEdBQVIsVUFBc0JnQyxRQUF0QjtBQUNBdEMsbUJBQUthLGFBQUwsR0FBcUJ5QixRQUFyQjtBQUNBdEMsbUJBQUsyQyxPQUFMLENBQWFPLElBQWIsQ0FBa0JaLFFBQWxCO0FBQ0FiLHlCQUFLMEIsaUJBQUwsQ0FBdUJqQixFQUF2QixFQUEyQixFQUFDa0IsTUFBTyxFQUFDVCxTQUFTM0MsS0FBSzJDLE9BQWYsRUFBd0I5QixlQUFnQmIsS0FBS2EsYUFBN0MsRUFBUixFQUEzQixFQUFpRzJCLElBQWpHLENBQXNHO0FBQUEsdUJBQU0zQyxJQUFJd0QsSUFBSixFQUFOO0FBQUEsZUFBdEcsRUFBd0hDLEtBQXhILENBQThIO0FBQUEsdUJBQUt6RCxJQUFJa0MsVUFBSixDQUFlLEdBQWYsRUFBb0JzQixJQUFwQixDQUF5QkUsQ0FBekIsQ0FBTDtBQUFBLGVBQTlIOztBQWJvQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUF0Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQWVHRCxLQWZILENBZVM7QUFBQSxXQUFLekQsSUFBSWtDLFVBQUosQ0FBZSxHQUFmLEVBQW9Cc0IsSUFBcEIsQ0FBeUJFLENBQXpCLENBQUw7QUFBQSxHQWZUO0FBZ0JELENBbkJNIiwiZmlsZSI6InVzZXIuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtVc2VyLCBVU0VSX1JPTEVTfSBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbmltcG9ydCBDb2hvcnQgZnJvbSAnLi4vbW9kZWxzL2NvaG9ydCc7XG5pbXBvcnQgeyBnZXRDb2hvcnRCeU5hbWUgfSBmcm9tICcuLi9jb250cm9sbGVycy9jb2hvcnQuY29udHJvbGxlcidcbmV4cG9ydCBjb25zdCBnZXRQcm9maWxlID0gKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5qc29uKHtkYXRhOiByZXEudXNlcn0pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0U3BvdHRlclRlYW0gPSBzdHVkZW50ID0+IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+e1xuICBjb25zb2xlLmxvZyhzdHVkZW50KTtcbiAgaWYoc3R1ZGVudC5yb2xlICE9PSBVU0VSX1JPTEVTLlNUVURFTlQpIHtcbiAgICAvLyBTcG90dGVycyBhcmUgaW1wbGVtZW50ZWQgb25seSBmb3Igc3R1ZGVudHNcbiAgICByZXR1cm4gcmVzb2x2ZShudWxsKTtcbiAgfVxuICBsZXQgY29ob3J0ID0gYXdhaXQgQ29ob3J0LmZpbmRCeUlkKHN0dWRlbnQuY3VycmVudENvaG9ydCkuZXhlYygpO1xuICBsZXQgc3BvdHRlclRlYW0gPSBjb2hvcnQuc3BvdHRlcnMuZmluZCh0ZWFtID0+IHtcbiAgICByZXR1cm4gdGVhbS5zdHVkZW50cy5zb21lKHMgPT4gc3R1ZGVudC5faWQuZXF1YWxzKHMpKTtcbiAgfSk7XG4gIGlmKHNwb3R0ZXJUZWFtID09IG51bGwpIHtcbiAgICByZXR1cm4gcmVzb2x2ZShudWxsKTtcbiAgfVxuICBzcG90dGVyVGVhbS5zdHVkZW50cyA9IGF3YWl0IFVzZXIuZmluZCh7X2lkOiB7JGluOiBzcG90dGVyVGVhbS5zdHVkZW50c319LCAnbmFtZSBwcm9maWxlLmdpdGh1Yi5hdmF0YXJfdXJsIHByb2ZpbGUucGhvbmUnKS5leGVjKCk7XG4gIHJlc29sdmUoc3BvdHRlclRlYW0pO1xufSk7XG5cbmV4cG9ydCBjb25zdCBwb3B1bGF0ZUN1cnJlbnRVc2VyID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQocmVxLmp3dERhdGEudXNlcikubGVhbigpLmV4ZWMoKTtcbiAgICB1c2VyLnNwb3R0ZXJUZWFtID0gYXdhaXQgZ2V0U3BvdHRlclRlYW0odXNlcik7XG4gICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgIG5leHQoKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzLnNlbmRTdGF0dXMoNDA0KTtcbiAgfVxufVxuXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVVc2VyID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHtpZCwgbmV3Q29ob3J0LCB5ZWFyLCBjaXR5fSA9IHJlcS5xdWVyeVxuICBsZXQgY29ob3J0SURcbiAgVXNlci5maW5kT25lKHtfaWQgOiBpZH0pLmxlYW4oKS50aGVuKCBhc3luYyAodXNlcikgPT4ge1xuXG4gICAgYXdhaXQgQ29ob3J0LmZpbmQoe25hbWUgOiBuZXdDb2hvcnQsIGxvY2F0aW9uIDogY2l0eX0pLmxlYW4oKS5leGVjKCkudGhlbiggY29ob3J0cyA9PiB7XG4gICAgICBjb2hvcnRzLm1hcCggKGNvaG9ydCwgaSkgPT4ge1xuICAgICAgICBsZXQgZGF0ZSA9IGNvaG9ydC5zdGFydERhdGU7XG4gICAgICAgIGlmIChkYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKT09PXllYXIpe1xuICAgICAgICAgIGNvaG9ydElEID0gY29ob3J0Ll9pZFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gICAgY29uc29sZS5sb2cgKGAtLS0tLWAsIGNvaG9ydElEKVxuICAgIHVzZXIuY3VycmVudENvaG9ydCA9IGNvaG9ydElEXG4gICAgdXNlci5jb2hvcnRzLnB1c2goY29ob3J0SUQpXG4gICAgVXNlci5maW5kQnlJZEFuZFVwZGF0ZShpZCwgeyRzZXQgOiB7Y29ob3J0czogdXNlci5jb2hvcnRzLCBjdXJyZW50Q29ob3J0IDogdXNlci5jdXJyZW50Q29ob3J0fX0pLnRoZW4oKCkgPT4gcmVzLnNlbmQoKSkuY2F0Y2goZSA9PiByZXMuc2VuZFN0YXR1cyg1MDApLnNlbmQoZSkpXG4gICAgXG4gIH0pLmNhdGNoKGUgPT4gcmVzLnNlbmRTdGF0dXMoNTAwKS5zZW5kKGUpKVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "json",
        "data",
        "user",
        "getSpotterTeam",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "student",
        "role",
        "USER_ROLES",
        "STUDENT",
        "Cohort",
        "findById",
        "currentCohort",
        "exec",
        "cohort",
        "spotterTeam",
        "spotters",
        "find",
        "team",
        "students",
        "some",
        "_id",
        "equals",
        "s",
        "User",
        "$in",
        "populateCurrentUser",
        "next",
        "jwtData",
        "lean",
        "sendStatus",
        "updateUser",
        "query",
        "id",
        "newCohort",
        "year",
        "city",
        "cohortID",
        "findOne",
        "then",
        "name",
        "location",
        "cohorts",
        "map",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "push",
        "findByIdAndUpdate",
        "$set",
        "send",
        "catch",
        "e"
      ],
      "mappings": "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",
      "file": "user.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import {User, USER_ROLES} from '../models/user';\n\nimport Cohort from '../models/cohort';\nimport { getCohortByName } from '../controllers/cohort.controller'\nexport const getProfile = (req, res) => {\n  res.json({data: req.user});\n}\n\nexport const getSpotterTeam = student => new Promise(async (resolve, reject) =>{\n  console.log(student);\n  if(student.role !== USER_ROLES.STUDENT) {\n    // Spotters are implemented only for students\n    return resolve(null);\n  }\n  let cohort = await Cohort.findById(student.currentCohort).exec();\n  let spotterTeam = cohort.spotters.find(team => {\n    return team.students.some(s => student._id.equals(s));\n  });\n  if(spotterTeam == null) {\n    return resolve(null);\n  }\n  spotterTeam.students = await User.find({_id: {$in: spotterTeam.students}}, 'name profile.github.avatar_url profile.phone').exec();\n  resolve(spotterTeam);\n});\n\nexport const populateCurrentUser = async (req, res, next) => {\n  try {\n    const user = await User.findById(req.jwtData.user).lean().exec();\n    user.spotterTeam = await getSpotterTeam(user);\n    req.user = user;\n    next();\n  } catch (err) {\n    res.sendStatus(404);\n  }\n}\n\n\nexport const updateUser = (req, res) => {\n  const {id, newCohort, year, city} = req.query\n  let cohortID\n  User.findOne({_id : id}).lean().then( async (user) => {\n\n    await Cohort.find({name : newCohort, location : city}).lean().exec().then( cohorts => {\n      cohorts.map( (cohort, i) => {\n        let date = cohort.startDate;\n        if (date.getFullYear().toString()===year){\n          cohortID = cohort._id\n        }\n      })\n    })\n    console.log (`-----`, cohortID)\n    user.currentCohort = cohortID\n    user.cohorts.push(cohortID)\n    User.findByIdAndUpdate(id, {$set : {cohorts: user.cohorts, currentCohort : user.currentCohort}}).then(() => res.send()).catch(e => res.sendStatus(500).send(e))\n    \n  }).catch(e => res.sendStatus(500).send(e))\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/cohort.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/cohort.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/cohort.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.js",
      "sourceFileName": "cohort.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Cohort', new Schema({\n  startDate: { type: Date, required: true },\n  endDate: Date,\n  name: String,\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" },\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }]\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwic3RhcnREYXRlIiwidHlwZSIsIkRhdGUiLCJyZXF1aXJlZCIsImVuZERhdGUiLCJuYW1lIiwiU3RyaW5nIiwicHJvZ3JhbSIsImRlZmF1bHQiLCJsb2NhdGlvbiIsInNwb3R0ZXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUYsTUFBSixDQUFXO0FBQ2pERyxhQUFXLEVBQUNDLE1BQUtDLElBQU4sRUFBWUMsVUFBUyxJQUFyQixFQURzQztBQUVqREMsV0FBU0YsSUFGd0M7QUFHakRHLFFBQU1DLE1BSDJDO0FBSWpEQyxXQUFTLEVBQUNOLE1BQUtLLE1BQU4sRUFBY0UsU0FBUSxtQkFBdEIsRUFKd0M7QUFLakRDLFlBQVUsRUFBQ1IsTUFBS0ssTUFBTixFQUFjRSxTQUFRLFdBQXRCLEVBTHVDO0FBTWpERSxZQUFVLENBQUM7QUFDVEMsY0FBVUwsTUFERDtBQUVUTSxjQUFVLENBQUM7QUFDVFgsWUFBTUosT0FBT2dCLEtBQVAsQ0FBYUMsUUFEVjtBQUVUQyxXQUFLO0FBRkksS0FBRDtBQUZELEdBQUQ7QUFOdUMsQ0FBWCxDQUF6QixDIiwiZmlsZSI6ImNvaG9ydC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCB7U2NoZW1hfSA9IG1vbmdvb3NlO1xuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnQ29ob3J0JywgbmV3IFNjaGVtYSh7XG4gIHN0YXJ0RGF0ZToge3R5cGU6RGF0ZSwgcmVxdWlyZWQ6dHJ1ZX0sXG4gIGVuZERhdGU6IERhdGUsXG4gIG5hbWU6IFN0cmluZyxcbiAgcHJvZ3JhbToge3R5cGU6U3RyaW5nLCBkZWZhdWx0OlwiRXhwb25lbnQ6U29mdHdhcmVcIn0sXG4gIGxvY2F0aW9uOiB7dHlwZTpTdHJpbmcsIGRlZmF1bHQ6XCJIeWRlcmFiYWRcIn0sXG4gIHNwb3R0ZXJzOiBbe1xuICAgIHRlYW1OYW1lOiBTdHJpbmcsXG4gICAgc3R1ZGVudHM6IFt7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH1dLFxuICB9XSxcbn0pKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "startDate",
        "type",
        "Date",
        "required",
        "endDate",
        "name",
        "String",
        "program",
        "default",
        "location",
        "spotters",
        "teamName",
        "students",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,QAAf,EAAyB,IAAIF,MAAJ,CAAW;AACjDG,aAAW,EAACC,MAAKC,IAAN,EAAYC,UAAS,IAArB,EADsC;AAEjDC,WAASF,IAFwC;AAGjDG,QAAMC,MAH2C;AAIjDC,WAAS,EAACN,MAAKK,MAAN,EAAcE,SAAQ,mBAAtB,EAJwC;AAKjDC,YAAU,EAACR,MAAKK,MAAN,EAAcE,SAAQ,WAAtB,EALuC;AAMjDE,YAAU,CAAC;AACTC,cAAUL,MADD;AAETM,cAAU,CAAC;AACTX,YAAMJ,OAAOgB,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFD,GAAD;AANuC,CAAX,CAAzB,C",
      "file": "cohort.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Cohort', new Schema({\n  startDate: {type:Date, required:true},\n  endDate: Date,\n  name: String,\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n}));\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/cohort.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getCohortStudents"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortStudents",
                "local": "getCohortStudents"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "resetCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetCohortDays",
                "local": "resetCohortDays"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohorts",
            "getCohortByName",
            "getCohort",
            "createCohort",
            "updateCohort",
            "deleteCohort",
            "createSpotters",
            "populateCurrentCohorts",
            "resetSpotters"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohorts",
              "exported": "getCohorts"
            },
            {
              "kind": "local",
              "local": "getCohortByName",
              "exported": "getCohortByName"
            },
            {
              "kind": "local",
              "local": "getCohort",
              "exported": "getCohort"
            },
            {
              "kind": "local",
              "local": "createCohort",
              "exported": "createCohort"
            },
            {
              "kind": "local",
              "local": "updateCohort",
              "exported": "updateCohort"
            },
            {
              "kind": "local",
              "local": "deleteCohort",
              "exported": "deleteCohort"
            },
            {
              "kind": "local",
              "local": "createSpotters",
              "exported": "createSpotters"
            },
            {
              "kind": "local",
              "local": "populateCurrentCohorts",
              "exported": "populateCurrentCohorts"
            },
            {
              "kind": "local",
              "local": "resetSpotters",
              "exported": "resetSpotters"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/cohort.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/cohort.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.controller.js",
      "sourceFileName": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetSpotters = exports.populateCurrentCohorts = exports.createSpotters = exports.deleteCohort = exports.updateCohort = exports.createCohort = exports.getCohort = exports.getCohortByName = exports.getCohorts = undefined;\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _student = require('../controllers/student.controller');\n\nvar _day = require('../controllers/day.controller');\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getCohorts = exports.getCohorts = function getCohorts(req, res) {\n  _cohort2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortByName = exports.getCohortByName = function getCohortByName(req, res) {\n  var _req$query = req.query,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  _cohort2.default.find({ name: req.params.cohortName, location: city }).lean().exec().then(function (cohorts) {\n    cohorts.map(function (cohort, i) {\n      var date = cohort.startDate;\n      if (date.getFullYear().toString() === year) {\n        (0, _student.getCohortStudents)(cohort).then(function (students) {\n          cohort.students = students;\n          res.json({ cohort: cohort });\n        });\n      }\n    });\n  }).catch(function (e) {\n    return res.status(500).send(e);\n  });\n};\n\nvar getCohort = exports.getCohort = function getCohort(req, res) {\n  _cohort2.default.findById(req.params.id).lean().exec().then(function (cohort) {\n    (0, _student.getCohortStudents)(cohort).then(function (students) {\n      cohort.students = students;\n      res.json({ cohort: cohort });\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createCohort = exports.createCohort = function createCohort(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      location = _req$body.location,\n      program = _req$body.program,\n      startDate = _req$body.startDate,\n      endDate = _req$body.endDate;\n\n  startDate = new Date(+startDate);\n  new _cohort2.default({ name: name, location: location, program: program, startDate: startDate, endDate: endDate }).save().then(function (data) {\n    (0, _day.resetCohortDays)(data).catch(function (e) {\n      \"Errored out in create all days\" + e;\n    }).then(function () {\n      return res.status(201).json({ data: data });\n    });\n  }).catch(function (err) {\n    return res.status(500).send({ err: err });\n  });\n};\n\nvar updateCohort = exports.updateCohort = function updateCohort(req, res) {\n  var _req$body2 = req.body,\n      location = _req$body2.location,\n      program = _req$body2.program,\n      startDate = _req$body2.startDate;\n\n  _cohort2.default.findByIdAndUpdate(req.params.id, { location: location, program: program, startDate: startDate }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteCohort = exports.deleteCohort = function deleteCohort(req, res) {\n  _cohort2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createSpotters = exports.createSpotters = function createSpotters(cohort) {\n  return (0, _student.getCohortStudents)(cohort).then(function (students) {\n    students = students.map(function (s) {\n      return s._id;\n    });\n    var p = (0, _createChunks2.default)(students, 3);\n\n    for (var i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i - 1].students = p[i].students.concat(p[i - 1].students);\n        p.pop();\n      }\n    }\n    cohort.spotters = p;\n    return cohort.save();\n  });\n};\n\nvar populateCurrentCohorts = exports.populateCurrentCohorts = function populateCurrentCohorts() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return _cohort2.default.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  }).then(function (cohorts) {\n    //console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\");\n    var p = [];\n    for (var i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]));\n    }\n    return Promise.all(p);\n  }).catch(function (e) {\n    return console.log(\"Errored out in populateCurrentCohorts\" + e);\n  });\n};\n\nvar resetSpotters = exports.resetSpotters = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n\n            _cohort2.default.findById(req.params.cohort_id).then(function (cohort) {\n              return createSpotters(cohort);\n            }).then(function (cohort) {\n              res.send(cohort);\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function resetSpotters(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.controller.js"
      ],
      "names": [
        "getCohorts",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getCohortByName",
        "query",
        "year",
        "city",
        "name",
        "params",
        "cohortName",
        "location",
        "lean",
        "cohorts",
        "map",
        "cohort",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "students",
        "e",
        "getCohort",
        "findById",
        "id",
        "createCohort",
        "body",
        "program",
        "endDate",
        "Date",
        "save",
        "updateCohort",
        "findByIdAndUpdate",
        "deleteCohort",
        "remove",
        "createSpotters",
        "s",
        "_id",
        "p",
        "length",
        "concat",
        "pop",
        "spotters",
        "populateCurrentCohorts",
        "today",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "console",
        "log",
        "push",
        "Promise",
        "all",
        "resetSpotters",
        "cohort_id",
        "sendStatus"
      ],
      "mappings": "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",
      "file": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/cohort';\nimport {getCohortStudents} from '../controllers/student.controller';\nimport {resetCohortDays} from '../controllers/day.controller'\nimport createChunks from \"../util/createChunks\"\n\nexport const getCohorts = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortByName = (req, res) => {\n  let {year, city} = req.query\n  Resource.find({name : req.params.cohortName, location : city}).lean().exec().then( cohorts => {\n    cohorts.map( (cohort, i) => {\n      let date = cohort.startDate;\n      if (date.getFullYear().toString()===year){\n        getCohortStudents(cohort)\n        .then(students => {\n           cohort.students = students;\n          res.json({cohort})\n        })\n      }\n    })\n  }).catch(e => res.status(500).send(e))\n\n}\n\nexport const getCohort = (req, res) => {\n  Resource.findById(req.params.id).lean().exec()\n  .then(cohort => {\n    getCohortStudents(cohort)\n    .then(students => {\n      cohort.students = students;\n      res.json({cohort: cohort})\n    })\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createCohort = (req, res) => {\n  let {name, location, program, startDate, endDate} = req.body;\n  startDate = new Date(+startDate)\n  new Resource({name, location, program, startDate, endDate}).save()\n  .then(data => {\n    resetCohortDays(data).catch(e => {\"Errored out in create all days\" + e})\n  .then(() =>\n    res.status(201).json({data})\n    )\n  })\n  .catch(err => res.status(500).send({err}));\n}\n\nexport const updateCohort = (req, res) => {\n  const {location, program, startDate} = req.body;\n  Resource.findByIdAndUpdate(req.params.id, {location, program, startDate})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteCohort = (req, res) => {\n  Resource.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createSpotters = (cohort) => {\n  return getCohortStudents(cohort).then((students) => {\n    students = students.map(s => s._id)\n    let p = createChunks(students, 3)\n\n    for (let i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i-1].students = p[i].students.concat(p[i - 1].students)\n        p.pop()\n      }\n    }\n    cohort.spotters = p\n    return cohort.save()\n    })\n  }\n\nexport const populateCurrentCohorts = () =>{\n  let today = new Date()\n  let tonight = new Date()\n\n  today.setHours(0)\n  today.setMinutes(0)\n  today.setSeconds(0)\n\n  tonight.setHours(23)\n  tonight.setMinutes(59)\n  tonight.setSeconds(59)\n\n  return Resource.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  })\n  .then( cohorts => {//console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\")\n    let p =[]\n    for (let i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]))\n    }\n    return Promise.all(p)\n  })\n  .catch(e => console.log(\"Errored out in populateCurrentCohorts\" + e))\n\n} \n\nexport const resetSpotters = async (req, res) => {\n\n  Resource.findById(req.params.cohort_id)\n  .then(cohort => createSpotters(cohort))\n  .then(cohort => {\n    res.send(cohort);\n  })\n  .catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/student.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohortStudents",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohortStudents",
              "exported": "getCohortStudents"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/student.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/student.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.controller.js",
      "sourceFileName": "student.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getCohortStudents = undefined;\n\nvar _user = require('../models/user');\n\nvar getCohortStudents = exports.getCohortStudents = function getCohortStudents(cohort) {\n  return _user.Student.find({\n    currentCohort: cohort._id,\n    role: _user.USER_ROLES.STUDENT\n  }).exec();\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user.Student.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user.Student.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role,\n      cohorts = _req$body.cohorts,\n      currentCohort = _req$body.currentCohort;\n\n  new _user.Student({ name: name, email: email, profile: profile, role: role, cohorts: cohorts, currentCohort: currentCohort }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _user.Student.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user.Student.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRDb2hvcnRTdHVkZW50cyIsIlN0dWRlbnQiLCJmaW5kIiwiY3VycmVudENvaG9ydCIsImNvaG9ydCIsIl9pZCIsInJvbGUiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsImV4ZWMiLCJnZXRBbGwiLCJyZXEiLCJyZXMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiYm9keSIsIm5hbWUiLCJlbWFpbCIsInByb2ZpbGUiLCJjb2hvcnRzIiwic2F2ZSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFTyxJQUFNQSxnREFBb0IsU0FBcEJBLGlCQUFvQjtBQUFBLFNBQVVDLGNBQVFDLElBQVIsQ0FBYTtBQUN0REMsbUJBQWVDLE9BQU9DLEdBRGdDO0FBRXREQyxVQUFNQyxpQkFBV0M7QUFGcUMsR0FBYixFQUd4Q0MsSUFId0MsRUFBVjtBQUFBLENBQTFCOztBQUtBLElBQU1DLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENYLGdCQUFRQyxJQUFSLEdBQWVPLElBQWYsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBUUQsSUFBSUUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDWCxnQkFBUW9CLFFBQVIsQ0FBaUJWLElBQUlXLE1BQUosQ0FBV0MsRUFBNUIsRUFBZ0NkLElBQWhDLEdBQ0NJLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLGtCQUMyQkQsSUFBSWMsSUFEL0I7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEtBRHFCLGFBQ3JCQSxLQURxQjtBQUFBLE1BQ2RDLE9BRGMsYUFDZEEsT0FEYztBQUFBLE1BQ0x0QixJQURLLGFBQ0xBLElBREs7QUFBQSxNQUNDdUIsT0FERCxhQUNDQSxPQUREO0FBQUEsTUFDVTFCLGFBRFYsYUFDVUEsYUFEVjs7QUFFbEMsTUFBSUYsYUFBSixDQUFZLEVBQUN5QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUE2QnVCLGdCQUE3QixFQUFzQzFCLDRCQUF0QyxFQUFaLEVBQWtFMkIsSUFBbEUsR0FDQ2pCLElBREQsQ0FDTSxnQkFBUTtBQUNaa0IsWUFBUUMsR0FBUixDQUFZLEVBQUNqQixVQUFELEVBQVo7QUFDQUgsUUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCLEVBQUNDLFVBQUQsRUFBckI7QUFBNkIsR0FIL0IsRUFJQ0MsS0FKRCxDQUlPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FKUDtBQUtELENBUE07O0FBU0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDdEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEMsTUFBTUcsT0FBT0osSUFBSWMsSUFBakI7QUFDQTtBQUNBeEIsZ0JBQVFpQyxpQkFBUixDQUEwQnZCLElBQUlXLE1BQUosQ0FBV0MsRUFBckMsRUFBeUNSLElBQXpDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWmUsWUFBUUMsR0FBUixDQUFZYixHQUFaO0FBQ0FQLFFBQUlLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsR0FBckI7QUFBMEIsR0FKNUI7QUFLRCxDQVJNOztBQVVBLElBQU1nQixnQ0FBWSxTQUFaQSxTQUFZLENBQUN4QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNyQ1gsZ0JBQVFtQyxNQUFSLENBQWUsRUFBQy9CLEtBQUlNLElBQUlXLE1BQUosQ0FBV0MsRUFBaEIsRUFBZixFQUFvQ2QsSUFBcEMsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBTUQsSUFBSXlCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNyQixLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJzdHVkZW50LmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U3R1ZGVudCwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG5leHBvcnQgY29uc3QgZ2V0Q29ob3J0U3R1ZGVudHMgPSBjb2hvcnQgPT4gU3R1ZGVudC5maW5kKHtcbiAgY3VycmVudENvaG9ydDogY29ob3J0Ll9pZCxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5UXG59KS5leGVjKCk7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgU3R1ZGVudC5maW5kKCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldE9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBTdHVkZW50LmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge25hbWUsIGVtYWlsLCBwcm9maWxlLCByb2xlLCBjb2hvcnRzLCBjdXJyZW50Q29ob3J0fSA9IHJlcS5ib2R5O1xuICBuZXcgU3R1ZGVudCh7bmFtZSwgZW1haWwsIHByb2ZpbGUsIHJvbGUsIGNvaG9ydHMsIGN1cnJlbnRDb2hvcnR9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiB7XG4gICAgY29uc29sZS5sb2coe2RhdGF9KTtcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pfSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBkYXRhID0gcmVxLmJvZHk7XG4gIC8vIHRvZG86IGNoZWNrIGlmIHRoZSBjdXJyZW50Q29ob3J0IGlzIHZhbGlkIGFuZCB0aGVuIGNvbnRpbnVlXG4gIFN0dWRlbnQuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgZGF0YSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBTdHVkZW50LnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSkgIFxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.controller.js"
      ],
      "names": [
        "getCohortStudents",
        "Student",
        "find",
        "currentCohort",
        "cohort",
        "_id",
        "role",
        "USER_ROLES",
        "STUDENT",
        "exec",
        "getAll",
        "req",
        "res",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "name",
        "email",
        "profile",
        "cohorts",
        "save",
        "console",
        "log",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,IAAMA,gDAAoB,SAApBA,iBAAoB;AAAA,SAAUC,cAAQC,IAAR,CAAa;AACtDC,mBAAeC,OAAOC,GADgC;AAEtDC,UAAMC,iBAAWC;AAFqC,GAAb,EAGxCC,IAHwC,EAAV;AAAA,CAA1B;;AAKA,IAAMC,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQC,IAAR,GAAeO,IAAf,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACT,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQoB,QAAR,CAAiBV,IAAIW,MAAJ,CAAWC,EAA5B,EAAgCd,IAAhC,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACb,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC2BD,IAAIc,IAD/B;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,KADqB,aACrBA,KADqB;AAAA,MACdC,OADc,aACdA,OADc;AAAA,MACLtB,IADK,aACLA,IADK;AAAA,MACCuB,OADD,aACCA,OADD;AAAA,MACU1B,aADV,aACUA,aADV;;AAElC,MAAIF,aAAJ,CAAY,EAACyB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAA6BuB,gBAA7B,EAAsC1B,4BAAtC,EAAZ,EAAkE2B,IAAlE,GACCjB,IADD,CACM,gBAAQ;AACZkB,YAAQC,GAAR,CAAY,EAACjB,UAAD,EAAZ;AACAH,QAAIK,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB;AAA6B,GAH/B,EAICC,KAJD,CAIO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAJP;AAKD,CAPM;;AASA,IAAMc,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAMG,OAAOJ,IAAIc,IAAjB;AACA;AACAxB,gBAAQiC,iBAAR,CAA0BvB,IAAIW,MAAJ,CAAWC,EAArC,EAAyCR,IAAzC,EACCF,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZe,YAAQC,GAAR,CAAYb,GAAZ;AACAP,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMgB,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCX,gBAAQmC,MAAR,CAAe,EAAC/B,KAAIM,IAAIW,MAAJ,CAAWC,EAAhB,EAAf,EAAoCd,IAApC,GACCI,IADD,CACM;AAAA,WAAMD,IAAIyB,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "student.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import {Student, USER_ROLES} from '../models/user';\n\nexport const getCohortStudents = cohort => Student.find({\n  currentCohort: cohort._id,\n  role: USER_ROLES.STUDENT\n}).exec();\n\nexport const getAll = (req, res) => {\n  Student.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Student.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {name, email, profile, role, cohorts, currentCohort} = req.body;\n  new Student({name, email, profile, role, cohorts, currentCohort}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Student.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Student.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/day.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "slicedToArray",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "dayDetails",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "getCohortDays",
            "getCurrentDays",
            "getToday",
            "createDayPairs",
            "createCohortDays",
            "resetCohortDays",
            "addPromptToTimeline",
            "addContentToDay",
            "removePromptFromTimeline",
            "resetPairs",
            "resetDay"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "dayDetails",
              "exported": "dayDetails"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "getCohortDays",
              "exported": "getCohortDays"
            },
            {
              "kind": "local",
              "local": "getCurrentDays",
              "exported": "getCurrentDays"
            },
            {
              "kind": "local",
              "local": "getToday",
              "exported": "getToday"
            },
            {
              "kind": "local",
              "local": "createDayPairs",
              "exported": "createDayPairs"
            },
            {
              "kind": "local",
              "local": "createCohortDays",
              "exported": "createCohortDays"
            },
            {
              "kind": "local",
              "local": "resetCohortDays",
              "exported": "resetCohortDays"
            },
            {
              "kind": "local",
              "local": "addPromptToTimeline",
              "exported": "addPromptToTimeline"
            },
            {
              "kind": "local",
              "local": "addContentToDay",
              "exported": "addContentToDay"
            },
            {
              "kind": "local",
              "local": "removePromptFromTimeline",
              "exported": "removePromptFromTimeline"
            },
            {
              "kind": "local",
              "local": "resetPairs",
              "exported": "resetPairs"
            },
            {
              "kind": "local",
              "local": "resetDay",
              "exported": "resetDay"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/day.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/day.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.controller.js",
      "sourceFileName": "day.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetDay = exports.resetPairs = exports.removePromptFromTimeline = exports.addContentToDay = exports.addPromptToTimeline = exports.resetCohortDays = exports.createCohortDays = exports.createDayPairs = exports.getToday = exports.getCurrentDays = exports.getCohortDays = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.dayDetails = exports.getAll = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _day2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar dayDetails = exports.dayDetails = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var dayNumber, cohortID;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dayNumber = req.params.dayNumber;\n            cohortID = req.query.cohortID;\n\n            _day2.default.find({ day: dayNumber, cohort: cohortID }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (day) {\n              res.json({ day: day });\n            }).catch(function (e) {\n              return res.status(500).send(e);\n            });\n\n          case 3:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function dayDetails(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _day2.default.findById(req.params.day_id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var data = req.body.data;\n\n  new _day2.default({ data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var phase = req.body.phase;\n\n  _day2.default.findByIdAndUpdate(req.params.day_id, phase).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _day2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortDays = exports.getCohortDays = function getCohortDays(req, res) {\n  _day2.default.find({ cohort: req.params.cohort_id }).populate({\n    path: 'timeline.prompt',\n    populate: { path: 'pings' }\n  }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar todayFilter = function todayFilter() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n};\n\nvar getCurrentDays = exports.getCurrentDays = function getCurrentDays() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _day2.default.find(_extends({}, filter, {\n    date: todayFilter()\n  })).exec();\n};\n\nvar getToday = exports.getToday = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$user, userId, cohort, date, day;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$user = req.user, userId = _req$user._id, cohort = _req$user.currentCohort;\n            date = todayFilter();\n            _context2.next = 5;\n            return _day2.default.findOne({ cohort: cohort, date: date }).populate('timeline.prompt').populate('pingpongs.to').populate('pingpongs.ping').populate('pairs.students').exec();\n\n          case 5:\n            day = _context2.sent;\n\n            // important: ObjectId is not string\n            day.pingpongs = day.pingpongs.filter(function (pp) {\n              return pp.by.equals(userId);\n            });\n            day.timeline = day.timeline.map(function (tl) {\n              var startTime = tl.startTime;\n              startTime.setDate(day.date.getDate());\n              startTime.setFullYear(day.date.getFullYear());\n              startTime.setMonth(day.date.getMonth());\n              return {\n                _id: tl._id,\n                prompt: tl.prompt,\n                startTime: startTime\n              };\n            });\n            res.send({ data: day });\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            console.log(\"Day not found\", _context2.t0);\n            res.sendStatus(404);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function getToday(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar createDayPairs = exports.createDayPairs = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(day) {\n    var students, p, i, _p;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _user2.default.find({\n              'currentCohort': day.cohort\n            }).exec();\n\n          case 2:\n            students = _context3.sent;\n\n            if (!day.data.find(function (x) {\n              return x.type == \"Milestone\";\n            })) {\n              _context3.next = 10;\n              break;\n            }\n\n            // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n            // students = students.map(s => s._id)\n            p = (0, _createChunks2.default)(students, 3);\n\n            for (i = 0; i < p.length; i++) {\n              if (p[i].students.length <= 1) {\n                p[i - 1].students = p[i].students.concat(p[i - 1].students);\n                p.pop();\n              }\n            }\n            day.pairs = p;\n            return _context3.abrupt('return', day);\n\n          case 10:\n\n            // students = students.map(s => s._id)\n            _p = (0, _createChunks2.default)(students, 2);\n\n            day.pairs = _p;\n            // day.save()\n            console.log(\"DAY PAIRS\");\n            return _context3.abrupt('return', day);\n\n          case 14:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  }));\n\n  return function createDayPairs(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getPhase = function getPhase(i) {\n  if (i < 10) return 'Week 0';\n  if (i < 39) return 'Core';\n  if (i < 67) return 'Focus';\n  if (i < 81) return 'Deep Focus';\n  if (i < 95) return 'Capstone Product';\n  return 'Career';\n};\n\nvar createDays = function createDays(cohortId, cohortStartDate, fromDay, count) {\n  count = +count;\n  var dayDate = new Date(cohortStartDate.getTime());\n  var allDays = [];\n  for (var i = fromDay; i < fromDay + count; i++) {\n\n    var dDate = new Date(dayDate.getTime());\n    dDate.setDate(dDate.getDate() + i);\n\n    var ms = dDate.getTime();\n    dDate.setHours(0);\n    dDate.setMinutes(1);\n\n    var day = new _day2.default({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline: []\n    }).save();\n    allDays.push(day);\n  }\n\n  return Promise.all(allDays);\n};\n\nvar createCohortDays = exports.createCohortDays = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _ref5, _ref6, latestDay, cohort, nextDay, days;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _day2.default.find({ cohort: req.params.cohort_id }).sort({ day: -1 }).limit(1);\n\n          case 3:\n            _ref5 = _context4.sent;\n            _ref6 = _slicedToArray(_ref5, 1);\n            latestDay = _ref6[0];\n            _context4.next = 8;\n            return _cohort2.default.findOne({ _id: req.params.cohort_id });\n\n          case 8:\n            cohort = _context4.sent;\n            nextDay = latestDay === null ? 1 : 1 + latestDay.day;\n            _context4.next = 12;\n            return createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n\n          case 12:\n            days = _context4.sent;\n\n            res.send(days);\n            _context4.next = 20;\n            break;\n\n          case 16:\n            _context4.prev = 16;\n            _context4.t0 = _context4['catch'](0);\n\n            console.error(_context4.t0);\n            res.sendStatus(404);\n\n          case 20:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined, [[0, 16]]);\n  }));\n\n  return function createCohortDays(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar resetCohortDays = exports.resetCohortDays = function resetCohortDays(_ref7) {\n  var _id = _ref7._id,\n      startDate = _ref7.startDate;\n\n  return createDays(_id, startDate, 1, 108);\n};\n\nvar addPromptToTimeline = exports.addPromptToTimeline = function addPromptToTimeline(req, res) {\n  var _req$body = req.body,\n      startTime = _req$body.startTime,\n      prompt = _req$body.prompt;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $push: { \"timeline\": { startTime: startTime, prompt: prompt } }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).populate({\n      path: 'timeline.prompt',\n      populate: { path: 'pings' }\n    }).populate('pairs.students').exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar addContentToDay = exports.addContentToDay = function addContentToDay(req, res) {\n  var data = req.body;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $set: { 'data': data }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar removePromptFromTimeline = exports.removePromptFromTimeline = function removePromptFromTimeline(req, res) {\n  var _req$params = req.params,\n      day_id = _req$params.day_id,\n      timeline_id = _req$params.timeline_id;\n\n  _day2.default.update({ '_id': day_id, 'timeline._id': timeline_id }, { $pull: { 'timeline': { _id: timeline_id } } }).then(function (data) {\n    res.json({ data: data });\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n};\n\nvar resetPairs = exports.resetPairs = function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _day2.default.findById(req.params.day_id).populate('pairs.students').exec();\n\n          case 3:\n            day = _context5.sent;\n            _context5.next = 6;\n            return createDayPairs(day);\n\n          case 6:\n            day = _context5.sent;\n\n            day.save();\n            data = day.pairs;\n\n            res.send({ data: data });\n            _context5.next = 15;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined, [[0, 12]]);\n  }));\n\n  return function resetPairs(_x9, _x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar resetDay = exports.resetDay = function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var replicate, day;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            replicate = req.body.replicate;\n            _context6.next = 3;\n            return _day2.default.findById(replicate);\n\n          case 3:\n            day = _context6.sent;\n\n            _day2.default.findByIdAndUpdate(req.params.day_id, { $set: {\n                timeline: day.timeline,\n                phase: day.phase,\n                data: day.data\n              } }, { new: true }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).then(function (data) {\n              res.send({ data: data });\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 5:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined);\n  }));\n\n  return function resetDay(_x11, _x12) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Day",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "dayDetails",
        "dayNumber",
        "params",
        "cohortID",
        "query",
        "day",
        "cohort",
        "populate",
        "path",
        "e",
        "getOne",
        "findById",
        "day_id",
        "create",
        "body",
        "save",
        "update",
        "phase",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "id",
        "getCohortDays",
        "cohort_id",
        "todayFilter",
        "today",
        "Date",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "$gte",
        "$lt",
        "getCurrentDays",
        "filter",
        "date",
        "getToday",
        "user",
        "userId",
        "_id",
        "currentCohort",
        "findOne",
        "pingpongs",
        "pp",
        "by",
        "equals",
        "timeline",
        "map",
        "startTime",
        "tl",
        "setDate",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "prompt",
        "console",
        "log",
        "sendStatus",
        "createDayPairs",
        "User",
        "students",
        "x",
        "type",
        "p",
        "i",
        "length",
        "concat",
        "pop",
        "pairs",
        "getPhase",
        "createDays",
        "cohortId",
        "cohortStartDate",
        "fromDay",
        "count",
        "dayDate",
        "getTime",
        "allDays",
        "dDate",
        "ms",
        "push",
        "Promise",
        "all",
        "createCohortDays",
        "sort",
        "limit",
        "latestDay",
        "Cohort",
        "nextDay",
        "startDate",
        "days",
        "error",
        "resetCohortDays",
        "addPromptToTimeline",
        "$push",
        "addContentToDay",
        "$set",
        "removePromptFromTimeline",
        "timeline_id",
        "$pull",
        "resetPairs",
        "resetDay",
        "replicate",
        "new"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,gBAAIC,IAAJ,GAAWC,IAAX,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC;AAAA,qEAAa,iBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBY,qBADiB,GACJb,IAAIc,MADA,CACjBD,SADiB;AAEnBE,oBAFmB,GAEPf,IAAIgB,KAFG,CAEnBD,QAFmB;;AAGxBb,0BAAIC,IAAJ,CAAS,EAACc,KAAMJ,SAAP,EAAkBK,QAASH,QAA3B,EAAT,EACCI,QADD,CACU;AACRC,oBAAK,iBADG;AAERD,wBAAU,EAACC,MAAM,OAAP;AAFF,aADV,EAKCD,QALD,CAKU,gBALV,EAMCA,QAND,CAMU,gBANV,EAOCf,IAPD,GAOQC,IAPR,CAOa,eAAO;AAClBJ,kBAAIK,IAAJ,CAAS,EAACW,QAAD,EAAT;AACD,aATD,EASGT,KATH,CASS;AAAA,qBAAKP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBW,CAArB,CAAL;AAAA,aATT;;AAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAeA,IAAMC,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAClCC,gBAAIqB,QAAJ,CAAavB,IAAIc,MAAJ,CAAWU,MAAxB,EAAgCpB,IAAhC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,MAC3BM,IAD2B,GACnBP,IAAI0B,IADe,CAC3BnB,IAD2B;;AAElC,MAAIL,aAAJ,CAAQ,EAACK,UAAD,EAAR,EAAgBoB,IAAhB,GACCtB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMiB,0BAAS,SAATA,MAAS,CAAC5B,GAAD,EAAMC,GAAN,EAAc;AAAA,MAC3B4B,KAD2B,GAClB7B,IAAI0B,IADc,CAC3BG,KAD2B;;AAElC3B,gBAAI4B,iBAAJ,CAAsB9B,IAAIc,MAAJ,CAAWU,MAAjC,EAAyCK,KAAzC,EACCxB,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMoB,gCAAY,SAAZA,SAAY,CAAC/B,GAAD,EAAMC,GAAN,EAAc;AACrCC,gBAAI8B,MAAJ,CAAW,EAACC,IAAGjC,IAAIc,MAAJ,CAAWmB,EAAf,EAAX,EAA+B7B,IAA/B,GACCC,IADD,CACM;AAAA,WAAMJ,IAAIQ,MAAJ,CAAW,GAAX,CAAN;AAAA,GADN,EAECD,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMuB,wCAAgB,SAAhBA,aAAgB,CAAClC,GAAD,EAAMC,GAAN,EAAc;AACzCC,gBAAIC,IAAJ,CAAS,EAACe,QAAOlB,IAAIc,MAAJ,CAAWqB,SAAnB,EAAT,EACGhB,QADH,CACY;AACRC,UAAK,iBADG;AAERD,cAAU,EAACC,MAAM,OAAP;AAFF,GADZ,EAKGD,QALH,CAKY,gBALZ,EAMGA,QANH,CAMY,gBANZ,EAOGf,IAPH,GAQGC,IARH,CAQQ;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GARR,EASGC,KATH,CASS;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GATT;AAUD,CAXM;;AAaP,IAAMyB,cAAc,SAAdA,WAAc,GAAM;AACxB,MAAMC,QAAQ,IAAIC,IAAJ,EAAd;AACA,MAAMC,UAAU,IAAID,IAAJ,EAAhB;;AAEAD,QAAMG,QAAN,CAAe,CAAf;AACAH,QAAMI,UAAN,CAAiB,CAAjB;AACAJ,QAAMK,UAAN,CAAiB,CAAjB;;AAEAH,UAAQC,QAAR,CAAiB,EAAjB;AACAD,UAAQE,UAAR,CAAmB,EAAnB;AACAF,UAAQG,UAAR,CAAmB,EAAnB;;AAEA,SAAO,EAAEC,MAAMN,KAAR,EAAeO,KAAKL,OAApB,EAAP;AACD,CAbD;;AAgBO,IAAMM,0CAAiB,SAAjBA,cAAiB,GAAiB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;;AAC7C,SAAO5C,cAAIC,IAAJ,cACF2C,MADE;AAELC,UAAMX;AAFD,MAGJhC,IAHI,EAAP;AAID,CALM;;AAOA,IAAM4C;AAAA,sEAAW,kBAAOhD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEyBD,IAAIiD,IAF7B,EAERC,MAFQ,aAEbC,GAFa,EAEejC,MAFf,aAEAkC,aAFA;AAGdL,gBAHc,GAGPX,aAHO;AAAA;AAAA,mBAIFlC,cAAImD,OAAJ,CAAY,EAACnC,cAAD,EAAS6B,UAAT,EAAZ,EACjB5B,QADiB,CACR,iBADQ,EAEjBA,QAFiB,CAER,cAFQ,EAGjBA,QAHiB,CAGR,gBAHQ,EAIjBA,QAJiB,CAIR,gBAJQ,EAKjBf,IALiB,EAJE;;AAAA;AAIda,eAJc;;AAUlB;AACFA,gBAAIqC,SAAJ,GAAgBrC,IAAIqC,SAAJ,CAAcR,MAAd,CAAqB;AAAA,qBAAMS,GAAGC,EAAH,CAAMC,MAAN,CAAaP,MAAb,CAAN;AAAA,aAArB,CAAhB;AACAjC,gBAAIyC,QAAJ,GAAezC,IAAIyC,QAAJ,CAAaC,GAAb,CAAiB,cAAM;AACpC,kBAAIC,YAAYC,GAAGD,SAAnB;AACAA,wBAAUE,OAAV,CAAkB7C,IAAI8B,IAAJ,CAASgB,OAAT,EAAlB;AACAH,wBAAUI,WAAV,CAAsB/C,IAAI8B,IAAJ,CAASkB,WAAT,EAAtB;AACAL,wBAAUM,QAAV,CAAmBjD,IAAI8B,IAAJ,CAASoB,QAAT,EAAnB;AACA,qBAAO;AACLhB,qBAAKU,GAAGV,GADH;AAELiB,wBAAQP,GAAGO,MAFN;AAGLR;AAHK,eAAP;AAKD,aAVc,CAAf;AAWA3D,gBAAIS,IAAJ,CAAS,EAACH,MAAKU,GAAN,EAAT;AAvBoB;AAAA;;AAAA;AAAA;AAAA;;AAyBpBoD,oBAAQC,GAAR,CAAY,eAAZ;AACArE,gBAAIsE,UAAJ,CAAe,GAAf;;AA1BoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA8BA,IAAMC;AAAA,sEAAiB,kBAAOvD,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAELwD,eAAKtE,IAAL,CAAU;AAC7B,+BAAiBc,IAAIC;AADQ,aAAV,EAElBd,IAFkB,EAFK;;AAAA;AAEtBsE,oBAFsB;;AAAA,iBAMvBzD,IAAIV,IAAJ,CAASJ,IAAT,CAAc;AAAA,qBAAIwE,EAAEC,IAAF,IAAQ,WAAZ;AAAA,aAAd,CANuB;AAAA;AAAA;AAAA;;AAOxB;AACA;AACIC,aAToB,GAShB,4BAAaH,QAAb,EAAuB,CAAvB,CATgB;;AAUvB,iBAASI,CAAT,GAAa,CAAb,EAAgBA,IAAID,EAAEE,MAAtB,EAA8BD,GAA9B,EAAmC;AACjC,kBAAID,EAAEC,CAAF,EAAKJ,QAAL,CAAcK,MAAd,IAAwB,CAA5B,EAA+B;AAC7BF,kBAAEC,IAAE,CAAJ,EAAOJ,QAAP,GAAkBG,EAAEC,CAAF,EAAKJ,QAAL,CAAcM,MAAd,CAAqBH,EAAEC,IAAI,CAAN,EAASJ,QAA9B,CAAlB;AACAG,kBAAEI,GAAF;AACD;AACF;AACDhE,gBAAIiE,KAAJ,GAAYL,CAAZ;AAhBuB,8CAiBhB5D,GAjBgB;;AAAA;;AAoBxB;AACI4D,cArBoB,GAqBhB,4BAAaH,QAAb,EAAuB,CAAvB,CArBgB;;AAsBxBzD,gBAAIiE,KAAJ,GAAYL,EAAZ;AACA;AACAR,oBAAQC,GAAR,CAAY,WAAZ;AAxBwB,8CAyBjBrD,GAzBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA6BP,IAAMkE,WAAW,SAAXA,QAAW,IAAK;AACpB,MAAGL,IAAE,EAAL,EAAS,OAAO,QAAP;AACT,MAAGA,IAAE,EAAL,EAAS,OAAO,MAAP;AACT,MAAGA,IAAE,EAAL,EAAS,OAAO,OAAP;AACT,MAAGA,IAAE,EAAL,EAAS,OAAO,YAAP;AACT,MAAGA,IAAE,EAAL,EAAS,OAAO,kBAAP;AACT,SAAO,QAAP;AACD,CAPD;;AASA,IAAMM,aAAa,SAAbA,UAAa,CAACC,QAAD,EAAWC,eAAX,EAA4BC,OAA5B,EAAqCC,KAArC,EAA+C;AAChEA,UAAQ,CAACA,KAAT;AACA,MAAIC,UAAU,IAAInD,IAAJ,CAASgD,gBAAgBI,OAAhB,EAAT,CAAd;AACA,MAAIC,UAAS,EAAb;AACA,OAAK,IAAIb,IAAIS,OAAb,EAAsBT,IAAIS,UAAUC,KAApC,EAA2CV,GAA3C,EAAgD;;AAE5C,QAAIc,QAAM,IAAItD,IAAJ,CAASmD,QAAQC,OAAR,EAAT,CAAV;AACAE,UAAM9B,OAAN,CAAc8B,MAAM7B,OAAN,KAAkBe,CAAhC;;AAEA,QAAIe,KAAKD,MAAMF,OAAN,EAAT;AACAE,UAAMpD,QAAN,CAAe,CAAf;AACAoD,UAAMnD,UAAN,CAAiB,CAAjB;;AAEA,QAAIxB,MAAM,IAAIf,aAAJ,CAAQ;AAClBe,WAAK6D,CADa;AAElB/B,YAAM6C,KAFY;AAGlB1E,cAAQmE,QAHU;AAIlBxD,aAAOsD,SAASL,CAAT,CAJW;AAKlBpB,gBAAS;AALS,KAAR,EAMT/B,IANS,EAAV;AAOFgE,YAAQG,IAAR,CAAa7E,GAAb;AACD;;AAED,SAAO8E,QAAQC,GAAR,CAAYL,OAAZ,CAAP;AACD,CAxBD;;AA0BO,IAAMM;AAAA,sEAAmB,kBAAOjG,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEJC,cAAIC,IAAJ,CAAS,EAACe,QAASlB,IAAIc,MAAJ,CAAWqB,SAArB,EAAT,EAA0C+D,IAA1C,CAA+C,EAACjF,KAAM,CAAC,CAAR,EAA/C,EAA2DkF,KAA3D,CAAiE,CAAjE,CAFI;;AAAA;AAAA;AAAA;AAEvBC,qBAFuB;AAAA;AAAA,mBAGTC,iBAAOhD,OAAP,CAAe,EAACF,KAAMnD,IAAIc,MAAJ,CAAWqB,SAAlB,EAAf,CAHS;;AAAA;AAGxBjB,kBAHwB;AAIxBoF,mBAJwB,GAIdF,cAAc,IAAd,GAAqB,CAArB,GAA0B,IAAIA,UAAUnF,GAJ1B;AAAA;AAAA,mBAKXmE,WAAWlE,OAAOiC,GAAlB,EAAuBjC,OAAOqF,SAA9B,EAAyCD,OAAzC,EAAkDtG,IAAI0B,IAAJ,CAAS8D,KAA3D,CALW;;AAAA;AAKxBgB,gBALwB;;AAM5BvG,gBAAIS,IAAJ,CAAS8F,IAAT;AAN4B;AAAA;;AAAA;AAAA;AAAA;;AAQ5BnC,oBAAQoC,KAAR;AACAxG,gBAAIsE,UAAJ,CAAe,GAAf;;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAcA,IAAMmC,4CAAkB,SAAlBA,eAAkB,QAAsB;AAAA,MAApBvD,GAAoB,SAApBA,GAAoB;AAAA,MAAfoD,SAAe,SAAfA,SAAe;;AACnD,SAAOnB,WAAWjC,GAAX,EAAgBoD,SAAhB,EAA2B,CAA3B,EAA8B,GAA9B,CAAP;AAED,CAHM;;AAKA,IAAMI,oDAAsB,SAAtBA,mBAAsB,CAAC3G,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACnBD,IAAI0B,IADe;AAAA,MACxCkC,SADwC,aACxCA,SADwC;AAAA,MAC7BQ,MAD6B,aAC7BA,MAD6B;AAAA,MAExC5C,MAFwC,GAE9BxB,IAAIc,MAF0B,CAExCU,MAFwC;;AAG/CtB,gBAAI0B,MAAJ,CAAW,EAACuB,KAAK3B,MAAN,EAAX,EAA0B;AACxBoF,WAAO,EAAC,YAAY,EAAChD,oBAAD,EAAYQ,cAAZ,EAAb;AADiB,GAA1B,EAGC/D,IAHD,CAGM,gBAAQ;AACZH,kBAAIqB,QAAJ,CAAa,EAAC4B,KAAK3B,MAAN,EAAb,EACCL,QADD,CACU;AACRC,YAAK,iBADG;AAERD,gBAAU,EAACC,MAAM,OAAP;AAFF,KADV,EAKCD,QALD,CAKU,gBALV,EAMCf,IAND,GAOCC,IAPD,CAOO,gBAAQ;AACZJ,UAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT;AACF,KATD,EASGC,KATH,CASS,eAAO;AACd6D,cAAQC,GAAR,CAAY3D,GAAZ;AACD,KAXD;AAYD,GAhBD,EAiBCH,KAjBD,CAiBO,eAAO;AACZ6D,YAAQC,GAAR,CAAY3D,GAAZ;AACAV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAnB5B;AAoBD,CAvBM;;AAyBA,IAAMkG,4CAAkB,SAAlBA,eAAkB,CAAC7G,GAAD,EAAMC,GAAN,EAAc;AAC3C,MAAMM,OAAOP,IAAI0B,IAAjB;AAD2C,MAEpCF,MAFoC,GAE1BxB,IAAIc,MAFsB,CAEpCU,MAFoC;;AAG3CtB,gBAAI0B,MAAJ,CAAW,EAACuB,KAAK3B,MAAN,EAAX,EAA0B;AACxBsF,UAAM,EAAC,QAAQvG,IAAT;AADkB,GAA1B,EAGCF,IAHD,CAGO,gBAAQ;AACbH,kBAAIqB,QAAJ,CAAa,EAAC4B,KAAK3B,MAAN,EAAb,EACGpB,IADH,GAEGC,IAFH,CAEQ,gBAAQ;AACZJ,UAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT;AACA,KAJJ,EAKGC,KALH,CAKS,eAAO;AACZ6D,cAAQC,GAAR,CAAY3D,GAAZ;AACC,KAPL;AAQC,GAZH,EAaCH,KAbD,CAaO,eAAO;AACZ6D,YAAQC,GAAR,CAAY3D,GAAZ;AACAV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AACD,GAhBD;AAiBD,CApBM;;AAsBA,IAAMoG,8DAA2B,SAA3BA,wBAA2B,CAAC/G,GAAD,EAAMC,GAAN,EAAc;AAAA,oBACtBD,IAAIc,MADkB;AAAA,MAC7CU,MAD6C,eAC7CA,MAD6C;AAAA,MACrCwF,WADqC,eACrCA,WADqC;;AAEpD9G,gBAAI0B,MAAJ,CACE,EAAC,OAAOJ,MAAR,EAAgB,gBAAgBwF,WAAhC,EADF,EAEE,EAAEC,OAAO,EAAE,YAAY,EAAC9D,KAAK6D,WAAN,EAAd,EAAT,EAFF,EAIC3G,IAJD,CAIO,gBAAQ;AACbJ,QAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT;AACD,GAND,EAOCC,KAPD,CAOO,eAAO;AACZP,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AACD,GATD;AAUD,CAZM;;AAcA,IAAMuG;AAAA,sEAAa,kBAAOlH,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGNC,cAAIqB,QAAJ,CAAavB,IAAIc,MAAJ,CAAWU,MAAxB,EACfL,QADe,CACN,gBADM,EAEff,IAFe,EAHM;;AAAA;AAGlBa,eAHkB;AAAA;AAAA,mBAMVuD,eAAevD,GAAf,CANU;;AAAA;AAMtBA,eANsB;;AAOtBA,gBAAIU,IAAJ;AACMpB,gBARgB,GAQTU,IAAIiE,KARK;;AAStBjF,gBAAIS,IAAJ,CAAS,EAACH,UAAD,EAAT;AATsB;AAAA;;AAAA;AAAA;AAAA;;AAWtBN,gBAAIsE,UAAJ,CAAe,GAAf;;AAXsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAgBA,IAAM4C;AAAA,sEAAW,kBAAOnH,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfmH,qBADe,GACFpH,IAAI0B,IADF,CACf0F,SADe;AAAA;AAAA,mBAEJlH,cAAIqB,QAAJ,CAAa6F,SAAb,CAFI;;AAAA;AAEhBnG,eAFgB;;AAGtBf,0BAAI4B,iBAAJ,CAAsB9B,IAAIc,MAAJ,CAAWU,MAAjC,EAAyC,EAACsF,MAAO;AAC/CpD,0BAAUzC,IAAIyC,QADiC;AAE/C7B,uBAAOZ,IAAIY,KAFoC;AAG/CtB,sBAAMU,IAAIV;AAHqC,eAAR,EAAzC,EAII,EAAC8G,KAAK,IAAN,EAJJ,EAKClG,QALD,CAKU;AACRC,oBAAK,iBADG;AAERD,wBAAU,EAACC,MAAM,OAAP;AAFF,aALV,EASCf,IATD,CASM,gBAAQ;AACZJ,kBAAIS,IAAJ,CAAS,EAACH,UAAD,EAAT;AACD,aAXD,EAWGC,KAXH,CAWS,eAAO;AACdP,kBAAIsE,UAAJ,CAAe,GAAf;AACD,aAbD;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAN",
      "file": "day.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Day from '../models/day';\nimport Cohort from '../models/cohort'\nimport User from \"../models/user\";\nimport createChunks from \"../util/createChunks\" \n\nexport const getAll = (req, res) => {\n  Day.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const dayDetails = async (req, res) => {\n  const {dayNumber} = req.params\n  let {cohortID} = req.query\n  Day.find({day : dayNumber, cohort : cohortID})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n    })\n  .populate('pingpongs.ping')\n  .populate('pairs.students')\n  .exec().then(day => {\n    res.json({day})\n  }).catch(e => res.status(500).send(e))\n}\n\nexport const getOne = (req, res) => {\n  Day.findById(req.params.day_id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {data} = req.body;\n  new Day({data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const {phase} = req.body;\n  Day.findByIdAndUpdate(req.params.day_id, phase)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Day.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortDays = (req, res) => {\n  Day.find({cohort:req.params.cohort_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n      })\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec()\n    .then(data => res.json({data}))\n    .catch(err => res.status(500).send(err));\n}\n\nconst todayFilter = () => {\n  const today = new Date();\n  const tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n}\n\n\nexport const getCurrentDays = (filter = {}) => {\n  return Day.find({\n    ...filter,\n    date: todayFilter()\n  }).exec();\n}\n\nexport const getToday = async (req, res) => {\n  try {\n    const {_id: userId, currentCohort: cohort} = req.user;\n    const date = todayFilter();\n    const day = await Day.findOne({cohort, date})\n    .populate('timeline.prompt')\n    .populate('pingpongs.to')\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec();\n      // important: ObjectId is not string\n    day.pingpongs = day.pingpongs.filter(pp => pp.by.equals(userId));\n    day.timeline = day.timeline.map(tl => {\n      let startTime = tl.startTime;\n      startTime.setDate(day.date.getDate());\n      startTime.setFullYear(day.date.getFullYear());\n      startTime.setMonth(day.date.getMonth());\n      return {\n        _id: tl._id,\n        prompt: tl.prompt,\n        startTime\n      }\n    })\n    res.send({data:day});\n  } catch (err) {\n    console.log(\"Day not found\", err);\n    res.sendStatus(404);\n  }\n}\n\nexport const createDayPairs = async (day) => { \n\n    let students = await User.find({\n      'currentCohort': day.cohort\n    }).exec()\n    \n    if(day.data.find(x=> x.type==\"Milestone\")) {\n      // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 3)\n       for (let i = 0; i < p.length; i++) {\n         if (p[i].students.length <= 1) {\n           p[i-1].students = p[i].students.concat(p[i - 1].students)\n           p.pop()\n         }\n       }\n       day.pairs = p\n       return day \n    } else {\n\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 2)  \n      day.pairs = p\n      // day.save()\n      console.log(\"DAY PAIRS\")\n      return day\n  }\n}\n\nconst getPhase = i => {\n  if(i<10) return 'Week 0';\n  if(i<39) return 'Core';\n  if(i<67) return 'Focus';\n  if(i<81) return 'Deep Focus';\n  if(i<95) return 'Capstone Product';\n  return 'Career';\n}\n\nconst createDays = (cohortId, cohortStartDate, fromDay, count) => {\n  count = +count;\n  let dayDate = new Date(cohortStartDate.getTime());\n  let allDays =[];\n  for (let i = fromDay; i < fromDay + count; i++) {\n\n      let dDate=new Date(dayDate.getTime());\n      dDate.setDate(dDate.getDate() + i);\n\n      let ms = dDate.getTime();\n      dDate.setHours(0)\n      dDate.setMinutes(1)\n\n      let day = new Day({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline:[],\n    }).save()\n    allDays.push(day)\n  }\n\n  return Promise.all(allDays)\n}\n\nexport const createCohortDays = async (req, res) => {\n  try {\n    let [latestDay] = await Day.find({cohort : req.params.cohort_id}).sort({day : -1}).limit(1);\n    let cohort = await Cohort.findOne({_id : req.params.cohort_id});\n    let nextDay = latestDay === null ? 1 : (1 + latestDay.day);\n    let days = await createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n    res.send(days);\n  } catch(err) {\n    console.error(err);\n    res.sendStatus(404);\n  }\n\n}\n\nexport const resetCohortDays = ({_id, startDate}) => {\n  return createDays(_id, startDate, 1, 108);\n\n}\n\nexport const addPromptToTimeline = (req, res) => {\n  const {startTime, prompt} = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $push: {\"timeline\": {startTime, prompt}}\n  })\n  .then(data => {\n    Day.findById({_id: day_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n    })\n    .populate('pairs.students')\n    .exec()\n    .then( data => {\n       res.json({data})\n    }).catch(err => {\n      console.log(err);\n    })\n  })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const addContentToDay = (req, res) => {\n  const data = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $set: {'data': data}\n  })\n  .then( data => {\n    Day.findById({_id: day_id})\n      .exec()\n      .then(data => {\n        res.json({data})\n       })\n      .catch(err => {\n        console.log(err);\n        })\n    })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)\n  })\n}\n\nexport const removePromptFromTimeline = (req, res) => {\n  const {day_id, timeline_id} = req.params;\n  Day.update(\n    {'_id': day_id, 'timeline._id': timeline_id},\n    { $pull: { 'timeline': {_id: timeline_id} }}\n  )\n  .then( data => {\n    res.json({data})\n  })\n  .catch(err => {\n    res.status(500).send(err)\n  });\n}\n\nexport const resetPairs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id)\n    .populate('pairs.students')\n    .exec();\n    day = await createDayPairs(day);\n    day.save();\n    const data = day.pairs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport const resetDay = async (req, res) => {\n  const {replicate} = req.body;\n  const day = await Day.findById(replicate);\n  Day.findByIdAndUpdate(req.params.day_id, {$set : {\n    timeline: day.timeline,\n    phase: day.phase,\n    data: day.data,\n  }}, {new: true})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n  })\n  .then(data => {\n    res.send({data})\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/day.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/day.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/day.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.js",
      "sourceFileName": "day.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Day', new Schema({\n  date: {\n    type: Date\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n    // required: true\n  },\n  phase: {\n    type: String\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwiZGF0ZSIsInR5cGUiLCJEYXRlIiwiZGF5IiwiTnVtYmVyIiwibWluIiwibWF4IiwiZGF0YSIsImNvaG9ydCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJwaGFzZSIsIlN0cmluZyIsInBhaXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsInRpbWVsaW5lIiwicHJvbXB0Iiwic3RhcnRUaW1lIiwiTWl4ZWQiLCJwaW5ncG9uZ3MiLCJ0cmlnZ2VyVGltZSIsImJ5IiwidG8iLCJwaW5nIiwicG9uZyIsImNvbGxlY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLEtBQWYsRUFBc0IsSUFBSUYsTUFBSixDQUFXO0FBQzlDRyxRQUFNO0FBQ0pDLFVBQU1DO0FBQ047QUFGSSxHQUR3QztBQUs5Q0MsT0FBSztBQUNIRixVQUFNRyxNQURIO0FBRUhDLFNBQUssQ0FGRjtBQUdIQyxTQUFLO0FBSEYsR0FMeUM7QUFVOUNDLFFBQU0sQ0FBQyxFQUFELENBVndDO0FBVzlDQyxVQUFRO0FBQ05QLFVBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxTQUFLO0FBQ0w7QUFITSxHQVhzQztBQWdCOUNDLFNBQU87QUFDTFgsVUFBTVk7QUFERCxHQWhCdUM7QUFtQjlDQyxTQUFPLENBQUM7QUFDTkMsY0FBVUYsTUFESjtBQUVORyxjQUFVLENBQUM7QUFDVGYsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURWO0FBRVRDLFdBQUs7QUFGSSxLQUFEO0FBRkosR0FBRCxDQW5CdUM7O0FBMkI5Q00sWUFBVSxDQUFDO0FBQ1RDLFlBQVE7QUFDTmpCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxXQUFLO0FBRkMsS0FEQztBQUtUUSxlQUFXakIsSUFMRjtBQU1USyxVQUFNVixPQUFPWSxLQUFQLENBQWFXO0FBTlYsR0FBRCxDQTNCb0M7O0FBb0M5Q0MsYUFBVyxDQUFDO0FBQ1ZDLGlCQUFhcEIsSUFESDtBQUVWcUIsUUFBSTtBQUNGdEIsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURqQjtBQUVGQyxXQUFLO0FBRkgsS0FGTTtBQU1WYSxRQUFJO0FBQ0Z2QixZQUFNSixPQUFPWSxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFdBQUs7QUFGSCxLQU5NO0FBVVZjLFVBQU07QUFDSnhCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxXQUFLO0FBRkQsS0FWSTtBQWNWZSxVQUFNN0IsT0FBT1ksS0FBUCxDQUFhVztBQWRULEdBQUQ7O0FBcENtQyxDQUFYLEVBcURsQztBQUNETyxjQUFZO0FBRFgsQ0FyRGtDLENBQXRCLEMiLCJmaWxlIjoiZGF5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdEYXknLCBuZXcgU2NoZW1hKHtcbiAgZGF0ZToge1xuICAgIHR5cGU6IERhdGUsXG4gICAgLy8gcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZGF5OiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIG1pbjogMSxcbiAgICBtYXg6IDUwMFxuICB9LFxuICBkYXRhOiBbe31dLFxuICBjb2hvcnQ6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ29ob3J0JyxcbiAgICAvLyByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBwaGFzZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgcGFpcnM6IFt7XG4gICAgdGVhbU5hbWU6IFN0cmluZyxcbiAgICBzdHVkZW50czogW3tcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfV0sXG4gIH1dLFxuXG4gIHRpbWVsaW5lOiBbe1xuICAgIHByb21wdDoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnUHJvbXB0J1xuICAgIH0sXG4gICAgc3RhcnRUaW1lOiBEYXRlLFxuICAgIGRhdGE6IFNjaGVtYS5UeXBlcy5NaXhlZFxuICB9XSxcblxuICBwaW5ncG9uZ3M6IFt7XG4gICAgdHJpZ2dlclRpbWU6IERhdGUsXG4gICAgYnk6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfSxcbiAgICB0bzoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIHBpbmc6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1BpbmcnXG4gICAgfSxcbiAgICBwb25nOiBTY2hlbWEuVHlwZXMuTWl4ZWRcbiAgfV1cblxufSwge1xuICBjb2xsZWN0aW9uOiAnZGF5cydcbn0pKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "date",
        "type",
        "Date",
        "day",
        "Number",
        "min",
        "max",
        "data",
        "cohort",
        "Types",
        "ObjectId",
        "ref",
        "phase",
        "String",
        "pairs",
        "teamName",
        "students",
        "timeline",
        "prompt",
        "startTime",
        "Mixed",
        "pingpongs",
        "triggerTime",
        "by",
        "to",
        "ping",
        "pong",
        "collection"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,KAAf,EAAsB,IAAIF,MAAJ,CAAW;AAC9CG,QAAM;AACJC,UAAMC;AACN;AAFI,GADwC;AAK9CC,OAAK;AACHF,UAAMG,MADH;AAEHC,SAAK,CAFF;AAGHC,SAAK;AAHF,GALyC;AAU9CC,QAAM,CAAC,EAAD,CAVwC;AAW9CC,UAAQ;AACNP,UAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,SAAK;AACL;AAHM,GAXsC;AAgB9CC,SAAO;AACLX,UAAMY;AADD,GAhBuC;AAmB9CC,SAAO,CAAC;AACNC,cAAUF,MADJ;AAENG,cAAU,CAAC;AACTf,YAAMJ,OAAOY,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFJ,GAAD,CAnBuC;;AA2B9CM,YAAU,CAAC;AACTC,YAAQ;AACNjB,YAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,WAAK;AAFC,KADC;AAKTQ,eAAWjB,IALF;AAMTK,UAAMV,OAAOY,KAAP,CAAaW;AANV,GAAD,CA3BoC;;AAoC9CC,aAAW,CAAC;AACVC,iBAAapB,IADH;AAEVqB,QAAI;AACFtB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KAFM;AAMVa,QAAI;AACFvB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KANM;AAUVc,UAAM;AACJxB,YAAMJ,OAAOY,KAAP,CAAaC,QADf;AAEJC,WAAK;AAFD,KAVI;AAcVe,UAAM7B,OAAOY,KAAP,CAAaW;AAdT,GAAD;;AApCmC,CAAX,EAqDlC;AACDO,cAAY;AADX,CArDkC,CAAtB,C",
      "file": "day.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Day', new Schema({\n  date: {\n    type: Date,\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort',\n    // required: true\n  },\n  phase: {\n    type: String,\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/createChunks.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/createChunks.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/createChunks.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createChunks.js",
      "sourceFileName": "createChunks.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createChunks"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (array, number) {\n  array = _lodash2.default.shuffle(array);\n  var chunks = _lodash2.default.chunk(array, number);\n  chunks = chunks.map(function (element) {\n    return {\n      teamName: _faker2.default.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element\n    };\n  });\n\n  return chunks;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUNodW5rcy5qcyJdLCJuYW1lcyI6WyJhcnJheSIsIm51bWJlciIsIl8iLCJzaHVmZmxlIiwiY2h1bmtzIiwiY2h1bmsiLCJtYXAiLCJlbGVtZW50IiwidGVhbU5hbWUiLCJmYWtlciIsImZha2UiLCJzdHVkZW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlLFVBQUNBLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUNoQ0QsVUFBUUUsaUJBQUVDLE9BQUYsQ0FBVUgsS0FBVixDQUFSO0FBQ0EsTUFBSUksU0FBU0YsaUJBQUVHLEtBQUYsQ0FBUUwsS0FBUixFQUFlQyxNQUFmLENBQWI7QUFDQUcsV0FBU0EsT0FBT0UsR0FBUCxDQUFXLFVBQUNDLE9BQUQsRUFBYTtBQUMvQixXQUFPO0FBQ0xDLGdCQUFVQyxnQkFBTUMsSUFBTixDQUFXLDRDQUFYLENBREw7QUFFTEMsZ0JBQVVKO0FBRkwsS0FBUDtBQUlELEdBTFEsQ0FBVDs7QUFPQSxTQUFPSCxNQUFQO0FBQ0QsQyIsImZpbGUiOiJjcmVhdGVDaHVua3MuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZha2VyIGZyb20gJ2Zha2VyJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBkZWZhdWx0IChhcnJheSwgbnVtYmVyKSA9PiB7XG4gIGFycmF5ID0gXy5zaHVmZmxlKGFycmF5KTtcbiAgbGV0IGNodW5rcyA9IF8uY2h1bmsoYXJyYXksIG51bWJlcik7XG4gIGNodW5rcyA9IGNodW5rcy5tYXAoKGVsZW1lbnQpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgdGVhbU5hbWU6IGZha2VyLmZha2UoXCJ7e2NvbXBhbnkuYnNBZGplY3RpdmV9fS17e2NvbXBhbnkuYnNOb3VufX1cIiksXG4gICAgICBzdHVkZW50czogZWxlbWVudCxcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIGNodW5rcztcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createChunks.js"
      ],
      "names": [
        "array",
        "number",
        "_",
        "shuffle",
        "chunks",
        "chunk",
        "map",
        "element",
        "teamName",
        "faker",
        "fake",
        "students"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,KAAD,EAAQC,MAAR,EAAmB;AAChCD,UAAQE,iBAAEC,OAAF,CAAUH,KAAV,CAAR;AACA,MAAII,SAASF,iBAAEG,KAAF,CAAQL,KAAR,EAAeC,MAAf,CAAb;AACAG,WAASA,OAAOE,GAAP,CAAW,UAACC,OAAD,EAAa;AAC/B,WAAO;AACLC,gBAAUC,gBAAMC,IAAN,CAAW,4CAAX,CADL;AAELC,gBAAUJ;AAFL,KAAP;AAID,GALQ,CAAT;;AAOA,SAAOH,MAAP;AACD,C",
      "file": "createChunks.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import faker from 'faker';\nimport _ from 'lodash';\n\nexport default (array, number) => {\n  array = _.shuffle(array);\n  let chunks = _.chunk(array, number);\n  chunks = chunks.map((element) => {\n    return {\n      teamName: faker.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element,\n    }\n  })\n\n  return chunks;\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/token.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getSoalToken",
            "getFakeToken"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getSoalToken",
              "exported": "getSoalToken"
            },
            {
              "kind": "local",
              "local": "getFakeToken",
              "exported": "getFakeToken"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/token.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/token.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "token.js",
      "sourceFileName": "token.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "token"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFakeToken = exports.getSoalToken = undefined;\n\nvar _user = require('../models/user');\n\nvar _authScopes = require('./authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getScope = function getScope(user) {\n  switch (user.role) {\n    case _user.USER_ROLES.EDUCATOR:\n      return _authScopes2.default.EDUCATOR;\n    case _user.USER_ROLES.SUPERADMIN:\n      return _authScopes2.default.ALL;\n    default:\n      return _authScopes2.default.STUDENT;\n  }\n};\n\nvar getSoalToken = exports.getSoalToken = function getSoalToken(user) {\n  var githubToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return _jsonwebtoken2.default.sign({\n    user: user._id,\n    githubToken: githubToken,\n    scope: getScope(user)\n  }, process.env.JWT_SECRET);\n};\n\nvar getFakeToken = exports.getFakeToken = function getFakeToken() {\n  var fakeAdmin = {\n    _id: '234932498',\n    role: _user.USER_ROLES.SUPERADMIN\n  };\n  return getSoalToken(fakeAdmin);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuLmpzIl0sIm5hbWVzIjpbImdldFNjb3BlIiwidXNlciIsInJvbGUiLCJVU0VSX1JPTEVTIiwiRURVQ0FUT1IiLCJBVVRIX1NDT1BFUyIsIlNVUEVSQURNSU4iLCJBTEwiLCJTVFVERU5UIiwiZ2V0U29hbFRva2VuIiwiZ2l0aHViVG9rZW4iLCJqd3QiLCJzaWduIiwiX2lkIiwic2NvcGUiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImdldEZha2VUb2tlbiIsImZha2VBZG1pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFdBQVcsU0FBWEEsUUFBVyxPQUFRO0FBQ3ZCLFVBQU9DLEtBQUtDLElBQVo7QUFDRSxTQUFLQyxpQkFBV0MsUUFBaEI7QUFBMEIsYUFBT0MscUJBQVlELFFBQW5CO0FBQzFCLFNBQUtELGlCQUFXRyxVQUFoQjtBQUE0QixhQUFPRCxxQkFBWUUsR0FBbkI7QUFDNUI7QUFBUyxhQUFPRixxQkFBWUcsT0FBbkI7QUFIWDtBQUtELENBTkQ7O0FBUU8sSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxDQUFDUixJQUFEO0FBQUEsTUFBT1MsV0FBUCx1RUFBbUIsSUFBbkI7QUFBQSxTQUE0QkMsdUJBQUlDLElBQUosQ0FBUztBQUMvRFgsVUFBTUEsS0FBS1ksR0FEb0Q7QUFFL0RILDRCQUYrRDtBQUcvREksV0FBT2QsU0FBU0MsSUFBVDtBQUh3RCxHQUFULEVBSXJEYyxRQUFRQyxHQUFSLENBQVlDLFVBSnlDLENBQTVCO0FBQUEsQ0FBckI7O0FBT0EsSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxHQUFNO0FBQ2hDLE1BQU1DLFlBQVk7QUFDaEJOLFNBQUssV0FEVztBQUVoQlgsVUFBTUMsaUJBQVdHO0FBRkQsR0FBbEI7QUFJQSxTQUFPRyxhQUFhVSxTQUFiLENBQVA7QUFDRCxDQU5NIiwiZmlsZSI6InRva2VuLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IEFVVEhfU0NPUEVTIGZyb20gJy4vYXV0aFNjb3Blcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5cbmNvbnN0IGdldFNjb3BlID0gdXNlciA9PiB7XG4gIHN3aXRjaCh1c2VyLnJvbGUpIHtcbiAgICBjYXNlIFVTRVJfUk9MRVMuRURVQ0FUT1I6IHJldHVybiBBVVRIX1NDT1BFUy5FRFVDQVRPUjtcbiAgICBjYXNlIFVTRVJfUk9MRVMuU1VQRVJBRE1JTjogcmV0dXJuIEFVVEhfU0NPUEVTLkFMTDtcbiAgICBkZWZhdWx0OiByZXR1cm4gQVVUSF9TQ09QRVMuU1RVREVOVDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0U29hbFRva2VuID0gKHVzZXIsIGdpdGh1YlRva2VuPW51bGwpID0+IGp3dC5zaWduKHtcbiAgdXNlcjogdXNlci5faWQsXG4gIGdpdGh1YlRva2VuLFxuICBzY29wZTogZ2V0U2NvcGUodXNlciksXG59LCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKTtcblxuXG5leHBvcnQgY29uc3QgZ2V0RmFrZVRva2VuID0gKCkgPT4ge1xuICBjb25zdCBmYWtlQWRtaW4gPSB7XG4gICAgX2lkOiAnMjM0OTMyNDk4JyxcbiAgICByb2xlOiBVU0VSX1JPTEVTLlNVUEVSQURNSU4sXG4gIH1cbiAgcmV0dXJuIGdldFNvYWxUb2tlbihmYWtlQWRtaW4pO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "token.js"
      ],
      "names": [
        "getScope",
        "user",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "AUTH_SCOPES",
        "SUPERADMIN",
        "ALL",
        "STUDENT",
        "getSoalToken",
        "githubToken",
        "jwt",
        "sign",
        "_id",
        "scope",
        "process",
        "env",
        "JWT_SECRET",
        "getFakeToken",
        "fakeAdmin"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,OAAQ;AACvB,UAAOC,KAAKC,IAAZ;AACE,SAAKC,iBAAWC,QAAhB;AAA0B,aAAOC,qBAAYD,QAAnB;AAC1B,SAAKD,iBAAWG,UAAhB;AAA4B,aAAOD,qBAAYE,GAAnB;AAC5B;AAAS,aAAOF,qBAAYG,OAAnB;AAHX;AAKD,CAND;;AAQO,IAAMC,sCAAe,SAAfA,YAAe,CAACR,IAAD;AAAA,MAAOS,WAAP,uEAAmB,IAAnB;AAAA,SAA4BC,uBAAIC,IAAJ,CAAS;AAC/DX,UAAMA,KAAKY,GADoD;AAE/DH,4BAF+D;AAG/DI,WAAOd,SAASC,IAAT;AAHwD,GAAT,EAIrDc,QAAQC,GAAR,CAAYC,UAJyC,CAA5B;AAAA,CAArB;;AAOA,IAAMC,sCAAe,SAAfA,YAAe,GAAM;AAChC,MAAMC,YAAY;AAChBN,SAAK,WADW;AAEhBX,UAAMC,iBAAWG;AAFD,GAAlB;AAIA,SAAOG,aAAaU,SAAb,CAAP;AACD,CANM",
      "file": "token.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import {USER_ROLES} from '../models/user';\nimport AUTH_SCOPES from './authScopes';\nimport jwt from 'jsonwebtoken';\n\nconst getScope = user => {\n  switch(user.role) {\n    case USER_ROLES.EDUCATOR: return AUTH_SCOPES.EDUCATOR;\n    case USER_ROLES.SUPERADMIN: return AUTH_SCOPES.ALL;\n    default: return AUTH_SCOPES.STUDENT;\n  }\n}\n\nexport const getSoalToken = (user, githubToken=null) => jwt.sign({\n  user: user._id,\n  githubToken,\n  scope: getScope(user),\n}, process.env.JWT_SECRET);\n\n\nexport const getFakeToken = () => {\n  const fakeAdmin = {\n    _id: '234932498',\n    role: USER_ROLES.SUPERADMIN,\n  }\n  return getSoalToken(fakeAdmin);\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/authScopes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/authScopes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/authScopes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "authScopes.js",
      "sourceFileName": "authScopes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "authScopes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhTY29wZXMuanMiXSwibmFtZXMiOlsiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkFMTCJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQWU7QUFDYkEsV0FBUyxTQURJO0FBRWJDLFlBQVUsVUFGRztBQUdiQyxjQUFZLFlBSEM7QUFJYkMsT0FBSztBQUpRLEMiLCJmaWxlIjoiYXV0aFNjb3Blcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIFNUVURFTlQ6ICdzdHVkZW50JyxcbiAgRURVQ0FUT1I6ICdlZHVjYXRvcicsXG4gIFNVUEVSQURNSU46ICdzdXBlcmFkbWluJyxcbiAgQUxMOiAnYWxsJyxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "authScopes.js"
      ],
      "names": [
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "ALL"
      ],
      "mappings": ";;;;;kBAAe;AACbA,WAAS,SADI;AAEbC,YAAU,UAFG;AAGbC,cAAY,YAHC;AAIbC,OAAK;AAJQ,C",
      "file": "authScopes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "export default {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all',\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/cohort.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getCohortDays",
              "createCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortDays",
                "local": "getCohortDays"
              },
              {
                "kind": "named",
                "imported": "createCohortDays",
                "local": "createCohortDays"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName",
              "getCohorts",
              "getCohort",
              "createCohort",
              "updateCohort",
              "deleteCohort",
              "resetSpotters"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              },
              {
                "kind": "named",
                "imported": "getCohorts",
                "local": "getCohorts"
              },
              {
                "kind": "named",
                "imported": "getCohort",
                "local": "getCohort"
              },
              {
                "kind": "named",
                "imported": "createCohort",
                "local": "createCohort"
              },
              {
                "kind": "named",
                "imported": "updateCohort",
                "local": "updateCohort"
              },
              {
                "kind": "named",
                "imported": "deleteCohort",
                "local": "deleteCohort"
              },
              {
                "kind": "named",
                "imported": "resetSpotters",
                "local": "resetSpotters"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/cohort.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/cohort.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.routes.js",
      "sourceFileName": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _cohort = require('../controllers/cohort.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', _cohort.getCohorts);\nrouter.get('/:cohortName', _cohort.getCohortByName);\nrouter.get('/id/:id', _cohort.getCohort);\nrouter.post('/', _cohort.createCohort);\nrouter.patch('/:id', _cohort.updateCohort);\nrouter.delete('/:id', _cohort.deleteCohort);\n\nrouter.get('/:cohort_id/days', _day.getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', _day.createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', _roles.allowSuperAdminOnly, _cohort.resetSpotters);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldENvaG9ydHMiLCJnZXRDb2hvcnRCeU5hbWUiLCJnZXRDb2hvcnQiLCJwb3N0IiwiY3JlYXRlQ29ob3J0IiwicGF0Y2giLCJ1cGRhdGVDb2hvcnQiLCJkZWxldGUiLCJkZWxldGVDb2hvcnQiLCJnZXRDb2hvcnREYXlzIiwiY3JlYXRlQ29ob3J0RGF5cyIsImFsbG93U3VwZXJBZG1pbk9ubHkiLCJyZXNldFNwb3R0ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFHQTs7Ozs7O0FBTUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxrQkFBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGNBQVgsRUFBMkJFLHVCQUEzQjtBQUNBTCxPQUFPRyxHQUFQLENBQVcsU0FBWCxFQUFzQkcsaUJBQXRCO0FBQ0FOLE9BQU9PLElBQVAsQ0FBWSxHQUFaLEVBQWlCQyxvQkFBakI7QUFDQVIsT0FBT1MsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLG9CQUFyQjtBQUNBVixPQUFPVyxNQUFQLENBQWMsTUFBZCxFQUFzQkMsb0JBQXRCOztBQUVBWixPQUFPRyxHQUFQLENBQVcsa0JBQVgsRUFBK0JVLGtCQUEvQjtBQUNBOzs7Ozs7OztBQVFBYixPQUFPTyxJQUFQLENBQVksa0JBQVosRUFBZ0NPLHFCQUFoQzs7QUFFQWQsT0FBT1MsS0FBUCxDQUFhLDRCQUFiLEVBQTJDTSwwQkFBM0MsRUFBZ0VDLHFCQUFoRTs7a0JBRWVoQixNIiwiZmlsZSI6ImNvaG9ydC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IGdldENvaG9ydERheXMsIGNyZWF0ZUNvaG9ydERheXMgfSBmcm9tICcuLi9jb250cm9sbGVycy9kYXkuY29udHJvbGxlcic7XG5pbXBvcnQgeyBnZXRDb2hvcnRCeU5hbWUsIGdldENvaG9ydHMsIGdldENvaG9ydCwgY3JlYXRlQ29ob3J0LCB1cGRhdGVDb2hvcnQsIGRlbGV0ZUNvaG9ydCwgcmVzZXRTcG90dGVycyB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2NvaG9ydC5jb250cm9sbGVyJztcbmltcG9ydCB7IGFsbG93U3VwZXJBZG1pbk9ubHkgfSBmcm9tICcuLi9jb250cm9sbGVycy9yb2xlcy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxuXG4vKipcbiAqIEBhcGkge2dldH0gL2NvaG9ydHMgR2V0IGFsbCBjb2hvcnRzXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgR2V0Q29ob3J0c1xuICogQGFwaUdyb3VwIENvaG9ydFxuICovXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0Q29ob3J0cyk7XG5yb3V0ZXIuZ2V0KCcvOmNvaG9ydE5hbWUnLCBnZXRDb2hvcnRCeU5hbWUpO1xucm91dGVyLmdldCgnL2lkLzppZCcsIGdldENvaG9ydCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZUNvaG9ydCk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGVDb2hvcnQpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZUNvaG9ydCk7XG5cbnJvdXRlci5nZXQoJy86Y29ob3J0X2lkL2RheXMnLCBnZXRDb2hvcnREYXlzKTtcbi8qKlxuICogQGFwaSB7cG9zdH0gL2NvaG9ydHMvOmNvaG9ydF9pZC9kYXlzIEFkZCBkYXlzIHRvIGFuIGV4aXN0aW5nIGNvaG9ydFxuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIEV4dGVuZENvaG9ydFxuICogQGFwaUdyb3VwIENvaG9ydFxuICpcbiAqIEBhcGlQYXJhbSB7U3RyaW5nfSBjb3VudCBOdW1iZXIgb2YgZGF5cyB0byBiZSBhZGRlZCB0byB0aGUgY29ob3J0LlxuICovXG5yb3V0ZXIucG9zdCgnLzpjb2hvcnRfaWQvZGF5cycsIGNyZWF0ZUNvaG9ydERheXMpO1xuXG5yb3V0ZXIucGF0Y2goJy86Y29ob3J0X2lkL3Nwb3R0ZXJzL3Jlc2V0JywgYWxsb3dTdXBlckFkbWluT25seSwgcmVzZXRTcG90dGVycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getCohorts",
        "getCohortByName",
        "getCohort",
        "post",
        "createCohort",
        "patch",
        "updateCohort",
        "delete",
        "deleteCohort",
        "getCohortDays",
        "createCohortDays",
        "allowSuperAdminOnly",
        "resetSpotters"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAGA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,kBAAhB;AACAJ,OAAOG,GAAP,CAAW,cAAX,EAA2BE,uBAA3B;AACAL,OAAOG,GAAP,CAAW,SAAX,EAAsBG,iBAAtB;AACAN,OAAOO,IAAP,CAAY,GAAZ,EAAiBC,oBAAjB;AACAR,OAAOS,KAAP,CAAa,MAAb,EAAqBC,oBAArB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,oBAAtB;;AAEAZ,OAAOG,GAAP,CAAW,kBAAX,EAA+BU,kBAA/B;AACA;;;;;;;;AAQAb,OAAOO,IAAP,CAAY,kBAAZ,EAAgCO,qBAAhC;;AAEAd,OAAOS,KAAP,CAAa,4BAAb,EAA2CM,0BAA3C,EAAgEC,qBAAhE;;kBAEehB,M",
      "file": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport { getCohortDays, createCohortDays } from '../controllers/day.controller';\nimport { getCohortByName, getCohorts, getCohort, createCohort, updateCohort, deleteCohort, resetSpotters } from '../controllers/cohort.controller';\nimport { allowSuperAdminOnly } from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', getCohorts);\nrouter.get('/:cohortName', getCohortByName);\nrouter.get('/id/:id', getCohort);\nrouter.post('/', createCohort);\nrouter.patch('/:id', updateCohort);\nrouter.delete('/:id', deleteCohort);\n\nrouter.get('/:cohort_id/days', getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', allowSuperAdminOnly, resetSpotters);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/roles.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "allowSuperAdminOnly"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "allowSuperAdminOnly",
              "exported": "allowSuperAdminOnly"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/roles.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/roles.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "roles.controller.js",
      "sourceFileName": "roles.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "roles.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.allowSuperAdminOnly = undefined;\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Restrict students in these routes\nvar allowSuperAdminOnly = exports.allowSuperAdminOnly = function allowSuperAdminOnly(req, res, next) {\n  switch (req.jwtData.scope) {\n    case _authScopes2.default.ALL:\n    case _authScopes2.default.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGVzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiYWxsb3dTdXBlckFkbWluT25seSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIkFMTCIsIlNVUEVSQURNSU4iLCJzdGF0dXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztBQUVBO0FBQ08sSUFBTUEsb0RBQXNCLFNBQXRCQSxtQkFBc0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDckQsVUFBT0YsSUFBSUcsT0FBSixDQUFZQyxLQUFuQjtBQUNFLFNBQUtDLHFCQUFZQyxHQUFqQjtBQUNBLFNBQUtELHFCQUFZRSxVQUFqQjtBQUNFTDtBQUNBO0FBQ0Y7QUFDRUQsVUFBSU8sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLG1DQUFyQjtBQU5KO0FBUUQsQ0FUTSIsImZpbGUiOiJyb2xlcy5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVVUSF9TQ09QRVMgZnJvbSAnLi4vdXRpbC9hdXRoU2NvcGVzJztcblxuLy8gUmVzdHJpY3Qgc3R1ZGVudHMgaW4gdGhlc2Ugcm91dGVzXG5leHBvcnQgY29uc3QgYWxsb3dTdXBlckFkbWluT25seSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBzd2l0Y2gocmVxLmp3dERhdGEuc2NvcGUpIHtcbiAgICBjYXNlIEFVVEhfU0NPUEVTLkFMTDpcbiAgICBjYXNlIEFVVEhfU0NPUEVTLlNVUEVSQURNSU46XG4gICAgICBuZXh0KCk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoJ1lvdSBkbyBub3QgaGF2ZSBhZG1pbiBwcml2aWxlZ2VzIScpO1xuICB9XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "roles.controller.js"
      ],
      "names": [
        "allowSuperAdminOnly",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "ALL",
        "SUPERADMIN",
        "status",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACO,IAAMA,oDAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrD,UAAOF,IAAIG,OAAJ,CAAYC,KAAnB;AACE,SAAKC,qBAAYC,GAAjB;AACA,SAAKD,qBAAYE,UAAjB;AACEL;AACA;AACF;AACED,UAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mCAArB;AANJ;AAQD,CATM",
      "file": "roles.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import AUTH_SCOPES from '../util/authScopes';\n\n// Restrict students in these routes\nexport const allowSuperAdminOnly = (req, res, next) => {\n  switch(req.jwtData.scope) {\n    case AUTH_SCOPES.ALL:\n    case AUTH_SCOPES.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/educator.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/educator.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/educator.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/educator.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.routes.js",
      "sourceFileName": "educator.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _educator = require('../controllers/educator.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _educator.getAll);\nrouter.post('/', _educator.create);\nrouter.get('/:id', _educator.getOne);\nrouter.patch('/:id', _educator.update);\nrouter.delete('/:id', _educator.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwiZ2V0IiwiZ2V0QWxsIiwicG9zdCIsImNyZWF0ZSIsImdldE9uZSIsInBhdGNoIiwidXBkYXRlIiwiZGVsZXRlIiwiZGVsZXRlT25lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGdCQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsZ0JBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxnQkFBbkI7QUFDQVAsT0FBT1EsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLGdCQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsbUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJlZHVjYXRvci5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2VkdWNhdG9yLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,gBAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,gBAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,gBAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,gBAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,mBAAtB;;kBAEeX,M",
      "file": "educator.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/educator.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/educator.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/educator.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/educator.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.controller.js",
      "sourceFileName": "educator.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user2.default.find({ $or: [{ role: _user.USER_ROLES.EDUCATOR }, { role: _user.USER_ROLES.SUPERADMIN }] }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(req);\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role;\n\n  new _user2.default({ name: name, email: email, profile: profile, role: role }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  _user2.default.findByIdAndUpdate(req.params.id).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiZ2V0QWxsIiwicmVxIiwicmVzIiwiUmVzb3VyY2UiLCJmaW5kIiwiJG9yIiwicm9sZSIsIlVTRVJfUk9MRVMiLCJFRFVDQVRPUiIsIlNVUEVSQURNSU4iLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwibmFtZSIsImVtYWlsIiwicHJvZmlsZSIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsQ0FBYyxFQUFFQyxLQUFJLENBQUUsRUFBQ0MsTUFBTUMsaUJBQVdDLFFBQWxCLEVBQUYsRUFBK0IsRUFBQ0YsTUFBTUMsaUJBQVdFLFVBQWxCLEVBQS9CLENBQU4sRUFBZCxFQUFxRkMsSUFBckYsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVQsSUFBSVUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPWixJQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNqQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNnQixRQUFULENBQWtCbEIsSUFBSW1CLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENxQixVQUFRQyxHQUFSLENBQVl2QixHQUFaO0FBRGtDLGtCQUVJQSxJQUFJd0IsSUFGUjtBQUFBLE1BRTNCQyxJQUYyQixhQUUzQkEsSUFGMkI7QUFBQSxNQUVyQkMsS0FGcUIsYUFFckJBLEtBRnFCO0FBQUEsTUFFZEMsT0FGYyxhQUVkQSxPQUZjO0FBQUEsTUFFTHRCLElBRkssYUFFTEEsSUFGSzs7QUFHbEMsTUFBSUgsY0FBSixDQUFhLEVBQUN1QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUFiLEVBQTRDdUIsSUFBNUMsR0FDQ2xCLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlhLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQixFQUFDQyxVQUFELEVBQXJCLENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pTLFlBQVFDLEdBQVIsQ0FBWVAsR0FBWjtBQUNBZixRQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCO0FBQTBCLEdBSjVCO0FBS0QsQ0FSTTs7QUFVQSxJQUFNYSwwQkFBUyxTQUFUQSxNQUFTLENBQUM3QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVM0QixpQkFBVCxDQUEyQjlCLElBQUltQixNQUFKLENBQVdDLEVBQXRDLEVBQ0NWLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTWUsZ0NBQVksU0FBWkEsU0FBWSxDQUFDL0IsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTOEIsTUFBVCxDQUFnQixFQUFDQyxLQUFJakMsSUFBSW1CLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1ULElBQUlpQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDckIsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoiZWR1Y2F0b3IuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc291cmNlLCB7IFVTRVJfUk9MRVMgfSBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCh7ICRvcjpbIHtyb2xlOiBVU0VSX1JPTEVTLkVEVUNBVE9SfSwge3JvbGU6IFVTRVJfUk9MRVMuU1VQRVJBRE1JTn0gXX0pLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zb2xlLmxvZyhyZXEpXG4gIGNvbnN0IHtuYW1lLCBlbWFpbCwgcHJvZmlsZSwgcm9sZSB9ID0gcmVxLmJvZHk7XG4gIG5ldyBSZXNvdXJjZSh7bmFtZSwgZW1haWwsIHByb2ZpbGUsIHJvbGUgfSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4gcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "$or",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "SUPERADMIN",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "email",
        "profile",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,CAAc,EAAEC,KAAI,CAAE,EAACC,MAAMC,iBAAWC,QAAlB,EAAF,EAA+B,EAACF,MAAMC,iBAAWE,UAAlB,EAA/B,CAAN,EAAd,EAAqFC,IAArF,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACjB,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASgB,QAAT,CAAkBlB,IAAImB,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACrB,GAAD,EAAMC,GAAN,EAAc;AAClCqB,UAAQC,GAAR,CAAYvB,GAAZ;AADkC,kBAEIA,IAAIwB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,KAFqB,aAErBA,KAFqB;AAAA,MAEdC,OAFc,aAEdA,OAFc;AAAA,MAELtB,IAFK,aAELA,IAFK;;AAGlC,MAAIH,cAAJ,CAAa,EAACuB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAAb,EAA4CuB,IAA5C,GACClB,IADD,CACM;AAAA,WAAQT,IAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAf,QAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMa,0BAAS,SAATA,MAAS,CAAC7B,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAAS4B,iBAAT,CAA2B9B,IAAImB,MAAJ,CAAWC,EAAtC,EACCV,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMe,gCAAY,SAAZA,SAAY,CAAC/B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS8B,MAAT,CAAgB,EAACC,KAAIjC,IAAImB,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMT,IAAIiC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "educator.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource, { USER_ROLES } from '../models/user';\n\nexport const getAll = (req, res) => {\n  Resource.find({ $or:[ {role: USER_ROLES.EDUCATOR}, {role: USER_ROLES.SUPERADMIN} ]}).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(req)\n  const {name, email, profile, role } = req.body;\n  new Resource({name, email, profile, role }).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  Resource.findByIdAndUpdate(req.params.id)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/student.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/student.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/student.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.routes.js",
      "sourceFileName": "student.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _student = require('../controllers/student.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _student.getAll);\nrouter.post('/', _student.create);\nrouter.get('/:id', _student.getOne);\nrouter.patch('/:id', _student.update);\nrouter.delete('/:id', _student.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsZUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLGVBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxlQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsZUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGtCQUF0Qjs7a0JBRWVYLE0iLCJmaWxlIjoic3R1ZGVudC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3N0dWRlbnQuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,eAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,eAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,eAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,eAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,kBAAtB;;kBAEeX,M",
      "file": "student.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/student.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/prompt.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/prompt.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/prompt.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/prompt.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.routes.js",
      "sourceFileName": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _prompt = require('../controllers/prompt.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _prompt.getAll);\nrouter.post('/', _prompt.create);\nrouter.get('/:id', _prompt.getOne);\nrouter.patch('/:id', _prompt.update);\nrouter.delete('/:id', _prompt.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsInBvc3QiLCJjcmVhdGUiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImRlbGV0ZSIsImRlbGV0ZU9uZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxjQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsY0FBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLGNBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxjQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsaUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwcm9tcHQucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9wcm9tcHQuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,cAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,cAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,cAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,cAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,iBAAtB;;kBAEeX,M",
      "file": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/prompt.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/prompt.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/prompt.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/prompt.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.controller.js",
      "sourceFileName": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _prompt = require(\"../models/prompt\");\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _prompt2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _prompt2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Prompt\");\n  var _req$body = req.body,\n      name = _req$body.name,\n      duration = _req$body.duration,\n      pings = _req$body.pings,\n      type = _req$body.type;\n\n  console.log(req);\n  new _prompt2.default({ name: name, duration: duration, pings: pings, type: type }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      name = _req$body2.name,\n      type = _req$body2.type,\n      duration = _req$body2.duration,\n      pings = _req$body2.pings,\n      tags = _req$body2.tags;\n\n  _prompt2.default.findByIdAndUpdate(req.params.id, { name: name, type: type, duration: duration, pings: pings, tags: tags }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _prompt2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.sendStatus(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldEFsbCIsInJlcSIsInJlcyIsIlJlc291cmNlIiwiZmluZCIsImV4ZWMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJuYW1lIiwiZHVyYXRpb24iLCJwaW5ncyIsInR5cGUiLCJzYXZlIiwidXBkYXRlIiwidGFncyIsImZpbmRCeUlkQW5kVXBkYXRlIiwiZGVsZXRlT25lIiwicmVtb3ZlIiwiX2lkIiwic2VuZFN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFTyxJQUFNQSwwQkFBUyxTQUFUQSxNQUFTLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU0MsSUFBVCxHQUFnQkMsSUFBaEIsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU1csUUFBVCxDQUFrQmIsSUFBSWMsTUFBSixDQUFXQyxFQUE3QixFQUFpQ1gsSUFBakMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNSywwQkFBUyxTQUFUQSxNQUFTLENBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ2dCLFVBQVFDLEdBQVIsQ0FBWSxrQkFBWjtBQURrQyxrQkFFSWxCLElBQUltQixJQUZSO0FBQUEsTUFFM0JDLElBRjJCLGFBRTNCQSxJQUYyQjtBQUFBLE1BRXJCQyxRQUZxQixhQUVyQkEsUUFGcUI7QUFBQSxNQUVYQyxLQUZXLGFBRVhBLEtBRlc7QUFBQSxNQUVKQyxJQUZJLGFBRUpBLElBRkk7O0FBR2xDTixVQUFRQyxHQUFSLENBQVlsQixHQUFaO0FBQ0EsTUFBSUUsZ0JBQUosQ0FBYSxFQUFDa0IsVUFBRCxFQUFPQyxrQkFBUCxFQUFpQkMsWUFBakIsRUFBd0JDLFVBQXhCLEVBQWIsRUFBNENDLElBQTVDLEdBQ0NuQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU8sZUFBTztBQUNaUyxZQUFRQyxHQUFSLENBQVlQLEdBQVo7QUFDQVYsUUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQjtBQUEwQixHQUo1QjtBQUtELENBVE07O0FBV0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDekIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxtQkFDWUQsSUFBSW1CLElBRGhCO0FBQUEsTUFDMUJDLElBRDBCLGNBQzFCQSxJQUQwQjtBQUFBLE1BQ3BCRyxJQURvQixjQUNwQkEsSUFEb0I7QUFBQSxNQUNkRixRQURjLGNBQ2RBLFFBRGM7QUFBQSxNQUNKQyxLQURJLGNBQ0pBLEtBREk7QUFBQSxNQUNHSSxJQURILGNBQ0dBLElBREg7O0FBRWxDeEIsbUJBQVN5QixpQkFBVCxDQUEyQjNCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUssVUFBRixFQUFRRyxVQUFSLEVBQWNGLGtCQUFkLEVBQXdCQyxZQUF4QixFQUErQkksVUFBL0IsRUFBMUMsRUFDQ3JCLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWlCLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzVCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxtQkFBUzJCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSTlCLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUk4QixVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDdkIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSThCLFVBQUosQ0FBZSxHQUFmLEVBQW9CckIsSUFBcEIsQ0FBeUJDLEdBQXpCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwcm9tcHQuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc291cmNlIGZyb20gJy4uL21vZGVscy9wcm9tcHQnO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2coXCJJbiBjcmVhdGUgUHJvbXB0XCIpXG4gIGNvbnN0IHtuYW1lLCBkdXJhdGlvbiwgcGluZ3MsIHR5cGV9ID0gcmVxLmJvZHk7XG4gIGNvbnNvbGUubG9nKHJlcSk7XG4gIG5ldyBSZXNvdXJjZSh7bmFtZSwgZHVyYXRpb24sIHBpbmdzLCB0eXBlfSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4gcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IG5hbWUsIHR5cGUsIGR1cmF0aW9uLCBwaW5ncywgdGFncyB9ID0gcmVxLmJvZHk7XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHsgbmFtZSwgdHlwZSwgZHVyYXRpb24sIHBpbmdzLCB0YWdzIH0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKCgpID0+IHJlcy5zZW5kU3RhdHVzKDIwNCkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnNlbmRTdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "duration",
        "pings",
        "type",
        "save",
        "update",
        "tags",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClCgB,UAAQC,GAAR,CAAY,kBAAZ;AADkC,kBAEIlB,IAAImB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,QAFqB,aAErBA,QAFqB;AAAA,MAEXC,KAFW,aAEXA,KAFW;AAAA,MAEJC,IAFI,aAEJA,IAFI;;AAGlCN,UAAQC,GAAR,CAAYlB,GAAZ;AACA,MAAIE,gBAAJ,CAAa,EAACkB,UAAD,EAAOC,kBAAP,EAAiBC,YAAjB,EAAwBC,UAAxB,EAAb,EAA4CC,IAA5C,GACCnB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CATM;;AAWA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACYD,IAAImB,IADhB;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBG,IADoB,cACpBA,IADoB;AAAA,MACdF,QADc,cACdA,QADc;AAAA,MACJC,KADI,cACJA,KADI;AAAA,MACGI,IADH,cACGA,IADH;;AAElCxB,mBAASyB,iBAAT,CAA2B3B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEK,UAAF,EAAQG,UAAR,EAAcF,kBAAd,EAAwBC,YAAxB,EAA+BI,UAA/B,EAA1C,EACCrB,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMiB,gCAAY,SAAZA,SAAY,CAAC5B,GAAD,EAAMC,GAAN,EAAc;AACrCC,mBAAS2B,MAAT,CAAgB,EAACC,KAAI9B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI8B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECvB,KAFD,CAEO;AAAA,WAAOP,IAAI8B,UAAJ,CAAe,GAAf,EAAoBrB,IAApB,CAAyBC,GAAzB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/prompt';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Prompt\")\n  const {name, duration, pings, type} = req.body;\n  console.log(req);\n  new Resource({name, duration, pings, type}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const { name, type, duration, pings, tags } = req.body;\n  Resource.findByIdAndUpdate(req.params.id, { name, type, duration, pings, tags })\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.sendStatus(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/prompt.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/prompt.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/prompt.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.js",
      "sourceFileName": "prompt.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nmodule.exports = _mongoose2.default.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping'\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkdXJhdGlvbiIsIk51bWJlciIsInRhZ3MiLCJwaW5ncyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJkYXRhIiwiTWl4ZWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQRSxPQUFPQyxPQUFQLEdBQWlCRixtQkFBU0csS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUosTUFBSixDQUFXO0FBQ25ESyxRQUFNO0FBQ0pDLFVBQU1DLE1BREY7QUFFSkMsY0FBVTtBQUZOLEdBRDZDO0FBS25EQyxZQUFVQyxNQUx5QyxFQUtqQztBQUNsQkMsUUFBTSxDQUFDSixNQUFELENBTjZDO0FBT25ESyxTQUFPLENBQUM7QUFDTk4sVUFBTU4sT0FBT2EsS0FBUCxDQUFhQyxRQURiO0FBRU5DLFNBQUs7QUFGQyxHQUFELENBUDRDO0FBV25EVCxRQUFNQyxNQVg2QztBQVluRFMsUUFBTWhCLE9BQU9hLEtBQVAsQ0FBYUk7QUFaZ0MsQ0FBWCxDQUF6QixDQUFqQiIsImZpbGUiOiJwcm9tcHQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnUHJvbXB0JywgbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZHVyYXRpb246IE51bWJlciwgLy8gaW4gTWludXRlc1xuICB0YWdzOiBbU3RyaW5nXSxcbiAgcGluZ3M6IFt7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1BpbmcnLFxuICB9XSxcbiAgdHlwZTogU3RyaW5nLFxuICBkYXRhOiBTY2hlbWEuVHlwZXMuTWl4ZWRcbn0pKTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "module",
        "exports",
        "model",
        "name",
        "type",
        "String",
        "required",
        "duration",
        "Number",
        "tags",
        "pings",
        "Types",
        "ObjectId",
        "ref",
        "data",
        "Mixed"
      ],
      "mappings": ";;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEPE,OAAOC,OAAP,GAAiBF,mBAASG,KAAT,CAAe,QAAf,EAAyB,IAAIJ,MAAJ,CAAW;AACnDK,QAAM;AACJC,UAAMC,MADF;AAEJC,cAAU;AAFN,GAD6C;AAKnDC,YAAUC,MALyC,EAKjC;AAClBC,QAAM,CAACJ,MAAD,CAN6C;AAOnDK,SAAO,CAAC;AACNN,UAAMN,OAAOa,KAAP,CAAaC,QADb;AAENC,SAAK;AAFC,GAAD,CAP4C;AAWnDT,QAAMC,MAX6C;AAYnDS,QAAMhB,OAAOa,KAAP,CAAaI;AAZgC,CAAX,CAAzB,CAAjB",
      "file": "prompt.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nmodule.exports = mongoose.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping',\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/ping.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/ping.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/ping.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/ping.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.routes.js",
      "sourceFileName": "ping.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _ping = require('../controllers/ping.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _ping.getAll);\nrouter.post('/', _ping.create);\nrouter.get('/:id', _ping.getOne);\nrouter.patch('/:id', _ping.update);\nrouter.delete('/:id', _ping.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwaW5nLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcGluZy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "ping.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/ping.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/ping.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/ping.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/ping.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.controller.js",
      "sourceFileName": "ping.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _ping2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _ping2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      type = _req$body.type,\n      ttl = _req$body.ttl,\n      tags = _req$body.tags,\n      data = _req$body.data;\n\n  new _ping2.default({ type: type, ttl: ttl, tags: tags, data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      type = _req$body2.type,\n      ttl = _req$body2.ttl,\n      tags = _req$body2.tags,\n      data = _req$body2.data;\n\n  _ping2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _ping2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImJvZHkiLCJ0eXBlIiwidHRsIiwidGFncyIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxrQkFDRkQsSUFBSWlCLElBREY7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEdBRHFCLGFBQ3JCQSxHQURxQjtBQUFBLE1BQ2hCQyxJQURnQixhQUNoQkEsSUFEZ0I7QUFBQSxNQUNWYixJQURVLGFBQ1ZBLElBRFU7O0FBRWxDLE1BQUlMLGNBQUosQ0FBYSxFQUFDZ0IsVUFBRCxFQUFPQyxRQUFQLEVBQVlDLFVBQVosRUFBa0JiLFVBQWxCLEVBQWIsRUFBc0NjLElBQXRDLEdBQ0NoQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FMTTs7QUFPQSxJQUFNVywwQkFBUyxTQUFUQSxNQUFTLENBQUN0QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLG1CQUNERCxJQUFJaUIsSUFESDtBQUFBLE1BQzFCQyxJQUQwQixjQUMxQkEsSUFEMEI7QUFBQSxNQUNwQkMsR0FEb0IsY0FDcEJBLEdBRG9CO0FBQUEsTUFDZkMsSUFEZSxjQUNmQSxJQURlO0FBQUEsTUFDVGIsSUFEUyxjQUNUQSxJQURTOztBQUVsQ0wsaUJBQVNxQixpQkFBVCxDQUEyQnZCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUcsVUFBRixFQUFRQyxRQUFSLEVBQWFDLFVBQWIsRUFBbUJiLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWEsZ0NBQVksU0FBWkEsU0FBWSxDQUFDeEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTdUIsTUFBVCxDQUFnQixFQUFDQyxLQUFJMUIsSUFBSWMsTUFBSixDQUFXQyxFQUFoQixFQUFoQixFQUFxQ1gsSUFBckMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBTUosSUFBSTBCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNuQixLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwaW5nLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dHlwZSwgdHRsLCB0YWdzLCBkYXRhfSA9IHJlcS5ib2R5O1xuICBuZXcgUmVzb3VyY2Uoe3R5cGUsIHR0bCwgdGFncywgZGF0YX0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyB0eXBlLCB0dGwsIHRhZ3MsIGRhdGF9ID0gcmVxLmJvZHlcbiAgUmVzb3VyY2UuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgeyB0eXBlLCB0dGwsIHRhZ3MsIGRhdGF9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UucmVtb3ZlKHtfaWQ6cmVxLnBhcmFtcy5pZH0pLmV4ZWMoKVxuICAudGhlbigoKSA9PiByZXMuc2VuZFN0YXR1cygyMDQpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "type",
        "ttl",
        "tags",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACFD,IAAIiB,IADF;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,GADqB,aACrBA,GADqB;AAAA,MAChBC,IADgB,aAChBA,IADgB;AAAA,MACVb,IADU,aACVA,IADU;;AAElC,MAAIL,cAAJ,CAAa,EAACgB,UAAD,EAAOC,QAAP,EAAYC,UAAZ,EAAkBb,UAAlB,EAAb,EAAsCc,IAAtC,GACChB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMW,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACDD,IAAIiB,IADH;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBC,GADoB,cACpBA,GADoB;AAAA,MACfC,IADe,cACfA,IADe;AAAA,MACTb,IADS,cACTA,IADS;;AAElCL,iBAASqB,iBAAT,CAA2BvB,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEG,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBb,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMa,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAASuB,MAAT,CAAgB,EAACC,KAAI1B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI0B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECnB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "ping.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/ping';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {type, ttl, tags, data} = req.body;\n  new Resource({type, ttl, tags, data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const { type, ttl, tags, data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/ping.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getIntentionPing"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getIntentionPing",
              "exported": "getIntentionPing"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/ping.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/ping.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.js",
      "sourceFileName": "ping.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIntentionPing = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Ping = _mongoose2.default.model('Ping', new Schema({\n  data: Schema.Types.Mixed,\n  tags: [],\n  ttl: Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String\n}));\n\nvar getIntentionPing = exports.getIntentionPing = function getIntentionPing() {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var pingData, ping;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pingData = { type: 'Intention' };\n              _context.next = 3;\n              return Ping.findOne(pingData).exec();\n\n            case 3:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 6:\n              _context.next = 8;\n              return new Ping(pingData).save();\n\n            case 8:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 11:\n\n              reject();\n\n            case 12:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nexports.default = Ping;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJQaW5nIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInRhZ3MiLCJ0dGwiLCJOdW1iZXIiLCJ0eXBlIiwiU3RyaW5nIiwia2luZCIsInF1ZXN0aW9uVHlwZSIsImdldEludGVudGlvblBpbmciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInBpbmdEYXRhIiwiZmluZE9uZSIsImV4ZWMiLCJwaW5nIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLFFBQUssRUFGd0M7QUFHN0NDLE9BQUlDLE1BSHlDLEVBR2pDO0FBQ1pDLFFBQU1DLE1BSnVDO0FBSzdDQyxRQUFNRCxNQUx1QztBQU03Q0UsZ0JBQWNGO0FBTitCLENBQVgsQ0FBdkIsQ0FBYjs7QUFTTyxJQUFNRyw4Q0FBbUIsU0FBbkJBLGdCQUFtQjtBQUFBLFNBQU0sSUFBSUMsT0FBSjtBQUFBLHVFQUFZLGlCQUFPQyxPQUFQLEVBQWdCQyxNQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDNUNDLHNCQUQ0QyxHQUNqQyxFQUFDUixNQUFNLFdBQVAsRUFEaUM7QUFBQTtBQUFBLHFCQUUvQlIsS0FBS2lCLE9BQUwsQ0FBYUQsUUFBYixFQUF1QkUsSUFBdkIsRUFGK0I7O0FBQUE7QUFFNUNDLGtCQUY0Qzs7QUFBQSxvQkFHN0NBLFNBQVMsSUFIb0M7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBSXZDTCxRQUFRSyxJQUFSLENBSnVDOztBQUFBO0FBQUE7QUFBQSxxQkFPbkMsSUFBSW5CLElBQUosQ0FBU2dCLFFBQVQsRUFBbUJJLElBQW5CLEVBUG1DOztBQUFBO0FBT2hERCxrQkFQZ0Q7O0FBQUEsb0JBUTdDQSxTQUFTLElBUm9DO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVN2Q0wsUUFBUUssSUFBUixDQVR1Qzs7QUFBQTs7QUFZaERKOztBQVpnRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQU47QUFBQSxDQUF6Qjs7a0JBZ0JRZixJIiwiZmlsZSI6InBpbmcuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuY29uc3QgUGluZyA9IG1vbmdvb3NlLm1vZGVsKCdQaW5nJywgbmV3IFNjaGVtYSh7XG4gIGRhdGE6U2NoZW1hLlR5cGVzLk1peGVkLFxuICB0YWdzOltdLFxuICB0dGw6TnVtYmVyLCAvL3NlY29uZHNcbiAgdHlwZTogU3RyaW5nLFxuICBraW5kOiBTdHJpbmcsXG4gIHF1ZXN0aW9uVHlwZTogU3RyaW5nLFxufSkpO1xuXG5leHBvcnQgY29uc3QgZ2V0SW50ZW50aW9uUGluZyA9ICgpID0+IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgbGV0IHBpbmdEYXRhID0ge3R5cGU6ICdJbnRlbnRpb24nfVxuICBsZXQgcGluZyA9IGF3YWl0IFBpbmcuZmluZE9uZShwaW5nRGF0YSkuZXhlYygpO1xuICBpZihwaW5nICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIHJlc29sdmUocGluZyk7XG4gIH1cblxuICBwaW5nID0gYXdhaXQgbmV3IFBpbmcocGluZ0RhdGEpLnNhdmUoKTtcbiAgaWYocGluZyAhPT0gbnVsbCkge1xuICAgIHJldHVybiByZXNvbHZlKHBpbmcpO1xuICB9XG5cbiAgcmVqZWN0KCk7XG5cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBQaW5nO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Ping",
        "model",
        "data",
        "Types",
        "Mixed",
        "tags",
        "ttl",
        "Number",
        "type",
        "String",
        "kind",
        "questionType",
        "getIntentionPing",
        "Promise",
        "resolve",
        "reject",
        "pingData",
        "findOne",
        "exec",
        "ping",
        "save"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,QAAK,EAFwC;AAG7CC,OAAIC,MAHyC,EAGjC;AACZC,QAAMC,MAJuC;AAK7CC,QAAMD,MALuC;AAM7CE,gBAAcF;AAN+B,CAAX,CAAvB,CAAb;;AASO,IAAMG,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5CC,sBAD4C,GACjC,EAACR,MAAM,WAAP,EADiC;AAAA;AAAA,qBAE/BR,KAAKiB,OAAL,CAAaD,QAAb,EAAuBE,IAAvB,EAF+B;;AAAA;AAE5CC,kBAF4C;;AAAA,oBAG7CA,SAAS,IAHoC;AAAA;AAAA;AAAA;;AAAA,+CAIvCL,QAAQK,IAAR,CAJuC;;AAAA;AAAA;AAAA,qBAOnC,IAAInB,IAAJ,CAASgB,QAAT,EAAmBI,IAAnB,EAPmC;;AAAA;AAOhDD,kBAPgD;;AAAA,oBAQ7CA,SAAS,IARoC;AAAA;AAAA;AAAA;;AAAA,+CASvCL,QAAQK,IAAR,CATuC;;AAAA;;AAYhDJ;;AAZgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA,CAAzB;;kBAgBQf,I",
      "file": "ping.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Ping = mongoose.model('Ping', new Schema({\n  data:Schema.Types.Mixed,\n  tags:[],\n  ttl:Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String,\n}));\n\nexport const getIntentionPing = () => new Promise(async (resolve, reject) => {\n  let pingData = {type: 'Intention'}\n  let ping = await Ping.findOne(pingData).exec();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  ping = await new Ping(pingData).save();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  reject();\n\n});\n\nexport default Ping;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/pingpong.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "addPong"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/pingpong.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/pingpong.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.routes.js",
      "sourceFileName": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.post('/:pingpong_id/pongs', _pingpong2.default);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmdwb25nLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwicG9zdCIsImFkZFBvbmciXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLElBQVAsQ0FBWSxxQkFBWixFQUFtQ0Msa0JBQW5DOztrQkFFZUosTSIsImZpbGUiOiJwaW5ncG9uZy5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBhZGRQb25nIGZyb20gJy4uL2NvbnRyb2xsZXJzL3Bpbmdwb25nLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIucG9zdCgnLzpwaW5ncG9uZ19pZC9wb25ncycsIGFkZFBvbmcpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "post",
        "addPong"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,IAAP,CAAY,qBAAZ,EAAmCC,kBAAnC;;kBAEeJ,M",
      "file": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport addPong from '../controllers/pingpong.controller';\n\nconst router = Express.Router();\n\nrouter.post('/:pingpong_id/pongs', addPong);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/pingpong.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "../models/ping",
            "imported": [
              "getIntentionPing"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getIntentionPing",
                "local": "getIntentionPing"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "addPong",
            "populatePingpongs",
            "resetPingpongs"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "addPong",
              "exported": "addPong"
            },
            {
              "kind": "local",
              "local": "populatePingpongs",
              "exported": "populatePingpongs"
            },
            {
              "kind": "local",
              "local": "resetPingpongs",
              "exported": "resetPingpongs"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/pingpong.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/pingpong.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.controller.js",
      "sourceFileName": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetPingpongs = exports.populatePingpongs = exports.addPong = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _prompt2 = require('../models/prompt');\n\nvar _prompt3 = _interopRequireDefault(_prompt2);\n\nvar _ping = require('../models/ping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar addPong = exports.addPong = function addPong(req, res) {\n  var pong = req.body.pong;\n  var pingpong_id = req.params.pingpong_id;\n\n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n\n  _day2.default.findOneAndUpdate({ 'pingpongs._id': pingpong_id }, { $set: { 'pingpongs.$.pong': pong } }).then(function (data) {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({ data: data });\n    }\n  }).catch(function (err) {\n    res.sendStatus(500);\n  });\n};\n\nvar createPingPong = function createPingPong(ping, user, day, triggerTime) {\n  var pingpong = {\n    triggerTime: triggerTime,\n    ping: ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user);\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n};\n\nvar populatePingpongs = exports.populatePingpongs = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(day) {\n    var users, timeline, pingpongs, intentionPing, i, _timeline$i, prompt, startTime, _prompt, pings, _loop, k;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _user2.default.find({\n              currentCohort: day.cohort\n            });\n\n          case 2:\n            users = _context.sent;\n\n\n            // get all prompts from day timeline\n            // for all prompt\n\n            timeline = day.timeline, pingpongs = day.pingpongs;\n            _context.next = 6;\n            return (0, _ping.getIntentionPing)();\n\n          case 6:\n            intentionPing = _context.sent;\n\n            day.pingpongs = users.map(function (user) {\n              return createPingPong(intentionPing, user, day);\n            });\n\n            i = 0;\n\n          case 9:\n            if (!(i < timeline.length)) {\n              _context.next = 25;\n              break;\n            }\n\n            _timeline$i = timeline[i], prompt = _timeline$i.prompt, startTime = _timeline$i.startTime;\n\n            startTime.setDate(day.date.getDate());\n            startTime.setFullYear(day.date.getFullYear());\n            startTime.setMonth(day.date.getMonth());\n            console.log(\"Prompt\" + prompt);\n\n            _context.next = 17;\n            return _prompt3.default.findById(prompt);\n\n          case 17:\n            prompt = _context.sent;\n            _prompt = prompt, pings = _prompt.pings;\n\n            console.log(\"PINGS\" + pings);\n\n            _loop = function _loop() {\n              var ping = pings[k];\n              console.log(ping);\n\n              var triggerTime = new Date(startTime.valueOf() + prompt.duration * 60 * 1000);\n\n              day.pingpongs = users.map(function (user) {\n                return createPingPong(ping, user, day, triggerTime);\n              }).concat(day.pingpongs);\n              // console.log(pingpongs)\n            };\n\n            for (k = 0; k < pings.length; k++) {\n              _loop();\n            }\n\n          case 22:\n            i++;\n            _context.next = 9;\n            break;\n\n          case 25:\n\n            console.log(\"PING POPULATE:\");\n            return _context.abrupt('return', day);\n\n          case 27:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function populatePingpongs(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar resetPingpongs = exports.resetPingpongs = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _day2.default.findById(req.params.day_id);\n\n          case 3:\n            day = _context2.sent;\n            _context2.next = 6;\n            return populatePingpongs(day);\n\n          case 6:\n            day = _context2.sent;\n\n            day.save();\n            data = day.pingpongs;\n\n            res.send({ data: data });\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 12]]);\n  }));\n\n  return function resetPingpongs(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.default = addPong;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.controller.js"
      ],
      "names": [
        "addPong",
        "req",
        "res",
        "pong",
        "body",
        "pingpong_id",
        "params",
        "Day",
        "findOneAndUpdate",
        "$set",
        "then",
        "data",
        "status",
        "send",
        "json",
        "catch",
        "sendStatus",
        "createPingPong",
        "ping",
        "user",
        "day",
        "triggerTime",
        "pingpong",
        "by",
        "type",
        "to",
        "getStudentPair",
        "populatePingpongs",
        "User",
        "find",
        "currentCohort",
        "cohort",
        "users",
        "timeline",
        "pingpongs",
        "intentionPing",
        "map",
        "i",
        "length",
        "prompt",
        "startTime",
        "setDate",
        "date",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "console",
        "log",
        "Prompt",
        "findById",
        "pings",
        "k",
        "Date",
        "valueOf",
        "duration",
        "concat",
        "resetPingpongs",
        "day_id",
        "save"
      ],
      "mappings": "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",
      "file": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport Day from '../models/day';\nimport User from '../models/user';\nimport Prompt from '../models/prompt';\nimport {getIntentionPing} from '../models/ping';\n\nexport const addPong = (req,res) => {\n  const{pong} = req.body;\n  let {pingpong_id} = req.params\n  \n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n  Day.findOneAndUpdate(\n    {'pingpongs._id': pingpong_id},\n    {$set:{'pingpongs.$.pong':pong}},\n  ).then(data => {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({data});\n    }\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n\nconst createPingPong = (ping, user, day, triggerTime) => {\n  let pingpong = {\n    triggerTime,\n    ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user)\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n}\n\n\nexport const populatePingpongs = async (day) => {\n  let users = await User.find({\n    currentCohort: day.cohort\n  });\n\n  // get all prompts from day timeline\n  // for all prompt\n\n  let {timeline,pingpongs} = day;\n\n  let intentionPing = await getIntentionPing();\n  day.pingpongs = users.map(user => createPingPong(intentionPing, user, day));\n\n  for (var i = 0; i < timeline.length; i++) {\n    let {prompt, startTime} = timeline[i];\n    startTime.setDate(day.date.getDate());\n    startTime.setFullYear(day.date.getFullYear());\n    startTime.setMonth(day.date.getMonth());\n    console.log(\"Prompt\"+prompt)\n\n    prompt = await Prompt.findById(prompt);\n    let {pings} = prompt;\n    console.log(\"PINGS\"+pings)\n\n    for (var k = 0; k < pings.length; k++) {\n      let ping = pings[k];\n      console.log(ping)\n\n      let triggerTime = new Date(startTime.valueOf() + prompt.duration*60*1000);\n\n      day.pingpongs = users.map(user => createPingPong(ping, user, day, triggerTime)).concat(day.pingpongs);\n      // console.log(pingpongs)\n    }\n\n  }\n\n  console.log(\"PING POPULATE:\")\n  return day\n}\n\n\nexport const resetPingpongs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id);\n    day = await populatePingpongs(day);\n    day.save();\n    const data = day.pingpongs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport default addPong;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/mailer.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/mailer.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/mailer.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.routes.js",
      "sourceFileName": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar router = require('express').Router();\n\nvar _require = require('../controllers/mailer.controller'),\n    mailer = _require.mailer,\n    submit = _require.submit;\n\nrouter.get('/', mailer);\nrouter.post('/submit', submit);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsIm1haWxlciIsInN1Ym1pdCIsImdldCIsInBvc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVNDLFFBQVEsU0FBUixFQUFtQkMsTUFBbkIsRUFBZjs7ZUFFeUJELFFBQVEsa0NBQVIsQztJQUFsQkUsTSxZQUFBQSxNO0lBQVFDLE0sWUFBQUEsTTs7QUFFZkosT0FBT0ssR0FBUCxDQUFXLEdBQVgsRUFBZ0JGLE1BQWhCO0FBQ0FILE9BQU9NLElBQVAsQ0FBWSxTQUFaLEVBQXVCRixNQUF2Qjs7QUFFQUcsT0FBT0MsT0FBUCxHQUFpQlIsTUFBakIiLCJmaWxlIjoibWFpbGVyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvdXRlciA9IHJlcXVpcmUoJ2V4cHJlc3MnKS5Sb3V0ZXIoKVxuXG5jb25zdCB7bWFpbGVyLCBzdWJtaXR9ID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvbWFpbGVyLmNvbnRyb2xsZXInKVxuXG5yb3V0ZXIuZ2V0KCcvJywgbWFpbGVyKVxucm91dGVyLnBvc3QoJy9zdWJtaXQnLCBzdWJtaXQpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.routes.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "mailer",
        "submit",
        "get",
        "post",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;eAEyBD,QAAQ,kCAAR,C;IAAlBE,M,YAAAA,M;IAAQC,M,YAAAA,M;;AAEfJ,OAAOK,GAAP,CAAW,GAAX,EAAgBF,MAAhB;AACAH,OAAOM,IAAP,CAAY,SAAZ,EAAuBF,MAAvB;;AAEAG,OAAOC,OAAP,GAAiBR,MAAjB",
      "file": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "const router = require('express').Router()\n\nconst {mailer, submit} = require('../controllers/mailer.controller')\n\nrouter.get('/', mailer)\nrouter.post('/submit', submit)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/mailer.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "nodemailer",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "nodemailer"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/mailer.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/mailer.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.controller.js",
      "sourceFileName": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _nodemailer = require('nodemailer');\n\nvar _nodemailer2 = _interopRequireDefault(_nodemailer);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n'use strict';\n\n// transport service using which it can send emails in this case gmail\nvar transporter = _nodemailer2.default.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.MAILER_EMAIL,\n    pass: process.env.MAILER_PASSWORD\n  }\n});\n\nvar mailer = function mailer(req, res) {\n  res.send('/client/emailSender.html');\n};\n\nvar submit = function submit(req, res) {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal' // plain text body\n  };\n\n  _user2.default.find({ email: req.body.email.toString() }, function (err, existingUser) {\n    if (!err && existingUser.length != 0) {\n      transporter.sendMail(mailOptions, function (err, info) {\n        if (err) console.log(err);else console.log(info);\n      });\n\n      res.redirect('/');\n    }\n  });\n};\n\nmodule.exports = { mailer: mailer, submit: submit };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInRyYW5zcG9ydGVyIiwibm9kZW1haWxlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJhdXRoIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJNQUlMRVJfRU1BSUwiLCJwYXNzIiwiTUFJTEVSX1BBU1NXT1JEIiwibWFpbGVyIiwicmVxIiwicmVzIiwic2VuZCIsInN1Ym1pdCIsIm1haWxPcHRpb25zIiwiZnJvbSIsInRvIiwiYm9keSIsImVtYWlsIiwidG9TdHJpbmciLCJzdWJqZWN0IiwiaHRtbCIsIlVzZXIiLCJmaW5kIiwiZXJyIiwiZXhpc3RpbmdVc2VyIiwibGVuZ3RoIiwic2VuZE1haWwiLCJpbmZvIiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBOztBQUVBO0FBQ0EsSUFBSUEsY0FBY0MscUJBQVdDLGVBQVgsQ0FBMkI7QUFDNUNDLFdBQVMsT0FEbUM7QUFFNUNDLFFBQU07QUFDQ0MsVUFBTUMsUUFBUUMsR0FBUixDQUFZQyxZQURuQjtBQUVDQyxVQUFNSCxRQUFRQyxHQUFSLENBQVlHO0FBRm5CO0FBRnNDLENBQTNCLENBQWxCOztBQVFBLElBQU1DLFNBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQkEsTUFBSUMsSUFBSixDQUFTLDBCQUFUO0FBQ0QsQ0FGRDs7QUFJQSxJQUFNQyxTQUFTLFNBQVRBLE1BQVMsQ0FBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7O0FBRTNCO0FBQ0EsTUFBSUcsY0FBYztBQUNoQkMsVUFBTVgsUUFBUUMsR0FBUixDQUFZQyxZQURGLEVBQ2dCO0FBQ2hDVSxRQUFJTixJQUFJTyxJQUFKLENBQVNDLEtBQVQsQ0FBZUMsUUFBZixFQUZZLEVBRWU7QUFDL0JDLGFBQVMsOEJBSE8sRUFHeUI7QUFDekNDLFVBQU0sMkZBSlUsQ0FJaUY7QUFKakYsR0FBbEI7O0FBT0FDLGlCQUFLQyxJQUFMLENBQVUsRUFBQ0wsT0FBT1IsSUFBSU8sSUFBSixDQUFTQyxLQUFULENBQWVDLFFBQWYsRUFBUixFQUFWLEVBQThDLFVBQVNLLEdBQVQsRUFBY0MsWUFBZCxFQUEyQjtBQUN2RSxRQUFHLENBQUNELEdBQUQsSUFBU0MsYUFBYUMsTUFBYixJQUF1QixDQUFuQyxFQUF1QztBQUNyQzVCLGtCQUFZNkIsUUFBWixDQUFxQmIsV0FBckIsRUFBa0MsVUFBVVUsR0FBVixFQUFlSSxJQUFmLEVBQXFCO0FBQ3ZELFlBQUdKLEdBQUgsRUFDRUssUUFBUUMsR0FBUixDQUFZTixHQUFaLEVBREYsS0FHRUssUUFBUUMsR0FBUixDQUFZRixJQUFaO0FBQ0QsT0FMRDs7QUFPQWpCLFVBQUlvQixRQUFKLENBQWEsR0FBYjtBQUNEO0FBQ0YsR0FYRDtBQVlELENBdEJEOztBQXdCQUMsT0FBT0MsT0FBUCxHQUFpQixFQUFDeEIsY0FBRCxFQUFTSSxjQUFULEVBQWpCIiwiZmlsZSI6Im1haWxlci5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbm9kZW1haWxlciBmcm9tICdub2RlbWFpbGVyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgVXNlciBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbid1c2Ugc3RyaWN0J1xuXG4vLyB0cmFuc3BvcnQgc2VydmljZSB1c2luZyB3aGljaCBpdCBjYW4gc2VuZCBlbWFpbHMgaW4gdGhpcyBjYXNlIGdtYWlsXG52YXIgdHJhbnNwb3J0ZXIgPSBub2RlbWFpbGVyLmNyZWF0ZVRyYW5zcG9ydCh7XG4gc2VydmljZTogJ2dtYWlsJyxcbiBhdXRoOiB7XG4gICAgICAgIHVzZXI6IHByb2Nlc3MuZW52Lk1BSUxFUl9FTUFJTCxcbiAgICAgICAgcGFzczogcHJvY2Vzcy5lbnYuTUFJTEVSX1BBU1NXT1JEXG4gICAgfVxufSk7XG5cbmNvbnN0IG1haWxlciA9IChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZCgnL2NsaWVudC9lbWFpbFNlbmRlci5odG1sJylcbn1cblxuY29uc3Qgc3VibWl0ID0gKHJlcSwgcmVzKSA9PiB7XG5cbiAgLy8gY29uZmlndXJhdGlvbiBvYmplY3Qgd2hlcmUgd2Ugd2lsbCBjb25maWd1cmUgYWxsIGVtYWlsIGRldGFpbHNcbiAgdmFyIG1haWxPcHRpb25zID0ge1xuICAgIGZyb206IHByb2Nlc3MuZW52Lk1BSUxFUl9FTUFJTCwgLy8gc2VuZGVyIGFkZHJlc3NcbiAgICB0bzogcmVxLmJvZHkuZW1haWwudG9TdHJpbmcoKSwgLy8gbGlzdCBvZiByZWNlaXZlcnNcbiAgICBzdWJqZWN0OiAnUGxlYXNlIFNpZ25VcCB0byBTT0FMIFBvcnRhbCcsIC8vIFN1YmplY3QgbGluZVxuICAgIGh0bWw6ICc8cD5IaSBjbGljayBvbiB0aGlzIDwvcD48YT5saW5rPC9hPjxwPiB0byBTaWduVXAgdG8gU2Nob29sIG9mIEFjY2VsZXJhdGVkIExlYXJuaW5nIFBvcnRhbCcvLyBwbGFpbiB0ZXh0IGJvZHlcbiAgfTtcblxuICBVc2VyLmZpbmQoe2VtYWlsOiByZXEuYm9keS5lbWFpbC50b1N0cmluZygpfSwgZnVuY3Rpb24oZXJyLCBleGlzdGluZ1VzZXIpe1xuICAgIGlmKCFlcnIgJiYgKGV4aXN0aW5nVXNlci5sZW5ndGggIT0gMCkpIHtcbiAgICAgIHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxPcHRpb25zLCBmdW5jdGlvbiAoZXJyLCBpbmZvKSB7XG4gICAgICBpZihlcnIpXG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgIGVsc2VcbiAgICAgICAgY29uc29sZS5sb2coaW5mbyk7XG4gICAgICB9KVxuXG4gICAgICByZXMucmVkaXJlY3QoJy8nKVxuICAgIH1cbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7bWFpbGVyLCBzdWJtaXR9Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.controller.js"
      ],
      "names": [
        "transporter",
        "nodemailer",
        "createTransport",
        "service",
        "auth",
        "user",
        "process",
        "env",
        "MAILER_EMAIL",
        "pass",
        "MAILER_PASSWORD",
        "mailer",
        "req",
        "res",
        "send",
        "submit",
        "mailOptions",
        "from",
        "to",
        "body",
        "email",
        "toString",
        "subject",
        "html",
        "User",
        "find",
        "err",
        "existingUser",
        "length",
        "sendMail",
        "info",
        "console",
        "log",
        "redirect",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;AAEA;AACA,IAAIA,cAAcC,qBAAWC,eAAX,CAA2B;AAC5CC,WAAS,OADmC;AAE5CC,QAAM;AACCC,UAAMC,QAAQC,GAAR,CAAYC,YADnB;AAECC,UAAMH,QAAQC,GAAR,CAAYG;AAFnB;AAFsC,CAA3B,CAAlB;;AAQA,IAAMC,SAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,MAAIC,IAAJ,CAAS,0BAAT;AACD,CAFD;;AAIA,IAAMC,SAAS,SAATA,MAAS,CAACH,GAAD,EAAMC,GAAN,EAAc;;AAE3B;AACA,MAAIG,cAAc;AAChBC,UAAMX,QAAQC,GAAR,CAAYC,YADF,EACgB;AAChCU,QAAIN,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAFY,EAEe;AAC/BC,aAAS,8BAHO,EAGyB;AACzCC,UAAM,2FAJU,CAIiF;AAJjF,GAAlB;;AAOAC,iBAAKC,IAAL,CAAU,EAACL,OAAOR,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAAR,EAAV,EAA8C,UAASK,GAAT,EAAcC,YAAd,EAA2B;AACvE,QAAG,CAACD,GAAD,IAASC,aAAaC,MAAb,IAAuB,CAAnC,EAAuC;AACrC5B,kBAAY6B,QAAZ,CAAqBb,WAArB,EAAkC,UAAUU,GAAV,EAAeI,IAAf,EAAqB;AACvD,YAAGJ,GAAH,EACEK,QAAQC,GAAR,CAAYN,GAAZ,EADF,KAGEK,QAAQC,GAAR,CAAYF,IAAZ;AACD,OALD;;AAOAjB,UAAIoB,QAAJ,CAAa,GAAb;AACD;AACF,GAXD;AAYD,CAtBD;;AAwBAC,OAAOC,OAAP,GAAiB,EAACxB,cAAD,EAASI,cAAT,EAAjB",
      "file": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import nodemailer from 'nodemailer';\nimport mongoose from 'mongoose';\nimport User from '../models/user';\n\n'use strict'\n\n// transport service using which it can send emails in this case gmail\nvar transporter = nodemailer.createTransport({\n service: 'gmail',\n auth: {\n        user: process.env.MAILER_EMAIL,\n        pass: process.env.MAILER_PASSWORD\n    }\n});\n\nconst mailer = (req, res) => {\n  res.send('/client/emailSender.html')\n}\n\nconst submit = (req, res) => {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal'// plain text body\n  };\n\n  User.find({email: req.body.email.toString()}, function(err, existingUser){\n    if(!err && (existingUser.length != 0)) {\n      transporter.sendMail(mailOptions, function (err, info) {\n      if(err)\n        console.log(err)\n      else\n        console.log(info);\n      })\n\n      res.redirect('/')\n    }\n  })\n}\n\nmodule.exports = {mailer, submit}"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/day.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getOne",
              "dayDetails",
              "update",
              "getAll",
              "addPromptToTimeline",
              "getToday",
              "updatePongs",
              "addContentToDay",
              "removePromptFromTimeline",
              "resetPairs",
              "resetDay"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "dayDetails",
                "local": "dayDetails"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "addPromptToTimeline",
                "local": "addPromptToTimeline"
              },
              {
                "kind": "named",
                "imported": "getToday",
                "local": "getToday"
              },
              {
                "kind": "named",
                "imported": "updatePongs",
                "local": "updatePongs"
              },
              {
                "kind": "named",
                "imported": "addContentToDay",
                "local": "addContentToDay"
              },
              {
                "kind": "named",
                "imported": "removePromptFromTimeline",
                "local": "removePromptFromTimeline"
              },
              {
                "kind": "named",
                "imported": "resetPairs",
                "local": "resetPairs"
              },
              {
                "kind": "named",
                "imported": "resetDay",
                "local": "resetDay"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "resetPingpongs"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetPingpongs",
                "local": "resetPingpongs"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/day.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/day.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.routes.js",
      "sourceFileName": "day.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _user = require('../controllers/user.controller');\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', _day.getAll);\nrouter.get('/:dayNumber/dn', _day.dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', _user.populateCurrentUser, _day.getToday);\nrouter.get('/:day_id/dId', _day.getOne);\nrouter.patch('/:day_id', _day.update);\nrouter.patch('/:day_id/timeline', _day.addPromptToTimeline);\nrouter.patch('/:day_id/content', _day.addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', _day.removePromptFromTimeline);\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', _day.resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', _pingpong.resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', _day.resetPairs);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsImRheURldGFpbHMiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0VG9kYXkiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImFkZFByb21wdFRvVGltZWxpbmUiLCJhZGRDb250ZW50VG9EYXkiLCJyZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUiLCJyZXNldERheSIsInJlc2V0UGluZ3BvbmdzIiwicmVzZXRQYWlycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUE7Ozs7OztBQU1BRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsV0FBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGdCQUFYLEVBQTZCRSxlQUE3QjtBQUNBO0FBQ0FMLE9BQU9HLEdBQVAsQ0FBVyxRQUFYLEVBQXFCRyx5QkFBckIsRUFBMENDLGFBQTFDO0FBQ0FQLE9BQU9HLEdBQVAsQ0FBVyxjQUFYLEVBQTJCSyxXQUEzQjtBQUNBUixPQUFPUyxLQUFQLENBQWEsVUFBYixFQUF5QkMsV0FBekI7QUFDQVYsT0FBT1MsS0FBUCxDQUFhLG1CQUFiLEVBQWtDRSx3QkFBbEM7QUFDQVgsT0FBT1MsS0FBUCxDQUFhLGtCQUFiLEVBQWlDRyxvQkFBakM7QUFDQVosT0FBT1MsS0FBUCxDQUFhLGlDQUFiLEVBQWdESSw2QkFBaEQ7O0FBRUE7Ozs7Ozs7OztBQVNBYixPQUFPUyxLQUFQLENBQWEsZ0JBQWIsRUFBK0JLLGFBQS9COztBQUVBOzs7Ozs7O0FBT0FkLE9BQU9TLEtBQVAsQ0FBYSwwQkFBYixFQUF5Q00sd0JBQXpDOztBQUVBOzs7Ozs7O0FBT0FmLE9BQU9TLEtBQVAsQ0FBYSxzQkFBYixFQUFxQ08sZUFBckM7O2tCQUVlaEIsTSIsImZpbGUiOiJkYXkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldE9uZSwgZGF5RGV0YWlscywgdXBkYXRlLCBnZXRBbGwsIGFkZFByb21wdFRvVGltZWxpbmUsIGdldFRvZGF5LFxuICB1cGRhdGVQb25ncywgYWRkQ29udGVudFRvRGF5LCByZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUsIHJlc2V0UGFpcnMsIHJlc2V0RGF5fSBmcm9tICcuLi9jb250cm9sbGVycy9kYXkuY29udHJvbGxlcic7XG5pbXBvcnQge3BvcHVsYXRlQ3VycmVudFVzZXJ9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlcic7XG5pbXBvcnQge3Jlc2V0UGluZ3BvbmdzfSBmcm9tICcuLi9jb250cm9sbGVycy9waW5ncG9uZy5jb250cm9sbGVyJztcbmltcG9ydCB7YWxsb3dTdXBlckFkbWluT25seX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcm9sZXMuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbi8qKlxuICogQGFwaSB7Z2V0fSAvZGF5cyBHZXQgYWxsIGRheXNcbiAqIEBhcGlIZWFkZXIge1N0cmluZ30gYXV0aG9yaXphdGlvbiBKV1QgVG9rZW4uXG4gKiBAYXBpTmFtZSBHZXREYXlzXG4gKiBAYXBpR3JvdXAgRGF5XG4gKi9cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLmdldCgnLzpkYXlOdW1iZXIvZG4nLCBkYXlEZXRhaWxzKTtcbi8vIEFzc3VtaW5nIG9ubHkgc3R1ZGVudHMgd2lsbCBiZSBhY2Nlc3NpbmcgdGhlIHBhdGhcbnJvdXRlci5nZXQoJy90b2RheScsIHBvcHVsYXRlQ3VycmVudFVzZXIsIGdldFRvZGF5KTtcbnJvdXRlci5nZXQoJy86ZGF5X2lkL2RJZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkJywgdXBkYXRlKTtcbnJvdXRlci5wYXRjaCgnLzpkYXlfaWQvdGltZWxpbmUnLCBhZGRQcm9tcHRUb1RpbWVsaW5lKTtcbnJvdXRlci5wYXRjaCgnLzpkYXlfaWQvY29udGVudCcsIGFkZENvbnRlbnRUb0RheSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3RpbWVsaW5lcy86dGltZWxpbmVfaWQnLCByZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUpXG5cbi8qKlxuICogQGFwaSB7cGF0Y2h9IC9kYXlzLzpkYXlfaWQvcmVzZXQgUmVzZXQgZGF5IG9mIGEgY29ob3J0XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXREYXlcbiAqIEBhcGlHcm91cCBEYXlcbiAqXG4gKiBAYXBpUGFyYW0ge1N0cmluZ30gcmVwbGljYXRlIERheSB1bmlxdWUgSUQgdG8gY29weSBmcm9tLlxuICovXG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3Jlc2V0JywgcmVzZXREYXkpO1xuXG4vKipcbiAqIEBhcGkge3BhdGNofSAvOmRheV9pZC9waW5ncG9uZ3MvcmVzZXQgUmVzZXQgcGluZ3BvbmdzIGZvciB0aGUgZGF5XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXRQaW5ncG9uZ3NcbiAqIEBhcGlHcm91cCBEYXlcbiAqL1xucm91dGVyLnBhdGNoKCcvOmRheV9pZC9waW5ncG9uZ3MvcmVzZXQnLCByZXNldFBpbmdwb25ncyk7XG5cbi8qKlxuICogQGFwaSB7cGF0Y2h9IC86ZGF5X2lkL3BhaXJzL3Jlc2V0IFJlc2V0IHBhaXJzIGZvciB0aGUgZGF5XG4gKiBAYXBpUGVybWlzc2lvbiBub25lXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgUmVzZXRQYWlyc1xuICogQGFwaUdyb3VwIERheVxuICovXG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3BhaXJzL3Jlc2V0JywgcmVzZXRQYWlycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "dayDetails",
        "populateCurrentUser",
        "getToday",
        "getOne",
        "patch",
        "update",
        "addPromptToTimeline",
        "addContentToDay",
        "removePromptFromTimeline",
        "resetDay",
        "resetPingpongs",
        "resetPairs"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,WAAhB;AACAJ,OAAOG,GAAP,CAAW,gBAAX,EAA6BE,eAA7B;AACA;AACAL,OAAOG,GAAP,CAAW,QAAX,EAAqBG,yBAArB,EAA0CC,aAA1C;AACAP,OAAOG,GAAP,CAAW,cAAX,EAA2BK,WAA3B;AACAR,OAAOS,KAAP,CAAa,UAAb,EAAyBC,WAAzB;AACAV,OAAOS,KAAP,CAAa,mBAAb,EAAkCE,wBAAlC;AACAX,OAAOS,KAAP,CAAa,kBAAb,EAAiCG,oBAAjC;AACAZ,OAAOS,KAAP,CAAa,iCAAb,EAAgDI,6BAAhD;;AAEA;;;;;;;;;AASAb,OAAOS,KAAP,CAAa,gBAAb,EAA+BK,aAA/B;;AAEA;;;;;;;AAOAd,OAAOS,KAAP,CAAa,0BAAb,EAAyCM,wBAAzC;;AAEA;;;;;;;AAOAf,OAAOS,KAAP,CAAa,sBAAb,EAAqCO,eAArC;;kBAEehB,M",
      "file": "day.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getOne, dayDetails, update, getAll, addPromptToTimeline, getToday,\n  updatePongs, addContentToDay, removePromptFromTimeline, resetPairs, resetDay} from '../controllers/day.controller';\nimport {populateCurrentUser} from '../controllers/user.controller';\nimport {resetPingpongs} from '../controllers/pingpong.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', getAll);\nrouter.get('/:dayNumber/dn', dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', populateCurrentUser, getToday);\nrouter.get('/:day_id/dId', getOne);\nrouter.patch('/:day_id', update);\nrouter.patch('/:day_id/timeline', addPromptToTimeline);\nrouter.patch('/:day_id/content', addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', removePromptFromTimeline)\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', resetPairs);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/admin.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/admin.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "switchUser"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/admin.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/admin.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.routes.js",
      "sourceFileName": "admin.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _admin = require('../controllers/admin.controller');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_roles.allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', _admin2.default);\n\nrouter.use('*', function (req, res) {\n  return res.sendStatus(404);\n});\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwidXNlIiwiYWxsb3dTdXBlckFkbWluT25seSIsInN3aXRjaFVzZXIiLCJyZXEiLCJyZXMiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVdDLDBCQUFYO0FBQ0FKLE9BQU9HLEdBQVAsQ0FBVyx1QkFBWCxFQUFvQ0UsZUFBcEM7O0FBRUFMLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNHLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLElBQUlDLFVBQUosQ0FBZSxHQUFmLENBQWQ7QUFBQSxDQUFoQjtrQkFDZVIsTSIsImZpbGUiOiJhZG1pbi5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBzd2l0Y2hVc2VyIGZyb20gJy4uL2NvbnRyb2xsZXJzL2FkbWluLmNvbnRyb2xsZXInO1xuaW1wb3J0IHthbGxvd1N1cGVyQWRtaW5Pbmx5fSBmcm9tICcuLi9jb250cm9sbGVycy9yb2xlcy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnVzZShhbGxvd1N1cGVyQWRtaW5Pbmx5KTtcbnJvdXRlci51c2UoJy9zd2l0Y2hfdXNlci86dXNlcl9pZCcsIHN3aXRjaFVzZXIpO1xuXG5yb3V0ZXIudXNlKCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZFN0YXR1cyg0MDQpKTtcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "allowSuperAdminOnly",
        "switchUser",
        "req",
        "res",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,0BAAX;AACAJ,OAAOG,GAAP,CAAW,uBAAX,EAAoCE,eAApC;;AAEAL,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;kBACeR,M",
      "file": "admin.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport switchUser from '../controllers/admin.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\nrouter.use(allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', switchUser);\n\nrouter.use('*', (req, res) => res.sendStatus(404));\nexport default router;"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/admin.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/admin.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/admin.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.controller.js",
      "sourceFileName": "admin.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _token = require('../util/token');\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n// get Access as a student with id\nvar switchUser = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var user_id, user, soalToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user_id = req.params.user_id;\n            _context.prev = 1;\n            _context.next = 4;\n            return _user2.default.findById(user_id).exec();\n\n          case 4:\n            user = _context.sent;\n            soalToken = (0, _token.getSoalToken)(user);\n\n            res.send({ soalToken: soalToken });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context['catch'](1);\n\n            console.log(_context.t0);\n            res.status(404).send('User not found with id ' + user_id);\n\n          case 13:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined, [[1, 9]]);\n  }));\n\n  return function switchUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.default = switchUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsic3dpdGNoVXNlciIsInJlcSIsInJlcyIsInVzZXJfaWQiLCJwYXJhbXMiLCJVc2VyIiwiZmluZEJ5SWQiLCJleGVjIiwidXNlciIsInNvYWxUb2tlbiIsInNlbmQiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQTtBQUNBLElBQU1BO0FBQUEscUVBQWEsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVkMsbUJBRFUsR0FDQ0YsSUFBSUcsTUFETCxDQUNWRCxPQURVO0FBQUE7QUFBQTtBQUFBLG1CQUlJRSxlQUFLQyxRQUFMLENBQWNILE9BQWQsRUFBdUJJLElBQXZCLEVBSko7O0FBQUE7QUFJVEMsZ0JBSlM7QUFLVEMscUJBTFMsR0FLRyx5QkFBYUQsSUFBYixDQUxIOztBQU1mTixnQkFBSVEsSUFBSixDQUFTLEVBQUNELG9CQUFELEVBQVQ7QUFOZTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFRZkUsb0JBQVFDLEdBQVI7QUFDQVYsZ0JBQUlXLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQiw2QkFBK0NQLE9BQS9DOztBQVRlO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7a0JBYWVILFUiLCJmaWxlIjoiYWRtaW4uY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZXRTb2FsVG9rZW59IGZyb20gJy4uL3V0aWwvdG9rZW4nO1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG4vLyBnZXQgQWNjZXNzIGFzIGEgc3R1ZGVudCB3aXRoIGlkXG5jb25zdCBzd2l0Y2hVc2VyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHt1c2VyX2lkfSA9IHJlcS5wYXJhbXM7XG5cbiAgdHJ5e1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKHVzZXJfaWQpLmV4ZWMoKTtcbiAgICBjb25zdCBzb2FsVG9rZW4gPSBnZXRTb2FsVG9rZW4odXNlcik7XG4gICAgcmVzLnNlbmQoe3NvYWxUb2tlbn0pO1xuICB9IGNhdGNoKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDQwNCkuc2VuZChgVXNlciBub3QgZm91bmQgd2l0aCBpZCAke3VzZXJfaWR9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgc3dpdGNoVXNlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.controller.js"
      ],
      "names": [
        "switchUser",
        "req",
        "res",
        "user_id",
        "params",
        "User",
        "findById",
        "exec",
        "user",
        "soalToken",
        "send",
        "console",
        "log",
        "status"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;;;;;;;AAEA;AACA,IAAMA;AAAA,qEAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,mBADU,GACCF,IAAIG,MADL,CACVD,OADU;AAAA;AAAA;AAAA,mBAIIE,eAAKC,QAAL,CAAcH,OAAd,EAAuBI,IAAvB,EAJJ;;AAAA;AAITC,gBAJS;AAKTC,qBALS,GAKG,yBAAaD,IAAb,CALH;;AAMfN,gBAAIQ,IAAJ,CAAS,EAACD,oBAAD,EAAT;AANe;AAAA;;AAAA;AAAA;AAAA;;AAQfE,oBAAQC,GAAR;AACAV,gBAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,6BAA+CP,OAA/C;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAaeH,U",
      "file": "admin.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import {getSoalToken} from '../util/token';\nimport User from '../models/user';\n\n// get Access as a student with id\nconst switchUser = async (req, res) => {\n  const {user_id} = req.params;\n\n  try{\n    const user = await User.findById(user_id).exec();\n    const soalToken = getSoalToken(user);\n    res.send({soalToken});\n  } catch(err) {\n    console.log(err)\n    res.status(404).send(`User not found with id ${user_id}`);\n  }\n}\n\nexport default switchUser;\n"
      ]
    },
    "mtime": 1559213788619
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/todo.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/todo.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne",
              "getStudentToDos",
              "updateAll",
              "deleteMultiple"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              },
              {
                "kind": "named",
                "imported": "getStudentToDos",
                "local": "getStudentToDos"
              },
              {
                "kind": "named",
                "imported": "updateAll",
                "local": "updateAll"
              },
              {
                "kind": "named",
                "imported": "deleteMultiple",
                "local": "deleteMultiple"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/todo.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/todo.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.routes.js",
      "sourceFileName": "todo.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _todo = require('../controllers/todo.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _todo.getAll);\nrouter.post('/', _todo.create);\nrouter.get('/:id', _todo.getOne);\nrouter.patch('/:id', _todo.update);\nrouter.patch('/', _todo.updateAll);\nrouter.delete('/:id', _todo.deleteOne);\nrouter.delete('/', _todo.deleteMultiple);\nrouter.get('/student/:studentID', _todo.getStudentToDos);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8ucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJ1cGRhdGVBbGwiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJkZWxldGVNdWx0aXBsZSIsImdldFN0dWRlbnRUb0RvcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxZQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsWUFBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLFlBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxZQUFyQjtBQUNBVCxPQUFPUSxLQUFQLENBQWEsR0FBYixFQUFrQkUsZUFBbEI7QUFDQVYsT0FBT1csTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FaLE9BQU9XLE1BQVAsQ0FBYyxHQUFkLEVBQW1CRSxvQkFBbkI7QUFDQWIsT0FBT0csR0FBUCxDQUFXLHFCQUFYLEVBQWtDVyxxQkFBbEM7O2tCQUdlZCxNIiwiZmlsZSI6InRvZG8ucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lLCBnZXRTdHVkZW50VG9Eb3MsIHVwZGF0ZUFsbCwgZGVsZXRlTXVsdGlwbGV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3RvZG8uY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLnBhdGNoKCcvJywgdXBkYXRlQWxsKVxucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5yb3V0ZXIuZGVsZXRlKCcvJywgZGVsZXRlTXVsdGlwbGUpXG5yb3V0ZXIuZ2V0KCcvc3R1ZGVudC86c3R1ZGVudElEJywgZ2V0U3R1ZGVudFRvRG9zKTtcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "updateAll",
        "delete",
        "deleteOne",
        "deleteMultiple",
        "getStudentToDos"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOQ,KAAP,CAAa,GAAb,EAAkBE,eAAlB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAZ,OAAOW,MAAP,CAAc,GAAd,EAAmBE,oBAAnB;AACAb,OAAOG,GAAP,CAAW,qBAAX,EAAkCW,qBAAlC;;kBAGed,M",
      "file": "todo.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne, getStudentToDos, updateAll, deleteMultiple} from '../controllers/todo.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.patch('/', updateAll)\nrouter.delete('/:id', deleteOne);\nrouter.delete('/', deleteMultiple)\nrouter.get('/student/:studentID', getStudentToDos);\n\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/todo.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/todo",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Todo"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentToDos",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "updateAll",
            "deleteMultiple"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentToDos",
              "exported": "getStudentToDos"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "updateAll",
              "exported": "updateAll"
            },
            {
              "kind": "local",
              "local": "deleteMultiple",
              "exported": "deleteMultiple"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/todo.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/todo.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.controller.js",
      "sourceFileName": "todo.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteMultiple = exports.updateAll = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentToDos = undefined;\n\nvar _user = require('../models/user');\n\nvar _todo = require('../models/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentToDos = exports.getStudentToDos = function getStudentToDos(req, res) {\n  _todo2.default.find({\n    student: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _todo2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _todo2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      text = _req$body.text,\n      student = _req$body.student,\n      createTime = _req$body.createTime,\n      color = _req$body.color;\n\n  new _todo2.default({ text: text, student: student, createTime: createTime, color: color }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _todo2.default.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _todo2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar updateAll = exports.updateAll = function updateAll(req, res) {\n  _todo2.default.update({}, { $set: { done: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteMultiple = exports.deleteMultiple = function deleteMultiple(req, res) {\n  _todo2.default.update({ done: true }, { $set: { deleted: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50VG9Eb3MiLCJyZXEiLCJyZXMiLCJUb2RvIiwiZmluZCIsInN0dWRlbnQiLCJwYXJhbXMiLCJzdHVkZW50SUQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJjb25zb2xlIiwibG9nIiwiZXJyIiwic3RhdHVzIiwic2VuZCIsImdldEFsbCIsImdldE9uZSIsImZpbmRCeUlkIiwiaWQiLCJjcmVhdGUiLCJib2R5IiwidGV4dCIsImNyZWF0ZVRpbWUiLCJjb2xvciIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiLCJ1cGRhdGVBbGwiLCIkc2V0IiwiZG9uZSIsIm11bHRpIiwiZGVsZXRlTXVsdGlwbGUiLCJkZWxldGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLDRDQUFrQixTQUFsQkEsZUFBa0IsQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDMUNDLGlCQUFLQyxJQUFMLENBQVU7QUFDVkMsYUFBU0osSUFBSUssTUFBSixDQUFXQztBQURWLEdBQVYsRUFFQ0MsSUFGRCxHQUdDQyxJQUhELENBR007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUhOLEVBSUNDLEtBSkQsQ0FJTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FQRDtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENDLGlCQUFLQyxJQUFMLEdBQVlJLElBQVosR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVAsSUFB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LFdBQVFQLElBQUlRLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWkMsWUFBUUMsR0FBUixDQUFZQyxHQUFaO0FBQ0FiLFFBQUljLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckI7QUFDRCxHQUxEO0FBTUQsQ0FQTTs7QUFTQSxJQUFNdUIsMENBQWlCLFNBQWpCQSxjQUFpQixDQUFDckMsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDMUNDLGlCQUFLeUIsTUFBTCxDQUFZLEVBQUNRLE1BQUssSUFBTixFQUFaLEVBQXlCLEVBQUNELE1BQU0sRUFBQ0ksU0FBUyxJQUFWLEVBQVAsRUFBekIsRUFBa0QsRUFBQ0YsT0FBTyxJQUFSLEVBQWxELEVBQ0M1QixJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FMRDtBQU1ELENBUE0iLCJmaWxlIjoidG9kby5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7U3R1ZGVudCwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IFRvZG8gZnJvbSAnLi4vbW9kZWxzL3RvZG8nXG5cbmV4cG9ydCBjb25zdCBnZXRTdHVkZW50VG9Eb3MgPSAocmVxLHJlcykgPT4ge1xuICBUb2RvLmZpbmQoe1xuICBzdHVkZW50OiByZXEucGFyYW1zLnN0dWRlbnRJRCxcbn0pLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKVxuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldEFsbCA9IChyZXEsIHJlcykgPT4ge1xuICBUb2RvLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFRvZG8uZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dGV4dCxzdHVkZW50LCBjcmVhdGVUaW1lLCBjb2xvcn0gPSByZXEuYm9keTtcbiAgbmV3IFRvZG8oe3RleHQsc3R1ZGVudCwgY3JlYXRlVGltZSwgY29sb3J9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiB7XG4gICAgY29uc29sZS5sb2coe2RhdGF9KTtcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pfSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBkYXRhID0gcmVxLmJvZHk7XG4gIC8vIHRvZG86IGNoZWNrIGlmIHRoZSBjdXJyZW50Q29ob3J0IGlzIHZhbGlkIGFuZCB0aGVuIGNvbnRpbnVlXG4gIFRvZG8uZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCwgZGF0YSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBUb2RvLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSkgIFxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlQWxsID0gKHJlcSwgcmVzKSA9PiB7IFxuICBUb2RvLnVwZGF0ZSh7fSwgeyRzZXQ6IHtkb25lOiB0cnVlfX0sIHttdWx0aTogdHJ1ZX0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xuICB9KVxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlTXVsdGlwbGUgPSAocmVxLCByZXMpID0+IHtcbiAgVG9kby51cGRhdGUoe2RvbmU6dHJ1ZX0sIHskc2V0OiB7ZGVsZXRlZDogdHJ1ZX19LCB7bXVsdGk6IHRydWV9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTtcbiAgfSlcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.controller.js"
      ],
      "names": [
        "getStudentToDos",
        "req",
        "res",
        "Todo",
        "find",
        "student",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "createTime",
        "color",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus",
        "updateAll",
        "$set",
        "done",
        "multi",
        "deleteMultiple",
        "deleted"
      ],
      "mappings": "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",
      "file": "todo.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "\nimport {Student, USER_ROLES} from '../models/user';\nimport Todo from '../models/todo'\n\nexport const getStudentToDos = (req,res) => {\n  Todo.find({\n  student: req.params.studentID,\n}).exec()\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)\n  });\n}\n\nexport const getAll = (req, res) => {\n  Todo.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Todo.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {text,student, createTime, color} = req.body;\n  new Todo({text,student, createTime, color}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Todo.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Todo.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n\nexport const updateAll = (req, res) => { \n  Todo.update({}, {$set: {done: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n\nexport const deleteMultiple = (req, res) => {\n  Todo.update({done:true}, {$set: {deleted: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/todo.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/todo.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/todo.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.js",
      "sourceFileName": "todo.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Todo', new Schema({\n  text: { type: String, required: true },\n  deleted: { type: Boolean, default: false },\n  done: { type: Boolean, default: false },\n  createTime: Date,\n  color: String,\n  student: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJkb25lIiwiY3JlYXRlVGltZSIsIkRhdGUiLCJjb2xvciIsInN0dWRlbnQiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0lBQ09BLE0sR0FBVUMsa0IsQ0FBVkQsTTtrQkFFUUMsbUJBQVNDLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlGLE1BQUosQ0FBVztBQUMvQ0csUUFBTSxFQUFDQyxNQUFLQyxNQUFOLEVBQWNDLFVBQVMsSUFBdkIsRUFEeUM7QUFFL0NDLFdBQVMsRUFBQ0gsTUFBS0ksT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBRnNDO0FBRy9DQyxRQUFNLEVBQUNOLE1BQUtJLE9BQU4sRUFBZUMsU0FBUSxLQUF2QixFQUh5QztBQUkvQ0UsY0FBWUMsSUFKbUM7QUFLL0NDLFNBQU9SLE1BTHdDO0FBTS9DUyxXQUFTO0FBQ0xWLFVBQU1KLE9BQU9lLEtBQVAsQ0FBYUMsUUFEZDtBQUVMQyxTQUFLO0FBRkE7QUFOc0MsQ0FBWCxDQUF2QixDIiwiZmlsZSI6InRvZG8uanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1RvZG8nLCBuZXcgU2NoZW1hKHtcbiAgdGV4dDoge3R5cGU6U3RyaW5nLCByZXF1aXJlZDp0cnVlfSxcbiAgZGVsZXRlZDoge3R5cGU6Qm9vbGVhbiwgZGVmYXVsdDpmYWxzZX0sXG4gIGRvbmU6IHt0eXBlOkJvb2xlYW4sIGRlZmF1bHQ6ZmFsc2V9LFxuICBjcmVhdGVUaW1lOiBEYXRlLFxuICBjb2xvcjogU3RyaW5nLFxuICBzdHVkZW50OiB7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH1cbiAgfSlcbilcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "deleted",
        "Boolean",
        "default",
        "done",
        "createTime",
        "Date",
        "color",
        "student",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,WAAS,EAACH,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAFsC;AAG/CC,QAAM,EAACN,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAHyC;AAI/CE,cAAYC,IAJmC;AAK/CC,SAAOR,MALwC;AAM/CS,WAAS;AACLV,UAAMJ,OAAOe,KAAP,CAAaC,QADd;AAELC,SAAK;AAFA;AANsC,CAAX,CAAvB,C",
      "file": "todo.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Todo', new Schema({\n  text: {type:String, required:true},\n  deleted: {type:Boolean, default:false},\n  done: {type:Boolean, default:false},\n  createTime: Date,\n  color: String,\n  student: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }\n  })\n)\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/note.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/note.controller",
            "imported": [
              "getStudentNotes",
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getStudentNotes",
                "local": "getStudentNotes"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/note.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/note.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.routes.js",
      "sourceFileName": "note.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _note = require('../controllers/note.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _note.getAll);\nrouter.post('/', _note.create);\nrouter.get('/:id', _note.getOne);\nrouter.patch('/:id', _note.update);\nrouter.delete('/:id', _note.deleteOne);\nrouter.get('/student/:studentID', _note.getStudentNotes);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJnZXRTdHVkZW50Tm90ZXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FYLE9BQU9HLEdBQVAsQ0FBVyxxQkFBWCxFQUFrQ1MscUJBQWxDOztrQkFFZVosTSIsImZpbGUiOiJub3RlLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRTdHVkZW50Tm90ZXMsIGdldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9ub3RlLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xucm91dGVyLmdldCgnL3N0dWRlbnQvOnN0dWRlbnRJRCcsIGdldFN0dWRlbnROb3Rlcyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne",
        "getStudentNotes"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAX,OAAOG,GAAP,CAAW,qBAAX,EAAkCS,qBAAlC;;kBAEeZ,M",
      "file": "note.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getStudentNotes, getAll, getOne, create, update, deleteOne} from '../controllers/note.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\nrouter.get('/student/:studentID', getStudentNotes);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/note.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/note",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentNotes",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentNotes",
              "exported": "getStudentNotes"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/note.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/note.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.controller.js",
      "sourceFileName": "note.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentNotes = undefined;\n\nvar _note = require(\"../models/note\");\n\nvar _note2 = _interopRequireDefault(_note);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentNotes = exports.getStudentNotes = function getStudentNotes(req, res) {\n  _note2.default.find({\n    user: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  console.log(\" in get all\");\n  _note2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _note2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Note\");\n  var _req$body = req.body,\n      text = _req$body.text,\n      user = _req$body.user,\n      color = _req$body.color,\n      createdTime = _req$body.createdTime;\n  // console.log(req);\n\n  new _note2.default({ text: text, user: user, color: color, createdTime: createdTime }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      text = _req$body2.text,\n      color = _req$body2.color,\n      deleted = _req$body2.deleted;\n\n  _note2.default.findByIdAndUpdate(req.params.id, { text: text, color: color, deleted: deleted }).then(function (data) {\n    res.json({ data: data });\n    console.log(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n\n  _note2.default.remove({ _id: req.params.id }).exec().then(function (data) {\n    return res.send(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50Tm90ZXMiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJ1c2VyIiwicGFyYW1zIiwic3R1ZGVudElEIiwiZXhlYyIsInRoZW4iLCJqc29uIiwiZGF0YSIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsImVyciIsInN0YXR1cyIsInNlbmQiLCJnZXRBbGwiLCJnZXRPbmUiLCJmaW5kQnlJZCIsImlkIiwiY3JlYXRlIiwiYm9keSIsInRleHQiLCJjb2xvciIsImNyZWF0ZWRUaW1lIiwic2F2ZSIsInVwZGF0ZSIsImRlbGV0ZWQiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFHTyxJQUFNQSw0Q0FBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNDQyxpQkFBU0MsSUFBVCxDQUFjO0FBQ1pDLFVBQU9KLElBQUlLLE1BQUosQ0FBV0M7QUFETixHQUFkLEVBRUdDLElBRkgsR0FFVUMsSUFGVixDQUVlO0FBQUEsV0FBUVAsSUFBSVEsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FGZixFQUdJQyxLQUhKLENBR1UsZUFBTztBQUNiQyxZQUFRQyxHQUFSLENBQVlDLEdBQVo7QUFDQWIsUUFBSWMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUEwQixHQUw5QjtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENXLFVBQVFDLEdBQVIsQ0FBWSxhQUFaO0FBQ0FYLGlCQUFTQyxJQUFULEdBQWdCSSxJQUFoQixHQUNDQyxJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFB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YS1hcGkvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSBmcm9tICcuLi9tb2RlbHMvbm90ZSc7XG5cblxuZXhwb3J0IGNvbnN0IGdldFN0dWRlbnROb3RlcyA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5maW5kKHtcbiAgICB1c2VyIDogcmVxLnBhcmFtcy5zdHVkZW50SURcbiAgfSkuZXhlYygpLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pXG4gICAgKS5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycil9XG4gICAgKTtcblxufVxuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiIGluIGdldCBhbGxcIik7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2coXCJJbiBjcmVhdGUgTm90ZVwiKVxuICBjb25zdCB7dGV4dCx1c2VyLGNvbG9yLGNyZWF0ZWRUaW1lfSA9IHJlcS5ib2R5O1xuICAvLyBjb25zb2xlLmxvZyhyZXEpO1xuICBuZXcgUmVzb3VyY2Uoe3RleHQsdXNlcixjb2xvcixjcmVhdGVkVGltZX0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge3RleHQsIGNvbG9yLCBkZWxldGVkfSA9IHJlcS5ib2R5O1xuICBSZXNvdXJjZS5maW5kQnlJZEFuZFVwZGF0ZShyZXEucGFyYW1zLmlkLHt0ZXh0LCBjb2xvciwgZGVsZXRlZH0pXG4gIC50aGVuKGRhdGEgPT4ge1xuICAgIHJlcy5qc29uKHtkYXRhfSk7XG4gICAgY29uc29sZS5sb2coZGF0YSk7XG4gIH0pXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgXG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKGRhdGEpID0+IHJlcy5zZW5kKGRhdGEpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.controller.js"
      ],
      "names": [
        "getStudentNotes",
        "req",
        "res",
        "Resource",
        "find",
        "user",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "color",
        "createdTime",
        "save",
        "update",
        "deleted",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id"
      ],
      "mappings": "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",
      "file": "note.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/note';\n\n\nexport const getStudentNotes = (req, res) => {\n  Resource.find({\n    user : req.params.studentID\n  }).exec().then(data => res.json({data})\n    ).catch(err => {\n      console.log(err);\n      res.status(500).send(err)}\n    );\n\n}\n\nexport const getAll = (req, res) => {\n  console.log(\" in get all\");\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Note\")\n  const {text,user,color,createdTime} = req.body;\n  // console.log(req);\n  new Resource({text,user,color,createdTime}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const {text, color, deleted} = req.body;\n  Resource.findByIdAndUpdate(req.params.id,{text, color, deleted})\n  .then(data => {\n    res.json({data});\n    console.log(data);\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  \n  Resource.remove({_id:req.params.id}).exec()\n  .then((data) => res.send(data))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/note.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "./user.js",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/note.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/note.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.js",
      "sourceFileName": "note.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('./user.js');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Note', new Schema({\n  text: { type: String, required: true },\n  createdTime: Date,\n  deleted: { type: Boolean, default: false },\n  color: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJjcmVhdGVkVGltZSIsIkRhdGUiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJjb2xvciIsInVzZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUVBOzs7Ozs7SUFET0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLE1BQWYsRUFBdUIsSUFBSUYsTUFBSixDQUFXO0FBQy9DRyxRQUFNLEVBQUNDLE1BQUtDLE1BQU4sRUFBY0MsVUFBUyxJQUF2QixFQUR5QztBQUUvQ0MsZUFBYUMsSUFGa0M7QUFHL0NDLFdBQVMsRUFBQ0wsTUFBS00sT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBSHNDO0FBSS9DQyxTQUFPUCxNQUp3QztBQUsvQ1EsUUFBTTtBQUNGVCxVQUFNSixPQUFPYyxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFNBQUs7QUFGSDs7QUFMeUMsQ0FBWCxDQUF2QixDIiwiZmlsZSI6Im5vdGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcbmltcG9ydCBVc2VyIGZyb20gXCIuL3VzZXIuanNcIjtcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdOb3RlJywgbmV3IFNjaGVtYSh7XG4gIHRleHQ6IHt0eXBlOlN0cmluZywgcmVxdWlyZWQ6dHJ1ZX0sXG4gIGNyZWF0ZWRUaW1lOiBEYXRlLFxuICBkZWxldGVkOiB7dHlwZTpCb29sZWFuLCBkZWZhdWx0OmZhbHNlfSxcbiAgY29sb3I6IFN0cmluZyxcbiAgdXNlcjoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICBcbiAgfSkpOyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "createdTime",
        "Date",
        "deleted",
        "Boolean",
        "default",
        "color",
        "user",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;AAEA;;;;;;IADOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,eAAaC,IAFkC;AAG/CC,WAAS,EAACL,MAAKM,OAAN,EAAeC,SAAQ,KAAvB,EAHsC;AAI/CC,SAAOP,MAJwC;AAK/CQ,QAAM;AACFT,UAAMJ,OAAOc,KAAP,CAAaC,QADjB;AAEFC,SAAK;AAFH;;AALyC,CAAX,CAAvB,C",
      "file": "note.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\nimport User from \"./user.js\";\nexport default mongoose.model('Note', new Schema({\n  text: {type:String, required:true},\n  createdTime: Date,\n  deleted: {type:Boolean, default:false},\n  color: String,\n  user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n  \n  }));"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/link.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/link.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/link.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/link.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.routes.js",
      "sourceFileName": "link.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _link = require('../controllers/link.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _link.getAll);\nrouter.post('/', _link.create);\nrouter.get('/:id', _link.getOne);\nrouter.patch('/:id', _link.update);\nrouter.delete('/:id', _link.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJsaW5rLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvbGluay5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "link.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/link.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559311312216
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/link.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/link",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../util/watsonURL",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getWatsonData"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/link.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/link.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.controller.js",
      "sourceFileName": "link.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _link = require('../models/link');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _watsonURL = require('../util/watsonURL');\n\nvar _watsonURL2 = _interopRequireDefault(_watsonURL);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _link2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _link2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  // console.log(\"This is links POST\")\n  console.log(req.body);\n\n  var text = req.body.text;\n\n  console.log(req.body);\n  (0, _watsonURL2.default)(text).then(function (d) {\n    // console.log(link)\n    return new _link2.default({ data: d, url: text }).save().catch(function (e) {\n      return e;\n    });\n  }).then(function (data) {\n    return res.status(200).json({\n      \"response_type\": \"in_channel\",\n      \"text\": \"Thanks for sharing! Your URL has been added\",\n      \"attachments\": [{\n        \"text\": text }]\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body = req.body,\n      url = _req$body.url,\n      data = _req$body.data;\n\n  _link2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _link2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwidGV4dCIsImQiLCJ1cmwiLCJzYXZlIiwiZSIsInVwZGF0ZSIsImZpbmRCeUlkQW5kVXBkYXRlIiwidHlwZSIsInR0bCIsInRhZ3MiLCJkZWxldGVPbmUiLCJyZW1vdmUiLCJfaWQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEM7QUFDQWdCLFVBQVFDLEdBQVIsQ0FBWWxCLElBQUltQixJQUFoQjs7QUFGa0MsTUFJM0JDLElBSjJCLEdBSW5CcEIsSUFBSW1CLElBSmUsQ0FJM0JDLElBSjJCOztBQUtsQ0gsVUFBUUMsR0FBUixDQUFZbEIsSUFBSW1CLElBQWhCO0FBQ0EsMkJBQWNDLElBQWQsRUFDQ2YsSUFERCxDQUNNLGFBQUs7QUFDVDtBQUNELFdBQU8sSUFBSUgsY0FBSixDQUFhLEVBQUNLLE1BQUtjLENBQU4sRUFBU0MsS0FBSUYsSUFBYixFQUFiLEVBQ05HLElBRE0sR0FFTmYsS0FGTSxDQUVBLGFBQUs7QUFBQyxhQUFPZ0IsQ0FBUDtBQUFTLEtBRmYsQ0FBUDtBQU1BLEdBVEQsRUFVQ25CLElBVkQsQ0FVTTtBQUFBLFdBQVFKLElBQUlRLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUNqQyx1QkFBaUIsWUFEZ0I7QUFFakMsY0FBUSw2Q0FGeUI7QUFHakMscUJBQWUsQ0FDWDtBQUNJLGdCQUFRYyxJQURaLEVBRFc7QUFIa0IsS0FBckIsQ0FBUjtBQUFBLEdBVk4sRUFrQkNaLEtBbEJELENBa0JPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FsQlA7QUFtQkE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0QsQ0FoQ007O0FBa0NBLElBQU1jLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ3pCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQUEsa0JBQ1pELElBQUltQixJQURRO0FBQUEsTUFDMUJHLEdBRDBCLGFBQzFCQSxHQUQwQjtBQUFBLE1BQ3BCZixJQURvQixhQUNwQkEsSUFEb0I7O0FBRWxDTCxpQkFBU3dCLGlCQUFULENBQTJCMUIsSUFBSWMsTUFBSixDQUFXQyxFQUF0QyxFQUEwQyxFQUFFWSxVQUFGLEVBQVFDLFFBQVIsRUFBYUMsVUFBYixFQUFtQnRCLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTW1CLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzlCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxpQkFBUzZCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSWhDLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUlnQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDekIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoibGluay5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVzb3VyY2UgZnJvbSAnLi4vbW9kZWxzL2xpbmsnO1xuaW1wb3J0IGdldFdhdHNvbkRhdGEgZnJvbSAnLi4vdXRpbC93YXRzb25VUkwnXG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChyZXEsIHJlcykgPT4ge1xuICAvLyBjb25zb2xlLmxvZyhcIlRoaXMgaXMgbGlua3MgUE9TVFwiKVxuICBjb25zb2xlLmxvZyhyZXEuYm9keSlcblxuICBjb25zdCB7dGV4dH0gPSByZXEuYm9keTtcbiAgY29uc29sZS5sb2cocmVxLmJvZHkpXG4gIGdldFdhdHNvbkRhdGEodGV4dClcbiAgLnRoZW4oZCA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cobGluaylcbiAgIHJldHVybiBuZXcgUmVzb3VyY2Uoe2RhdGE6ZCwgdXJsOnRleHR9KVxuICAgLnNhdmUoKVxuICAgLmNhdGNoKGUgPT4ge3JldHVybiBlfSlcblxuXG5cbiAgfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgXCJyZXNwb25zZV90eXBlXCI6IFwiaW5fY2hhbm5lbFwiLFxuICAgIFwidGV4dFwiOiBcIlRoYW5rcyBmb3Igc2hhcmluZyEgWW91ciBVUkwgaGFzIGJlZW4gYWRkZWRcIiAsXG4gICAgXCJhdHRhY2htZW50c1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwidGV4dFwiOiB0ZXh0ICAgICAgICB9XG4gICAgXVxufSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG4gIC8vIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuXG4gIC8vIGNvbnNvbGUubG9nKGRhdGEpXG5cbiAgLy8gY29uc3Qge3VybH0gPSByZXEuYm9keTtcbiAgLy8gbmV3IFJlc291cmNlKHt1cmwsIGRhdGF9KS5zYXZlKClcbiAgLy8gXG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyB1cmwgLCBkYXRhfSA9IHJlcS5ib2R5XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHsgdHlwZSwgdHRsLCB0YWdzLCBkYXRhfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "text",
        "d",
        "url",
        "save",
        "e",
        "update",
        "findByIdAndUpdate",
        "type",
        "ttl",
        "tags",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClC;AACAgB,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;;AAFkC,MAI3BC,IAJ2B,GAInBpB,IAAImB,IAJe,CAI3BC,IAJ2B;;AAKlCH,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;AACA,2BAAcC,IAAd,EACCf,IADD,CACM,aAAK;AACT;AACD,WAAO,IAAIH,cAAJ,CAAa,EAACK,MAAKc,CAAN,EAASC,KAAIF,IAAb,EAAb,EACNG,IADM,GAENf,KAFM,CAEA,aAAK;AAAC,aAAOgB,CAAP;AAAS,KAFf,CAAP;AAMA,GATD,EAUCnB,IAVD,CAUM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjC,uBAAiB,YADgB;AAEjC,cAAQ,6CAFyB;AAGjC,qBAAe,CACX;AACI,gBAAQc,IADZ,EADW;AAHkB,KAArB,CAAR;AAAA,GAVN,EAkBCZ,KAlBD,CAkBO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAlBP;AAmBA;;AAEA;;AAEA;AACA;AACA;AACD,CAhCM;;AAkCA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACZD,IAAImB,IADQ;AAAA,MAC1BG,GAD0B,aAC1BA,GAD0B;AAAA,MACpBf,IADoB,aACpBA,IADoB;;AAElCL,iBAASwB,iBAAT,CAA2B1B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEY,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBtB,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMmB,gCAAY,SAAZA,SAAY,CAAC9B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS6B,MAAT,CAAgB,EAACC,KAAIhC,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAIgC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECzB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "link.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/link';\nimport getWatsonData from '../util/watsonURL'\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  // console.log(\"This is links POST\")\n  console.log(req.body)\n\n  const {text} = req.body;\n  console.log(req.body)\n  getWatsonData(text)\n  .then(d => {\n    // console.log(link)\n   return new Resource({data:d, url:text})\n   .save()\n   .catch(e => {return e})\n\n\n\n  })\n  .then(data => res.status(200).json({\n    \"response_type\": \"in_channel\",\n    \"text\": \"Thanks for sharing! Your URL has been added\" ,\n    \"attachments\": [\n        {\n            \"text\": text        }\n    ]\n}))\n  .catch(err => res.status(500).send(err));\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n}\n\nexport const update = (req, res) => {\n  const { url , data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}"
      ]
    },
    "mtime": 1559349956867
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/link.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/link.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/link.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.js",
      "sourceFileName": "link.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Link = _mongoose2.default.model('Link', new Schema({\n  data: Schema.Types.Mixed,\n  url: String\n}));\n\nexports.default = Link;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJMaW5rIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInVybCIsIlN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLE9BQUtDO0FBRndDLENBQVgsQ0FBdkIsQ0FBYjs7a0JBS2VOLEkiLCJmaWxlIjoibGluay5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCB7U2NoZW1hfSA9IG1vbmdvb3NlO1xuXG5jb25zdCBMaW5rID0gbW9uZ29vc2UubW9kZWwoJ0xpbmsnLCBuZXcgU2NoZW1hKHtcbiAgZGF0YTpTY2hlbWEuVHlwZXMuTWl4ZWQsXG4gIHVybDogU3RyaW5nXG59KSk7XG5cbmV4cG9ydCBkZWZhdWx0IExpbms7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Link",
        "model",
        "data",
        "Types",
        "Mixed",
        "url",
        "String"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,OAAKC;AAFwC,CAAX,CAAvB,CAAb;;kBAKeN,I",
      "file": "link.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Link = mongoose.model('Link', new Schema({\n  data:Schema.Types.Mixed,\n  url: String\n}));\n\nexport default Link;"
      ]
    },
    "mtime": 1559311223396
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "updateUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "updateUser",
                "local": "updateUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.routes.js",
      "sourceFileName": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _user = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.patch('/', _user.updateUser);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwYXRjaCIsInVwZGF0ZVVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxLQUFQLENBQWEsR0FBYixFQUFrQkMsZ0JBQWxCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJ1c2VyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnJvdXRlci5wYXRjaCgnLycsIHVwZGF0ZVVzZXIpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.routes.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "patch",
        "updateUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,KAAP,CAAa,GAAb,EAAkBC,gBAAlB;;AAEAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import express from 'express'\nimport { updateUser } from '../controllers/user.controller'\n\nconst router = express.Router()\n\nrouter.patch('/', updateUser)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.routes.js",
      "sourceFileName": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Express = require('express');\nvar controller = require('../controllers/chrome-history.controller');\n\nvar router = Express.Router();\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert', function (req, res) {\n  var historyitem = req.body.historyitem;\n  console.log(\"welcome\");\n  var gid = req.body.getid;\n\n  //console.log(myurl);\n  var Resource = require('../models/chrome-history');\n  //console.log(historyitem);\n  for (var i = 0; i < historyitem.length; i++) {\n\n    (function (i, historyitem, gid) {\n      Resource.links.sync({ force: false }).then(function () {\n        //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip: historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        }).catch(function (err) {\n          // print the error details\n          console.log(err);\n        });\n      }).catch(function (err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n      });\n    })(i, historyitem, gid);\n  }\n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max', controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJFeHByZXNzIiwicmVxdWlyZSIsImNvbnRyb2xsZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwicmVxIiwicmVzIiwiaGlzdG9yeWl0ZW0iLCJib2R5IiwiY29uc29sZSIsImxvZyIsImdpZCIsImdldGlkIiwiUmVzb3VyY2UiLCJpIiwibGVuZ3RoIiwibGlua3MiLCJzeW5jIiwiZm9yY2UiLCJ0aGVuIiwiY3JlYXRlIiwidXNlcl9pZCIsInVybCIsImlwIiwidmlzaXRlZF90aW1lc3RhbXAiLCJ0aXRsZSIsInZpc2l0Y291bnQiLCJ1c2VyYWdlbnQiLCJjYXRjaCIsImVyciIsImVuZCIsImdldCIsImdldEFsbCIsImdldE1heCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxVQUFRQyxRQUFRLFNBQVIsQ0FBWjtBQUNBLElBQUlDLGFBQVdELFFBQVEsMENBQVIsQ0FBZjs7QUFFQSxJQUFNRSxTQUFPSCxRQUFRSSxNQUFSLEVBQWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUFELE9BQU9FLElBQVAsQ0FBWSxTQUFaLEVBQXNCLFVBQVNDLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUNuQyxNQUFJQyxjQUFZRixJQUFJRyxJQUFKLENBQVNELFdBQXpCO0FBQ0FFLFVBQVFDLEdBQVIsQ0FBWSxTQUFaO0FBQ0EsTUFBSUMsTUFBSU4sSUFBSUcsSUFBSixDQUFTSSxLQUFqQjs7QUFFQTtBQUNBLE1BQUlDLFdBQVNiLFFBQVEsMEJBQVIsQ0FBYjtBQUNBO0FBQ0EsT0FBSSxJQUFJYyxJQUFFLENBQVYsRUFBWUEsSUFBRVAsWUFBWVEsTUFBMUIsRUFBaUNELEdBQWpDLEVBQXFDOztBQUdyQyxLQUFDLFVBQVNBLENBQVQsRUFBV1AsV0FBWCxFQUF1QkksR0FBdkIsRUFBMkI7QUFBQ0UsZUFBU0csS0FBVCxDQUFlQyxJQUFmLENBQW9CLEVBQUNDLE9BQU8sS0FBUixFQUFwQixFQUFvQ0MsSUFBcEMsQ0FBeUMsWUFBWTtBQUNoRjtBQUNFLGVBQU9OLFNBQVNHLEtBQVQsQ0FBZUksTUFBZixDQUFzQjtBQUMzQkMsbUJBQVNWLEdBRGtCO0FBRTNCVyxlQUFLZixZQUFZTyxDQUFaLEVBQWVRLEdBRk87QUFHM0JDLGNBQUtoQixZQUFZTyxDQUFaLEVBQWUsSUFBZixDQUhzQjtBQUkzQlUsNkJBQW1CakIsWUFBWU8sQ0FBWixFQUFlLGVBQWYsQ0FKUTtBQUszQlcsaUJBQU9sQixZQUFZTyxDQUFaLEVBQWUsT0FBZixDQUxvQjtBQU0zQlksc0JBQVluQixZQUFZTyxDQUFaLEVBQWUsWUFBZixDQU5lO0FBTzNCYSxxQkFBV3BCLFlBQVlPLENBQVosRUFBZSxXQUFmO0FBUGdCLFNBQXRCLEVBU05jLEtBVE0sQ0FTQSxVQUFTQyxHQUFULEVBQWM7QUFDakI7QUFDQXBCLGtCQUFRQyxHQUFSLENBQVltQixHQUFaO0FBQ0gsU0FaTSxDQUFQO0FBY0QsT0FoQjBCLEVBaUIxQkQsS0FqQjBCLENBaUJwQixVQUFTQyxHQUFULEVBQWM7QUFDbkI7QUFDQXZCLFlBQUl3QixHQUFKLENBQVEsS0FBUjtBQUNBckIsZ0JBQVFDLEdBQVIsQ0FBWW1CLEdBQVo7QUFDSCxPQXJCNEI7QUFxQjFCLEtBckJILEVBcUJLZixDQXJCTCxFQXFCT1AsV0FyQlAsRUFxQm1CSSxHQXJCbkI7QUFzQkQ7QUFLRixDQXRDRDs7QUF3Q0FULE9BQU82QixHQUFQLENBQVcsYUFBWCxFQUEwQjlCLFdBQVcrQixNQUFyQztBQUNBOUIsT0FBTzZCLEdBQVAsQ0FBVyxNQUFYLEVBQWtCOUIsV0FBV2dDLE1BQTdCO0FBQ0E7O2tCQUVlL0IsTSIsImZpbGUiOiJjaHJvbWUtaGlzdG9yeS5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRXhwcmVzcz1yZXF1aXJlKCdleHByZXNzJylcbnZhciBjb250cm9sbGVyPXJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2Nocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXInKVxuXG5jb25zdCByb3V0ZXI9RXhwcmVzcy5Sb3V0ZXIoKVxuLy9jb25zb2xlLmxvZyhjb250cm9sbGVyLmluc2VydClcbi8vcm91dGVyLmdldCgnLzppZCcsIGNvbnRyb2xsZXIuZ2V0T25lKVxuLy9hcHAudXNlKCcvJyx1LnJvdXRlcilcblxucm91dGVyLnBvc3QoJy9pbnNlcnQnLGZ1bmN0aW9uKHJlcSxyZXMpeyAgXG4gICAgdmFyIGhpc3RvcnlpdGVtPXJlcS5ib2R5Lmhpc3RvcnlpdGVtO1xuICAgIGNvbnNvbGUubG9nKFwid2VsY29tZVwiKTtcbiAgICB2YXIgZ2lkPXJlcS5ib2R5LmdldGlkO1xuICAgIFxuICAgIC8vY29uc29sZS5sb2cobXl1cmwpO1xuICAgIHZhciBSZXNvdXJjZT1yZXF1aXJlKCcuLi9tb2RlbHMvY2hyb21lLWhpc3RvcnknKVxuICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW0pO1xuICAgIGZvcih2YXIgaT0wO2k8aGlzdG9yeWl0ZW0ubGVuZ3RoO2krKyl7XG4gICAgICBcbiAgXG4gICAgKGZ1bmN0aW9uKGksaGlzdG9yeWl0ZW0sZ2lkKXtSZXNvdXJjZS5saW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vY29uc29sZS5sb2coaGlzdG9yeWl0ZW1baV0pXG4gICAgICAgIHJldHVybiBSZXNvdXJjZS5saW5rcy5jcmVhdGUoe1xuICAgICAgICAgIHVzZXJfaWQ6IGdpZCxcbiAgICAgICAgICB1cmw6IGhpc3RvcnlpdGVtW2ldLnVybCxcbiAgICAgICAgICBpcDogIGhpc3RvcnlpdGVtW2ldWydpcCddLFxuICAgICAgICAgIHZpc2l0ZWRfdGltZXN0YW1wOiBoaXN0b3J5aXRlbVtpXVsnbGFzdFZpc2l0VGltZSddLFxuICAgICAgICAgIHRpdGxlOiBoaXN0b3J5aXRlbVtpXVsndGl0bGUnXSxcbiAgICAgICAgICB2aXNpdGNvdW50OiBoaXN0b3J5aXRlbVtpXVsndmlzaXRDb3VudCddLFxuICAgICAgICAgIHVzZXJhZ2VudDogaGlzdG9yeWl0ZW1baV1bJ3VzZXJBZ2VudCddXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIC8vIHByaW50IHRoZSBlcnJvciBkZXRhaWxzXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAvLyBwcmludCB0aGUgZXJyb3IgZGV0YWlsc1xuICAgICAgICByZXMuZW5kKCdoaGgnKTtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KX0pKGksaGlzdG9yeWl0ZW0sZ2lkKTtcbiAgfVxuXG4gXG4gIFxuICAgIFxufSk7XG5cbnJvdXRlci5nZXQoJy9hbGxyZXN1bHRzJywgY29udHJvbGxlci5nZXRBbGwpO1xucm91dGVyLmdldCgnL21heCcsY29udHJvbGxlci5nZXRNYXgpO1xuLy9yb3V0ZXIucG9zdCgnL2luc2VydC86aWQnLCBYLmluc2VydCk7IC8vc2hvdWxkIGNoZWNrIHVzaW5nIHBvc3RtYW4gXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.routes.js"
      ],
      "names": [
        "Express",
        "require",
        "controller",
        "router",
        "Router",
        "post",
        "req",
        "res",
        "historyitem",
        "body",
        "console",
        "log",
        "gid",
        "getid",
        "Resource",
        "i",
        "length",
        "links",
        "sync",
        "force",
        "then",
        "create",
        "user_id",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "useragent",
        "catch",
        "err",
        "end",
        "get",
        "getAll",
        "getMax"
      ],
      "mappings": ";;;;;AAAA,IAAIA,UAAQC,QAAQ,SAAR,CAAZ;AACA,IAAIC,aAAWD,QAAQ,0CAAR,CAAf;;AAEA,IAAME,SAAOH,QAAQI,MAAR,EAAb;AACA;AACA;AACA;;AAEAD,OAAOE,IAAP,CAAY,SAAZ,EAAsB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACnC,MAAIC,cAAYF,IAAIG,IAAJ,CAASD,WAAzB;AACAE,UAAQC,GAAR,CAAY,SAAZ;AACA,MAAIC,MAAIN,IAAIG,IAAJ,CAASI,KAAjB;;AAEA;AACA,MAAIC,WAASb,QAAQ,0BAAR,CAAb;AACA;AACA,OAAI,IAAIc,IAAE,CAAV,EAAYA,IAAEP,YAAYQ,MAA1B,EAAiCD,GAAjC,EAAqC;;AAGrC,KAAC,UAASA,CAAT,EAAWP,WAAX,EAAuBI,GAAvB,EAA2B;AAACE,eAASG,KAAT,CAAeC,IAAf,CAAoB,EAACC,OAAO,KAAR,EAApB,EAAoCC,IAApC,CAAyC,YAAY;AAChF;AACE,eAAON,SAASG,KAAT,CAAeI,MAAf,CAAsB;AAC3BC,mBAASV,GADkB;AAE3BW,eAAKf,YAAYO,CAAZ,EAAeQ,GAFO;AAG3BC,cAAKhB,YAAYO,CAAZ,EAAe,IAAf,CAHsB;AAI3BU,6BAAmBjB,YAAYO,CAAZ,EAAe,eAAf,CAJQ;AAK3BW,iBAAOlB,YAAYO,CAAZ,EAAe,OAAf,CALoB;AAM3BY,sBAAYnB,YAAYO,CAAZ,EAAe,YAAf,CANe;AAO3Ba,qBAAWpB,YAAYO,CAAZ,EAAe,WAAf;AAPgB,SAAtB,EASNc,KATM,CASA,UAASC,GAAT,EAAc;AACjB;AACApB,kBAAQC,GAAR,CAAYmB,GAAZ;AACH,SAZM,CAAP;AAcD,OAhB0B,EAiB1BD,KAjB0B,CAiBpB,UAASC,GAAT,EAAc;AACnB;AACAvB,YAAIwB,GAAJ,CAAQ,KAAR;AACArB,gBAAQC,GAAR,CAAYmB,GAAZ;AACH,OArB4B;AAqB1B,KArBH,EAqBKf,CArBL,EAqBOP,WArBP,EAqBmBI,GArBnB;AAsBD;AAKF,CAtCD;;AAwCAT,OAAO6B,GAAP,CAAW,aAAX,EAA0B9B,WAAW+B,MAArC;AACA9B,OAAO6B,GAAP,CAAW,MAAX,EAAkB9B,WAAWgC,MAA7B;AACA;;kBAEe/B,M",
      "file": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "var Express=require('express')\nvar controller=require('../controllers/chrome-history.controller')\n\nconst router=Express.Router()\n//console.log(controller.insert)\n//router.get('/:id', controller.getOne)\n//app.use('/',u.router)\n\nrouter.post('/insert',function(req,res){  \n    var historyitem=req.body.historyitem;\n    console.log(\"welcome\");\n    var gid=req.body.getid;\n    \n    //console.log(myurl);\n    var Resource=require('../models/chrome-history')\n    //console.log(historyitem);\n    for(var i=0;i<historyitem.length;i++){\n      \n  \n    (function(i,historyitem,gid){Resource.links.sync({force: false}).then(function () {\n      //console.log(historyitem[i])\n        return Resource.links.create({\n          user_id: gid,\n          url: historyitem[i].url,\n          ip:  historyitem[i]['ip'],\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent']\n        })\n        .catch(function(err) {\n            // print the error details\n            console.log(err);\n        });\n        \n      })\n      .catch(function(err) {\n        // print the error details\n        res.end('hhh');\n        console.log(err);\n    })})(i,historyitem,gid);\n  }\n\n \n  \n    \n});\n\nrouter.get('/allresults', controller.getAll);\nrouter.get('/max',controller.getMax);\n//router.post('/insert/:id', X.insert); //should check using postman \n\nexport default router;\n"
      ]
    },
    "mtime": 1559309771692
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "getMax"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "getMax",
              "exported": "getMax"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.controller.js",
      "sourceFileName": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Resource = require('../models/chrome-history');\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  Resource.links.findAll({}).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nvar getOne = exports.getOne = function getOne(req, res) {\n  Resource.links.findAll({ where: {\n      uid: req.params.id\n    } }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar getMax = exports.getMax = function getMax(req, res) {\n  var sequelize = require('sequelize');\n  Resource.links.findAll({\n\n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    raw: true\n  }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n//module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUmVzb3VyY2UiLCJyZXF1aXJlIiwiZ2V0QWxsIiwicmVxIiwicmVzIiwibGlua3MiLCJmaW5kQWxsIiwidGhlbiIsImRhdGEiLCJqc29uIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZ2V0T25lIiwid2hlcmUiLCJ1aWQiLCJwYXJhbXMiLCJpZCIsImdldE1heCIsInNlcXVlbGl6ZSIsImF0dHJpYnV0ZXMiLCJmbiIsImNvbCIsInJhdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxXQUFTQyxRQUFRLDBCQUFSLENBQWI7O0FBRU8sSUFBTUMsMEJBQVEsU0FBUkEsTUFBUSxDQUFTQyxHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFBQ0osV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCLEVBQXZCLEVBQTJCQyxJQUEzQixDQUFnQyxVQUFDQyxJQUFELEVBQVU7QUFDN0VKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBRm9DLEVBRWxDRSxLQUZrQyxDQUU1QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBSm9DO0FBS3RDLENBTE07QUFNQSxJQUFNRywwQkFBUSxTQUFSQSxNQUFRLENBQVNYLEdBQVQsRUFBYUMsR0FBYixFQUFpQjtBQUFDSixXQUFTSyxLQUFULENBQWVDLE9BQWYsQ0FBdUIsRUFBRVMsT0FBTztBQUNyRUMsV0FBS2IsSUFBSWMsTUFBSixDQUFXQztBQURxRCxLQUFULEVBQXZCLEVBRWxDWCxJQUZrQyxDQUU3QixVQUFDQyxJQUFELEVBQVU7QUFDbEJKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBSnNDLEVBSXBDRSxLQUpvQyxDQUk5QixVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBTnNDO0FBT3RDLENBUE07O0FBVUEsSUFBTVEsMEJBQVEsU0FBUkEsTUFBUSxDQUFTaEIsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQ3BDLE1BQUlnQixZQUFVbkIsUUFBUSxXQUFSLENBQWQ7QUFDQUQsV0FBU0ssS0FBVCxDQUFlQyxPQUFmLENBQXVCOztBQUV2QmUsZ0JBQVksQ0FBQyxDQUFDRCxVQUFVRSxFQUFWLENBQWEsS0FBYixFQUFvQkYsVUFBVUcsR0FBVixDQUFjLG1CQUFkLENBQXBCLENBQUQsRUFBMEQsTUFBMUQsQ0FBRCxDQUZXO0FBR3ZCQyxTQUFLO0FBSGtCLEdBQXZCLEVBSUVqQixJQUpGLENBSU8sVUFBQ0MsSUFBRCxFQUFVO0FBQ2pCSixRQUFJSyxJQUFKLENBQVNELElBQVQ7QUFDRCxHQU5DLEVBTUNFLEtBTkQsQ0FNTyxVQUFDQyxHQUFELEVBQVM7QUFDaEJDLFlBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELEdBUkM7QUFTRCxDQVhNO0FBWU4iLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFJlc291cmNlPXJlcXVpcmUoJy4uL21vZGVscy9jaHJvbWUtaGlzdG9yeScpXG5cbmV4cG9ydCBjb25zdCBnZXRBbGw9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoe30pLnRoZW4oKGRhdGEpID0+IHtcbiAgICByZXMuanNvbihkYXRhKVxuICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgfSlcbn1cbmV4cG9ydCBjb25zdCBnZXRPbmU9IGZ1bmN0aW9uKHJlcSxyZXMpe1Jlc291cmNlLmxpbmtzLmZpbmRBbGwoeyB3aGVyZToge1xuICB1aWQ6IHJlcS5wYXJhbXMuaWRcbn0gfSkudGhlbigoZGF0YSkgPT4ge1xuICByZXMuanNvbihkYXRhKVxufSkuY2F0Y2goKGVycikgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xufSlcbn1cblxuXG5leHBvcnQgY29uc3QgZ2V0TWF4PSBmdW5jdGlvbihyZXEscmVzKXtcbiAgdmFyIHNlcXVlbGl6ZT1yZXF1aXJlKCdzZXF1ZWxpemUnKVxuICBSZXNvdXJjZS5saW5rcy5maW5kQWxsKHsgXG5cbiAgYXR0cmlidXRlczogW1tzZXF1ZWxpemUuZm4oJ21heCcsIHNlcXVlbGl6ZS5jb2woJ3Zpc2l0ZWRfdGltZXN0YW1wJykpLCAndGltZSddXSxcbiAgcmF3OiB0cnVlLFxuIH0pLnRoZW4oKGRhdGEpID0+IHtcbiAgcmVzLmpzb24oZGF0YSlcbn0pLmNhdGNoKChlcnIpID0+IHtcbiAgY29uc29sZS5sb2coZXJyKTtcbn0pXG59XG4gLy9tb2R1bGUuZXhwb3J0cz17XCJnZXRPbmVcIjpnZXRPbmUsXCJnZXRBbGxcIjpnZXRBbGwsXCJnZXRNYXhcIjpnZXRNYXh9Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.controller.js"
      ],
      "names": [
        "Resource",
        "require",
        "getAll",
        "req",
        "res",
        "links",
        "findAll",
        "then",
        "data",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getOne",
        "where",
        "uid",
        "params",
        "id",
        "getMax",
        "sequelize",
        "attributes",
        "fn",
        "col",
        "raw"
      ],
      "mappings": ";;;;;AAAA,IAAIA,WAASC,QAAQ,0BAAR,CAAb;;AAEO,IAAMC,0BAAQ,SAARA,MAAQ,CAASC,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAvB,EAA2BC,IAA3B,CAAgC,UAACC,IAAD,EAAU;AAC7EJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAFoC,EAElCE,KAFkC,CAE5B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GAJoC;AAKtC,CALM;AAMA,IAAMG,0BAAQ,SAARA,MAAQ,CAASX,GAAT,EAAaC,GAAb,EAAiB;AAACJ,WAASK,KAAT,CAAeC,OAAf,CAAuB,EAAES,OAAO;AACrEC,WAAKb,IAAIc,MAAJ,CAAWC;AADqD,KAAT,EAAvB,EAElCX,IAFkC,CAE7B,UAACC,IAAD,EAAU;AAClBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GAJsC,EAIpCE,KAJoC,CAI9B,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GANsC;AAOtC,CAPM;;AAUA,IAAMQ,0BAAQ,SAARA,MAAQ,CAAShB,GAAT,EAAaC,GAAb,EAAiB;AACpC,MAAIgB,YAAUnB,QAAQ,WAAR,CAAd;AACAD,WAASK,KAAT,CAAeC,OAAf,CAAuB;;AAEvBe,gBAAY,CAAC,CAACD,UAAUE,EAAV,CAAa,KAAb,EAAoBF,UAAUG,GAAV,CAAc,mBAAd,CAApB,CAAD,EAA0D,MAA1D,CAAD,CAFW;AAGvBC,SAAK;AAHkB,GAAvB,EAIEjB,IAJF,CAIO,UAACC,IAAD,EAAU;AACjBJ,QAAIK,IAAJ,CAASD,IAAT;AACD,GANC,EAMCE,KAND,CAMO,UAACC,GAAD,EAAS;AAChBC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GARC;AASD,CAXM;AAYN",
      "file": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "var Resource=require('../models/chrome-history')\n\nexport const getAll= function(req,res){Resource.links.findAll({}).then((data) => {\n    res.json(data)\n  }).catch((err) => {\n    console.log(err);\n  })\n}\nexport const getOne= function(req,res){Resource.links.findAll({ where: {\n  uid: req.params.id\n} }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n\n\nexport const getMax= function(req,res){\n  var sequelize=require('sequelize')\n  Resource.links.findAll({ \n\n  attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n  raw: true,\n }).then((data) => {\n  res.json(data)\n}).catch((err) => {\n  console.log(err);\n})\n}\n //module.exports={\"getOne\":getOne,\"getAll\":getAll,\"getMax\":getMax}"
      ]
    },
    "mtime": 1559308068584
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.js",
      "sourceFileName": "chrome-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar index = require('../database');\n\nvar links = index.define('history', {\n  user_id: {\n    type: _sequelize2.default.STRING\n  },\n  url: {\n    type: _sequelize2.default.STRING(2000)\n  },\n  ip: {\n    type: _sequelize2.default.STRING\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.STRING\n  },\n  title: {\n    type: _sequelize2.default.STRING\n  },\n  visitcount: {\n    type: _sequelize2.default.INTEGER\n  },\n  useragent: {\n    type: _sequelize2.default.STRING\n  }\n\n}, {\n  freezeTableName: true\n});\nlinks.sync({ force: false }).then(function () {\n  return true;\n});\n\nmodule.exports = { \"links\": links };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmpzIl0sIm5hbWVzIjpbImluZGV4IiwicmVxdWlyZSIsImxpbmtzIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJTVFJJTkciLCJ1cmwiLCJpcCIsInZpc2l0ZWRfdGltZXN0YW1wIiwidGl0bGUiLCJ2aXNpdGNvdW50IiwiSU5URUdFUiIsInVzZXJhZ2VudCIsImZyZWV6ZVRhYmxlTmFtZSIsInN5bmMiLCJmb3JjZSIsInRoZW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBOzs7Ozs7QUFEQSxJQUFNQSxRQUFNQyxRQUFRLGFBQVIsQ0FBWjs7QUFFQSxJQUFJQyxRQUFRRixNQUFNRyxNQUFOLENBQWEsU0FBYixFQUF3QjtBQUNoQ0MsV0FBUztBQUNQQyxVQUFNQyxvQkFBVUM7QUFEVCxHQUR1QjtBQUloQ0MsT0FBSztBQUNISCxVQUFNQyxvQkFBVUMsTUFBVixDQUFpQixJQUFqQjtBQURILEdBSjJCO0FBT2hDRSxNQUFHO0FBQ0RKLFVBQUtDLG9CQUFVQztBQURkLEdBUDZCO0FBVWhDRyxxQkFBa0I7QUFDaEJMLFVBQU1DLG9CQUFVQztBQURBLEdBVmM7QUFhaENJLFNBQ0E7QUFDRU4sVUFBS0Msb0JBQVVDO0FBRGpCLEdBZGdDO0FBaUJoQ0ssY0FDQTtBQUNFUCxVQUFLQyxvQkFBVU87QUFEakIsR0FsQmdDO0FBcUJoQ0MsYUFDQTtBQUNFVCxVQUFNQyxvQkFBVUM7QUFEbEI7O0FBdEJnQyxDQUF4QixFQTJCUDtBQUNEUSxtQkFBaUI7QUFEaEIsQ0EzQk8sQ0FBWjtBQThCRWIsTUFBTWMsSUFBTixDQUFXLEVBQUNDLE9BQU8sS0FBUixFQUFYLEVBQTJCQyxJQUEzQixDQUFnQyxZQUFZO0FBQzFDLFNBQU8sSUFBUDtBQUNELENBRkQ7O0FBSUFDLE9BQU9DLE9BQVAsR0FBZSxFQUFDLFNBQVFsQixLQUFULEVBQWYiLCJmaWxlIjoiY2hyb21lLWhpc3RvcnkuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpbmRleD1yZXF1aXJlKCcuLi9kYXRhYmFzZScpXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IFxudmFyIGxpbmtzID0gaW5kZXguZGVmaW5lKCdoaXN0b3J5Jywge1xuICAgIHVzZXJfaWQ6IHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHVybDoge1xuICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklORygyMDAwKVxuICAgIH0sXG4gICAgaXA6e1xuICAgICAgdHlwZTpTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB2aXNpdGVkX3RpbWVzdGFtcDp7XG4gICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB0aXRsZTpcbiAgICB7XG4gICAgICB0eXBlOlNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9LFxuICAgIHZpc2l0Y291bnQ6XG4gICAge1xuICAgICAgdHlwZTpTZXF1ZWxpemUuSU5URUdFUlxuICAgIH0sXG4gICAgdXNlcmFnZW50OlxuICAgIHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICB9XG5cblxuICB9LCB7XG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlXG4gIH0pO1xuICBsaW5rcy5zeW5jKHtmb3JjZTogZmFsc2V9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSk7XG5cbiAgbW9kdWxlLmV4cG9ydHM9e1wibGlua3NcIjpsaW5rc307XG5cblxuXG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.js"
      ],
      "names": [
        "index",
        "require",
        "links",
        "define",
        "user_id",
        "type",
        "Sequelize",
        "STRING",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "INTEGER",
        "useragent",
        "freezeTableName",
        "sync",
        "force",
        "then",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;;;;;AADA,IAAMA,QAAMC,QAAQ,aAAR,CAAZ;;AAEA,IAAIC,QAAQF,MAAMG,MAAN,CAAa,SAAb,EAAwB;AAChCC,WAAS;AACPC,UAAMC,oBAAUC;AADT,GADuB;AAIhCC,OAAK;AACHH,UAAMC,oBAAUC,MAAV,CAAiB,IAAjB;AADH,GAJ2B;AAOhCE,MAAG;AACDJ,UAAKC,oBAAUC;AADd,GAP6B;AAUhCG,qBAAkB;AAChBL,UAAMC,oBAAUC;AADA,GAVc;AAahCI,SACA;AACEN,UAAKC,oBAAUC;AADjB,GAdgC;AAiBhCK,cACA;AACEP,UAAKC,oBAAUO;AADjB,GAlBgC;AAqBhCC,aACA;AACET,UAAMC,oBAAUC;AADlB;;AAtBgC,CAAxB,EA2BP;AACDQ,mBAAiB;AADhB,CA3BO,CAAZ;AA8BEb,MAAMc,IAAN,CAAW,EAACC,OAAO,KAAR,EAAX,EAA2BC,IAA3B,CAAgC,YAAY;AAC1C,SAAO,IAAP;AACD,CAFD;;AAIAC,OAAOC,OAAP,GAAe,EAAC,SAAQlB,KAAT,EAAf",
      "file": "chrome-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "const index=require('../database')\nimport Sequelize from 'sequelize'; \nvar links = index.define('history', {\n    user_id: {\n      type: Sequelize.STRING\n    },\n    url: {\n      type: Sequelize.STRING(2000)\n    },\n    ip:{\n      type:Sequelize.STRING\n    },\n    visited_timestamp:{\n      type: Sequelize.STRING\n    },\n    title:\n    {\n      type:Sequelize.STRING\n    },\n    visitcount:\n    {\n      type:Sequelize.INTEGER\n    },\n    useragent:\n    {\n      type: Sequelize.STRING\n    }\n\n\n  }, {\n    freezeTableName: true\n  });\n  links.sync({force: false}).then(function () {\n    return true;\n  });\n\n  module.exports={\"links\":links};\n\n\n\n\n"
      ]
    },
    "mtime": 1559307725396
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/database.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/database.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/database.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "database.js",
      "sourceFileName": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "database"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000\n  }\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsImFjcXVpcmUiLCJpZGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQ0EsSUFBTUEsWUFBWSxJQUFJQyxtQkFBSixDQUFjLFVBQWQsRUFBeUIsVUFBekIsRUFBb0MsT0FBcEMsRUFBNkM7QUFDM0RDLFFBQU0sV0FEcUQ7QUFFN0RDLFdBQVMsVUFGb0Q7QUFHN0RDLFFBQU07QUFDSkMsU0FBSyxDQUREO0FBRUpDLGFBQVMsS0FGTDtBQUdKQyxVQUFNO0FBSEY7QUFIdUQsQ0FBN0MsQ0FBbEI7QUFTQUMsT0FBT0MsT0FBUCxHQUFnQlQsU0FBaEIiLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJ1xuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZSgncG9zdGdyZXMnLCdwb3N0Z3JlcycsJ3RhbnVqJywge1xuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICBwb29sOiB7XG4gICAgbWF4OiA1LFxuICAgIGFjcXVpcmU6IDMwMDAwLFxuICAgIGlkbGU6IDEwMDAwLFxuICB9XG59KTtcbm1vZHVsZS5leHBvcnRzID1zZXF1ZWxpemUiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "acquire",
        "idle",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAAyB,UAAzB,EAAoC,OAApC,EAA6C;AAC3DC,QAAM,WADqD;AAE7DC,WAAS,UAFoD;AAG7DC,QAAM;AACJC,SAAK,CADD;AAEJC,aAAS,KAFL;AAGJC,UAAM;AAHF;AAHuD,CAA7C,CAAlB;AASAC,OAAOC,OAAP,GAAgBT,SAAhB",
      "file": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "sourcesContent": [
        "import Sequelize from 'sequelize'\nconst sequelize = new Sequelize('postgres','postgres','tanuj', {\n    host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000,\n  }\n});\nmodule.exports =sequelize"
      ]
    },
    "mtime": 1559243369680
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "paths"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "paths",
                "local": "paths"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createSuperAdmin",
            "createStudent"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createSuperAdmin",
              "exported": "createSuperAdmin"
            },
            {
              "kind": "local",
              "local": "createStudent",
              "exported": "createStudent"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStudent = exports.createSuperAdmin = undefined;\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createSuperAdmin = exports.createSuperAdmin = function createSuperAdmin() {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.SUPERADMIN,\n    email: process.env.DEFAULT_USER\n  }).save();\n};\n\nvar createStudent = exports.createStudent = function createStudent(currentCohortId) {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.STUDENT,\n    cohorts: [currentCohortId],\n    currentCohort: currentCohortId,\n    email: _faker2.default.internet.email(),\n    path: _lodash2.default.sample(_constants.paths)\n  }).save();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVN1cGVyQWRtaW4iLCJVc2VyIiwibmFtZSIsImZha2VyIiwiZmluZE5hbWUiLCJyb2xlIiwiVVNFUl9ST0xFUyIsIlNVUEVSQURNSU4iLCJlbWFpbCIsInByb2Nlc3MiLCJlbnYiLCJERUZBVUxUX1VTRVIiLCJzYXZlIiwiY3JlYXRlU3R1ZGVudCIsImN1cnJlbnRDb2hvcnRJZCIsIlNUVURFTlQiLCJjb2hvcnRzIiwiY3VycmVudENvaG9ydCIsImludGVybmV0IiwicGF0aCIsIl8iLCJzYW1wbGUiLCJwYXRocyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsOENBQW1CLFNBQW5CQSxnQkFBbUI7QUFBQSxTQUFNLElBQUlDLGNBQUosQ0FBUztBQUM3Q0MsVUFBTUMsZ0JBQU1ELElBQU4sQ0FBV0UsUUFBWCxFQUR1QztBQUU3Q0MsVUFBTUMsaUJBQVdDLFVBRjRCO0FBRzdDQyxXQUFPQyxRQUFRQyxHQUFSLENBQVlDO0FBSDBCLEdBQVQsRUFJbkNDLElBSm1DLEVBQU47QUFBQSxDQUF6Qjs7QUFPQSxJQUFNQyx3Q0FBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLGVBQUQ7QUFBQSxTQUFxQixJQUFJYixjQUFKLENBQVM7QUFDekRDLFVBQU1DLGdCQUFNRCxJQUFOLENBQVdFLFFBQVgsRUFEbUQ7QUFFekRDLFVBQU1DLGlCQUFXUyxPQUZ3QztBQUd6REMsYUFBUyxDQUFDRixlQUFELENBSGdEO0FBSXpERyxtQkFBZUgsZUFKMEM7QUFLekROLFdBQU9MLGdCQUFNZSxRQUFOLENBQWVWLEtBQWYsRUFMa0Q7QUFNekRXLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLGdCQUFUO0FBTm1ELEdBQVQsRUFPL0NWLElBUCtDLEVBQXJCO0FBQUEsQ0FBdEIiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQge2RlZmF1bHQgYXMgVXNlciwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtwYXRoc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN1cGVyQWRtaW4gPSAoKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVVBFUkFETUlOLFxuICBlbWFpbDogcHJvY2Vzcy5lbnYuREVGQVVMVF9VU0VSLFxufSkuc2F2ZSgpXG5cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN0dWRlbnQgPSAoY3VycmVudENvaG9ydElkKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5ULFxuICBjb2hvcnRzOiBbY3VycmVudENvaG9ydElkXSxcbiAgY3VycmVudENvaG9ydDogY3VycmVudENvaG9ydElkLFxuICBlbWFpbDogZmFrZXIuaW50ZXJuZXQuZW1haWwoKSxcbiAgcGF0aDogXy5zYW1wbGUocGF0aHMpLFxufSkuc2F2ZSgpXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "createSuperAdmin",
        "User",
        "name",
        "faker",
        "findName",
        "role",
        "USER_ROLES",
        "SUPERADMIN",
        "email",
        "process",
        "env",
        "DEFAULT_USER",
        "save",
        "createStudent",
        "currentCohortId",
        "STUDENT",
        "cohorts",
        "currentCohort",
        "internet",
        "path",
        "_",
        "sample",
        "paths"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,cAAJ,CAAS;AAC7CC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADuC;AAE7CC,UAAMC,iBAAWC,UAF4B;AAG7CC,WAAOC,QAAQC,GAAR,CAAYC;AAH0B,GAAT,EAInCC,IAJmC,EAAN;AAAA,CAAzB;;AAOA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,eAAD;AAAA,SAAqB,IAAIb,cAAJ,CAAS;AACzDC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADmD;AAEzDC,UAAMC,iBAAWS,OAFwC;AAGzDC,aAAS,CAACF,eAAD,CAHgD;AAIzDG,mBAAeH,eAJ0C;AAKzDN,WAAOL,gBAAMe,QAAN,CAAeV,KAAf,EALkD;AAMzDW,UAAMC,iBAAEC,MAAF,CAASC,gBAAT;AANmD,GAAT,EAO/CV,IAP+C,EAArB;AAAA,CAAtB",
      "file": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import faker from 'faker';\nimport {default as User, USER_ROLES} from '../models/user';\nimport {paths} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createSuperAdmin = () => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.SUPERADMIN,\n  email: process.env.DEFAULT_USER,\n}).save()\n\n\nexport const createStudent = (currentCohortId) => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.STUDENT,\n  cohorts: [currentCohortId],\n  currentCohort: currentCohortId,\n  email: faker.internet.email(),\n  path: _.sample(paths),\n}).save()\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/constants.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "promptTypes",
            "pingKinds",
            "pingTypes",
            "paths",
            "questionTypes",
            "defaultQuestionOptions"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "promptTypes",
              "exported": "promptTypes"
            },
            {
              "kind": "local",
              "local": "pingKinds",
              "exported": "pingKinds"
            },
            {
              "kind": "local",
              "local": "pingTypes",
              "exported": "pingTypes"
            },
            {
              "kind": "local",
              "local": "paths",
              "exported": "paths"
            },
            {
              "kind": "local",
              "local": "questionTypes",
              "exported": "questionTypes"
            },
            {
              "kind": "local",
              "local": "defaultQuestionOptions",
              "exported": "defaultQuestionOptions"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/constants.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/constants.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "constants.js",
      "sourceFileName": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "constants"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar promptTypes = exports.promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nvar pingKinds = exports.pingKinds = ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nvar pingTypes = exports.pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nvar paths = exports.paths = ['Front End', 'Back End'];\nvar questionTypes = exports.questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nvar defaultQuestionOptions = exports.defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJwcm9tcHRUeXBlcyIsInBpbmdLaW5kcyIsInBpbmdUeXBlcyIsInBhdGhzIiwicXVlc3Rpb25UeXBlcyIsImRlZmF1bHRRdWVzdGlvbk9wdGlvbnMiLCJTbGlkZXIiLCJvcHRpb25zIiwiUmF0aW5nIiwiU2VsZWN0TXVsdGlwbGUiLCJSYWRpbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxvQ0FBYyxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCLEVBQXFDLGtCQUFyQyxFQUF5RCxZQUF6RCxFQUF1RSxlQUF2RSxFQUF3RixpQkFBeEYsQ0FBcEI7QUFDQSxJQUFNQyxnQ0FBYSxDQUFDLFNBQUQsRUFBWSxNQUFaLEVBQW9CLFNBQXBCLEVBQStCLFNBQS9CLEVBQTBDLFFBQTFDLEVBQW9ELFFBQXBELENBQW5CO0FBQ0EsSUFBTUMsZ0NBQVksQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixFQUE0QixTQUE1QixFQUF1QyxNQUF2QyxFQUErQyxXQUEvQyxDQUFsQjtBQUNBLElBQU1DLHdCQUFRLENBQUMsV0FBRCxFQUFjLFVBQWQsQ0FBZDtBQUNBLElBQU1DLHdDQUFnQixDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLGdCQUFyQixFQUF1QyxPQUF2QyxDQUF0QjtBQUNBLElBQU1DLDBEQUF5QjtBQUNwQ0MsVUFBUSxFQUFFQyxTQUFTLENBQUMsVUFBRCxFQUFhLEtBQWIsRUFBb0IsTUFBcEIsRUFBNEIsV0FBNUIsQ0FBWCxFQUQ0QjtBQUVwQ0MsVUFBUSxFQUY0QjtBQUdwQ0Msa0JBQWdCLEVBQUVGLFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYLEVBSG9CO0FBSXBDRyxTQUFPLEVBQUVILFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYO0FBSjZCLENBQS9CIiwiZmlsZSI6ImNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcHJvbXB0VHlwZXMgPSBbJ01ldGFMZWFybmluZycsICdDYXRhbHlzdCBTZXNzaW9uJywgJ1BhaXIgUHJvZ3JhbW1pbmcnLCAnQXNzZXNzbWVudCcsICdRdWVzdGlvbiBIb3VyJywgJ1NoYXJpbmcgU2Vzc2lvbiddO1xuZXhwb3J0IGNvbnN0IHBpbmdLaW5kcyA9ICBbJ2V4cGxvcmUnLCAna25vdycsICdvYnNlcnZlJywgJ3JlZmxlY3QnLCAncmV2aWV3JywgJ3Vud2luZCddO1xuZXhwb3J0IGNvbnN0IHBpbmdUeXBlcyA9IFsnUGFpcicsICdDb2hvcnQnLCAnUGVlcnMnLCAnQ29udGVudCcsICdTZWxmJywgJ0ludGVudGlvbiddO1xuZXhwb3J0IGNvbnN0IHBhdGhzID0gWydGcm9udCBFbmQnLCAnQmFjayBFbmQnXTtcbmV4cG9ydCBjb25zdCBxdWVzdGlvblR5cGVzID0gWydTbGlkZXInLCAnUmF0aW5nJywgJ1NlbGVjdE11bHRpcGxlJywgJ1JhZGlvJ107XG5leHBvcnQgY29uc3QgZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyA9IHtcbiAgU2xpZGVyOiB7IG9wdGlvbnM6IFsnVmVyeSBiYWQnLCAnQmFkJywgJ0dvb2QnLCAnVmVyeSBnb29kJ10gfSxcbiAgUmF0aW5nOiB7fSxcbiAgU2VsZWN0TXVsdGlwbGU6IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbiAgUmFkaW86IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "promptTypes",
        "pingKinds",
        "pingTypes",
        "paths",
        "questionTypes",
        "defaultQuestionOptions",
        "Slider",
        "options",
        "Rating",
        "SelectMultiple",
        "Radio"
      ],
      "mappings": ";;;;;AAAO,IAAMA,oCAAc,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,kBAArC,EAAyD,YAAzD,EAAuE,eAAvE,EAAwF,iBAAxF,CAApB;AACA,IAAMC,gCAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,QAApD,CAAnB;AACA,IAAMC,gCAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC,MAAvC,EAA+C,WAA/C,CAAlB;AACA,IAAMC,wBAAQ,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,IAAMC,wCAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,gBAArB,EAAuC,OAAvC,CAAtB;AACA,IAAMC,0DAAyB;AACpCC,UAAQ,EAAEC,SAAS,CAAC,UAAD,EAAa,KAAb,EAAoB,MAApB,EAA4B,WAA5B,CAAX,EAD4B;AAEpCC,UAAQ,EAF4B;AAGpCC,kBAAgB,EAAEF,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX,EAHoB;AAIpCG,SAAO,EAAEH,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX;AAJ6B,CAA/B",
      "file": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "export const promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nexport const pingKinds =  ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nexport const pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nexport const paths = ['Front End', 'Back End'];\nexport const questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nexport const defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n}\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "dotenv/config",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dotenv"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbConnect.js",
      "sourceFileName": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbConnect"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('dotenv/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _process$env = process.env,\n    NODE_ENV = _process$env.NODE_ENV,\n    MONGO_HOST = _process$env.MONGO_HOST,\n    dbName = _process$env.MONGO_DB,\n    user = _process$env.MONGO_USER,\n    pass = _process$env.MONGO_PWD;\n\n\n_mongoose2.default.set('debug', NODE_ENV === 'development');\n_mongoose2.default.Promise = Promise;\nconsole.log(MONGO_HOST);\n\nexports.default = function () {\n  return _mongoose2.default.connect(MONGO_HOST, { user: user, pass: pass });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJNT05HT19IT1NUIiwiZGJOYW1lIiwiTU9OR09fREIiLCJ1c2VyIiwiTU9OR09fVVNFUiIsInBhc3MiLCJNT05HT19QV0QiLCJtb25nb29zZSIsInNldCIsIlByb21pc2UiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O21CQUNvRkEsUUFBUUMsRztJQUFyRkMsUSxnQkFBQUEsUTtJQUFVQyxVLGdCQUFBQSxVO0lBQXNCQyxNLGdCQUFWQyxRO0lBQThCQyxJLGdCQUFaQyxVO0lBQTZCQyxJLGdCQUFYQyxTOzs7QUFFakVDLG1CQUFTQyxHQUFULENBQWEsT0FBYixFQUFzQlQsYUFBYSxhQUFuQztBQUNBUSxtQkFBU0UsT0FBVCxHQUFtQkEsT0FBbkI7QUFDQUMsUUFBUUMsR0FBUixDQUFZWCxVQUFaOztrQkFDZTtBQUFBLFNBQU1PLG1CQUFTSyxPQUFULENBQWlCWixVQUFqQixFQUE2QixFQUFDRyxVQUFELEVBQU9FLFVBQVAsRUFBN0IsQ0FBTjtBQUFBLEMiLCJmaWxlIjoiZGJDb25uZWN0LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52L2NvbmZpZyc7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge05PREVfRU5WLCBNT05HT19IT1NULCBNT05HT19EQjogZGJOYW1lLCBNT05HT19VU0VSOiB1c2VyLCBNT05HT19QV0Q6IHBhc3N9ID0gcHJvY2Vzcy5lbnY7XG5cbm1vbmdvb3NlLnNldCgnZGVidWcnLCBOT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jyk7XG5tb25nb29zZS5Qcm9taXNlID0gUHJvbWlzZTtcbmNvbnNvbGUubG9nKE1PTkdPX0hPU1QpO1xuZXhwb3J0IGRlZmF1bHQgKCkgPT4gbW9uZ29vc2UuY29ubmVjdChNT05HT19IT1NULCB7dXNlciwgcGFzc30pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbConnect.js"
      ],
      "names": [
        "process",
        "env",
        "NODE_ENV",
        "MONGO_HOST",
        "dbName",
        "MONGO_DB",
        "user",
        "MONGO_USER",
        "pass",
        "MONGO_PWD",
        "mongoose",
        "set",
        "Promise",
        "console",
        "log",
        "connect"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;mBACoFA,QAAQC,G;IAArFC,Q,gBAAAA,Q;IAAUC,U,gBAAAA,U;IAAsBC,M,gBAAVC,Q;IAA8BC,I,gBAAZC,U;IAA6BC,I,gBAAXC,S;;;AAEjEC,mBAASC,GAAT,CAAa,OAAb,EAAsBT,aAAa,aAAnC;AACAQ,mBAASE,OAAT,GAAmBA,OAAnB;AACAC,QAAQC,GAAR,CAAYX,UAAZ;;kBACe;AAAA,SAAMO,mBAASK,OAAT,CAAiBZ,UAAjB,EAA6B,EAACG,UAAD,EAAOE,UAAP,EAA7B,CAAN;AAAA,C",
      "file": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import dotenv from 'dotenv/config';\nimport mongoose from 'mongoose';\nconst {NODE_ENV, MONGO_HOST, MONGO_DB: dbName, MONGO_USER: user, MONGO_PWD: pass} = process.env;\n\nmongoose.set('debug', NODE_ENV === 'development');\nmongoose.Promise = Promise;\nconsole.log(MONGO_HOST);\nexport default () => mongoose.connect(MONGO_HOST, {user, pass});\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./seed",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "seed"
              }
            ]
          },
          {
            "source": "../util/dbConnect",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dbConnect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/index.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _seed = require('./seed');\n\nvar _seed2 = _interopRequireDefault(_seed);\n\nvar _dbConnect = require('../util/dbConnect');\n\nvar _dbConnect2 = _interopRequireDefault(_dbConnect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n(0, _dbConnect2.default)().then(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n    var connection = _ref2.connection;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return connection.dropDatabase();\n\n          case 2:\n            _context.next = 4;\n            return (0, _seed2.default)(connection);\n\n          case 4:\n            connection.close();\n\n          case 5:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}()).catch(console.error);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRoZW4iLCJjb25uZWN0aW9uIiwiZHJvcERhdGFiYXNlIiwiY2xvc2UiLCJjYXRjaCIsImNvbnNvbGUiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7Ozs7OztBQUVBLDJCQUNDQSxJQUREO0FBQUEscUVBQ007QUFBQSxRQUFRQyxVQUFSLFNBQVFBLFVBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0VBLFdBQVdDLFlBQVgsRUFERjs7QUFBQTtBQUFBO0FBQUEsbUJBRUUsb0JBQUtELFVBQUwsQ0FGRjs7QUFBQTtBQUdKQSx1QkFBV0UsS0FBWDs7QUFISTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUROOztBQUFBO0FBQUE7QUFBQTtBQUFBLEtBTUNDLEtBTkQsQ0FNT0MsUUFBUUMsS0FOZiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3NlZWRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNlZWQgZnJvbSAnLi9zZWVkJztcbmltcG9ydCBkYkNvbm5lY3QgZnJvbSAnLi4vdXRpbC9kYkNvbm5lY3QnO1xuXG5kYkNvbm5lY3QoKVxuLnRoZW4oYXN5bmMgKHtjb25uZWN0aW9ufSkgPT4ge1xuICBhd2FpdCBjb25uZWN0aW9uLmRyb3BEYXRhYmFzZSgpO1xuICBhd2FpdCBzZWVkKGNvbm5lY3Rpb24pO1xuICBjb25uZWN0aW9uLmNsb3NlKCk7XG59KVxuLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "then",
        "connection",
        "dropDatabase",
        "close",
        "catch",
        "console",
        "error"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;;;;;AAEA,2BACCA,IADD;AAAA,qEACM;AAAA,QAAQC,UAAR,SAAQA,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEA,WAAWC,YAAX,EADF;;AAAA;AAAA;AAAA,mBAEE,oBAAKD,UAAL,CAFF;;AAAA;AAGJA,uBAAWE,KAAX;;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADN;;AAAA;AAAA;AAAA;AAAA,KAMCC,KAND,CAMOC,QAAQC,KANf",
      "file": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import seed from './seed';\nimport dbConnect from '../util/dbConnect';\n\ndbConnect()\n.then(async ({connection}) => {\n  await connection.dropDatabase();\n  await seed(connection);\n  connection.close();\n})\n.catch(console.error);\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/seed.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./users",
            "imported": [
              "createSuperAdmin"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createSuperAdmin",
                "local": "createSuperAdmin"
              }
            ]
          },
          {
            "source": "./pings",
            "imported": [
              "createPings"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createPings",
                "local": "createPings"
              }
            ]
          },
          {
            "source": "./prompts",
            "imported": [
              "createPrompt",
              "populatePrompt"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createPrompt",
                "local": "createPrompt"
              },
              {
                "kind": "named",
                "imported": "populatePrompt",
                "local": "populatePrompt"
              }
            ]
          },
          {
            "source": "./cohorts",
            "imported": [
              "createCohort",
              "populateCohort"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createCohort",
                "local": "createCohort"
              },
              {
                "kind": "named",
                "imported": "populateCohort",
                "local": "populateCohort"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/seed.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/seed.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "seed.js",
      "sourceFileName": "seed.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "seed"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _users = require('./users');\n\nvar _pings = require('./pings');\n\nvar _prompts = require('./prompts');\n\nvar _cohorts = require('./cohorts');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             The seeds will add the following seed data for the development environment!\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Users\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - 1 Super admin\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Few Educators\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Several Pings\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Several Prompts\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Assign some pings\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Few Cohorts\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Few Students\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Several days\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 - Create spotters\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 - Timeline (An array of prompts)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   - Create pingpongs foreach event\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           */\n\n\nvar pingCount = 100,\n    promptCount = 40,\n    cohorCount = 3,\n    studentCount = 20,\n    // for each cohort\ndayCount = 108;\n\nexports.default = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(c) {\n    var i, prompt, cohort;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _users.createSuperAdmin)();\n\n          case 2:\n            _context.next = 4;\n            return (0, _pings.createPings)(pingCount);\n\n          case 4:\n            i = 0;\n\n          case 5:\n            if (!(i < promptCount)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 8;\n            return (0, _prompts.createPrompt)();\n\n          case 8:\n            prompt = _context.sent;\n            _context.next = 11;\n            return (0, _prompts.populatePrompt)(prompt);\n\n          case 11:\n            i++;\n            _context.next = 5;\n            break;\n\n          case 14:\n            i = 0;\n\n          case 15:\n            if (!(i < cohorCount)) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.next = 18;\n            return (0, _cohorts.createCohort)();\n\n          case 18:\n            cohort = _context.sent;\n            _context.next = 21;\n            return (0, _cohorts.populateCohort)({ cohort: cohort, studentCount: studentCount, dayCount: dayCount });\n\n          case 21:\n            i++;\n            _context.next = 15;\n            break;\n\n          case 24:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsicGluZ0NvdW50IiwicHJvbXB0Q291bnQiLCJjb2hvckNvdW50Iiwic3R1ZGVudENvdW50IiwiZGF5Q291bnQiLCJjIiwiaSIsInByb21wdCIsImNvaG9ydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBaUJBOztBQUNBOztBQUNBOztBQUNBOzsyY0FwQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEsSUFBTUEsWUFBWSxHQUFsQjtBQUFBLElBQ0VDLGNBQWMsRUFEaEI7QUFBQSxJQUVFQyxhQUFhLENBRmY7QUFBQSxJQUdFQyxlQUFlLEVBSGpCO0FBQUEsSUFHc0I7QUFDcEJDLFdBQVcsR0FKYjs7O3FFQU1lLGlCQUFNQyxDQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBR1AsOEJBSE87O0FBQUE7QUFBQTtBQUFBLG1CQU1QLHdCQUFZTCxTQUFaLENBTk87O0FBQUE7QUFTSk0sYUFUSSxHQVNBLENBVEE7O0FBQUE7QUFBQSxrQkFTR0EsSUFBSUwsV0FUUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQVVRLDRCQVZSOztBQUFBO0FBVVBNLGtCQVZPO0FBQUE7QUFBQSxtQkFXTCw2QkFBZUEsTUFBZixDQVhLOztBQUFBO0FBU29CRCxlQVRwQjtBQUFBO0FBQUE7O0FBQUE7QUFlSkEsYUFmSSxHQWVBLENBZkE7O0FBQUE7QUFBQSxrQkFlR0EsSUFBSUosVUFmUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQWdCUSw0QkFoQlI7O0FBQUE7QUFnQlBNLGtCQWhCTztBQUFBO0FBQUEsbUJBaUJMLDZCQUFlLEVBQUNBLGNBQUQsRUFBU0wsMEJBQVQsRUFBdUJDLGtCQUF2QixFQUFmLENBakJLOztBQUFBO0FBZW1CRSxlQWZuQjtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsImZpbGUiOiJzZWVkLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvc2VlZHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXG4gIFRoZSBzZWVkcyB3aWxsIGFkZCB0aGUgZm9sbG93aW5nIHNlZWQgZGF0YSBmb3IgdGhlIGRldmVsb3BtZW50IGVudmlyb25tZW50IVxuICAtIFVzZXJzXG4gICAgLSAxIFN1cGVyIGFkbWluXG4gICAgLSBGZXcgRWR1Y2F0b3JzXG4gIC0gU2V2ZXJhbCBQaW5nc1xuICAtIFNldmVyYWwgUHJvbXB0c1xuICAgIC0gQXNzaWduIHNvbWUgcGluZ3NcbiAgLSBGZXcgQ29ob3J0c1xuICAgIC0gRmV3IFN0dWRlbnRzXG4gICAgLSBTZXZlcmFsIGRheXNcbiAgICAgIC0gQ3JlYXRlIHNwb3R0ZXJzXG4gICAgICAtIFRpbWVsaW5lIChBbiBhcnJheSBvZiBwcm9tcHRzKVxuICAgICAgICAtIENyZWF0ZSBwaW5ncG9uZ3MgZm9yZWFjaCBldmVudFxuXG4qL1xuaW1wb3J0IHtjcmVhdGVTdXBlckFkbWlufSBmcm9tICcuL3VzZXJzJztcbmltcG9ydCB7Y3JlYXRlUGluZ3N9IGZyb20gJy4vcGluZ3MnO1xuaW1wb3J0IHtjcmVhdGVQcm9tcHQsIHBvcHVsYXRlUHJvbXB0fSBmcm9tICcuL3Byb21wdHMnO1xuaW1wb3J0IHtjcmVhdGVDb2hvcnQsIHBvcHVsYXRlQ29ob3J0fSBmcm9tICcuL2NvaG9ydHMnO1xuXG5jb25zdCBwaW5nQ291bnQgPSAxMDAsXG4gIHByb21wdENvdW50ID0gNDAsXG4gIGNvaG9yQ291bnQgPSAzLFxuICBzdHVkZW50Q291bnQgPSAyMCwgIC8vIGZvciBlYWNoIGNvaG9ydFxuICBkYXlDb3VudCA9IDEwODtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgYyA9PiB7XG5cbiAgLy8gQ3JlYXRlIGEgc3VwZXIgYWRtaW4gdXNlclxuICBhd2FpdCBjcmVhdGVTdXBlckFkbWluKCk7XG5cbiAgLy8gQ3JlYXRlIHBpbmdzXG4gIGF3YWl0IGNyZWF0ZVBpbmdzKHBpbmdDb3VudCk7XG5cbiAgLy8gQ3JlYXRlIHByb21wdHMgJiBhc3NpZ24gcGluZ3NcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9tcHRDb3VudDsgaSsrKSB7XG4gICAgbGV0IHByb21wdCA9IGF3YWl0IGNyZWF0ZVByb21wdCgpO1xuICAgIGF3YWl0IHBvcHVsYXRlUHJvbXB0KHByb21wdCk7XG4gIH1cblxuICAvLyBDcmVhdGUgY29ob3J0cyAmIGNyZWF0ZSBkYXlzIGZvciBlYWNoIGNvaG9ydFxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvaG9yQ291bnQ7IGkrKykge1xuICAgIGxldCBjb2hvcnQgPSBhd2FpdCBjcmVhdGVDb2hvcnQoKTtcbiAgICBhd2FpdCBwb3B1bGF0ZUNvaG9ydCh7Y29ob3J0LCBzdHVkZW50Q291bnQsIGRheUNvdW50fSk7XG4gIH1cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "pingCount",
        "promptCount",
        "cohorCount",
        "studentCount",
        "dayCount",
        "c",
        "i",
        "prompt",
        "cohort"
      ],
      "mappings": ";;;;;;AAiBA;;AACA;;AACA;;AACA;;2cApBA;;;;;;;;;;;;;;;;;;;AAsBA,IAAMA,YAAY,GAAlB;AAAA,IACEC,cAAc,EADhB;AAAA,IAEEC,aAAa,CAFf;AAAA,IAGEC,eAAe,EAHjB;AAAA,IAGsB;AACpBC,WAAW,GAJb;;;qEAMe,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGP,8BAHO;;AAAA;AAAA;AAAA,mBAMP,wBAAYL,SAAZ,CANO;;AAAA;AASJM,aATI,GASA,CATA;;AAAA;AAAA,kBASGA,IAAIL,WATP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUQ,4BAVR;;AAAA;AAUPM,kBAVO;AAAA;AAAA,mBAWL,6BAAeA,MAAf,CAXK;;AAAA;AASoBD,eATpB;AAAA;AAAA;;AAAA;AAeJA,aAfI,GAeA,CAfA;;AAAA;AAAA,kBAeGA,IAAIJ,UAfP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBQ,4BAhBR;;AAAA;AAgBPM,kBAhBO;AAAA;AAAA,mBAiBL,6BAAe,EAACA,cAAD,EAASL,0BAAT,EAAuBC,kBAAvB,EAAf,CAjBK;;AAAA;AAemBE,eAfnB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "file": "seed.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "/*\n\n  The seeds will add the following seed data for the development environment!\n  - Users\n    - 1 Super admin\n    - Few Educators\n  - Several Pings\n  - Several Prompts\n    - Assign some pings\n  - Few Cohorts\n    - Few Students\n    - Several days\n      - Create spotters\n      - Timeline (An array of prompts)\n        - Create pingpongs foreach event\n\n*/\nimport {createSuperAdmin} from './users';\nimport {createPings} from './pings';\nimport {createPrompt, populatePrompt} from './prompts';\nimport {createCohort, populateCohort} from './cohorts';\n\nconst pingCount = 100,\n  promptCount = 40,\n  cohorCount = 3,\n  studentCount = 20,  // for each cohort\n  dayCount = 108;\n\nexport default async c => {\n\n  // Create a super admin user\n  await createSuperAdmin();\n\n  // Create pings\n  await createPings(pingCount);\n\n  // Create prompts & assign pings\n  for (var i = 0; i < promptCount; i++) {\n    let prompt = await createPrompt();\n    await populatePrompt(prompt);\n  }\n\n  // Create cohorts & create days for each cohort\n  for (var i = 0; i < cohorCount; i++) {\n    let cohort = await createCohort();\n    await populateCohort({cohort, studentCount, dayCount});\n  }\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/pings.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Ping"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "pingTypes",
              "pingKinds",
              "questionTypes",
              "defaultQuestionOptions"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "pingTypes",
                "local": "pingTypes"
              },
              {
                "kind": "named",
                "imported": "pingKinds",
                "local": "pingKinds"
              },
              {
                "kind": "named",
                "imported": "questionTypes",
                "local": "questionTypes"
              },
              {
                "kind": "named",
                "imported": "defaultQuestionOptions",
                "local": "defaultQuestionOptions"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createPing",
            "createPings"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createPing",
              "exported": "createPing"
            },
            {
              "kind": "local",
              "local": "createPings",
              "exported": "createPings"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/pings.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/pings.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pings.js",
      "sourceFileName": "pings.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pings"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPings = exports.createPing = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createPing = exports.createPing = function createPing() {\n  var questionType = _lodash2.default.sample(_constants.questionTypes);\n  return new _ping2.default({\n    data: _extends({\n      text: _faker2.default.hacker.phrase()\n    }, _constants.defaultQuestionOptions[questionType]),\n    questionType: questionType,\n    kind: _lodash2.default.sample(_constants.pingKinds),\n    type: _lodash2.default.sample(_constants.pingTypes),\n    ttl: _faker2.default.random.number({\n      'min': 10,\n      'max': 90\n    }),\n    tags: []\n  }).save();\n};\n\nvar createPings = exports.createPings = function createPings(n) {\n  var pings = [];\n  while (n--) {\n    pings.push(createPing());\n  }\n  return Promise.all(pings);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmdzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVBpbmciLCJxdWVzdGlvblR5cGUiLCJfIiwic2FtcGxlIiwicXVlc3Rpb25UeXBlcyIsIlBpbmciLCJkYXRhIiwidGV4dCIsImZha2VyIiwiaGFja2VyIiwicGhyYXNlIiwiZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyIsImtpbmQiLCJwaW5nS2luZHMiLCJ0eXBlIiwicGluZ1R5cGVzIiwidHRsIiwicmFuZG9tIiwibnVtYmVyIiwidGFncyIsInNhdmUiLCJjcmVhdGVQaW5ncyIsInBpbmdzIiwibiIsInB1c2giLCJQcm9taXNlIiwiYWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLGtDQUFhLFNBQWJBLFVBQWEsR0FBTTtBQUM5QixNQUFNQyxlQUFlQyxpQkFBRUMsTUFBRixDQUFTQyx3QkFBVCxDQUFyQjtBQUNBLFNBQU8sSUFBSUMsY0FBSixDQUFTO0FBQ2RDO0FBQ0VDLFlBQU1DLGdCQUFNQyxNQUFOLENBQWFDLE1BQWI7QUFEUixPQUVLQyxrQ0FBdUJWLFlBQXZCLENBRkwsQ0FEYztBQUtkQSw4QkFMYztBQU1kVyxVQUFNVixpQkFBRUMsTUFBRixDQUFTVSxvQkFBVCxDQU5RO0FBT2RDLFVBQU1aLGlCQUFFQyxNQUFGLENBQVNZLG9CQUFULENBUFE7QUFRZEMsU0FBS1IsZ0JBQU1TLE1BQU4sQ0FBYUMsTUFBYixDQUFvQjtBQUN2QixhQUFPLEVBRGdCO0FBRXZCLGFBQU87QUFGZ0IsS0FBcEIsQ0FSUztBQVlkQyxVQUFNO0FBWlEsR0FBVCxFQWFKQyxJQWJJLEVBQVA7QUFjRCxDQWhCTTs7QUFrQkEsSUFBTUMsb0NBQWMsU0FBZEEsV0FBYyxJQUFLO0FBQzlCLE1BQU1DLFFBQVEsRUFBZDtBQUNBLFNBQU1DLEdBQU4sRUFBVztBQUNURCxVQUFNRSxJQUFOLENBQVd4QixZQUFYO0FBQ0Q7QUFDRCxTQUFPeUIsUUFBUUMsR0FBUixDQUFZSixLQUFaLENBQVA7QUFDRCxDQU5NIiwiZmlsZSI6InBpbmdzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvc2VlZHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGluZyBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5pbXBvcnQgZmFrZXIgZnJvbSAnZmFrZXInO1xuaW1wb3J0IHtwaW5nVHlwZXMsIHBpbmdLaW5kcywgcXVlc3Rpb25UeXBlcywgZGVmYXVsdFF1ZXN0aW9uT3B0aW9uc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBpbmcgPSAoKSA9PiB7XG4gIGNvbnN0IHF1ZXN0aW9uVHlwZSA9IF8uc2FtcGxlKHF1ZXN0aW9uVHlwZXMpO1xuICByZXR1cm4gbmV3IFBpbmcoe1xuICAgIGRhdGE6IHtcbiAgICAgIHRleHQ6IGZha2VyLmhhY2tlci5waHJhc2UoKSxcbiAgICAgIC4uLmRlZmF1bHRRdWVzdGlvbk9wdGlvbnNbcXVlc3Rpb25UeXBlXVxuICAgIH0sXG4gICAgcXVlc3Rpb25UeXBlLFxuICAgIGtpbmQ6IF8uc2FtcGxlKHBpbmdLaW5kcyksXG4gICAgdHlwZTogXy5zYW1wbGUocGluZ1R5cGVzKSxcbiAgICB0dGw6IGZha2VyLnJhbmRvbS5udW1iZXIoe1xuICAgICAgJ21pbic6IDEwLFxuICAgICAgJ21heCc6IDkwXG4gICAgfSksXG4gICAgdGFnczogW11cbiAgfSkuc2F2ZSgpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlUGluZ3MgPSBuID0+IHtcbiAgY29uc3QgcGluZ3MgPSBbXTtcbiAgd2hpbGUobi0tKSB7XG4gICAgcGluZ3MucHVzaChjcmVhdGVQaW5nKCkpO1xuICB9XG4gIHJldHVybiBQcm9taXNlLmFsbChwaW5ncyk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pings.js"
      ],
      "names": [
        "createPing",
        "questionType",
        "_",
        "sample",
        "questionTypes",
        "Ping",
        "data",
        "text",
        "faker",
        "hacker",
        "phrase",
        "defaultQuestionOptions",
        "kind",
        "pingKinds",
        "type",
        "pingTypes",
        "ttl",
        "random",
        "number",
        "tags",
        "save",
        "createPings",
        "pings",
        "n",
        "push",
        "Promise",
        "all"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,kCAAa,SAAbA,UAAa,GAAM;AAC9B,MAAMC,eAAeC,iBAAEC,MAAF,CAASC,wBAAT,CAArB;AACA,SAAO,IAAIC,cAAJ,CAAS;AACdC;AACEC,YAAMC,gBAAMC,MAAN,CAAaC,MAAb;AADR,OAEKC,kCAAuBV,YAAvB,CAFL,CADc;AAKdA,8BALc;AAMdW,UAAMV,iBAAEC,MAAF,CAASU,oBAAT,CANQ;AAOdC,UAAMZ,iBAAEC,MAAF,CAASY,oBAAT,CAPQ;AAQdC,SAAKR,gBAAMS,MAAN,CAAaC,MAAb,CAAoB;AACvB,aAAO,EADgB;AAEvB,aAAO;AAFgB,KAApB,CARS;AAYdC,UAAM;AAZQ,GAAT,EAaJC,IAbI,EAAP;AAcD,CAhBM;;AAkBA,IAAMC,oCAAc,SAAdA,WAAc,IAAK;AAC9B,MAAMC,QAAQ,EAAd;AACA,SAAMC,GAAN,EAAW;AACTD,UAAME,IAAN,CAAWxB,YAAX;AACD;AACD,SAAOyB,QAAQC,GAAR,CAAYJ,KAAZ,CAAP;AACD,CANM",
      "file": "pings.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import Ping from '../models/ping';\nimport faker from 'faker';\nimport {pingTypes, pingKinds, questionTypes, defaultQuestionOptions} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createPing = () => {\n  const questionType = _.sample(questionTypes);\n  return new Ping({\n    data: {\n      text: faker.hacker.phrase(),\n      ...defaultQuestionOptions[questionType]\n    },\n    questionType,\n    kind: _.sample(pingKinds),\n    type: _.sample(pingTypes),\n    ttl: faker.random.number({\n      'min': 10,\n      'max': 90\n    }),\n    tags: []\n  }).save();\n}\n\nexport const createPings = n => {\n  const pings = [];\n  while(n--) {\n    pings.push(createPing());\n  }\n  return Promise.all(pings);\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/prompts.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Ping"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "promptTypes"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "promptTypes",
                "local": "promptTypes"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createPrompt",
            "populatePrompt"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createPrompt",
              "exported": "createPrompt"
            },
            {
              "kind": "local",
              "local": "populatePrompt",
              "exported": "populatePrompt"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/prompts.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/prompts.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompts.js",
      "sourceFileName": "prompts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompts"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.populatePrompt = exports.createPrompt = undefined;\n\nvar _prompt = require('../models/prompt');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _constants = require('../util/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar createPrompt = exports.createPrompt = function createPrompt() {\n  return new _prompt2.default({\n    name: _faker2.default.company.catchPhrase(),\n    duration: _faker2.default.random.number({\n      'min': 30,\n      'max': 180\n    }),\n    tags: [],\n    type: _lodash2.default.sample(_constants.promptTypes),\n    pings: []\n  }).save();\n};\n\nvar populatePrompt = exports.populatePrompt = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(prompt) {\n    var pings;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _ping2.default.aggregate([{\n              $sample: {\n                size: 5\n              }\n            }]);\n\n          case 2:\n            pings = _context.sent;\n\n            pings.forEach(function (ping) {\n              return prompt.pings.push(ping);\n            });\n            return _context.abrupt('return', prompt.save());\n\n          case 5:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function populatePrompt(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdHMuanMiXSwibmFtZXMiOlsiY3JlYXRlUHJvbXB0IiwiUHJvbXB0IiwibmFtZSIsImZha2VyIiwiY29tcGFueSIsImNhdGNoUGhyYXNlIiwiZHVyYXRpb24iLCJyYW5kb20iLCJudW1iZXIiLCJ0YWdzIiwidHlwZSIsIl8iLCJzYW1wbGUiLCJwcm9tcHRUeXBlcyIsInBpbmdzIiwic2F2ZSIsInBvcHVsYXRlUHJvbXB0IiwicHJvbXB0IiwiUGluZyIsImFnZ3JlZ2F0ZSIsIiRzYW1wbGUiLCJzaXplIiwiZm9yRWFjaCIsInB1c2giLCJwaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7Ozs7O0FBRU8sSUFBTUEsc0NBQWUsU0FBZkEsWUFBZTtBQUFBLFNBQU0sSUFBSUMsZ0JBQUosQ0FBVztBQUMzQ0MsVUFBTUMsZ0JBQU1DLE9BQU4sQ0FBY0MsV0FBZCxFQURxQztBQUUzQ0MsY0FBVUgsZ0JBQU1JLE1BQU4sQ0FBYUMsTUFBYixDQUFvQjtBQUM1QixhQUFPLEVBRHFCO0FBRTVCLGFBQU87QUFGcUIsS0FBcEIsQ0FGaUM7QUFNM0NDLFVBQU0sRUFOcUM7QUFPM0NDLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLHNCQUFULENBUHFDO0FBUTNDQyxXQUFPO0FBUm9DLEdBQVgsRUFTL0JDLElBVCtCLEVBQU47QUFBQSxDQUFyQjs7QUFXQSxJQUFNQztBQUFBLHFFQUFpQixpQkFBTUMsTUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNSQyxlQUFLQyxTQUFMLENBQWUsQ0FBQztBQUNsQ0MsdUJBQVM7QUFDUEMsc0JBQU07QUFEQztBQUR5QixhQUFELENBQWYsQ0FEUTs7QUFBQTtBQUN0QlAsaUJBRHNCOztBQU01QkEsa0JBQU1RLE9BQU4sQ0FBYztBQUFBLHFCQUFRTCxPQUFPSCxLQUFQLENBQWFTLElBQWIsQ0FBa0JDLElBQWxCLENBQVI7QUFBQSxhQUFkO0FBTjRCLDZDQU9yQlAsT0FBT0YsSUFBUCxFQVBxQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOIiwiZmlsZSI6InByb21wdHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9tcHQgZnJvbSAnLi4vbW9kZWxzL3Byb21wdCc7XG5pbXBvcnQgUGluZyBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5pbXBvcnQgZmFrZXIgZnJvbSAnZmFrZXInO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuaW1wb3J0IHtwcm9tcHRUeXBlc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUHJvbXB0ID0gKCkgPT4gbmV3IFByb21wdCh7XG4gIG5hbWU6IGZha2VyLmNvbXBhbnkuY2F0Y2hQaHJhc2UoKSxcbiAgZHVyYXRpb246IGZha2VyLnJhbmRvbS5udW1iZXIoe1xuICAgICdtaW4nOiAzMCxcbiAgICAnbWF4JzogMTgwXG4gIH0pLFxuICB0YWdzOiBbXSxcbiAgdHlwZTogXy5zYW1wbGUocHJvbXB0VHlwZXMpLFxuICBwaW5nczogW11cbn0pLnNhdmUoKVxuXG5leHBvcnQgY29uc3QgcG9wdWxhdGVQcm9tcHQgPSBhc3luYyBwcm9tcHQgPT57XG4gIGNvbnN0IHBpbmdzID0gYXdhaXQgUGluZy5hZ2dyZWdhdGUoW3tcbiAgICAkc2FtcGxlOiB7XG4gICAgICBzaXplOiA1XG4gICAgfVxuICB9XSk7XG4gIHBpbmdzLmZvckVhY2gocGluZyA9PiBwcm9tcHQucGluZ3MucHVzaChwaW5nKSk7XG4gIHJldHVybiBwcm9tcHQuc2F2ZSgpO1xufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompts.js"
      ],
      "names": [
        "createPrompt",
        "Prompt",
        "name",
        "faker",
        "company",
        "catchPhrase",
        "duration",
        "random",
        "number",
        "tags",
        "type",
        "_",
        "sample",
        "promptTypes",
        "pings",
        "save",
        "populatePrompt",
        "prompt",
        "Ping",
        "aggregate",
        "$sample",
        "size",
        "forEach",
        "push",
        "ping"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEO,IAAMA,sCAAe,SAAfA,YAAe;AAAA,SAAM,IAAIC,gBAAJ,CAAW;AAC3CC,UAAMC,gBAAMC,OAAN,CAAcC,WAAd,EADqC;AAE3CC,cAAUH,gBAAMI,MAAN,CAAaC,MAAb,CAAoB;AAC5B,aAAO,EADqB;AAE5B,aAAO;AAFqB,KAApB,CAFiC;AAM3CC,UAAM,EANqC;AAO3CC,UAAMC,iBAAEC,MAAF,CAASC,sBAAT,CAPqC;AAQ3CC,WAAO;AARoC,GAAX,EAS/BC,IAT+B,EAAN;AAAA,CAArB;;AAWA,IAAMC;AAAA,qEAAiB,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,eAAKC,SAAL,CAAe,CAAC;AAClCC,uBAAS;AACPC,sBAAM;AADC;AADyB,aAAD,CAAf,CADQ;;AAAA;AACtBP,iBADsB;;AAM5BA,kBAAMQ,OAAN,CAAc;AAAA,qBAAQL,OAAOH,KAAP,CAAaS,IAAb,CAAkBC,IAAlB,CAAR;AAAA,aAAd;AAN4B,6CAOrBP,OAAOF,IAAP,EAPqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN",
      "file": "prompts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import Prompt from '../models/prompt';\nimport Ping from '../models/ping';\nimport faker from 'faker';\nimport _ from 'lodash';\n\nimport {promptTypes} from '../util/constants';\n\nexport const createPrompt = () => new Prompt({\n  name: faker.company.catchPhrase(),\n  duration: faker.random.number({\n    'min': 30,\n    'max': 180\n  }),\n  tags: [],\n  type: _.sample(promptTypes),\n  pings: []\n}).save()\n\nexport const populatePrompt = async prompt =>{\n  const pings = await Ping.aggregate([{\n    $sample: {\n      size: 5\n    }\n  }]);\n  pings.forEach(ping => prompt.pings.push(ping));\n  return prompt.save();\n}"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/cohorts.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "../util/createTeams",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createTeams"
              }
            ]
          },
          {
            "source": "./users",
            "imported": [
              "createStudent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createStudent",
                "local": "createStudent"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createCohort",
            "populateCohort"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createCohort",
              "exported": "createCohort"
            },
            {
              "kind": "local",
              "local": "populateCohort",
              "exported": "populateCohort"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/cohorts.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/cohorts.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohorts.js",
      "sourceFileName": "cohorts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohorts"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.populateCohort = exports.createCohort = undefined;\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _prompt = require('../models/prompt');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _createTeams = require('../util/createTeams');\n\nvar _createTeams2 = _interopRequireDefault(_createTeams);\n\nvar _users = require('./users');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar createCohort = exports.createCohort = function createCohort() {\n  return new _cohort2.default({\n    startDate: _faker2.default.date.between('2018-03-01', '2018-05-01'),\n    endDate: _faker2.default.date.future(),\n    name: _faker2.default.commerce.productName()\n  }).save();\n};\n\nvar getPhase = function getPhase(day) {\n  return day > 20 ? day > 45 ? \"Deep Focus\" : \" Focus\" : \"Core\";\n};\n\n// todo: calculate date from cohort\nvar createDay = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n    var cohort = _ref2.cohort,\n        students = _ref2.students,\n        day = _ref2.day;\n    var phase, date, prompts, pingpongs, timeline;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            phase = getPhase(day);\n            date = new Date(cohort.startDate.valueOf());\n\n            date.setDate(cohort.startDate.getDate() + day - 1);\n\n            // let pairs = createTeams(students, 2);\n\n            // get a list of prompts and populate them with their pings\n            _context.next = 5;\n            return _prompt2.default.aggregate([{\n              $sample: {\n                size: 3\n              }\n            }]);\n\n          case 5:\n            prompts = _context.sent;\n            pingpongs = [];\n            timeline = prompts.map(function (prompt) {\n\n              var startTime = new Date(date.valueOf());\n              startTime.setSeconds(0);\n              startTime.setMinutes(45);\n              startTime.setHours(11);\n\n              // let triggerTime = new Date(startTime.valueOf() + prompt.duration);\n              // for(let student of students) {\n              //   for(let ping of prompt.pings) {\n              //     pingpongs.push({\n              //       triggerTime,\n              //       ping,\n              //       by: student,\n              //       to: _.sample(students),\n              //     });\n              //   }\n              // }\n\n              return {\n                prompt: prompt._id,\n                startTime: startTime\n              };\n            });\n            return _context.abrupt('return', new _day2.default({ cohort: cohort._id, day: day, phase: phase, date: date, timeline: timeline }).save());\n\n          case 9:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function createDay(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// todo: this logic needs to be associated with Cohort model itself\nvar populateCohort = exports.populateCohort = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref4) {\n    var cohort = _ref4.cohort,\n        studentCount = _ref4.studentCount,\n        dayCount = _ref4.dayCount;\n    var students, i, student, queries, day;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            students = [];\n            i = 0;\n\n          case 2:\n            if (!(i < studentCount)) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 5;\n            return (0, _users.createStudent)(cohort._id);\n\n          case 5:\n            student = _context2.sent;\n\n            students.push(student);\n\n          case 7:\n            i++;\n            _context2.next = 2;\n            break;\n\n          case 10:\n            // cohort.spotters = createTeams(students, 2);\n            queries = [cohort.save()];\n\n            for (day = 1; day < dayCount; day++) {\n              queries.push(createDay({ cohort: cohort, students: students, day: day }));\n            }\n            return _context2.abrupt('return', Promise.all(queries));\n\n          case 13:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }));\n\n  return function populateCohort(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydHMuanMiXSwibmFtZXMiOlsiY3JlYXRlQ29ob3J0IiwiQ29ob3J0Iiwic3RhcnREYXRlIiwiZmFrZXIiLCJkYXRlIiwiYmV0d2VlbiIsImVuZERhdGUiLCJmdXR1cmUiLCJuYW1lIiwiY29tbWVyY2UiLCJwcm9kdWN0TmFtZSIsInNhdmUiLCJnZXRQaGFzZSIsImRheSIsImNyZWF0ZURheSIsImNvaG9ydCIsInN0dWRlbnRzIiwicGhhc2UiLCJEYXRlIiwidmFsdWVPZiIsInNldERhdGUiLCJnZXREYXRlIiwiUHJvbXB0IiwiYWdncmVnYXRlIiwiJHNhbXBsZSIsInNpemUiLCJwcm9tcHRzIiwicGluZ3BvbmdzIiwidGltZWxpbmUiLCJtYXAiLCJzdGFydFRpbWUiLCJzZXRTZWNvbmRzIiwic2V0TWludXRlcyIsInNldEhvdXJzIiwicHJvbXB0IiwiX2lkIiwiRGF5IiwicG9wdWxhdGVDb2hvcnQiLCJzdHVkZW50Q291bnQiLCJkYXlDb3VudCIsImkiLCJzdHVkZW50IiwicHVzaCIsInF1ZXJpZXMiLCJQcm9taXNlIiwiYWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLHNDQUFlLFNBQWZBLFlBQWU7QUFBQSxTQUFNLElBQUlDLGdCQUFKLENBQVc7QUFDM0NDLGVBQVdDLGdCQUFNQyxJQUFOLENBQVdDLE9BQVgsQ0FBbUIsWUFBbkIsRUFBaUMsWUFBakMsQ0FEZ0M7QUFFM0NDLGFBQVNILGdCQUFNQyxJQUFOLENBQVdHLE1BQVgsRUFGa0M7QUFHM0NDLFVBQU1MLGdCQUFNTSxRQUFOLENBQWVDLFdBQWY7QUFIcUMsR0FBWCxFQUkvQkMsSUFKK0IsRUFBTjtBQUFBLENBQXJCOztBQU9QLElBQU1DLFdBQVcsU0FBWEEsUUFBVztBQUFBLFNBQVFDLE1BQU0sRUFBTixHQUFZQSxNQUFNLEVBQU4sR0FBVyxZQUFYLEdBQTBCLFFBQXRDLEdBQWtELE1BQTFEO0FBQUEsQ0FBakI7O0FBRUE7QUFDQSxJQUFNQztBQUFBLHFFQUFZO0FBQUEsUUFBUUMsTUFBUixTQUFRQSxNQUFSO0FBQUEsUUFBZ0JDLFFBQWhCLFNBQWdCQSxRQUFoQjtBQUFBLFFBQTBCSCxHQUExQixTQUEwQkEsR0FBMUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRVZJLGlCQUZVLEdBRUZMLFNBQVNDLEdBQVQsQ0FGRTtBQUdaVCxnQkFIWSxHQUdMLElBQUljLElBQUosQ0FBU0gsT0FBT2IsU0FBUCxDQUFpQmlCLE9BQWpCLEVBQVQsQ0FISzs7QUFJaEJmLGlCQUFLZ0IsT0FBTCxDQUFhTCxPQUFPYixTQUFQLENBQWlCbUIsT0FBakIsS0FBNkJSLEdBQTdCLEdBQW1DLENBQWhEOztBQUVBOztBQUVBO0FBUmdCO0FBQUEsbUJBU0lTLGlCQUFPQyxTQUFQLENBQWlCLENBQUM7QUFDcENDLHVCQUFTO0FBQ1BDLHNCQUFNO0FBREM7QUFEMkIsYUFBRCxDQUFqQixDQVRKOztBQUFBO0FBU1pDLG1CQVRZO0FBZVpDLHFCQWZZLEdBZUEsRUFmQTtBQWdCWkMsb0JBaEJZLEdBZ0JERixRQUFRRyxHQUFSLENBQVksa0JBQVU7O0FBRW5DLGtCQUFJQyxZQUFZLElBQUlaLElBQUosQ0FBU2QsS0FBS2UsT0FBTCxFQUFULENBQWhCO0FBQ0FXLHdCQUFVQyxVQUFWLENBQXFCLENBQXJCO0FBQ0FELHdCQUFVRSxVQUFWLENBQXFCLEVBQXJCO0FBQ0FGLHdCQUFVRyxRQUFWLENBQW1CLEVBQW5COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQU87QUFDTEMsd0JBQVFBLE9BQU9DLEdBRFY7QUFFTEw7QUFGSyxlQUFQO0FBSUQsYUF2QmMsQ0FoQkM7QUFBQSw2Q0F5Q1QsSUFBSU0sYUFBSixDQUFRLEVBQUNyQixRQUFRQSxPQUFPb0IsR0FBaEIsRUFBcUJ0QixRQUFyQixFQUEwQkksWUFBMUIsRUFBaUNiLFVBQWpDLEVBQXVDd0Isa0JBQXZDLEVBQVIsRUFBMERqQixJQUExRCxFQXpDUzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQU47O0FBNkNBO0FBQ08sSUFBTTBCO0FBQUEsc0VBQWlCO0FBQUEsUUFBUXRCLE1BQVIsU0FBUUEsTUFBUjtBQUFBLFFBQWdCdUIsWUFBaEIsU0FBZ0JBLFlBQWhCO0FBQUEsUUFBOEJDLFFBQTlCLFNBQThCQSxRQUE5QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDeEJ2QixvQkFEd0IsR0FDYixFQURhO0FBRW5Cd0IsYUFGbUIsR0FFZixDQUZlOztBQUFBO0FBQUEsa0JBRVpBLElBQUlGLFlBRlE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxtQkFHTiwwQkFBY3ZCLE9BQU9vQixHQUFyQixDQUhNOztBQUFBO0FBR3RCTSxtQkFIc0I7O0FBSTFCekIscUJBQVMwQixJQUFULENBQWNELE9BQWQ7O0FBSjBCO0FBRU1ELGVBRk47QUFBQTtBQUFBOztBQUFBO0FBTTVCO0FBQ0lHLG1CQVB3QixHQU9kLENBQUM1QixPQUFPSixJQUFQLEVBQUQsQ0FQYzs7QUFRNUIsaUJBQVNFLEdBQVQsR0FBZSxDQUFmLEVBQWtCQSxNQUFNMEIsUUFBeEIsRUFBa0MxQixLQUFsQyxFQUF5QztBQUN2QzhCLHNCQUFRRCxJQUFSLENBQWE1QixVQUFVLEVBQUNDLGNBQUQsRUFBU0Msa0JBQVQsRUFBbUJILFFBQW5CLEVBQVYsQ0FBYjtBQUNEO0FBVjJCLDhDQVdyQitCLFFBQVFDLEdBQVIsQ0FBWUYsT0FBWixDQVhxQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOIiwiZmlsZSI6ImNvaG9ydHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2hvcnQgZnJvbSAnLi4vbW9kZWxzL2NvaG9ydCc7XG5pbXBvcnQgRGF5IGZyb20gJy4uL21vZGVscy9kYXknO1xuaW1wb3J0IFByb21wdCBmcm9tICcuLi9tb2RlbHMvcHJvbXB0JztcbmltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgY3JlYXRlVGVhbXMgZnJvbSAnLi4vdXRpbC9jcmVhdGVUZWFtcyc7XG5pbXBvcnQge2NyZWF0ZVN0dWRlbnR9IGZyb20gJy4vdXNlcnMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlQ29ob3J0ID0gKCkgPT4gbmV3IENvaG9ydCh7XG4gIHN0YXJ0RGF0ZTogZmFrZXIuZGF0ZS5iZXR3ZWVuKCcyMDE4LTAzLTAxJywgJzIwMTgtMDUtMDEnKSxcbiAgZW5kRGF0ZTogZmFrZXIuZGF0ZS5mdXR1cmUoKSxcbiAgbmFtZTogZmFrZXIuY29tbWVyY2UucHJvZHVjdE5hbWUoKVxufSkuc2F2ZSgpXG5cblxuY29uc3QgZ2V0UGhhc2UgPSBkYXkgPT4gKGRheSA+IDIwID8gKGRheSA+IDQ1ID8gXCJEZWVwIEZvY3VzXCIgOiBcIiBGb2N1c1wiKSA6IFwiQ29yZVwiKTtcblxuLy8gdG9kbzogY2FsY3VsYXRlIGRhdGUgZnJvbSBjb2hvcnRcbmNvbnN0IGNyZWF0ZURheSA9IGFzeW5jICh7Y29ob3J0LCBzdHVkZW50cywgZGF5fSkgPT4ge1xuXG4gIGNvbnN0IHBoYXNlID0gZ2V0UGhhc2UoZGF5KTtcbiAgbGV0IGRhdGUgPSBuZXcgRGF0ZShjb2hvcnQuc3RhcnREYXRlLnZhbHVlT2YoKSk7XG4gIGRhdGUuc2V0RGF0ZShjb2hvcnQuc3RhcnREYXRlLmdldERhdGUoKSArIGRheSAtIDEpO1xuXG4gIC8vIGxldCBwYWlycyA9IGNyZWF0ZVRlYW1zKHN0dWRlbnRzLCAyKTtcblxuICAvLyBnZXQgYSBsaXN0IG9mIHByb21wdHMgYW5kIHBvcHVsYXRlIHRoZW0gd2l0aCB0aGVpciBwaW5nc1xuICBsZXQgcHJvbXB0cyA9IGF3YWl0IFByb21wdC5hZ2dyZWdhdGUoW3tcbiAgICAkc2FtcGxlOiB7XG4gICAgICBzaXplOiAzXG4gICAgfVxuICB9XSk7XG5cbiAgbGV0IHBpbmdwb25ncyA9IFtdO1xuICBsZXQgdGltZWxpbmUgPSBwcm9tcHRzLm1hcChwcm9tcHQgPT4ge1xuXG4gICAgbGV0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKGRhdGUudmFsdWVPZigpKTtcbiAgICBzdGFydFRpbWUuc2V0U2Vjb25kcygwKTtcbiAgICBzdGFydFRpbWUuc2V0TWludXRlcyg0NSk7XG4gICAgc3RhcnRUaW1lLnNldEhvdXJzKDExKTtcblxuICAgIC8vIGxldCB0cmlnZ2VyVGltZSA9IG5ldyBEYXRlKHN0YXJ0VGltZS52YWx1ZU9mKCkgKyBwcm9tcHQuZHVyYXRpb24pO1xuICAgIC8vIGZvcihsZXQgc3R1ZGVudCBvZiBzdHVkZW50cykge1xuICAgIC8vICAgZm9yKGxldCBwaW5nIG9mIHByb21wdC5waW5ncykge1xuICAgIC8vICAgICBwaW5ncG9uZ3MucHVzaCh7XG4gICAgLy8gICAgICAgdHJpZ2dlclRpbWUsXG4gICAgLy8gICAgICAgcGluZyxcbiAgICAvLyAgICAgICBieTogc3R1ZGVudCxcbiAgICAvLyAgICAgICB0bzogXy5zYW1wbGUoc3R1ZGVudHMpLFxuICAgIC8vICAgICB9KTtcbiAgICAvLyAgIH1cbiAgICAvLyB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJvbXB0OiBwcm9tcHQuX2lkLFxuICAgICAgc3RhcnRUaW1lXG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gbmV3IERheSh7Y29ob3J0OiBjb2hvcnQuX2lkLCBkYXksIHBoYXNlLCBkYXRlLCB0aW1lbGluZX0pLnNhdmUoKTtcblxufVxuXG4vLyB0b2RvOiB0aGlzIGxvZ2ljIG5lZWRzIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCBDb2hvcnQgbW9kZWwgaXRzZWxmXG5leHBvcnQgY29uc3QgcG9wdWxhdGVDb2hvcnQgPSBhc3luYyAoe2NvaG9ydCwgc3R1ZGVudENvdW50LCBkYXlDb3VudH0pID0+IHtcbiAgbGV0IHN0dWRlbnRzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3R1ZGVudENvdW50OyBpKyspIHtcbiAgICBsZXQgc3R1ZGVudCA9IGF3YWl0IGNyZWF0ZVN0dWRlbnQoY29ob3J0Ll9pZCk7XG4gICAgc3R1ZGVudHMucHVzaChzdHVkZW50KTtcbiAgfVxuICAvLyBjb2hvcnQuc3BvdHRlcnMgPSBjcmVhdGVUZWFtcyhzdHVkZW50cywgMik7XG4gIGxldCBxdWVyaWVzID0gW2NvaG9ydC5zYXZlKCldO1xuICBmb3IgKHZhciBkYXkgPSAxOyBkYXkgPCBkYXlDb3VudDsgZGF5KyspIHtcbiAgICBxdWVyaWVzLnB1c2goY3JlYXRlRGF5KHtjb2hvcnQsIHN0dWRlbnRzLCBkYXl9KSk7XG4gIH1cbiAgcmV0dXJuIFByb21pc2UuYWxsKHF1ZXJpZXMpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohorts.js"
      ],
      "names": [
        "createCohort",
        "Cohort",
        "startDate",
        "faker",
        "date",
        "between",
        "endDate",
        "future",
        "name",
        "commerce",
        "productName",
        "save",
        "getPhase",
        "day",
        "createDay",
        "cohort",
        "students",
        "phase",
        "Date",
        "valueOf",
        "setDate",
        "getDate",
        "Prompt",
        "aggregate",
        "$sample",
        "size",
        "prompts",
        "pingpongs",
        "timeline",
        "map",
        "startTime",
        "setSeconds",
        "setMinutes",
        "setHours",
        "prompt",
        "_id",
        "Day",
        "populateCohort",
        "studentCount",
        "dayCount",
        "i",
        "student",
        "push",
        "queries",
        "Promise",
        "all"
      ],
      "mappings": "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",
      "file": "cohorts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import Cohort from '../models/cohort';\nimport Day from '../models/day';\nimport Prompt from '../models/prompt';\nimport faker from 'faker';\nimport _ from 'lodash';\n\nimport createTeams from '../util/createTeams';\nimport {createStudent} from './users';\n\nexport const createCohort = () => new Cohort({\n  startDate: faker.date.between('2018-03-01', '2018-05-01'),\n  endDate: faker.date.future(),\n  name: faker.commerce.productName()\n}).save()\n\n\nconst getPhase = day => (day > 20 ? (day > 45 ? \"Deep Focus\" : \" Focus\") : \"Core\");\n\n// todo: calculate date from cohort\nconst createDay = async ({cohort, students, day}) => {\n\n  const phase = getPhase(day);\n  let date = new Date(cohort.startDate.valueOf());\n  date.setDate(cohort.startDate.getDate() + day - 1);\n\n  // let pairs = createTeams(students, 2);\n\n  // get a list of prompts and populate them with their pings\n  let prompts = await Prompt.aggregate([{\n    $sample: {\n      size: 3\n    }\n  }]);\n\n  let pingpongs = [];\n  let timeline = prompts.map(prompt => {\n\n    let startTime = new Date(date.valueOf());\n    startTime.setSeconds(0);\n    startTime.setMinutes(45);\n    startTime.setHours(11);\n\n    // let triggerTime = new Date(startTime.valueOf() + prompt.duration);\n    // for(let student of students) {\n    //   for(let ping of prompt.pings) {\n    //     pingpongs.push({\n    //       triggerTime,\n    //       ping,\n    //       by: student,\n    //       to: _.sample(students),\n    //     });\n    //   }\n    // }\n\n    return {\n      prompt: prompt._id,\n      startTime\n    }\n  });\n\n  return new Day({cohort: cohort._id, day, phase, date, timeline}).save();\n\n}\n\n// todo: this logic needs to be associated with Cohort model itself\nexport const populateCohort = async ({cohort, studentCount, dayCount}) => {\n  let students = [];\n  for (let i = 0; i < studentCount; i++) {\n    let student = await createStudent(cohort._id);\n    students.push(student);\n  }\n  // cohort.spotters = createTeams(students, 2);\n  let queries = [cohort.save()];\n  for (var day = 1; day < dayCount; day++) {\n    queries.push(createDay({cohort, students, day}));\n  }\n  return Promise.all(queries);\n}\n"
      ]
    },
    "mtime": 1559149592860
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/createTeams.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/createTeams.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/createTeams.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createTeams.js",
      "sourceFileName": "createTeams.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createTeams"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (students, size) {\n  return _lodash2.default.chunk(students, size).map(function (students) {\n    return {\n      teamName: _faker2.default.commerce.productName(),\n      students: students.map(function (s) {\n        return s._id;\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZVRlYW1zLmpzIl0sIm5hbWVzIjpbInN0dWRlbnRzIiwic2l6ZSIsIl8iLCJjaHVuayIsIm1hcCIsInRlYW1OYW1lIiwiZmFrZXIiLCJjb21tZXJjZSIsInByb2R1Y3ROYW1lIiwicyIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlLFVBQUNBLFFBQUQsRUFBV0MsSUFBWDtBQUFBLFNBQW9CQyxpQkFBRUMsS0FBRixDQUFRSCxRQUFSLEVBQWtCQyxJQUFsQixFQUNsQ0csR0FEa0MsQ0FDOUI7QUFBQSxXQUFhO0FBQ2hCQyxnQkFBVUMsZ0JBQU1DLFFBQU4sQ0FBZUMsV0FBZixFQURNO0FBRWhCUixnQkFBVUEsU0FBU0ksR0FBVCxDQUFhO0FBQUEsZUFBS0ssRUFBRUMsR0FBUDtBQUFBLE9BQWI7QUFGTSxLQUFiO0FBQUEsR0FEOEIsQ0FBcEI7QUFBQSxDIiwiZmlsZSI6ImNyZWF0ZVRlYW1zLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5leHBvcnQgZGVmYXVsdCAoc3R1ZGVudHMsIHNpemUpID0+IF8uY2h1bmsoc3R1ZGVudHMsIHNpemUpXG4ubWFwKHN0dWRlbnRzID0+ICh7XG4gIHRlYW1OYW1lOiBmYWtlci5jb21tZXJjZS5wcm9kdWN0TmFtZSgpLFxuICBzdHVkZW50czogc3R1ZGVudHMubWFwKHMgPT4gcy5faWQpLFxufSkpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createTeams.js"
      ],
      "names": [
        "students",
        "size",
        "_",
        "chunk",
        "map",
        "teamName",
        "faker",
        "commerce",
        "productName",
        "s",
        "_id"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,QAAD,EAAWC,IAAX;AAAA,SAAoBC,iBAAEC,KAAF,CAAQH,QAAR,EAAkBC,IAAlB,EAClCG,GADkC,CAC9B;AAAA,WAAa;AAChBC,gBAAUC,gBAAMC,QAAN,CAAeC,WAAf,EADM;AAEhBR,gBAAUA,SAASI,GAAT,CAAa;AAAA,eAAKK,EAAEC,GAAP;AAAA,OAAb;AAFM,KAAb;AAAA,GAD8B,CAApB;AAAA,C",
      "file": "createTeams.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import faker from 'faker';\nimport _ from 'lodash';\n\nexport default (students, size) => _.chunk(students, size)\n.map(students => ({\n  teamName: faker.commerce.productName(),\n  students: students.map(s => s._id),\n}));\n"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/watsonURL.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/watsonURL.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/watsonURL.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "watsonURL.js",
      "sourceFileName": "watsonURL.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "watsonURL"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _process$env = process.env,\n    WATSONUSER = _process$env.WATSONUSER,\n    WATSONPASS = _process$env.WATSONPASS;\n\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\nvar getWatsonData = function getWatsonData(link) {\n\n  var urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n  var urlRegex = new RegExp(urlFormat);\n\n  return new Promise(function (resolve, reject) {\n    console.log(\"$$$$$$$$$$$$$$\");\n    console.log(link);\n    console.log(urlRegex);\n\n    if (link.match(urlRegex)) {\n\n      var options = {\n        url: link,\n        features: {\n          concepts: {},\n          keywords: {\n            'sentiment': true,\n            'emotion': true\n          },\n          categories: {},\n          entities: {},\n          metadata: {},\n          relations: {},\n          semantic_roles: {}\n        }\n      };\n      nlu.analyze(options, function (err, res) {\n        if (err) {\n          console.log(err);\n          reject();\n        }\n        resolve(res);\n      });\n    } else {\n      reject(\"Please enter a valid URL\");\n    }\n  });\n};\n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexports.default = getWatsonData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdHNvblVSTC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiV0FUU09OVVNFUiIsIldBVFNPTlBBU1MiLCJOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEiLCJyZXF1aXJlIiwiY29uZmlnIiwic2lsZW50Iiwibmx1IiwidmVyc2lvbiIsInVybCIsImdldFdhdHNvbkRhdGEiLCJsaW5rIiwidXJsRm9ybWF0IiwidXJsUmVnZXgiLCJSZWdFeHAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJtYXRjaCIsIm9wdGlvbnMiLCJmZWF0dXJlcyIsImNvbmNlcHRzIiwia2V5d29yZHMiLCJjYXRlZ29yaWVzIiwiZW50aXRpZXMiLCJtZXRhZGF0YSIsInJlbGF0aW9ucyIsInNlbWFudGljX3JvbGVzIiwiYW5hbHl6ZSIsImVyciIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7bUJBQWtDQSxRQUFRQyxHO0lBQWxDQyxVLGdCQUFBQSxVO0lBQVlDLFUsZ0JBQUFBLFU7O0FBQ3BCLElBQUlDLGlDQUFpQ0MsUUFBUSw2REFBUixDQUFyQztBQUNBQSxRQUFRLFFBQVIsRUFBa0JDLE1BQWxCLENBQXlCO0FBQ3ZCQyxVQUFRO0FBRGUsQ0FBekIsRSxDQUVJOztBQUVKLElBQUlDLE1BQU0sSUFBSUosOEJBQUosQ0FBbUM7QUFDM0NLLFdBQVMsWUFEa0M7QUFFM0NDLE9BQUs7QUFGc0MsQ0FBbkMsQ0FBVjs7QUFNQSxJQUFNQyxnQkFBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLElBQUQsRUFBVTs7QUFFaEMsTUFBSUMsWUFBWSxtRkFBaEI7QUFDQSxNQUFJQyxXQUFXLElBQUlDLE1BQUosQ0FBV0YsU0FBWCxDQUFmOztBQUtDLFNBQU8sSUFBSUcsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBU0MsTUFBVCxFQUFvQjtBQUN0Q0MsWUFBUUMsR0FBUixDQUFZLGdCQUFaO0FBQ0FELFlBQVFDLEdBQVIsQ0FBWVIsSUFBWjtBQUNBTyxZQUFRQyxHQUFSLENBQVlOLFFBQVo7O0FBRUMsUUFBSUYsS0FBS1MsS0FBTCxDQUFXUCxRQUFYLENBQUosRUFBeUI7O0FBRzFCLFVBQUlRLFVBQVU7QUFDWlosYUFBS0UsSUFETztBQUVaVyxrQkFBVTtBQUNSQyxvQkFBVSxFQURGO0FBRVJDLG9CQUFVO0FBQ1IseUJBQWEsSUFETDtBQUVSLHVCQUFXO0FBRkgsV0FGRjtBQU1SQyxzQkFBWSxFQU5KO0FBT1JDLG9CQUFVLEVBUEY7QUFRUkMsb0JBQVUsRUFSRjtBQVNSQyxxQkFBVyxFQVRIO0FBVVJDLDBCQUFnQjtBQVZSO0FBRkUsT0FBZDtBQWVBdEIsVUFBSXVCLE9BQUosQ0FBWVQsT0FBWixFQUFxQixVQUFDVSxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQyxZQUFJRCxHQUFKLEVBQVM7QUFDUGIsa0JBQVFDLEdBQVIsQ0FBWVksR0FBWjtBQUNBZDtBQUNEO0FBQ0RELGdCQUFRZ0IsR0FBUjtBQUNELE9BTkQ7QUFPRCxLQXpCRSxNQXlCSTtBQUNMZixhQUFPLDBCQUFQO0FBQ0Q7QUFDQyxHQWpDTSxDQUFQO0FBa0NBLENBMUNEOztBQTRDQTs7a0JBRWVQLGEiLCJmaWxlIjoid2F0c29uVVJMLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgV0FUU09OVVNFUiwgV0FUU09OUEFTU30gPSBwcm9jZXNzLmVudlxudmFyIE5hdHVyYWxMYW5ndWFnZVVuZGVyc3RhbmRpbmdWMSA9IHJlcXVpcmUoJ3dhdHNvbi1kZXZlbG9wZXItY2xvdWQvbmF0dXJhbC1sYW5ndWFnZS11bmRlcnN0YW5kaW5nL3YxLmpzJyk7XG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoe1xuICBzaWxlbnQ6IHRydWVcbn0pOyAvLyAgb3B0aW9uYWxcblxudmFyIG5sdSA9IG5ldyBOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEoe1xuICB2ZXJzaW9uOiAnMjAxOC0wNC0wNScsXG4gIHVybDogJ2h0dHBzOi8vZ2F0ZXdheS53YXRzb25wbGF0Zm9ybS5uZXQvbmF0dXJhbC1sYW5ndWFnZS11bmRlcnN0YW5kaW5nL2FwaSdcbn0pO1xuXG5cbmNvbnN0IGdldFdhdHNvbkRhdGEgPSAobGluaykgPT4ge1xuXG5sZXQgdXJsRm9ybWF0ID0gL1stYS16QS1aMC05QDolX1xcKy5+Iz8mLy89XXsyLDI1Nn1cXC5bYS16XXsyLDR9XFxiKFxcL1stYS16QS1aMC05QDolX1xcKy5+Iz8mLy89XSopPy9naTtcbmxldCB1cmxSZWdleCA9IG5ldyBSZWdFeHAodXJsRm9ybWF0KVxuXG5cblxuXG4gcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIiQkJCQkJCQkJCQkJCQkXCIpXG4gIGNvbnNvbGUubG9nKGxpbmspXG4gIGNvbnNvbGUubG9nKHVybFJlZ2V4KVxuICAgXG4gICBpZiAobGluay5tYXRjaCh1cmxSZWdleCkpe1xuXG5cbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgdXJsOiBsaW5rLFxuICAgIGZlYXR1cmVzOiB7XG4gICAgICBjb25jZXB0czoge30sXG4gICAgICBrZXl3b3Jkczoge1xuICAgICAgICAnc2VudGltZW50JzogdHJ1ZSxcbiAgICAgICAgJ2Vtb3Rpb24nOiB0cnVlXG4gICAgICB9LFxuICAgICAgY2F0ZWdvcmllczoge30sXG4gICAgICBlbnRpdGllczoge30sXG4gICAgICBtZXRhZGF0YToge30sXG4gICAgICByZWxhdGlvbnM6IHt9LFxuICAgICAgc2VtYW50aWNfcm9sZXM6IHt9XG4gICAgfVxuICB9O1xuICBubHUuYW5hbHl6ZShvcHRpb25zLCAoZXJyLCByZXMpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgcmVqZWN0KCk7XG4gICAgfVxuICAgIHJlc29sdmUocmVzKTtcbiAgfSk7XG59IGVsc2Uge1xuICByZWplY3QoXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBVUkxcIilcbn1cbiB9KVxufSBcblxuLy8gZ2V0V2F0c29uRGF0YShcImdvb2dsZS5jb21cIikudGhlbihkID0+IGNvbnNvbGUubG9nKGQpKS5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuXG5leHBvcnQgZGVmYXVsdCBnZXRXYXRzb25EYXRhIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "watsonURL.js"
      ],
      "names": [
        "process",
        "env",
        "WATSONUSER",
        "WATSONPASS",
        "NaturalLanguageUnderstandingV1",
        "require",
        "config",
        "silent",
        "nlu",
        "version",
        "url",
        "getWatsonData",
        "link",
        "urlFormat",
        "urlRegex",
        "RegExp",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "match",
        "options",
        "features",
        "concepts",
        "keywords",
        "categories",
        "entities",
        "metadata",
        "relations",
        "semantic_roles",
        "analyze",
        "err",
        "res"
      ],
      "mappings": ";;;;;mBAAkCA,QAAQC,G;IAAlCC,U,gBAAAA,U;IAAYC,U,gBAAAA,U;;AACpB,IAAIC,iCAAiCC,QAAQ,6DAAR,CAArC;AACAA,QAAQ,QAAR,EAAkBC,MAAlB,CAAyB;AACvBC,UAAQ;AADe,CAAzB,E,CAEI;;AAEJ,IAAIC,MAAM,IAAIJ,8BAAJ,CAAmC;AAC3CK,WAAS,YADkC;AAE3CC,OAAK;AAFsC,CAAnC,CAAV;;AAMA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAU;;AAEhC,MAAIC,YAAY,mFAAhB;AACA,MAAIC,WAAW,IAAIC,MAAJ,CAAWF,SAAX,CAAf;;AAKC,SAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACtCC,YAAQC,GAAR,CAAY,gBAAZ;AACAD,YAAQC,GAAR,CAAYR,IAAZ;AACAO,YAAQC,GAAR,CAAYN,QAAZ;;AAEC,QAAIF,KAAKS,KAAL,CAAWP,QAAX,CAAJ,EAAyB;;AAG1B,UAAIQ,UAAU;AACZZ,aAAKE,IADO;AAEZW,kBAAU;AACRC,oBAAU,EADF;AAERC,oBAAU;AACR,yBAAa,IADL;AAER,uBAAW;AAFH,WAFF;AAMRC,sBAAY,EANJ;AAORC,oBAAU,EAPF;AAQRC,oBAAU,EARF;AASRC,qBAAW,EATH;AAURC,0BAAgB;AAVR;AAFE,OAAd;AAeAtB,UAAIuB,OAAJ,CAAYT,OAAZ,EAAqB,UAACU,GAAD,EAAMC,GAAN,EAAc;AACjC,YAAID,GAAJ,EAAS;AACPb,kBAAQC,GAAR,CAAYY,GAAZ;AACAd;AACD;AACDD,gBAAQgB,GAAR;AACD,OAND;AAOD,KAzBE,MAyBI;AACLf,aAAO,0BAAP;AACD;AACC,GAjCM,CAAP;AAkCA,CA1CD;;AA4CA;;kBAEeP,a",
      "file": "watsonURL.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "const { WATSONUSER, WATSONPASS} = process.env\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\n\nconst getWatsonData = (link) => {\n\nlet urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\nlet urlRegex = new RegExp(urlFormat)\n\n\n\n\n return new Promise((resolve,reject) => {\n  console.log(\"$$$$$$$$$$$$$$\")\n  console.log(link)\n  console.log(urlRegex)\n   \n   if (link.match(urlRegex)){\n\n\n  var options = {\n    url: link,\n    features: {\n      concepts: {},\n      keywords: {\n        'sentiment': true,\n        'emotion': true\n      },\n      categories: {},\n      entities: {},\n      metadata: {},\n      relations: {},\n      semantic_roles: {}\n    }\n  };\n  nlu.analyze(options, (err, res) => {\n    if (err) {\n      console.log(err);\n      reject();\n    }\n    resolve(res);\n  });\n} else {\n  reject(\"Please enter a valid URL\")\n}\n })\n} \n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexport default getWatsonData"
      ]
    },
    "mtime": 1559149592864
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./seed",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "seed"
              }
            ]
          },
          {
            "source": "../util/dbConnect",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dbConnect"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/index.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _seed = require('./seed');\n\nvar _seed2 = _interopRequireDefault(_seed);\n\nvar _dbConnect = require('../util/dbConnect');\n\nvar _dbConnect2 = _interopRequireDefault(_dbConnect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n(0, _dbConnect2.default)().then(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n    var connection = _ref2.connection;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return connection.dropDatabase();\n\n          case 2:\n            _context.next = 4;\n            return (0, _seed2.default)(connection);\n\n          case 4:\n            connection.close();\n\n          case 5:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}()).catch(console.error);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRoZW4iLCJjb25uZWN0aW9uIiwiZHJvcERhdGFiYXNlIiwiY2xvc2UiLCJjYXRjaCIsImNvbnNvbGUiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7Ozs7OztBQUVBLDJCQUNDQSxJQUREO0FBQUEscUVBQ007QUFBQSxRQUFRQyxVQUFSLFNBQVFBLFVBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0VBLFdBQVdDLFlBQVgsRUFERjs7QUFBQTtBQUFBO0FBQUEsbUJBRUUsb0JBQUtELFVBQUwsQ0FGRjs7QUFBQTtBQUdKQSx1QkFBV0UsS0FBWDs7QUFISTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUROOztBQUFBO0FBQUE7QUFBQTtBQUFBLEtBTUNDLEtBTkQsQ0FNT0MsUUFBUUMsS0FOZiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3NlZWRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNlZWQgZnJvbSAnLi9zZWVkJztcbmltcG9ydCBkYkNvbm5lY3QgZnJvbSAnLi4vdXRpbC9kYkNvbm5lY3QnO1xuXG5kYkNvbm5lY3QoKVxuLnRoZW4oYXN5bmMgKHtjb25uZWN0aW9ufSkgPT4ge1xuICBhd2FpdCBjb25uZWN0aW9uLmRyb3BEYXRhYmFzZSgpO1xuICBhd2FpdCBzZWVkKGNvbm5lY3Rpb24pO1xuICBjb25uZWN0aW9uLmNsb3NlKCk7XG59KVxuLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "then",
        "connection",
        "dropDatabase",
        "close",
        "catch",
        "console",
        "error"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;;;;;AAEA,2BACCA,IADD;AAAA,qEACM;AAAA,QAAQC,UAAR,SAAQA,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEA,WAAWC,YAAX,EADF;;AAAA;AAAA;AAAA,mBAEE,oBAAKD,UAAL,CAFF;;AAAA;AAGJA,uBAAWE,KAAX;;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADN;;AAAA;AAAA;AAAA;AAAA,KAMCC,KAND,CAMOC,QAAQC,KANf",
      "file": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import seed from './seed';\nimport dbConnect from '../util/dbConnect';\n\ndbConnect()\n.then(async ({connection}) => {\n  await connection.dropDatabase();\n  await seed(connection);\n  connection.close();\n})\n.catch(console.error);\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/seed.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./users",
            "imported": [
              "createSuperAdmin"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createSuperAdmin",
                "local": "createSuperAdmin"
              }
            ]
          },
          {
            "source": "./pings",
            "imported": [
              "createPings"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createPings",
                "local": "createPings"
              }
            ]
          },
          {
            "source": "./prompts",
            "imported": [
              "createPrompt",
              "populatePrompt"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createPrompt",
                "local": "createPrompt"
              },
              {
                "kind": "named",
                "imported": "populatePrompt",
                "local": "populatePrompt"
              }
            ]
          },
          {
            "source": "./cohorts",
            "imported": [
              "createCohort",
              "populateCohort"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createCohort",
                "local": "createCohort"
              },
              {
                "kind": "named",
                "imported": "populateCohort",
                "local": "populateCohort"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/seed.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/seed.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "seed.js",
      "sourceFileName": "seed.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "seed"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _users = require('./users');\n\nvar _pings = require('./pings');\n\nvar _prompts = require('./prompts');\n\nvar _cohorts = require('./cohorts');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             The seeds will add the following seed data for the development environment!\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Users\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - 1 Super admin\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Few Educators\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Several Pings\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Several Prompts\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Assign some pings\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - Few Cohorts\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Few Students\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                               - Several days\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 - Create spotters\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 - Timeline (An array of prompts)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   - Create pingpongs foreach event\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           */\n\n\nvar pingCount = 100,\n    promptCount = 40,\n    cohorCount = 3,\n    studentCount = 20,\n    // for each cohort\ndayCount = 108;\n\nexports.default = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(c) {\n    var i, prompt, cohort;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _users.createSuperAdmin)();\n\n          case 2:\n            _context.next = 4;\n            return (0, _pings.createPings)(pingCount);\n\n          case 4:\n            i = 0;\n\n          case 5:\n            if (!(i < promptCount)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 8;\n            return (0, _prompts.createPrompt)();\n\n          case 8:\n            prompt = _context.sent;\n            _context.next = 11;\n            return (0, _prompts.populatePrompt)(prompt);\n\n          case 11:\n            i++;\n            _context.next = 5;\n            break;\n\n          case 14:\n            i = 0;\n\n          case 15:\n            if (!(i < cohorCount)) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.next = 18;\n            return (0, _cohorts.createCohort)();\n\n          case 18:\n            cohort = _context.sent;\n            _context.next = 21;\n            return (0, _cohorts.populateCohort)({ cohort: cohort, studentCount: studentCount, dayCount: dayCount });\n\n          case 21:\n            i++;\n            _context.next = 15;\n            break;\n\n          case 24:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsicGluZ0NvdW50IiwicHJvbXB0Q291bnQiLCJjb2hvckNvdW50Iiwic3R1ZGVudENvdW50IiwiZGF5Q291bnQiLCJjIiwiaSIsInByb21wdCIsImNvaG9ydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBaUJBOztBQUNBOztBQUNBOztBQUNBOzsyY0FwQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEsSUFBTUEsWUFBWSxHQUFsQjtBQUFBLElBQ0VDLGNBQWMsRUFEaEI7QUFBQSxJQUVFQyxhQUFhLENBRmY7QUFBQSxJQUdFQyxlQUFlLEVBSGpCO0FBQUEsSUFHc0I7QUFDcEJDLFdBQVcsR0FKYjs7O3FFQU1lLGlCQUFNQyxDQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBR1AsOEJBSE87O0FBQUE7QUFBQTtBQUFBLG1CQU1QLHdCQUFZTCxTQUFaLENBTk87O0FBQUE7QUFTSk0sYUFUSSxHQVNBLENBVEE7O0FBQUE7QUFBQSxrQkFTR0EsSUFBSUwsV0FUUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQVVRLDRCQVZSOztBQUFBO0FBVVBNLGtCQVZPO0FBQUE7QUFBQSxtQkFXTCw2QkFBZUEsTUFBZixDQVhLOztBQUFBO0FBU29CRCxlQVRwQjtBQUFBO0FBQUE7O0FBQUE7QUFlSkEsYUFmSSxHQWVBLENBZkE7O0FBQUE7QUFBQSxrQkFlR0EsSUFBSUosVUFmUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQWdCUSw0QkFoQlI7O0FBQUE7QUFnQlBNLGtCQWhCTztBQUFBO0FBQUEsbUJBaUJMLDZCQUFlLEVBQUNBLGNBQUQsRUFBU0wsMEJBQVQsRUFBdUJDLGtCQUF2QixFQUFmLENBakJLOztBQUFBO0FBZW1CRSxlQWZuQjtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsImZpbGUiOiJzZWVkLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvc2VlZHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXG4gIFRoZSBzZWVkcyB3aWxsIGFkZCB0aGUgZm9sbG93aW5nIHNlZWQgZGF0YSBmb3IgdGhlIGRldmVsb3BtZW50IGVudmlyb25tZW50IVxuICAtIFVzZXJzXG4gICAgLSAxIFN1cGVyIGFkbWluXG4gICAgLSBGZXcgRWR1Y2F0b3JzXG4gIC0gU2V2ZXJhbCBQaW5nc1xuICAtIFNldmVyYWwgUHJvbXB0c1xuICAgIC0gQXNzaWduIHNvbWUgcGluZ3NcbiAgLSBGZXcgQ29ob3J0c1xuICAgIC0gRmV3IFN0dWRlbnRzXG4gICAgLSBTZXZlcmFsIGRheXNcbiAgICAgIC0gQ3JlYXRlIHNwb3R0ZXJzXG4gICAgICAtIFRpbWVsaW5lIChBbiBhcnJheSBvZiBwcm9tcHRzKVxuICAgICAgICAtIENyZWF0ZSBwaW5ncG9uZ3MgZm9yZWFjaCBldmVudFxuXG4qL1xuaW1wb3J0IHtjcmVhdGVTdXBlckFkbWlufSBmcm9tICcuL3VzZXJzJztcbmltcG9ydCB7Y3JlYXRlUGluZ3N9IGZyb20gJy4vcGluZ3MnO1xuaW1wb3J0IHtjcmVhdGVQcm9tcHQsIHBvcHVsYXRlUHJvbXB0fSBmcm9tICcuL3Byb21wdHMnO1xuaW1wb3J0IHtjcmVhdGVDb2hvcnQsIHBvcHVsYXRlQ29ob3J0fSBmcm9tICcuL2NvaG9ydHMnO1xuXG5jb25zdCBwaW5nQ291bnQgPSAxMDAsXG4gIHByb21wdENvdW50ID0gNDAsXG4gIGNvaG9yQ291bnQgPSAzLFxuICBzdHVkZW50Q291bnQgPSAyMCwgIC8vIGZvciBlYWNoIGNvaG9ydFxuICBkYXlDb3VudCA9IDEwODtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgYyA9PiB7XG5cbiAgLy8gQ3JlYXRlIGEgc3VwZXIgYWRtaW4gdXNlclxuICBhd2FpdCBjcmVhdGVTdXBlckFkbWluKCk7XG5cbiAgLy8gQ3JlYXRlIHBpbmdzXG4gIGF3YWl0IGNyZWF0ZVBpbmdzKHBpbmdDb3VudCk7XG5cbiAgLy8gQ3JlYXRlIHByb21wdHMgJiBhc3NpZ24gcGluZ3NcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9tcHRDb3VudDsgaSsrKSB7XG4gICAgbGV0IHByb21wdCA9IGF3YWl0IGNyZWF0ZVByb21wdCgpO1xuICAgIGF3YWl0IHBvcHVsYXRlUHJvbXB0KHByb21wdCk7XG4gIH1cblxuICAvLyBDcmVhdGUgY29ob3J0cyAmIGNyZWF0ZSBkYXlzIGZvciBlYWNoIGNvaG9ydFxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvaG9yQ291bnQ7IGkrKykge1xuICAgIGxldCBjb2hvcnQgPSBhd2FpdCBjcmVhdGVDb2hvcnQoKTtcbiAgICBhd2FpdCBwb3B1bGF0ZUNvaG9ydCh7Y29ob3J0LCBzdHVkZW50Q291bnQsIGRheUNvdW50fSk7XG4gIH1cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "pingCount",
        "promptCount",
        "cohorCount",
        "studentCount",
        "dayCount",
        "c",
        "i",
        "prompt",
        "cohort"
      ],
      "mappings": ";;;;;;AAiBA;;AACA;;AACA;;AACA;;2cApBA;;;;;;;;;;;;;;;;;;;AAsBA,IAAMA,YAAY,GAAlB;AAAA,IACEC,cAAc,EADhB;AAAA,IAEEC,aAAa,CAFf;AAAA,IAGEC,eAAe,EAHjB;AAAA,IAGsB;AACpBC,WAAW,GAJb;;;qEAMe,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGP,8BAHO;;AAAA;AAAA;AAAA,mBAMP,wBAAYL,SAAZ,CANO;;AAAA;AASJM,aATI,GASA,CATA;;AAAA;AAAA,kBASGA,IAAIL,WATP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUQ,4BAVR;;AAAA;AAUPM,kBAVO;AAAA;AAAA,mBAWL,6BAAeA,MAAf,CAXK;;AAAA;AASoBD,eATpB;AAAA;AAAA;;AAAA;AAeJA,aAfI,GAeA,CAfA;;AAAA;AAAA,kBAeGA,IAAIJ,UAfP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBQ,4BAhBR;;AAAA;AAgBPM,kBAhBO;AAAA;AAAA,mBAiBL,6BAAe,EAACA,cAAD,EAASL,0BAAT,EAAuBC,kBAAvB,EAAf,CAjBK;;AAAA;AAemBE,eAfnB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "file": "seed.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "/*\n\n  The seeds will add the following seed data for the development environment!\n  - Users\n    - 1 Super admin\n    - Few Educators\n  - Several Pings\n  - Several Prompts\n    - Assign some pings\n  - Few Cohorts\n    - Few Students\n    - Several days\n      - Create spotters\n      - Timeline (An array of prompts)\n        - Create pingpongs foreach event\n\n*/\nimport {createSuperAdmin} from './users';\nimport {createPings} from './pings';\nimport {createPrompt, populatePrompt} from './prompts';\nimport {createCohort, populateCohort} from './cohorts';\n\nconst pingCount = 100,\n  promptCount = 40,\n  cohorCount = 3,\n  studentCount = 20,  // for each cohort\n  dayCount = 108;\n\nexport default async c => {\n\n  // Create a super admin user\n  await createSuperAdmin();\n\n  // Create pings\n  await createPings(pingCount);\n\n  // Create prompts & assign pings\n  for (var i = 0; i < promptCount; i++) {\n    let prompt = await createPrompt();\n    await populatePrompt(prompt);\n  }\n\n  // Create cohorts & create days for each cohort\n  for (var i = 0; i < cohorCount; i++) {\n    let cohort = await createCohort();\n    await populateCohort({cohort, studentCount, dayCount});\n  }\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/pings.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Ping"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "pingTypes",
              "pingKinds",
              "questionTypes",
              "defaultQuestionOptions"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "pingTypes",
                "local": "pingTypes"
              },
              {
                "kind": "named",
                "imported": "pingKinds",
                "local": "pingKinds"
              },
              {
                "kind": "named",
                "imported": "questionTypes",
                "local": "questionTypes"
              },
              {
                "kind": "named",
                "imported": "defaultQuestionOptions",
                "local": "defaultQuestionOptions"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createPing",
            "createPings"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createPing",
              "exported": "createPing"
            },
            {
              "kind": "local",
              "local": "createPings",
              "exported": "createPings"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/pings.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/pings.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pings.js",
      "sourceFileName": "pings.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pings"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPings = exports.createPing = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createPing = exports.createPing = function createPing() {\n  var questionType = _lodash2.default.sample(_constants.questionTypes);\n  return new _ping2.default({\n    data: _extends({\n      text: _faker2.default.hacker.phrase()\n    }, _constants.defaultQuestionOptions[questionType]),\n    questionType: questionType,\n    kind: _lodash2.default.sample(_constants.pingKinds),\n    type: _lodash2.default.sample(_constants.pingTypes),\n    ttl: _faker2.default.random.number({\n      'min': 10,\n      'max': 90\n    }),\n    tags: []\n  }).save();\n};\n\nvar createPings = exports.createPings = function createPings(n) {\n  var pings = [];\n  while (n--) {\n    pings.push(createPing());\n  }\n  return Promise.all(pings);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmdzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVBpbmciLCJxdWVzdGlvblR5cGUiLCJfIiwic2FtcGxlIiwicXVlc3Rpb25UeXBlcyIsIlBpbmciLCJkYXRhIiwidGV4dCIsImZha2VyIiwiaGFja2VyIiwicGhyYXNlIiwiZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyIsImtpbmQiLCJwaW5nS2luZHMiLCJ0eXBlIiwicGluZ1R5cGVzIiwidHRsIiwicmFuZG9tIiwibnVtYmVyIiwidGFncyIsInNhdmUiLCJjcmVhdGVQaW5ncyIsInBpbmdzIiwibiIsInB1c2giLCJQcm9taXNlIiwiYWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLGtDQUFhLFNBQWJBLFVBQWEsR0FBTTtBQUM5QixNQUFNQyxlQUFlQyxpQkFBRUMsTUFBRixDQUFTQyx3QkFBVCxDQUFyQjtBQUNBLFNBQU8sSUFBSUMsY0FBSixDQUFTO0FBQ2RDO0FBQ0VDLFlBQU1DLGdCQUFNQyxNQUFOLENBQWFDLE1BQWI7QUFEUixPQUVLQyxrQ0FBdUJWLFlBQXZCLENBRkwsQ0FEYztBQUtkQSw4QkFMYztBQU1kVyxVQUFNVixpQkFBRUMsTUFBRixDQUFTVSxvQkFBVCxDQU5RO0FBT2RDLFVBQU1aLGlCQUFFQyxNQUFGLENBQVNZLG9CQUFULENBUFE7QUFRZEMsU0FBS1IsZ0JBQU1TLE1BQU4sQ0FBYUMsTUFBYixDQUFvQjtBQUN2QixhQUFPLEVBRGdCO0FBRXZCLGFBQU87QUFGZ0IsS0FBcEIsQ0FSUztBQVlkQyxVQUFNO0FBWlEsR0FBVCxFQWFKQyxJQWJJLEVBQVA7QUFjRCxDQWhCTTs7QUFrQkEsSUFBTUMsb0NBQWMsU0FBZEEsV0FBYyxJQUFLO0FBQzlCLE1BQU1DLFFBQVEsRUFBZDtBQUNBLFNBQU1DLEdBQU4sRUFBVztBQUNURCxVQUFNRSxJQUFOLENBQVd4QixZQUFYO0FBQ0Q7QUFDRCxTQUFPeUIsUUFBUUMsR0FBUixDQUFZSixLQUFaLENBQVA7QUFDRCxDQU5NIiwiZmlsZSI6InBpbmdzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvc2VlZHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGluZyBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5pbXBvcnQgZmFrZXIgZnJvbSAnZmFrZXInO1xuaW1wb3J0IHtwaW5nVHlwZXMsIHBpbmdLaW5kcywgcXVlc3Rpb25UeXBlcywgZGVmYXVsdFF1ZXN0aW9uT3B0aW9uc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBpbmcgPSAoKSA9PiB7XG4gIGNvbnN0IHF1ZXN0aW9uVHlwZSA9IF8uc2FtcGxlKHF1ZXN0aW9uVHlwZXMpO1xuICByZXR1cm4gbmV3IFBpbmcoe1xuICAgIGRhdGE6IHtcbiAgICAgIHRleHQ6IGZha2VyLmhhY2tlci5waHJhc2UoKSxcbiAgICAgIC4uLmRlZmF1bHRRdWVzdGlvbk9wdGlvbnNbcXVlc3Rpb25UeXBlXVxuICAgIH0sXG4gICAgcXVlc3Rpb25UeXBlLFxuICAgIGtpbmQ6IF8uc2FtcGxlKHBpbmdLaW5kcyksXG4gICAgdHlwZTogXy5zYW1wbGUocGluZ1R5cGVzKSxcbiAgICB0dGw6IGZha2VyLnJhbmRvbS5udW1iZXIoe1xuICAgICAgJ21pbic6IDEwLFxuICAgICAgJ21heCc6IDkwXG4gICAgfSksXG4gICAgdGFnczogW11cbiAgfSkuc2F2ZSgpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlUGluZ3MgPSBuID0+IHtcbiAgY29uc3QgcGluZ3MgPSBbXTtcbiAgd2hpbGUobi0tKSB7XG4gICAgcGluZ3MucHVzaChjcmVhdGVQaW5nKCkpO1xuICB9XG4gIHJldHVybiBQcm9taXNlLmFsbChwaW5ncyk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pings.js"
      ],
      "names": [
        "createPing",
        "questionType",
        "_",
        "sample",
        "questionTypes",
        "Ping",
        "data",
        "text",
        "faker",
        "hacker",
        "phrase",
        "defaultQuestionOptions",
        "kind",
        "pingKinds",
        "type",
        "pingTypes",
        "ttl",
        "random",
        "number",
        "tags",
        "save",
        "createPings",
        "pings",
        "n",
        "push",
        "Promise",
        "all"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,kCAAa,SAAbA,UAAa,GAAM;AAC9B,MAAMC,eAAeC,iBAAEC,MAAF,CAASC,wBAAT,CAArB;AACA,SAAO,IAAIC,cAAJ,CAAS;AACdC;AACEC,YAAMC,gBAAMC,MAAN,CAAaC,MAAb;AADR,OAEKC,kCAAuBV,YAAvB,CAFL,CADc;AAKdA,8BALc;AAMdW,UAAMV,iBAAEC,MAAF,CAASU,oBAAT,CANQ;AAOdC,UAAMZ,iBAAEC,MAAF,CAASY,oBAAT,CAPQ;AAQdC,SAAKR,gBAAMS,MAAN,CAAaC,MAAb,CAAoB;AACvB,aAAO,EADgB;AAEvB,aAAO;AAFgB,KAApB,CARS;AAYdC,UAAM;AAZQ,GAAT,EAaJC,IAbI,EAAP;AAcD,CAhBM;;AAkBA,IAAMC,oCAAc,SAAdA,WAAc,IAAK;AAC9B,MAAMC,QAAQ,EAAd;AACA,SAAMC,GAAN,EAAW;AACTD,UAAME,IAAN,CAAWxB,YAAX;AACD;AACD,SAAOyB,QAAQC,GAAR,CAAYJ,KAAZ,CAAP;AACD,CANM",
      "file": "pings.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import Ping from '../models/ping';\nimport faker from 'faker';\nimport {pingTypes, pingKinds, questionTypes, defaultQuestionOptions} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createPing = () => {\n  const questionType = _.sample(questionTypes);\n  return new Ping({\n    data: {\n      text: faker.hacker.phrase(),\n      ...defaultQuestionOptions[questionType]\n    },\n    questionType,\n    kind: _.sample(pingKinds),\n    type: _.sample(pingTypes),\n    ttl: faker.random.number({\n      'min': 10,\n      'max': 90\n    }),\n    tags: []\n  }).save();\n}\n\nexport const createPings = n => {\n  const pings = [];\n  while(n--) {\n    pings.push(createPing());\n  }\n  return Promise.all(pings);\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/prompts.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Ping"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "promptTypes"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "promptTypes",
                "local": "promptTypes"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createPrompt",
            "populatePrompt"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createPrompt",
              "exported": "createPrompt"
            },
            {
              "kind": "local",
              "local": "populatePrompt",
              "exported": "populatePrompt"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/prompts.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/prompts.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompts.js",
      "sourceFileName": "prompts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompts"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.populatePrompt = exports.createPrompt = undefined;\n\nvar _prompt = require('../models/prompt');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _constants = require('../util/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar createPrompt = exports.createPrompt = function createPrompt() {\n  return new _prompt2.default({\n    name: _faker2.default.company.catchPhrase(),\n    duration: _faker2.default.random.number({\n      'min': 30,\n      'max': 180\n    }),\n    tags: [],\n    type: _lodash2.default.sample(_constants.promptTypes),\n    pings: []\n  }).save();\n};\n\nvar populatePrompt = exports.populatePrompt = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(prompt) {\n    var pings;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _ping2.default.aggregate([{\n              $sample: {\n                size: 5\n              }\n            }]);\n\n          case 2:\n            pings = _context.sent;\n\n            pings.forEach(function (ping) {\n              return prompt.pings.push(ping);\n            });\n            return _context.abrupt('return', prompt.save());\n\n          case 5:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function populatePrompt(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdHMuanMiXSwibmFtZXMiOlsiY3JlYXRlUHJvbXB0IiwiUHJvbXB0IiwibmFtZSIsImZha2VyIiwiY29tcGFueSIsImNhdGNoUGhyYXNlIiwiZHVyYXRpb24iLCJyYW5kb20iLCJudW1iZXIiLCJ0YWdzIiwidHlwZSIsIl8iLCJzYW1wbGUiLCJwcm9tcHRUeXBlcyIsInBpbmdzIiwic2F2ZSIsInBvcHVsYXRlUHJvbXB0IiwicHJvbXB0IiwiUGluZyIsImFnZ3JlZ2F0ZSIsIiRzYW1wbGUiLCJzaXplIiwiZm9yRWFjaCIsInB1c2giLCJwaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7Ozs7O0FBRU8sSUFBTUEsc0NBQWUsU0FBZkEsWUFBZTtBQUFBLFNBQU0sSUFBSUMsZ0JBQUosQ0FBVztBQUMzQ0MsVUFBTUMsZ0JBQU1DLE9BQU4sQ0FBY0MsV0FBZCxFQURxQztBQUUzQ0MsY0FBVUgsZ0JBQU1JLE1BQU4sQ0FBYUMsTUFBYixDQUFvQjtBQUM1QixhQUFPLEVBRHFCO0FBRTVCLGFBQU87QUFGcUIsS0FBcEIsQ0FGaUM7QUFNM0NDLFVBQU0sRUFOcUM7QUFPM0NDLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLHNCQUFULENBUHFDO0FBUTNDQyxXQUFPO0FBUm9DLEdBQVgsRUFTL0JDLElBVCtCLEVBQU47QUFBQSxDQUFyQjs7QUFXQSxJQUFNQztBQUFBLHFFQUFpQixpQkFBTUMsTUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNSQyxlQUFLQyxTQUFMLENBQWUsQ0FBQztBQUNsQ0MsdUJBQVM7QUFDUEMsc0JBQU07QUFEQztBQUR5QixhQUFELENBQWYsQ0FEUTs7QUFBQTtBQUN0QlAsaUJBRHNCOztBQU01QkEsa0JBQU1RLE9BQU4sQ0FBYztBQUFBLHFCQUFRTCxPQUFPSCxLQUFQLENBQWFTLElBQWIsQ0FBa0JDLElBQWxCLENBQVI7QUFBQSxhQUFkO0FBTjRCLDZDQU9yQlAsT0FBT0YsSUFBUCxFQVBxQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOIiwiZmlsZSI6InByb21wdHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9tcHQgZnJvbSAnLi4vbW9kZWxzL3Byb21wdCc7XG5pbXBvcnQgUGluZyBmcm9tICcuLi9tb2RlbHMvcGluZyc7XG5pbXBvcnQgZmFrZXIgZnJvbSAnZmFrZXInO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuaW1wb3J0IHtwcm9tcHRUeXBlc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUHJvbXB0ID0gKCkgPT4gbmV3IFByb21wdCh7XG4gIG5hbWU6IGZha2VyLmNvbXBhbnkuY2F0Y2hQaHJhc2UoKSxcbiAgZHVyYXRpb246IGZha2VyLnJhbmRvbS5udW1iZXIoe1xuICAgICdtaW4nOiAzMCxcbiAgICAnbWF4JzogMTgwXG4gIH0pLFxuICB0YWdzOiBbXSxcbiAgdHlwZTogXy5zYW1wbGUocHJvbXB0VHlwZXMpLFxuICBwaW5nczogW11cbn0pLnNhdmUoKVxuXG5leHBvcnQgY29uc3QgcG9wdWxhdGVQcm9tcHQgPSBhc3luYyBwcm9tcHQgPT57XG4gIGNvbnN0IHBpbmdzID0gYXdhaXQgUGluZy5hZ2dyZWdhdGUoW3tcbiAgICAkc2FtcGxlOiB7XG4gICAgICBzaXplOiA1XG4gICAgfVxuICB9XSk7XG4gIHBpbmdzLmZvckVhY2gocGluZyA9PiBwcm9tcHQucGluZ3MucHVzaChwaW5nKSk7XG4gIHJldHVybiBwcm9tcHQuc2F2ZSgpO1xufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompts.js"
      ],
      "names": [
        "createPrompt",
        "Prompt",
        "name",
        "faker",
        "company",
        "catchPhrase",
        "duration",
        "random",
        "number",
        "tags",
        "type",
        "_",
        "sample",
        "promptTypes",
        "pings",
        "save",
        "populatePrompt",
        "prompt",
        "Ping",
        "aggregate",
        "$sample",
        "size",
        "forEach",
        "push",
        "ping"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEO,IAAMA,sCAAe,SAAfA,YAAe;AAAA,SAAM,IAAIC,gBAAJ,CAAW;AAC3CC,UAAMC,gBAAMC,OAAN,CAAcC,WAAd,EADqC;AAE3CC,cAAUH,gBAAMI,MAAN,CAAaC,MAAb,CAAoB;AAC5B,aAAO,EADqB;AAE5B,aAAO;AAFqB,KAApB,CAFiC;AAM3CC,UAAM,EANqC;AAO3CC,UAAMC,iBAAEC,MAAF,CAASC,sBAAT,CAPqC;AAQ3CC,WAAO;AARoC,GAAX,EAS/BC,IAT+B,EAAN;AAAA,CAArB;;AAWA,IAAMC;AAAA,qEAAiB,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,eAAKC,SAAL,CAAe,CAAC;AAClCC,uBAAS;AACPC,sBAAM;AADC;AADyB,aAAD,CAAf,CADQ;;AAAA;AACtBP,iBADsB;;AAM5BA,kBAAMQ,OAAN,CAAc;AAAA,qBAAQL,OAAOH,KAAP,CAAaS,IAAb,CAAkBC,IAAlB,CAAR;AAAA,aAAd;AAN4B,6CAOrBP,OAAOF,IAAP,EAPqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN",
      "file": "prompts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import Prompt from '../models/prompt';\nimport Ping from '../models/ping';\nimport faker from 'faker';\nimport _ from 'lodash';\n\nimport {promptTypes} from '../util/constants';\n\nexport const createPrompt = () => new Prompt({\n  name: faker.company.catchPhrase(),\n  duration: faker.random.number({\n    'min': 30,\n    'max': 180\n  }),\n  tags: [],\n  type: _.sample(promptTypes),\n  pings: []\n}).save()\n\nexport const populatePrompt = async prompt =>{\n  const pings = await Ping.aggregate([{\n    $sample: {\n      size: 5\n    }\n  }]);\n  pings.forEach(ping => prompt.pings.push(ping));\n  return prompt.save();\n}"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/cohorts.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "../util/createTeams",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createTeams"
              }
            ]
          },
          {
            "source": "./users",
            "imported": [
              "createStudent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createStudent",
                "local": "createStudent"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createCohort",
            "populateCohort"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createCohort",
              "exported": "createCohort"
            },
            {
              "kind": "local",
              "local": "populateCohort",
              "exported": "populateCohort"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/cohorts.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/cohorts.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohorts.js",
      "sourceFileName": "cohorts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohorts"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.populateCohort = exports.createCohort = undefined;\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _prompt = require('../models/prompt');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _createTeams = require('../util/createTeams');\n\nvar _createTeams2 = _interopRequireDefault(_createTeams);\n\nvar _users = require('./users');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar createCohort = exports.createCohort = function createCohort() {\n  return new _cohort2.default({\n    startDate: _faker2.default.date.between('2018-03-01', '2018-05-01'),\n    endDate: _faker2.default.date.future(),\n    name: _faker2.default.commerce.productName()\n  }).save();\n};\n\nvar getPhase = function getPhase(day) {\n  return day > 20 ? day > 45 ? \"Deep Focus\" : \" Focus\" : \"Core\";\n};\n\n// todo: calculate date from cohort\nvar createDay = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n    var cohort = _ref2.cohort,\n        students = _ref2.students,\n        day = _ref2.day;\n    var phase, date, prompts, pingpongs, timeline;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            phase = getPhase(day);\n            date = new Date(cohort.startDate.valueOf());\n\n            date.setDate(cohort.startDate.getDate() + day - 1);\n\n            // let pairs = createTeams(students, 2);\n\n            // get a list of prompts and populate them with their pings\n            _context.next = 5;\n            return _prompt2.default.aggregate([{\n              $sample: {\n                size: 3\n              }\n            }]);\n\n          case 5:\n            prompts = _context.sent;\n            pingpongs = [];\n            timeline = prompts.map(function (prompt) {\n\n              var startTime = new Date(date.valueOf());\n              startTime.setSeconds(0);\n              startTime.setMinutes(45);\n              startTime.setHours(11);\n\n              // let triggerTime = new Date(startTime.valueOf() + prompt.duration);\n              // for(let student of students) {\n              //   for(let ping of prompt.pings) {\n              //     pingpongs.push({\n              //       triggerTime,\n              //       ping,\n              //       by: student,\n              //       to: _.sample(students),\n              //     });\n              //   }\n              // }\n\n              return {\n                prompt: prompt._id,\n                startTime: startTime\n              };\n            });\n            return _context.abrupt('return', new _day2.default({ cohort: cohort._id, day: day, phase: phase, date: date, timeline: timeline }).save());\n\n          case 9:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function createDay(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// todo: this logic needs to be associated with Cohort model itself\nvar populateCohort = exports.populateCohort = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref4) {\n    var cohort = _ref4.cohort,\n        studentCount = _ref4.studentCount,\n        dayCount = _ref4.dayCount;\n    var students, i, student, queries, day;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            students = [];\n            i = 0;\n\n          case 2:\n            if (!(i < studentCount)) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 5;\n            return (0, _users.createStudent)(cohort._id);\n\n          case 5:\n            student = _context2.sent;\n\n            students.push(student);\n\n          case 7:\n            i++;\n            _context2.next = 2;\n            break;\n\n          case 10:\n            // cohort.spotters = createTeams(students, 2);\n            queries = [cohort.save()];\n\n            for (day = 1; day < dayCount; day++) {\n              queries.push(createDay({ cohort: cohort, students: students, day: day }));\n            }\n            return _context2.abrupt('return', Promise.all(queries));\n\n          case 13:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }));\n\n  return function populateCohort(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydHMuanMiXSwibmFtZXMiOlsiY3JlYXRlQ29ob3J0IiwiQ29ob3J0Iiwic3RhcnREYXRlIiwiZmFrZXIiLCJkYXRlIiwiYmV0d2VlbiIsImVuZERhdGUiLCJmdXR1cmUiLCJuYW1lIiwiY29tbWVyY2UiLCJwcm9kdWN0TmFtZSIsInNhdmUiLCJnZXRQaGFzZSIsImRheSIsImNyZWF0ZURheSIsImNvaG9ydCIsInN0dWRlbnRzIiwicGhhc2UiLCJEYXRlIiwidmFsdWVPZiIsInNldERhdGUiLCJnZXREYXRlIiwiUHJvbXB0IiwiYWdncmVnYXRlIiwiJHNhbXBsZSIsInNpemUiLCJwcm9tcHRzIiwicGluZ3BvbmdzIiwidGltZWxpbmUiLCJtYXAiLCJzdGFydFRpbWUiLCJzZXRTZWNvbmRzIiwic2V0TWludXRlcyIsInNldEhvdXJzIiwicHJvbXB0IiwiX2lkIiwiRGF5IiwicG9wdWxhdGVDb2hvcnQiLCJzdHVkZW50Q291bnQiLCJkYXlDb3VudCIsImkiLCJzdHVkZW50IiwicHVzaCIsInF1ZXJpZXMiLCJQcm9taXNlIiwiYWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLHNDQUFlLFNBQWZBLFlBQWU7QUFBQSxTQUFNLElBQUlDLGdCQUFKLENBQVc7QUFDM0NDLGVBQVdDLGdCQUFNQyxJQUFOLENBQVdDLE9BQVgsQ0FBbUIsWUFBbkIsRUFBaUMsWUFBakMsQ0FEZ0M7QUFFM0NDLGFBQVNILGdCQUFNQyxJQUFOLENBQVdHLE1BQVgsRUFGa0M7QUFHM0NDLFVBQU1MLGdCQUFNTSxRQUFOLENBQWVDLFdBQWY7QUFIcUMsR0FBWCxFQUkvQkMsSUFKK0IsRUFBTjtBQUFBLENBQXJCOztBQU9QLElBQU1DLFdBQVcsU0FBWEEsUUFBVztBQUFBLFNBQVFDLE1BQU0sRUFBTixHQUFZQSxNQUFNLEVBQU4sR0FBVyxZQUFYLEdBQTBCLFFBQXRDLEdBQWtELE1BQTFEO0FBQUEsQ0FBakI7O0FBRUE7QUFDQSxJQUFNQztBQUFBLHFFQUFZO0FBQUEsUUFBUUMsTUFBUixTQUFRQSxNQUFSO0FBQUEsUUFBZ0JDLFFBQWhCLFNBQWdCQSxRQUFoQjtBQUFBLFFBQTBCSCxHQUExQixTQUEwQkEsR0FBMUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRVZJLGlCQUZVLEdBRUZMLFNBQVNDLEdBQVQsQ0FGRTtBQUdaVCxnQkFIWSxHQUdMLElBQUljLElBQUosQ0FBU0gsT0FBT2IsU0FBUCxDQUFpQmlCLE9BQWpCLEVBQVQsQ0FISzs7QUFJaEJmLGlCQUFLZ0IsT0FBTCxDQUFhTCxPQUFPYixTQUFQLENBQWlCbUIsT0FBakIsS0FBNkJSLEdBQTdCLEdBQW1DLENBQWhEOztBQUVBOztBQUVBO0FBUmdCO0FBQUEsbUJBU0lTLGlCQUFPQyxTQUFQLENBQWlCLENBQUM7QUFDcENDLHVCQUFTO0FBQ1BDLHNCQUFNO0FBREM7QUFEMkIsYUFBRCxDQUFqQixDQVRKOztBQUFBO0FBU1pDLG1CQVRZO0FBZVpDLHFCQWZZLEdBZUEsRUFmQTtBQWdCWkMsb0JBaEJZLEdBZ0JERixRQUFRRyxHQUFSLENBQVksa0JBQVU7O0FBRW5DLGtCQUFJQyxZQUFZLElBQUlaLElBQUosQ0FBU2QsS0FBS2UsT0FBTCxFQUFULENBQWhCO0FBQ0FXLHdCQUFVQyxVQUFWLENBQXFCLENBQXJCO0FBQ0FELHdCQUFVRSxVQUFWLENBQXFCLEVBQXJCO0FBQ0FGLHdCQUFVRyxRQUFWLENBQW1CLEVBQW5COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQU87QUFDTEMsd0JBQVFBLE9BQU9DLEdBRFY7QUFFTEw7QUFGSyxlQUFQO0FBSUQsYUF2QmMsQ0FoQkM7QUFBQSw2Q0F5Q1QsSUFBSU0sYUFBSixDQUFRLEVBQUNyQixRQUFRQSxPQUFPb0IsR0FBaEIsRUFBcUJ0QixRQUFyQixFQUEwQkksWUFBMUIsRUFBaUNiLFVBQWpDLEVBQXVDd0Isa0JBQXZDLEVBQVIsRUFBMERqQixJQUExRCxFQXpDUzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQU47O0FBNkNBO0FBQ08sSUFBTTBCO0FBQUEsc0VBQWlCO0FBQUEsUUFBUXRCLE1BQVIsU0FBUUEsTUFBUjtBQUFBLFFBQWdCdUIsWUFBaEIsU0FBZ0JBLFlBQWhCO0FBQUEsUUFBOEJDLFFBQTlCLFNBQThCQSxRQUE5QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDeEJ2QixvQkFEd0IsR0FDYixFQURhO0FBRW5Cd0IsYUFGbUIsR0FFZixDQUZlOztBQUFBO0FBQUEsa0JBRVpBLElBQUlGLFlBRlE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxtQkFHTiwwQkFBY3ZCLE9BQU9vQixHQUFyQixDQUhNOztBQUFBO0FBR3RCTSxtQkFIc0I7O0FBSTFCekIscUJBQVMwQixJQUFULENBQWNELE9BQWQ7O0FBSjBCO0FBRU1ELGVBRk47QUFBQTtBQUFBOztBQUFBO0FBTTVCO0FBQ0lHLG1CQVB3QixHQU9kLENBQUM1QixPQUFPSixJQUFQLEVBQUQsQ0FQYzs7QUFRNUIsaUJBQVNFLEdBQVQsR0FBZSxDQUFmLEVBQWtCQSxNQUFNMEIsUUFBeEIsRUFBa0MxQixLQUFsQyxFQUF5QztBQUN2QzhCLHNCQUFRRCxJQUFSLENBQWE1QixVQUFVLEVBQUNDLGNBQUQsRUFBU0Msa0JBQVQsRUFBbUJILFFBQW5CLEVBQVYsQ0FBYjtBQUNEO0FBVjJCLDhDQVdyQitCLFFBQVFDLEdBQVIsQ0FBWUYsT0FBWixDQVhxQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFOIiwiZmlsZSI6ImNvaG9ydHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2hvcnQgZnJvbSAnLi4vbW9kZWxzL2NvaG9ydCc7XG5pbXBvcnQgRGF5IGZyb20gJy4uL21vZGVscy9kYXknO1xuaW1wb3J0IFByb21wdCBmcm9tICcuLi9tb2RlbHMvcHJvbXB0JztcbmltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgY3JlYXRlVGVhbXMgZnJvbSAnLi4vdXRpbC9jcmVhdGVUZWFtcyc7XG5pbXBvcnQge2NyZWF0ZVN0dWRlbnR9IGZyb20gJy4vdXNlcnMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlQ29ob3J0ID0gKCkgPT4gbmV3IENvaG9ydCh7XG4gIHN0YXJ0RGF0ZTogZmFrZXIuZGF0ZS5iZXR3ZWVuKCcyMDE4LTAzLTAxJywgJzIwMTgtMDUtMDEnKSxcbiAgZW5kRGF0ZTogZmFrZXIuZGF0ZS5mdXR1cmUoKSxcbiAgbmFtZTogZmFrZXIuY29tbWVyY2UucHJvZHVjdE5hbWUoKVxufSkuc2F2ZSgpXG5cblxuY29uc3QgZ2V0UGhhc2UgPSBkYXkgPT4gKGRheSA+IDIwID8gKGRheSA+IDQ1ID8gXCJEZWVwIEZvY3VzXCIgOiBcIiBGb2N1c1wiKSA6IFwiQ29yZVwiKTtcblxuLy8gdG9kbzogY2FsY3VsYXRlIGRhdGUgZnJvbSBjb2hvcnRcbmNvbnN0IGNyZWF0ZURheSA9IGFzeW5jICh7Y29ob3J0LCBzdHVkZW50cywgZGF5fSkgPT4ge1xuXG4gIGNvbnN0IHBoYXNlID0gZ2V0UGhhc2UoZGF5KTtcbiAgbGV0IGRhdGUgPSBuZXcgRGF0ZShjb2hvcnQuc3RhcnREYXRlLnZhbHVlT2YoKSk7XG4gIGRhdGUuc2V0RGF0ZShjb2hvcnQuc3RhcnREYXRlLmdldERhdGUoKSArIGRheSAtIDEpO1xuXG4gIC8vIGxldCBwYWlycyA9IGNyZWF0ZVRlYW1zKHN0dWRlbnRzLCAyKTtcblxuICAvLyBnZXQgYSBsaXN0IG9mIHByb21wdHMgYW5kIHBvcHVsYXRlIHRoZW0gd2l0aCB0aGVpciBwaW5nc1xuICBsZXQgcHJvbXB0cyA9IGF3YWl0IFByb21wdC5hZ2dyZWdhdGUoW3tcbiAgICAkc2FtcGxlOiB7XG4gICAgICBzaXplOiAzXG4gICAgfVxuICB9XSk7XG5cbiAgbGV0IHBpbmdwb25ncyA9IFtdO1xuICBsZXQgdGltZWxpbmUgPSBwcm9tcHRzLm1hcChwcm9tcHQgPT4ge1xuXG4gICAgbGV0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKGRhdGUudmFsdWVPZigpKTtcbiAgICBzdGFydFRpbWUuc2V0U2Vjb25kcygwKTtcbiAgICBzdGFydFRpbWUuc2V0TWludXRlcyg0NSk7XG4gICAgc3RhcnRUaW1lLnNldEhvdXJzKDExKTtcblxuICAgIC8vIGxldCB0cmlnZ2VyVGltZSA9IG5ldyBEYXRlKHN0YXJ0VGltZS52YWx1ZU9mKCkgKyBwcm9tcHQuZHVyYXRpb24pO1xuICAgIC8vIGZvcihsZXQgc3R1ZGVudCBvZiBzdHVkZW50cykge1xuICAgIC8vICAgZm9yKGxldCBwaW5nIG9mIHByb21wdC5waW5ncykge1xuICAgIC8vICAgICBwaW5ncG9uZ3MucHVzaCh7XG4gICAgLy8gICAgICAgdHJpZ2dlclRpbWUsXG4gICAgLy8gICAgICAgcGluZyxcbiAgICAvLyAgICAgICBieTogc3R1ZGVudCxcbiAgICAvLyAgICAgICB0bzogXy5zYW1wbGUoc3R1ZGVudHMpLFxuICAgIC8vICAgICB9KTtcbiAgICAvLyAgIH1cbiAgICAvLyB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJvbXB0OiBwcm9tcHQuX2lkLFxuICAgICAgc3RhcnRUaW1lXG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gbmV3IERheSh7Y29ob3J0OiBjb2hvcnQuX2lkLCBkYXksIHBoYXNlLCBkYXRlLCB0aW1lbGluZX0pLnNhdmUoKTtcblxufVxuXG4vLyB0b2RvOiB0aGlzIGxvZ2ljIG5lZWRzIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCBDb2hvcnQgbW9kZWwgaXRzZWxmXG5leHBvcnQgY29uc3QgcG9wdWxhdGVDb2hvcnQgPSBhc3luYyAoe2NvaG9ydCwgc3R1ZGVudENvdW50LCBkYXlDb3VudH0pID0+IHtcbiAgbGV0IHN0dWRlbnRzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3R1ZGVudENvdW50OyBpKyspIHtcbiAgICBsZXQgc3R1ZGVudCA9IGF3YWl0IGNyZWF0ZVN0dWRlbnQoY29ob3J0Ll9pZCk7XG4gICAgc3R1ZGVudHMucHVzaChzdHVkZW50KTtcbiAgfVxuICAvLyBjb2hvcnQuc3BvdHRlcnMgPSBjcmVhdGVUZWFtcyhzdHVkZW50cywgMik7XG4gIGxldCBxdWVyaWVzID0gW2NvaG9ydC5zYXZlKCldO1xuICBmb3IgKHZhciBkYXkgPSAxOyBkYXkgPCBkYXlDb3VudDsgZGF5KyspIHtcbiAgICBxdWVyaWVzLnB1c2goY3JlYXRlRGF5KHtjb2hvcnQsIHN0dWRlbnRzLCBkYXl9KSk7XG4gIH1cbiAgcmV0dXJuIFByb21pc2UuYWxsKHF1ZXJpZXMpO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohorts.js"
      ],
      "names": [
        "createCohort",
        "Cohort",
        "startDate",
        "faker",
        "date",
        "between",
        "endDate",
        "future",
        "name",
        "commerce",
        "productName",
        "save",
        "getPhase",
        "day",
        "createDay",
        "cohort",
        "students",
        "phase",
        "Date",
        "valueOf",
        "setDate",
        "getDate",
        "Prompt",
        "aggregate",
        "$sample",
        "size",
        "prompts",
        "pingpongs",
        "timeline",
        "map",
        "startTime",
        "setSeconds",
        "setMinutes",
        "setHours",
        "prompt",
        "_id",
        "Day",
        "populateCohort",
        "studentCount",
        "dayCount",
        "i",
        "student",
        "push",
        "queries",
        "Promise",
        "all"
      ],
      "mappings": "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",
      "file": "cohorts.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import Cohort from '../models/cohort';\nimport Day from '../models/day';\nimport Prompt from '../models/prompt';\nimport faker from 'faker';\nimport _ from 'lodash';\n\nimport createTeams from '../util/createTeams';\nimport {createStudent} from './users';\n\nexport const createCohort = () => new Cohort({\n  startDate: faker.date.between('2018-03-01', '2018-05-01'),\n  endDate: faker.date.future(),\n  name: faker.commerce.productName()\n}).save()\n\n\nconst getPhase = day => (day > 20 ? (day > 45 ? \"Deep Focus\" : \" Focus\") : \"Core\");\n\n// todo: calculate date from cohort\nconst createDay = async ({cohort, students, day}) => {\n\n  const phase = getPhase(day);\n  let date = new Date(cohort.startDate.valueOf());\n  date.setDate(cohort.startDate.getDate() + day - 1);\n\n  // let pairs = createTeams(students, 2);\n\n  // get a list of prompts and populate them with their pings\n  let prompts = await Prompt.aggregate([{\n    $sample: {\n      size: 3\n    }\n  }]);\n\n  let pingpongs = [];\n  let timeline = prompts.map(prompt => {\n\n    let startTime = new Date(date.valueOf());\n    startTime.setSeconds(0);\n    startTime.setMinutes(45);\n    startTime.setHours(11);\n\n    // let triggerTime = new Date(startTime.valueOf() + prompt.duration);\n    // for(let student of students) {\n    //   for(let ping of prompt.pings) {\n    //     pingpongs.push({\n    //       triggerTime,\n    //       ping,\n    //       by: student,\n    //       to: _.sample(students),\n    //     });\n    //   }\n    // }\n\n    return {\n      prompt: prompt._id,\n      startTime\n    }\n  });\n\n  return new Day({cohort: cohort._id, day, phase, date, timeline}).save();\n\n}\n\n// todo: this logic needs to be associated with Cohort model itself\nexport const populateCohort = async ({cohort, studentCount, dayCount}) => {\n  let students = [];\n  for (let i = 0; i < studentCount; i++) {\n    let student = await createStudent(cohort._id);\n    students.push(student);\n  }\n  // cohort.spotters = createTeams(students, 2);\n  let queries = [cohort.save()];\n  for (var day = 1; day < dayCount; day++) {\n    queries.push(createDay({cohort, students, day}));\n  }\n  return Promise.all(queries);\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/createTeams.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/createTeams.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/createTeams.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createTeams.js",
      "sourceFileName": "createTeams.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createTeams"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (students, size) {\n  return _lodash2.default.chunk(students, size).map(function (students) {\n    return {\n      teamName: _faker2.default.commerce.productName(),\n      students: students.map(function (s) {\n        return s._id;\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZVRlYW1zLmpzIl0sIm5hbWVzIjpbInN0dWRlbnRzIiwic2l6ZSIsIl8iLCJjaHVuayIsIm1hcCIsInRlYW1OYW1lIiwiZmFrZXIiLCJjb21tZXJjZSIsInByb2R1Y3ROYW1lIiwicyIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlLFVBQUNBLFFBQUQsRUFBV0MsSUFBWDtBQUFBLFNBQW9CQyxpQkFBRUMsS0FBRixDQUFRSCxRQUFSLEVBQWtCQyxJQUFsQixFQUNsQ0csR0FEa0MsQ0FDOUI7QUFBQSxXQUFhO0FBQ2hCQyxnQkFBVUMsZ0JBQU1DLFFBQU4sQ0FBZUMsV0FBZixFQURNO0FBRWhCUixnQkFBVUEsU0FBU0ksR0FBVCxDQUFhO0FBQUEsZUFBS0ssRUFBRUMsR0FBUDtBQUFBLE9BQWI7QUFGTSxLQUFiO0FBQUEsR0FEOEIsQ0FBcEI7QUFBQSxDIiwiZmlsZSI6ImNyZWF0ZVRlYW1zLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5leHBvcnQgZGVmYXVsdCAoc3R1ZGVudHMsIHNpemUpID0+IF8uY2h1bmsoc3R1ZGVudHMsIHNpemUpXG4ubWFwKHN0dWRlbnRzID0+ICh7XG4gIHRlYW1OYW1lOiBmYWtlci5jb21tZXJjZS5wcm9kdWN0TmFtZSgpLFxuICBzdHVkZW50czogc3R1ZGVudHMubWFwKHMgPT4gcy5faWQpLFxufSkpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createTeams.js"
      ],
      "names": [
        "students",
        "size",
        "_",
        "chunk",
        "map",
        "teamName",
        "faker",
        "commerce",
        "productName",
        "s",
        "_id"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,QAAD,EAAWC,IAAX;AAAA,SAAoBC,iBAAEC,KAAF,CAAQH,QAAR,EAAkBC,IAAlB,EAClCG,GADkC,CAC9B;AAAA,WAAa;AAChBC,gBAAUC,gBAAMC,QAAN,CAAeC,WAAf,EADM;AAEhBR,gBAAUA,SAASI,GAAT,CAAa;AAAA,eAAKK,EAAEC,GAAP;AAAA,OAAb;AAFM,KAAb;AAAA,GAD8B,CAApB;AAAA,C",
      "file": "createTeams.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import faker from 'faker';\nimport _ from 'lodash';\n\nexport default (students, size) => _.chunk(students, size)\n.map(students => ({\n  teamName: faker.commerce.productName(),\n  students: students.map(s => s._id),\n}));\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "updateUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "updateUser",
                "local": "updateUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/user.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.routes.js",
      "sourceFileName": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _user = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.patch('/', _user.updateUser);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwYXRjaCIsInVwZGF0ZVVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxLQUFQLENBQWEsR0FBYixFQUFrQkMsZ0JBQWxCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJ1c2VyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnJvdXRlci5wYXRjaCgnLycsIHVwZGF0ZVVzZXIpXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.routes.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "patch",
        "updateUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,KAAP,CAAa,GAAb,EAAkBC,gBAAlB;;AAEAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "import express from 'express'\nimport { updateUser } from '../controllers/user.controller'\n\nconst router = express.Router()\n\nrouter.patch('/', updateUser)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "paths"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "paths",
                "local": "paths"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createSuperAdmin",
            "createStudent"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createSuperAdmin",
              "exported": "createSuperAdmin"
            },
            {
              "kind": "local",
              "local": "createStudent",
              "exported": "createStudent"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/seeds/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStudent = exports.createSuperAdmin = undefined;\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createSuperAdmin = exports.createSuperAdmin = function createSuperAdmin() {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.SUPERADMIN,\n    email: process.env.DEFAULT_USER\n  }).save();\n};\n\nvar createStudent = exports.createStudent = function createStudent(currentCohortId) {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.STUDENT,\n    cohorts: [currentCohortId],\n    currentCohort: currentCohortId,\n    email: _faker2.default.internet.email(),\n    path: _lodash2.default.sample(_constants.paths)\n  }).save();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVN1cGVyQWRtaW4iLCJVc2VyIiwibmFtZSIsImZha2VyIiwiZmluZE5hbWUiLCJyb2xlIiwiVVNFUl9ST0xFUyIsIlNVUEVSQURNSU4iLCJlbWFpbCIsInByb2Nlc3MiLCJlbnYiLCJERUZBVUxUX1VTRVIiLCJzYXZlIiwiY3JlYXRlU3R1ZGVudCIsImN1cnJlbnRDb2hvcnRJZCIsIlNUVURFTlQiLCJjb2hvcnRzIiwiY3VycmVudENvaG9ydCIsImludGVybmV0IiwicGF0aCIsIl8iLCJzYW1wbGUiLCJwYXRocyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsOENBQW1CLFNBQW5CQSxnQkFBbUI7QUFBQSxTQUFNLElBQUlDLGNBQUosQ0FBUztBQUM3Q0MsVUFBTUMsZ0JBQU1ELElBQU4sQ0FBV0UsUUFBWCxFQUR1QztBQUU3Q0MsVUFBTUMsaUJBQVdDLFVBRjRCO0FBRzdDQyxXQUFPQyxRQUFRQyxHQUFSLENBQVlDO0FBSDBCLEdBQVQsRUFJbkNDLElBSm1DLEVBQU47QUFBQSxDQUF6Qjs7QUFPQSxJQUFNQyx3Q0FBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLGVBQUQ7QUFBQSxTQUFxQixJQUFJYixjQUFKLENBQVM7QUFDekRDLFVBQU1DLGdCQUFNRCxJQUFOLENBQVdFLFFBQVgsRUFEbUQ7QUFFekRDLFVBQU1DLGlCQUFXUyxPQUZ3QztBQUd6REMsYUFBUyxDQUFDRixlQUFELENBSGdEO0FBSXpERyxtQkFBZUgsZUFKMEM7QUFLekROLFdBQU9MLGdCQUFNZSxRQUFOLENBQWVWLEtBQWYsRUFMa0Q7QUFNekRXLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLGdCQUFUO0FBTm1ELEdBQVQsRUFPL0NWLElBUCtDLEVBQXJCO0FBQUEsQ0FBdEIiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYy9zZWVkcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQge2RlZmF1bHQgYXMgVXNlciwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHtwYXRoc30gZnJvbSAnLi4vdXRpbC9jb25zdGFudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN1cGVyQWRtaW4gPSAoKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVVBFUkFETUlOLFxuICBlbWFpbDogcHJvY2Vzcy5lbnYuREVGQVVMVF9VU0VSLFxufSkuc2F2ZSgpXG5cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVN0dWRlbnQgPSAoY3VycmVudENvaG9ydElkKSA9PiBuZXcgVXNlcih7XG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKSxcbiAgcm9sZTogVVNFUl9ST0xFUy5TVFVERU5ULFxuICBjb2hvcnRzOiBbY3VycmVudENvaG9ydElkXSxcbiAgY3VycmVudENvaG9ydDogY3VycmVudENvaG9ydElkLFxuICBlbWFpbDogZmFrZXIuaW50ZXJuZXQuZW1haWwoKSxcbiAgcGF0aDogXy5zYW1wbGUocGF0aHMpLFxufSkuc2F2ZSgpXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "createSuperAdmin",
        "User",
        "name",
        "faker",
        "findName",
        "role",
        "USER_ROLES",
        "SUPERADMIN",
        "email",
        "process",
        "env",
        "DEFAULT_USER",
        "save",
        "createStudent",
        "currentCohortId",
        "STUDENT",
        "cohorts",
        "currentCohort",
        "internet",
        "path",
        "_",
        "sample",
        "paths"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,cAAJ,CAAS;AAC7CC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADuC;AAE7CC,UAAMC,iBAAWC,UAF4B;AAG7CC,WAAOC,QAAQC,GAAR,CAAYC;AAH0B,GAAT,EAInCC,IAJmC,EAAN;AAAA,CAAzB;;AAOA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,eAAD;AAAA,SAAqB,IAAIb,cAAJ,CAAS;AACzDC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADmD;AAEzDC,UAAMC,iBAAWS,OAFwC;AAGzDC,aAAS,CAACF,eAAD,CAHgD;AAIzDG,mBAAeH,eAJ0C;AAKzDN,WAAOL,gBAAMe,QAAN,CAAeV,KAAf,EALkD;AAMzDW,UAAMC,iBAAEC,MAAF,CAASC,gBAAT;AANmD,GAAT,EAO/CV,IAP+C,EAArB;AAAA,CAAtB",
      "file": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/seeds",
      "sourcesContent": [
        "import faker from 'faker';\nimport {default as User, USER_ROLES} from '../models/user';\nimport {paths} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createSuperAdmin = () => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.SUPERADMIN,\n  email: process.env.DEFAULT_USER,\n}).save()\n\n\nexport const createStudent = (currentCohortId) => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.STUDENT,\n  cohorts: [currentCohortId],\n  currentCohort: currentCohortId,\n  email: faker.internet.email(),\n  path: _.sample(paths),\n}).save()\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/constants.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "promptTypes",
            "pingKinds",
            "pingTypes",
            "paths",
            "questionTypes",
            "defaultQuestionOptions"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "promptTypes",
              "exported": "promptTypes"
            },
            {
              "kind": "local",
              "local": "pingKinds",
              "exported": "pingKinds"
            },
            {
              "kind": "local",
              "local": "pingTypes",
              "exported": "pingTypes"
            },
            {
              "kind": "local",
              "local": "paths",
              "exported": "paths"
            },
            {
              "kind": "local",
              "local": "questionTypes",
              "exported": "questionTypes"
            },
            {
              "kind": "local",
              "local": "defaultQuestionOptions",
              "exported": "defaultQuestionOptions"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/constants.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/constants.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "constants.js",
      "sourceFileName": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "constants"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar promptTypes = exports.promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nvar pingKinds = exports.pingKinds = ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nvar pingTypes = exports.pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nvar paths = exports.paths = ['Front End', 'Back End'];\nvar questionTypes = exports.questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nvar defaultQuestionOptions = exports.defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJwcm9tcHRUeXBlcyIsInBpbmdLaW5kcyIsInBpbmdUeXBlcyIsInBhdGhzIiwicXVlc3Rpb25UeXBlcyIsImRlZmF1bHRRdWVzdGlvbk9wdGlvbnMiLCJTbGlkZXIiLCJvcHRpb25zIiwiUmF0aW5nIiwiU2VsZWN0TXVsdGlwbGUiLCJSYWRpbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxvQ0FBYyxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCLEVBQXFDLGtCQUFyQyxFQUF5RCxZQUF6RCxFQUF1RSxlQUF2RSxFQUF3RixpQkFBeEYsQ0FBcEI7QUFDQSxJQUFNQyxnQ0FBYSxDQUFDLFNBQUQsRUFBWSxNQUFaLEVBQW9CLFNBQXBCLEVBQStCLFNBQS9CLEVBQTBDLFFBQTFDLEVBQW9ELFFBQXBELENBQW5CO0FBQ0EsSUFBTUMsZ0NBQVksQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixFQUE0QixTQUE1QixFQUF1QyxNQUF2QyxFQUErQyxXQUEvQyxDQUFsQjtBQUNBLElBQU1DLHdCQUFRLENBQUMsV0FBRCxFQUFjLFVBQWQsQ0FBZDtBQUNBLElBQU1DLHdDQUFnQixDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLGdCQUFyQixFQUF1QyxPQUF2QyxDQUF0QjtBQUNBLElBQU1DLDBEQUF5QjtBQUNwQ0MsVUFBUSxFQUFFQyxTQUFTLENBQUMsVUFBRCxFQUFhLEtBQWIsRUFBb0IsTUFBcEIsRUFBNEIsV0FBNUIsQ0FBWCxFQUQ0QjtBQUVwQ0MsVUFBUSxFQUY0QjtBQUdwQ0Msa0JBQWdCLEVBQUVGLFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYLEVBSG9CO0FBSXBDRyxTQUFPLEVBQUVILFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYO0FBSjZCLENBQS9CIiwiZmlsZSI6ImNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcHJvbXB0VHlwZXMgPSBbJ01ldGFMZWFybmluZycsICdDYXRhbHlzdCBTZXNzaW9uJywgJ1BhaXIgUHJvZ3JhbW1pbmcnLCAnQXNzZXNzbWVudCcsICdRdWVzdGlvbiBIb3VyJywgJ1NoYXJpbmcgU2Vzc2lvbiddO1xuZXhwb3J0IGNvbnN0IHBpbmdLaW5kcyA9ICBbJ2V4cGxvcmUnLCAna25vdycsICdvYnNlcnZlJywgJ3JlZmxlY3QnLCAncmV2aWV3JywgJ3Vud2luZCddO1xuZXhwb3J0IGNvbnN0IHBpbmdUeXBlcyA9IFsnUGFpcicsICdDb2hvcnQnLCAnUGVlcnMnLCAnQ29udGVudCcsICdTZWxmJywgJ0ludGVudGlvbiddO1xuZXhwb3J0IGNvbnN0IHBhdGhzID0gWydGcm9udCBFbmQnLCAnQmFjayBFbmQnXTtcbmV4cG9ydCBjb25zdCBxdWVzdGlvblR5cGVzID0gWydTbGlkZXInLCAnUmF0aW5nJywgJ1NlbGVjdE11bHRpcGxlJywgJ1JhZGlvJ107XG5leHBvcnQgY29uc3QgZGVmYXVsdFF1ZXN0aW9uT3B0aW9ucyA9IHtcbiAgU2xpZGVyOiB7IG9wdGlvbnM6IFsnVmVyeSBiYWQnLCAnQmFkJywgJ0dvb2QnLCAnVmVyeSBnb29kJ10gfSxcbiAgUmF0aW5nOiB7fSxcbiAgU2VsZWN0TXVsdGlwbGU6IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbiAgUmFkaW86IHsgb3B0aW9uczogWydPcHRpb24xJywgJ09wdGlvbjInLCAnT3B0aW9uMycsICdPcHRpb240J10gfSxcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "promptTypes",
        "pingKinds",
        "pingTypes",
        "paths",
        "questionTypes",
        "defaultQuestionOptions",
        "Slider",
        "options",
        "Rating",
        "SelectMultiple",
        "Radio"
      ],
      "mappings": ";;;;;AAAO,IAAMA,oCAAc,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,kBAArC,EAAyD,YAAzD,EAAuE,eAAvE,EAAwF,iBAAxF,CAApB;AACA,IAAMC,gCAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,QAApD,CAAnB;AACA,IAAMC,gCAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC,MAAvC,EAA+C,WAA/C,CAAlB;AACA,IAAMC,wBAAQ,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,IAAMC,wCAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,gBAArB,EAAuC,OAAvC,CAAtB;AACA,IAAMC,0DAAyB;AACpCC,UAAQ,EAAEC,SAAS,CAAC,UAAD,EAAa,KAAb,EAAoB,MAApB,EAA4B,WAA5B,CAAX,EAD4B;AAEpCC,UAAQ,EAF4B;AAGpCC,kBAAgB,EAAEF,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX,EAHoB;AAIpCG,SAAO,EAAEH,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX;AAJ6B,CAA/B",
      "file": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "export const promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nexport const pingKinds =  ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nexport const pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nexport const paths = ['Front End', 'Back End'];\nexport const questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nexport const defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "dotenv/config",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dotenv"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/util/dbConnect.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbConnect.js",
      "sourceFileName": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbConnect"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('dotenv/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _process$env = process.env,\n    NODE_ENV = _process$env.NODE_ENV,\n    MONGO_HOST = _process$env.MONGO_HOST,\n    dbName = _process$env.MONGO_DB,\n    user = _process$env.MONGO_USER,\n    pass = _process$env.MONGO_PWD;\n\n\n_mongoose2.default.set('debug', NODE_ENV === 'development');\n_mongoose2.default.Promise = Promise;\nconsole.log(MONGO_HOST);\n\nexports.default = function () {\n  return _mongoose2.default.connect(MONGO_HOST, { user: user, pass: pass });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJNT05HT19IT1NUIiwiZGJOYW1lIiwiTU9OR09fREIiLCJ1c2VyIiwiTU9OR09fVVNFUiIsInBhc3MiLCJNT05HT19QV0QiLCJtb25nb29zZSIsInNldCIsIlByb21pc2UiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O21CQUNvRkEsUUFBUUMsRztJQUFyRkMsUSxnQkFBQUEsUTtJQUFVQyxVLGdCQUFBQSxVO0lBQXNCQyxNLGdCQUFWQyxRO0lBQThCQyxJLGdCQUFaQyxVO0lBQTZCQyxJLGdCQUFYQyxTOzs7QUFFakVDLG1CQUFTQyxHQUFULENBQWEsT0FBYixFQUFzQlQsYUFBYSxhQUFuQztBQUNBUSxtQkFBU0UsT0FBVCxHQUFtQkEsT0FBbkI7QUFDQUMsUUFBUUMsR0FBUixDQUFZWCxVQUFaOztrQkFDZTtBQUFBLFNBQU1PLG1CQUFTSyxPQUFULENBQWlCWixVQUFqQixFQUE2QixFQUFDRyxVQUFELEVBQU9FLFVBQVAsRUFBN0IsQ0FBTjtBQUFBLEMiLCJmaWxlIjoiZGJDb25uZWN0LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52L2NvbmZpZyc7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge05PREVfRU5WLCBNT05HT19IT1NULCBNT05HT19EQjogZGJOYW1lLCBNT05HT19VU0VSOiB1c2VyLCBNT05HT19QV0Q6IHBhc3N9ID0gcHJvY2Vzcy5lbnY7XG5cbm1vbmdvb3NlLnNldCgnZGVidWcnLCBOT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jyk7XG5tb25nb29zZS5Qcm9taXNlID0gUHJvbWlzZTtcbmNvbnNvbGUubG9nKE1PTkdPX0hPU1QpO1xuZXhwb3J0IGRlZmF1bHQgKCkgPT4gbW9uZ29vc2UuY29ubmVjdChNT05HT19IT1NULCB7dXNlciwgcGFzc30pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbConnect.js"
      ],
      "names": [
        "process",
        "env",
        "NODE_ENV",
        "MONGO_HOST",
        "dbName",
        "MONGO_DB",
        "user",
        "MONGO_USER",
        "pass",
        "MONGO_PWD",
        "mongoose",
        "set",
        "Promise",
        "console",
        "log",
        "connect"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;mBACoFA,QAAQC,G;IAArFC,Q,gBAAAA,Q;IAAUC,U,gBAAAA,U;IAAsBC,M,gBAAVC,Q;IAA8BC,I,gBAAZC,U;IAA6BC,I,gBAAXC,S;;;AAEjEC,mBAASC,GAAT,CAAa,OAAb,EAAsBT,aAAa,aAAnC;AACAQ,mBAASE,OAAT,GAAmBA,OAAnB;AACAC,QAAQC,GAAR,CAAYX,UAAZ;;kBACe;AAAA,SAAMO,mBAASK,OAAT,CAAiBZ,UAAjB,EAA6B,EAACG,UAAD,EAAOE,UAAP,EAA7B,CAAN;AAAA,C",
      "file": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/util",
      "sourcesContent": [
        "import dotenv from 'dotenv/config';\nimport mongoose from 'mongoose';\nconst {NODE_ENV, MONGO_HOST, MONGO_DB: dbName, MONGO_USER: user, MONGO_PWD: pass} = process.env;\n\nmongoose.set('debug', NODE_ENV === 'development');\nmongoose.Promise = Promise;\nconsole.log(MONGO_HOST);\nexport default () => mongoose.connect(MONGO_HOST, {user, pass});\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/routes/chrome-history.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.routes.js",
      "sourceFileName": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Express = require('express');\nvar controller = require('../controllers/chrome-history.controller');\nvar router = Express.Router();\nvar ip = require('ip');\nrouter.post('/insert', controller.insert);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n\nrouter.get('/allresults', controller.getAll);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJFeHByZXNzIiwicmVxdWlyZSIsImNvbnRyb2xsZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpcCIsInBvc3QiLCJpbnNlcnQiLCJnZXQiLCJnZXRBbGwiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsVUFBUUMsUUFBUSxTQUFSLENBQVo7QUFDQSxJQUFJQyxhQUFXRCxRQUFRLDBDQUFSLENBQWY7QUFDQSxJQUFNRSxTQUFPSCxRQUFRSSxNQUFSLEVBQWI7QUFDQSxJQUFNQyxLQUFHSixRQUFRLElBQVIsQ0FBVDtBQUNBRSxPQUFPRyxJQUFQLENBQVksU0FBWixFQUFzQkosV0FBV0ssTUFBakM7O0FBRUE7Ozs7Ozs7QUFPQUosT0FBT0ssR0FBUCxDQUFXLGFBQVgsRUFBMEJOLFdBQVdPLE1BQXJDOztBQUVBOzs7Ozs7O2tCQU9lTixNIiwiZmlsZSI6ImNocm9tZS1oaXN0b3J5LnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBFeHByZXNzPXJlcXVpcmUoJ2V4cHJlc3MnKVxudmFyIGNvbnRyb2xsZXI9cmVxdWlyZSgnLi4vY29udHJvbGxlcnMvY2hyb21lLWhpc3RvcnkuY29udHJvbGxlcicpXG5jb25zdCByb3V0ZXI9RXhwcmVzcy5Sb3V0ZXIoKVxuY29uc3QgaXA9cmVxdWlyZSgnaXAnKVxucm91dGVyLnBvc3QoJy9pbnNlcnQnLGNvbnRyb2xsZXIuaW5zZXJ0KTtcblxuLyoqXG4gKiBAYXBpIHtnZXR9IC9jb2hvcnRzIEdldCBhbGwgY29ob3J0c1xuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIEdldENvaG9ydHNcbiAqIEBhcGlHcm91cCBDb2hvcnRcbiAqL1xuXG5yb3V0ZXIuZ2V0KCcvYWxscmVzdWx0cycsIGNvbnRyb2xsZXIuZ2V0QWxsKTtcblxuLyoqXG4gKiBAYXBpIHtnZXR9IC9jb2hvcnRzIEdldCBhbGwgY29ob3J0c1xuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIEdldENvaG9ydHNcbiAqIEBhcGlHcm91cCBDb2hvcnRcbiAqL1xuIFxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.routes.js"
      ],
      "names": [
        "Express",
        "require",
        "controller",
        "router",
        "Router",
        "ip",
        "post",
        "insert",
        "get",
        "getAll"
      ],
      "mappings": ";;;;;AAAA,IAAIA,UAAQC,QAAQ,SAAR,CAAZ;AACA,IAAIC,aAAWD,QAAQ,0CAAR,CAAf;AACA,IAAME,SAAOH,QAAQI,MAAR,EAAb;AACA,IAAMC,KAAGJ,QAAQ,IAAR,CAAT;AACAE,OAAOG,IAAP,CAAY,SAAZ,EAAsBJ,WAAWK,MAAjC;;AAEA;;;;;;;AAOAJ,OAAOK,GAAP,CAAW,aAAX,EAA0BN,WAAWO,MAArC;;AAEA;;;;;;;kBAOeN,M",
      "file": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/routes",
      "sourcesContent": [
        "var Express=require('express')\nvar controller=require('../controllers/chrome-history.controller')\nconst router=Express.Router()\nconst ip=require('ip')\nrouter.post('/insert',controller.insert);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n\nrouter.get('/allresults', controller.getAll);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n \nexport default router;\n"
      ]
    },
    "mtime": 1560868509776
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../models/browser-history",
            "imported": [
              "browser_history"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "browser_history",
                "local": "browser_history"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "getMax",
            "insert"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "getMax",
              "exported": "getMax"
            },
            {
              "kind": "local",
              "local": "insert",
              "exported": "insert"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/controllers/chrome-history.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.controller.js",
      "sourceFileName": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insert = exports.getMax = exports.getOne = exports.getAll = undefined;\n\nvar _browserHistory = require('../../models/browser-history');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar localStorage = require('localStorage');\nvar ip = require('ip');\nvar getAll = exports.getAll = function getAll(req, res) {\n  _browserHistory.browser_history.findAll({}).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _browserHistory.browser_history.findAll({\n    where: {\n      uid: req.params.id\n    }\n  }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar getMax = exports.getMax = function getMax(req, res) {\n  var sequelize = require('sequelize');\n  _browserHistory.browser_history.findAll({\n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    where: {\n      uid: '8e3cb23a-90cc-11e9-bc42-526af7764f64'\n    },\n    raw: true\n  }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar insert = exports.insert = function insert(req, res) {\n  var historyitem = req.body.historyitem;\n  var gid = req.body.getid;\n  var browser_history = require('../../models/browser-history');\n  (function (historyitem, gid) {\n    var _this = this;\n\n    var sequelize = require('sequelize');\n    browser_history.browser_history.findAll({\n      attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n      where: {\n        uid: '8e3cb23a-90cc-11e9-bc42-526af7764f64'\n      },\n      raw: true\n    }).then(function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n        var i, promise, k;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < historyitem.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                promise = new Promise(function (resolve, reject) {\n                  (function (i, historyitem, gid, data) {\n                    browser_history.browser_history.sync({ force: false }).then(function () {\n                      var urlTime = Date.parse(historyitem[i]['lastVisitTime']);\n                      if (data[0]['time'] != null) {\n                        var maxTime = Date.parse(data[0]['time'].toString());\n                      }\n                      var truthvalue = parseInt(maxTime) < parseInt(urlTime);\n                      console.log(truthvalue);\n                      if (data[0]['time'] == null || truthvalue) {\n                        console.log(historyitem[i]['lastVisitTime']);\n                        return browser_history.browser_history.create({\n                          uid: gid,\n                          url: historyitem[i].url,\n                          ip: ip.address(),\n                          visited_timestamp: historyitem[i]['lastVisitTime'],\n                          title: historyitem[i]['title'],\n                          visitcount: historyitem[i]['visitCount'],\n                          useragent: historyitem[i]['userAgent'],\n                          chrome_id: historyitem[i]['id']\n                        }).catch(function (err) {\n                          console.log(err);\n                        });\n                      } else {\n                        return true;\n                      }\n                    }).catch(function (err) {\n                      console.log(err);\n                    });\n                  })(i, historyitem, gid, data);\n                  resolve(\"hello\");\n                });\n                _context.next = 5;\n                return promise;\n\n              case 5:\n                k = _context.sent;\n\n              case 6:\n                i++;\n                _context.next = 1;\n                break;\n\n              case 9:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(function (err) {\n      console.log(err);\n    });\n  })(historyitem, gid);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.controller.js"
      ],
      "names": [
        "localStorage",
        "require",
        "ip",
        "getAll",
        "req",
        "res",
        "browser_history",
        "findAll",
        "then",
        "data",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getOne",
        "where",
        "uid",
        "params",
        "id",
        "getMax",
        "sequelize",
        "attributes",
        "fn",
        "col",
        "raw",
        "insert",
        "historyitem",
        "body",
        "gid",
        "getid",
        "i",
        "length",
        "promise",
        "Promise",
        "resolve",
        "reject",
        "sync",
        "force",
        "urlTime",
        "Date",
        "parse",
        "maxTime",
        "toString",
        "truthvalue",
        "parseInt",
        "create",
        "url",
        "address",
        "visited_timestamp",
        "title",
        "visitcount",
        "useragent",
        "chrome_id",
        "k"
      ],
      "mappings": "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",
      "file": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/controllers",
      "sourcesContent": [
        "import {browser_history} from '../../models/browser-history';\nvar localStorage=require('localStorage');\nvar ip=require('ip');\nexport const getAll= function(req,res){browser_history.findAll({}).then((data) => {\n    res.json(data)\n  }).catch((err) => {\n    console.log(err);\n  })\n}\n\nexport const getOne= function(req,res){browser_history.findAll({ \n  where: {\n        uid: req.params.id\n    } \n  }).then((data) => {res.json(data)})\n  .catch((err) => {console.log(err);})\n}\n\nexport const getMax= (req,res)=>{\n  var sequelize=require('sequelize');\n  browser_history.findAll({ \n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    where:{\n      uid:'8e3cb23a-90cc-11e9-bc42-526af7764f64'\n    },\n    raw: true,\n  }).then((data) => {\n    res.json(data)\n  }).catch((err) => {\n  console.log(err);\n  })\n}\n\nexport const insert= function(req,res){  \n  var historyitem=req.body.historyitem;\n  var gid=req.body.getid;\n  var browser_history=require('../../models/browser-history');     \n  ( function(historyitem,gid){\n      var sequelize=require('sequelize');\n      browser_history.browser_history.findAll({ \n      attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n      where:{\n        uid:'8e3cb23a-90cc-11e9-bc42-526af7764f64'\n      },\n      raw: true,\n    }).then( async (data) => {\n      for(var i=0;i<historyitem.length;i++){\n        var promise=new Promise((resolve,reject)=>{(function(i,historyitem,gid,data){browser_history.browser_history.sync({force: false}).then(function () {\n        var urlTime=Date.parse(historyitem[i]['lastVisitTime']);\n        if(data[0]['time']!=null){\n        var maxTime=Date.parse(data[0]['time'].toString()); \n      }\n        var truthvalue=parseInt(maxTime)<parseInt(urlTime);\n          console.log(truthvalue);\n        if(data[0]['time']==null || truthvalue )\n       { \n         console.log(historyitem[i]['lastVisitTime']);\n        return browser_history.browser_history.create({\n          uid: gid,\n          url: historyitem[i].url,\n          ip:  ip.address(),\n          visited_timestamp: historyitem[i]['lastVisitTime'],\n          title: historyitem[i]['title'],\n          visitcount: historyitem[i]['visitCount'],\n          useragent: historyitem[i]['userAgent'],\n          chrome_id:historyitem[i]['id']\n        })\n        .catch(function(err) {\n            console.log(err);\n        });\n      }\n      else{\n        return true;\n      }\n      \n      \n      \n  }\n      )\n      .catch(function(err) {\n        console.log(err);\n    })})(i,historyitem,gid,data);\n    resolve(\"hello\");\n    });\n    let k =await  promise;\n    } }\n    \n    ).catch((err) => {\n    console.log(err);\n    })\n    \n  })(historyitem,gid);\n}\n"
      ]
    },
    "mtime": 1560871048896
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "links"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "links",
              "exported": "links"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/models/chrome-history.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.js",
      "sourceFileName": "chrome-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.links = undefined;\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar index = require('../database');\nvar links = exports.links = index.define('history', {\n  user_id: {\n    type: _sequelize2.default.STRING\n  },\n  url: {\n    type: _sequelize2.default.STRING(2000)\n  },\n  ip: {\n    type: _sequelize2.default.STRING\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.STRING\n  },\n  title: {\n    type: _sequelize2.default.STRING\n  },\n  visitcount: {\n    type: _sequelize2.default.INTEGER\n  },\n  useragent: {\n    type: _sequelize2.default.STRING\n  }\n\n}, {\n  freezeTableName: true\n});\nlinks.sync({ force: false }).then(function () {\n  return true;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmpzIl0sIm5hbWVzIjpbImluZGV4IiwicmVxdWlyZSIsImxpbmtzIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJTVFJJTkciLCJ1cmwiLCJpcCIsInZpc2l0ZWRfdGltZXN0YW1wIiwidGl0bGUiLCJ2aXNpdGNvdW50IiwiSU5URUdFUiIsInVzZXJhZ2VudCIsImZyZWV6ZVRhYmxlTmFtZSIsInN5bmMiLCJmb3JjZSIsInRoZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7Ozs7O0FBREEsSUFBTUEsUUFBTUMsUUFBUSxhQUFSLENBQVo7QUFFTyxJQUFNQyx3QkFBUUYsTUFBTUcsTUFBTixDQUFhLFNBQWIsRUFBd0I7QUFDekNDLFdBQVM7QUFDUEMsVUFBTUMsb0JBQVVDO0FBRFQsR0FEZ0M7QUFJekNDLE9BQUs7QUFDSEgsVUFBTUMsb0JBQVVDLE1BQVYsQ0FBaUIsSUFBakI7QUFESCxHQUpvQztBQU96Q0UsTUFBRztBQUNESixVQUFLQyxvQkFBVUM7QUFEZCxHQVBzQztBQVV6Q0cscUJBQWtCO0FBQ2hCTCxVQUFNQyxvQkFBVUM7QUFEQSxHQVZ1QjtBQWF6Q0ksU0FDQTtBQUNFTixVQUFLQyxvQkFBVUM7QUFEakIsR0FkeUM7QUFpQnpDSyxjQUNBO0FBQ0VQLFVBQUtDLG9CQUFVTztBQURqQixHQWxCeUM7QUFxQnpDQyxhQUNBO0FBQ0VULFVBQU1DLG9CQUFVQztBQURsQjs7QUF0QnlDLENBQXhCLEVBMkJoQjtBQUNEUSxtQkFBaUI7QUFEaEIsQ0EzQmdCLENBQWQ7QUE4QkxiLE1BQU1jLElBQU4sQ0FBVyxFQUFDQyxPQUFPLEtBQVIsRUFBWCxFQUEyQkMsSUFBM0IsQ0FBZ0MsWUFBWTtBQUMxQyxTQUFPLElBQVA7QUFDRCxDQUZEIiwiZmlsZSI6ImNocm9tZS1oaXN0b3J5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaW5kZXg9cmVxdWlyZSgnLi4vZGF0YWJhc2UnKVxuaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnOyBcbmV4cG9ydCBjb25zdCBsaW5rcyA9IGluZGV4LmRlZmluZSgnaGlzdG9yeScsIHtcbiAgICB1c2VyX2lkOiB7XG4gICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB1cmw6IHtcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcoMjAwMClcbiAgICB9LFxuICAgIGlwOntcbiAgICAgIHR5cGU6U2VxdWVsaXplLlNUUklOR1xuICAgIH0sXG4gICAgdmlzaXRlZF90aW1lc3RhbXA6e1xuICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICAgIH0sXG4gICAgdGl0bGU6XG4gICAge1xuICAgICAgdHlwZTpTZXF1ZWxpemUuU1RSSU5HXG4gICAgfSxcbiAgICB2aXNpdGNvdW50OlxuICAgIHtcbiAgICAgIHR5cGU6U2VxdWVsaXplLklOVEVHRVJcbiAgICB9LFxuICAgIHVzZXJhZ2VudDpcbiAgICB7XG4gICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgfVxuXG5cbiAgfSwge1xuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZVxuICB9KTtcbiAgbGlua3Muc3luYyh7Zm9yY2U6IGZhbHNlfSkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.js"
      ],
      "names": [
        "index",
        "require",
        "links",
        "define",
        "user_id",
        "type",
        "Sequelize",
        "STRING",
        "url",
        "ip",
        "visited_timestamp",
        "title",
        "visitcount",
        "INTEGER",
        "useragent",
        "freezeTableName",
        "sync",
        "force",
        "then"
      ],
      "mappings": ";;;;;;;AACA;;;;;;AADA,IAAMA,QAAMC,QAAQ,aAAR,CAAZ;AAEO,IAAMC,wBAAQF,MAAMG,MAAN,CAAa,SAAb,EAAwB;AACzCC,WAAS;AACPC,UAAMC,oBAAUC;AADT,GADgC;AAIzCC,OAAK;AACHH,UAAMC,oBAAUC,MAAV,CAAiB,IAAjB;AADH,GAJoC;AAOzCE,MAAG;AACDJ,UAAKC,oBAAUC;AADd,GAPsC;AAUzCG,qBAAkB;AAChBL,UAAMC,oBAAUC;AADA,GAVuB;AAazCI,SACA;AACEN,UAAKC,oBAAUC;AADjB,GAdyC;AAiBzCK,cACA;AACEP,UAAKC,oBAAUO;AADjB,GAlByC;AAqBzCC,aACA;AACET,UAAMC,oBAAUC;AADlB;;AAtByC,CAAxB,EA2BhB;AACDQ,mBAAiB;AADhB,CA3BgB,CAAd;AA8BLb,MAAMc,IAAN,CAAW,EAACC,OAAO,KAAR,EAAX,EAA2BC,IAA3B,CAAgC,YAAY;AAC1C,SAAO,IAAP;AACD,CAFD",
      "file": "chrome-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src/models",
      "sourcesContent": [
        "const index=require('../database')\nimport Sequelize from 'sequelize'; \nexport const links = index.define('history', {\n    user_id: {\n      type: Sequelize.STRING\n    },\n    url: {\n      type: Sequelize.STRING(2000)\n    },\n    ip:{\n      type:Sequelize.STRING\n    },\n    visited_timestamp:{\n      type: Sequelize.STRING\n    },\n    title:\n    {\n      type:Sequelize.STRING\n    },\n    visitcount:\n    {\n      type:Sequelize.INTEGER\n    },\n    useragent:\n    {\n      type: Sequelize.STRING\n    }\n\n\n  }, {\n    freezeTableName: true\n  });\n  links.sync({force: false}).then(function () {\n    return true;\n  });\n"
      ]
    },
    "mtime": 1559660270342
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/src/database.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/src/database.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/src/database.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "database.js",
      "sourceFileName": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "database"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000\n  }\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsImFjcXVpcmUiLCJpZGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQ0EsSUFBTUEsWUFBWSxJQUFJQyxtQkFBSixDQUFjLFVBQWQsRUFBeUIsVUFBekIsRUFBb0MsT0FBcEMsRUFBNkM7QUFDM0RDLFFBQU0sV0FEcUQ7QUFFN0RDLFdBQVMsVUFGb0Q7QUFHN0RDLFFBQU07QUFDSkMsU0FBSyxDQUREO0FBRUpDLGFBQVMsS0FGTDtBQUdKQyxVQUFNO0FBSEY7QUFIdUQsQ0FBN0MsQ0FBbEI7QUFTQUMsT0FBT0MsT0FBUCxHQUFnQlQsU0FBaEIiLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJ1xuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZSgncG9zdGdyZXMnLCdwb3N0Z3JlcycsJ3RhbnVqJywge1xuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICBwb29sOiB7XG4gICAgbWF4OiA1LFxuICAgIGFjcXVpcmU6IDMwMDAwLFxuICAgIGlkbGU6IDEwMDAwLFxuICB9XG59KTtcbm1vZHVsZS5leHBvcnRzID1zZXF1ZWxpemUiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "acquire",
        "idle",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAAyB,UAAzB,EAAoC,OAApC,EAA6C;AAC3DC,QAAM,WADqD;AAE7DC,WAAS,UAFoD;AAG7DC,QAAM;AACJC,SAAK,CADD;AAEJC,aAAS,KAFL;AAGJC,UAAM;AAHF;AAHuD,CAA7C,CAAlB;AASAC,OAAOC,OAAP,GAAgBT,SAAhB",
      "file": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/src",
      "sourcesContent": [
        "import Sequelize from 'sequelize'\nconst sequelize = new Sequelize('postgres','postgres','tanuj', {\n    host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000,\n  }\n});\nmodule.exports =sequelize"
      ]
    },
    "mtime": 1559243369680
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/models/browse-history.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/models/browse-history.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/models/browse-history.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "browse-history.js",
      "sourceFileName": "browse-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "browse-history"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar db = require('../src/database');\nvar browser_history = db.define('browser-history', {\n  user_id: {\n    type: _sequelize2.default.UUIDV4,\n    allowNull: false\n  },\n  url: {\n    type: _sequelize2.default.TEXT,\n    allowNull: false\n  },\n  ip: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.DATE,\n    allowNull: false\n\n  },\n  visitcount: {\n    type: _sequelize2.default.INTEGER,\n    allowNull: false\n  },\n  title: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  },\n  useragent: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  }\n\n});\nmodule.exports = { \"browser_history\": browser_history };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZS1oaXN0b3J5LmpzIl0sIm5hbWVzIjpbImRiIiwicmVxdWlyZSIsImJyb3dzZXJfaGlzdG9yeSIsImRlZmluZSIsInVzZXJfaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiVVVJRFY0IiwiYWxsb3dOdWxsIiwidXJsIiwiVEVYVCIsImlwIiwiU1RSSU5HIiwidmlzaXRlZF90aW1lc3RhbXAiLCJEQVRFIiwidmlzaXRjb3VudCIsIklOVEVHRVIiLCJ0aXRsZSIsInVzZXJhZ2VudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUNBLElBQU1BLEtBQUdDLFFBQVEsaUJBQVIsQ0FBVDtBQUNBLElBQU1DLGtCQUFnQkYsR0FBR0csTUFBSCxDQUFVLGlCQUFWLEVBQ3RCO0FBQ0VDLFdBQVE7QUFDUkMsVUFBS0Msb0JBQVVDLE1BRFA7QUFFUkMsZUFBVTtBQUZGLEdBRFY7QUFLQUMsT0FBSTtBQUNGSixVQUFLQyxvQkFBVUksSUFEYjtBQUVGRixlQUFVO0FBRlIsR0FMSjtBQVNBRyxNQUFJO0FBQ0ZOLFVBQU1DLG9CQUFVTSxNQURkO0FBRUZKLGVBQVU7QUFGUixHQVRKO0FBYUFLLHFCQUFtQjtBQUNqQlIsVUFBTUMsb0JBQVVRLElBREM7QUFFakJOLGVBQVU7O0FBRk8sR0FibkI7QUFrQkFPLGNBQVk7QUFDVlYsVUFBTUMsb0JBQVVVLE9BRE47QUFFVlIsZUFBVTtBQUZBLEdBbEJaO0FBc0JBUyxTQUFPO0FBQ0xaLFVBQU1DLG9CQUFVTSxNQURYO0FBRUxKLGVBQVU7QUFGTCxHQXRCUDtBQTBCQVUsYUFBVztBQUNUYixVQUFNQyxvQkFBVU0sTUFEUDtBQUVUSixlQUFVO0FBRkQ7O0FBMUJYLENBRHNCLENBQXRCO0FBa0NBVyxPQUFPQyxPQUFQLEdBQWUsRUFBQyxtQkFBa0JsQixlQUFuQixFQUFmIiwiZmlsZSI6ImJyb3dzZS1oaXN0b3J5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLWFwaS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgIFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuY29uc3QgZGI9cmVxdWlyZSgnLi4vc3JjL2RhdGFiYXNlJyk7XG5jb25zdCBicm93c2VyX2hpc3Rvcnk9ZGIuZGVmaW5lKCdicm93c2VyLWhpc3RvcnknLFxue1xuICB1c2VyX2lkOntcbiAgdHlwZTpTZXF1ZWxpemUuVVVJRFY0LFxuICBhbGxvd051bGw6ZmFsc2Vcbn0sXG51cmw6e1xuICB0eXBlOlNlcXVlbGl6ZS5URVhULFxuICBhbGxvd051bGw6ZmFsc2Vcbn0sXG5pcDoge1xuICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICBhbGxvd051bGw6ZmFsc2Vcbn0sXG52aXNpdGVkX3RpbWVzdGFtcDoge1xuICB0eXBlOiBTZXF1ZWxpemUuREFURSxcbiAgYWxsb3dOdWxsOmZhbHNlXG5cbn0sXG52aXNpdGNvdW50OiB7XG4gIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICBhbGxvd051bGw6ZmFsc2Vcbn0sXG50aXRsZToge1xuICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICBhbGxvd051bGw6ZmFsc2Vcbn0sXG51c2VyYWdlbnQ6IHtcbiAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgYWxsb3dOdWxsOmZhbHNlXG59XG5cbn1cbik7XG5tb2R1bGUuZXhwb3J0cz17XCJicm93c2VyX2hpc3RvcnlcIjpicm93c2VyX2hpc3Rvcnl9OyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "browse-history.js"
      ],
      "names": [
        "db",
        "require",
        "browser_history",
        "define",
        "user_id",
        "type",
        "Sequelize",
        "UUIDV4",
        "allowNull",
        "url",
        "TEXT",
        "ip",
        "STRING",
        "visited_timestamp",
        "DATE",
        "visitcount",
        "INTEGER",
        "title",
        "useragent",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,KAAGC,QAAQ,iBAAR,CAAT;AACA,IAAMC,kBAAgBF,GAAGG,MAAH,CAAU,iBAAV,EACtB;AACEC,WAAQ;AACRC,UAAKC,oBAAUC,MADP;AAERC,eAAU;AAFF,GADV;AAKAC,OAAI;AACFJ,UAAKC,oBAAUI,IADb;AAEFF,eAAU;AAFR,GALJ;AASAG,MAAI;AACFN,UAAMC,oBAAUM,MADd;AAEFJ,eAAU;AAFR,GATJ;AAaAK,qBAAmB;AACjBR,UAAMC,oBAAUQ,IADC;AAEjBN,eAAU;;AAFO,GAbnB;AAkBAO,cAAY;AACVV,UAAMC,oBAAUU,OADN;AAEVR,eAAU;AAFA,GAlBZ;AAsBAS,SAAO;AACLZ,UAAMC,oBAAUM,MADX;AAELJ,eAAU;AAFL,GAtBP;AA0BAU,aAAW;AACTb,UAAMC,oBAAUM,MADP;AAETJ,eAAU;AAFD;;AA1BX,CADsB,CAAtB;AAkCAW,OAAOC,OAAP,GAAe,EAAC,mBAAkBlB,eAAnB,EAAf",
      "file": "browse-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/models",
      "sourcesContent": [
        "import  Sequelize from 'sequelize';\nconst db=require('../src/database');\nconst browser_history=db.define('browser-history',\n{\n  user_id:{\n  type:Sequelize.UUIDV4,\n  allowNull:false\n},\nurl:{\n  type:Sequelize.TEXT,\n  allowNull:false\n},\nip: {\n  type: Sequelize.STRING,\n  allowNull:false\n},\nvisited_timestamp: {\n  type: Sequelize.DATE,\n  allowNull:false\n\n},\nvisitcount: {\n  type: Sequelize.INTEGER,\n  allowNull:false\n},\ntitle: {\n  type: Sequelize.STRING,\n  allowNull:false\n},\nuseragent: {\n  type: Sequelize.STRING,\n  allowNull:false\n}\n\n}\n);\nmodule.exports={\"browser_history\":browser_history};"
      ]
    },
    "mtime": 1560781694997
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-api/models/browser-history.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-api/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-api/models/browser-history.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-api/models/browser-history.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "browser-history.js",
      "sourceFileName": "browser-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-api/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "browser-history"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar db = require('../src/database');\nvar browser_history = db.define('browser-history', {\n\n  uid: {\n    type: _sequelize2.default.UUIDV4,\n    allowNull: false\n  },\n  url: {\n    type: _sequelize2.default.TEXT,\n    allowNull: false\n  },\n  ip: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.DATE,\n    allowNull: false\n\n  },\n  visitcount: {\n    type: _sequelize2.default.INTEGER,\n    allowNull: false\n  },\n  title: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  },\n  useragent: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  },\n  chrome_id: {\n    type: _sequelize2.default.INTEGER,\n    unique: true\n  }\n});\nmodule.exports = { \"browser_history\": browser_history };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXItaGlzdG9yeS5qcyJdLCJuYW1lcyI6WyJkYiIsInJlcXVpcmUiLCJicm93c2VyX2hpc3RvcnkiLCJkZWZpbmUiLCJ1aWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiVVVJRFY0IiwiYWxsb3dOdWxsIiwidXJsIiwiVEVYVCIsImlwIiwiU1RSSU5HIiwidmlzaXRlZF90aW1lc3RhbXAiLCJEQVRFIiwidmlzaXRjb3VudCIsIklOVEVHRVIiLCJ0aXRsZSIsInVzZXJhZ2VudCIsImNocm9tZV9pZCIsInVuaXF1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUNBLElBQU1BLEtBQUdDLFFBQVEsaUJBQVIsQ0FBVDtBQUNBLElBQU1DLGtCQUFnQkYsR0FBR0csTUFBSCxDQUFVLGlCQUFWLEVBQ3RCOztBQUVFQyxPQUFJO0FBQ0pDLFVBQUtDLG9CQUFVQyxNQURYO0FBRUpDLGVBQVU7QUFGTixHQUZOO0FBTUFDLE9BQUk7QUFDRkosVUFBS0Msb0JBQVVJLElBRGI7QUFFRkYsZUFBVTtBQUZSLEdBTko7QUFVQUcsTUFBSTtBQUNGTixVQUFNQyxvQkFBVU0sTUFEZDtBQUVGSixlQUFVO0FBRlIsR0FWSjtBQWNBSyxxQkFBbUI7QUFDakJSLFVBQU1DLG9CQUFVUSxJQURDO0FBRWpCTixlQUFVOztBQUZPLEdBZG5CO0FBbUJBTyxjQUFZO0FBQ1ZWLFVBQU1DLG9CQUFVVSxPQUROO0FBRVZSLGVBQVU7QUFGQSxHQW5CWjtBQXVCQVMsU0FBTztBQUNMWixVQUFNQyxvQkFBVU0sTUFEWDtBQUVMSixlQUFVO0FBRkwsR0F2QlA7QUEyQkFVLGFBQVc7QUFDVGIsVUFBTUMsb0JBQVVNLE1BRFA7QUFFVEosZUFBVTtBQUZELEdBM0JYO0FBK0JBVyxhQUFVO0FBQ1JkLFVBQUtDLG9CQUFVVSxPQURQO0FBRVJJLFlBQU87QUFGQztBQS9CVixDQURzQixDQUF0QjtBQXNDQUMsT0FBT0MsT0FBUCxHQUFlLEVBQUMsbUJBQWtCcEIsZUFBbkIsRUFBZiIsImZpbGUiOiJicm93c2VyLWhpc3RvcnkuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5jb25zdCBkYj1yZXF1aXJlKCcuLi9zcmMvZGF0YWJhc2UnKTtcbmNvbnN0IGJyb3dzZXJfaGlzdG9yeT1kYi5kZWZpbmUoJ2Jyb3dzZXItaGlzdG9yeScsXG57XG4gIFxuICB1aWQ6e1xuICB0eXBlOlNlcXVlbGl6ZS5VVUlEVjQsXG4gIGFsbG93TnVsbDpmYWxzZVxufSxcbnVybDp7XG4gIHR5cGU6U2VxdWVsaXplLlRFWFQsXG4gIGFsbG93TnVsbDpmYWxzZVxufSxcbmlwOiB7XG4gIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gIGFsbG93TnVsbDpmYWxzZVxufSxcbnZpc2l0ZWRfdGltZXN0YW1wOiB7XG4gIHR5cGU6IFNlcXVlbGl6ZS5EQVRFLFxuICBhbGxvd051bGw6ZmFsc2VcblxufSxcbnZpc2l0Y291bnQ6IHtcbiAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gIGFsbG93TnVsbDpmYWxzZVxufSxcbnRpdGxlOiB7XG4gIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gIGFsbG93TnVsbDpmYWxzZVxufSxcbnVzZXJhZ2VudDoge1xuICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICBhbGxvd051bGw6ZmFsc2Vcbn0sXG5jaHJvbWVfaWQ6e1xuICB0eXBlOlNlcXVlbGl6ZS5JTlRFR0VSLFxuICB1bmlxdWU6dHJ1ZVxufVxufVxuKTtcbm1vZHVsZS5leHBvcnRzPXtcImJyb3dzZXJfaGlzdG9yeVwiOmJyb3dzZXJfaGlzdG9yeX07Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "browser-history.js"
      ],
      "names": [
        "db",
        "require",
        "browser_history",
        "define",
        "uid",
        "type",
        "Sequelize",
        "UUIDV4",
        "allowNull",
        "url",
        "TEXT",
        "ip",
        "STRING",
        "visited_timestamp",
        "DATE",
        "visitcount",
        "INTEGER",
        "title",
        "useragent",
        "chrome_id",
        "unique",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,KAAGC,QAAQ,iBAAR,CAAT;AACA,IAAMC,kBAAgBF,GAAGG,MAAH,CAAU,iBAAV,EACtB;;AAEEC,OAAI;AACJC,UAAKC,oBAAUC,MADX;AAEJC,eAAU;AAFN,GAFN;AAMAC,OAAI;AACFJ,UAAKC,oBAAUI,IADb;AAEFF,eAAU;AAFR,GANJ;AAUAG,MAAI;AACFN,UAAMC,oBAAUM,MADd;AAEFJ,eAAU;AAFR,GAVJ;AAcAK,qBAAmB;AACjBR,UAAMC,oBAAUQ,IADC;AAEjBN,eAAU;;AAFO,GAdnB;AAmBAO,cAAY;AACVV,UAAMC,oBAAUU,OADN;AAEVR,eAAU;AAFA,GAnBZ;AAuBAS,SAAO;AACLZ,UAAMC,oBAAUM,MADX;AAELJ,eAAU;AAFL,GAvBP;AA2BAU,aAAW;AACTb,UAAMC,oBAAUM,MADP;AAETJ,eAAU;AAFD,GA3BX;AA+BAW,aAAU;AACRd,UAAKC,oBAAUU,OADP;AAERI,YAAO;AAFC;AA/BV,CADsB,CAAtB;AAsCAC,OAAOC,OAAP,GAAe,EAAC,mBAAkBpB,eAAnB,EAAf",
      "file": "browser-history.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-api/models",
      "sourcesContent": [
        "import  Sequelize from 'sequelize';\nconst db=require('../src/database');\nconst browser_history=db.define('browser-history',\n{\n  \n  uid:{\n  type:Sequelize.UUIDV4,\n  allowNull:false\n},\nurl:{\n  type:Sequelize.TEXT,\n  allowNull:false\n},\nip: {\n  type: Sequelize.STRING,\n  allowNull:false\n},\nvisited_timestamp: {\n  type: Sequelize.DATE,\n  allowNull:false\n\n},\nvisitcount: {\n  type: Sequelize.INTEGER,\n  allowNull:false\n},\ntitle: {\n  type: Sequelize.STRING,\n  allowNull:false\n},\nuseragent: {\n  type: Sequelize.STRING,\n  allowNull:false\n},\nchrome_id:{\n  type:Sequelize.INTEGER,\n  unique:true\n}\n}\n);\nmodule.exports={\"browser_history\":browser_history};"
      ]
    },
    "mtime": 1560871195500
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./server",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "app"
              }
            ]
          },
          {
            "source": "./models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "./seeds/users",
            "imported": [
              "createSuperAdmin"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "createSuperAdmin",
                "local": "createSuperAdmin"
              }
            ]
          },
          {
            "source": "./util/dbConnect",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dbConnect"
              }
            ]
          },
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/index.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _server = require('./server');\n\nvar _server2 = _interopRequireDefault(_server);\n\nvar _user = require('./models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _users = require('./seeds/users');\n\nvar _dbConnect = require('./util/dbConnect');\n\nvar _dbConnect2 = _interopRequireDefault(_dbConnect);\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar _process$env = process.env,\n    PORT = _process$env.PORT,\n    DEFAULT_USER = _process$env.DEFAULT_USER;\n\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize.authenticate().then(function () {\n  console.log('Connection has been established successfully.');\n}).catch(function (err) {\n  console.error('Unable to connect to the database:', err);\n});\n\n(0, _dbConnect2.default)().then(function () {\n\n  _user2.default.findOne({ email: DEFAULT_USER }).then(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(user) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user === null)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return (0, _users.createSuperAdmin)();\n\n            case 3:\n\n              _server2.default.listen(PORT, function (err) {\n                if (!err) {\n                  console.log('Server is running on port: ' + PORT);\n                }\n              });\n\n            case 4:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}).catch(function (err) {\n  return console.error('MongoDB connection failure' + err);\n});\n\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiREVGQVVMVF9VU0VSIiwic2VxdWVsaXplIiwiU2VxdWVsaXplIiwiaG9zdCIsImRpYWxlY3QiLCJwb29sIiwibWF4IiwibWluIiwiaWRsZSIsImF1dGhlbnRpY2F0ZSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciIsImVyciIsIlVzZXIiLCJmaW5kT25lIiwiZW1haWwiLCJ1c2VyIiwiYXBwIiwibGlzdGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7bUJBQzZCQSxRQUFRQyxHO0lBQTlCQyxJLGdCQUFBQSxJO0lBQU1DLFksZ0JBQUFBLFk7OztBQUViLElBQU1DLFlBQVksSUFBSUMsbUJBQUosQ0FBYyxVQUFkLEVBQTBCLFVBQTFCLEVBQXNDLE9BQXRDLEVBQStDO0FBQy9EQyxRQUFNLFdBRHlEO0FBRS9EQyxXQUFTLFVBRnNEO0FBRy9EQyxRQUFNO0FBQ0pDLFNBQUssQ0FERDtBQUVKQyxTQUFLLENBRkQ7QUFHSkMsVUFBTTtBQUhGO0FBSHlELENBQS9DLENBQWxCO0FBU0FQLFVBQ0dRLFlBREgsR0FFR0MsSUFGSCxDQUVRLFlBQU07QUFDVkMsVUFBUUMsR0FBUixDQUFZLCtDQUFaO0FBQ0QsQ0FKSCxFQUtHQyxLQUxILENBS1MsZUFBTztBQUNaRixVQUFRRyxLQUFSLENBQWMsb0NBQWQsRUFBb0RDLEdBQXBEO0FBQ0QsQ0FQSDs7QUFVQSwyQkFBWUwsSUFBWixDQUFrQixZQUFNOztBQUV0Qk0saUJBQUtDLE9BQUwsQ0FBYSxFQUFFQyxPQUFPbEIsWUFBVCxFQUFiLEVBQXNDVSxJQUF0QztBQUFBLHVFQUEyQyxpQkFBTVMsSUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsb0JBQ3RDQSxTQUFTLElBRDZCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBRWpDLDhCQUZpQzs7QUFBQTs7QUFLekNDLCtCQUFJQyxNQUFKLENBQVd0QixJQUFYLEVBQWlCLGVBQU87QUFDdEIsb0JBQUksQ0FBQ2dCLEdBQUwsRUFBVTtBQUNSSiwwQkFBUUMsR0FBUixpQ0FBMENiLElBQTFDO0FBQ0Q7QUFDRixlQUpEOztBQUx5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUEzQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVlELENBZEQsRUFjR2MsS0FkSCxDQWNTO0FBQUEsU0FBT0YsUUFBUUcsS0FBUixDQUFjLCtCQUErQkMsR0FBN0MsQ0FBUDtBQUFBLENBZFQ7O0FBZ0JBTyxPQUFPQyxPQUFQLEdBQWV0QixTQUFmIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcCBmcm9tICcuL3NlcnZlcic7XG5pbXBvcnQgVXNlciBmcm9tICcuL21vZGVscy91c2VyJztcbmltcG9ydCB7Y3JlYXRlU3VwZXJBZG1pbn0gZnJvbSAnLi9zZWVkcy91c2Vycyc7XG5pbXBvcnQgZGJDb25uZWN0IGZyb20gJy4vdXRpbC9kYkNvbm5lY3QnO1xuaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuY29uc3Qge1BPUlQsIERFRkFVTFRfVVNFUn0gPSBwcm9jZXNzLmVudjtcblxuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZSgncG9zdGdyZXMnLCAncG9zdGdyZXMnLCAndGFudWonLCB7XG4gIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICBwb29sOiB7XG4gICAgbWF4OiA5LFxuICAgIG1pbjogMCxcbiAgICBpZGxlOiAxMDAwMFxuICB9XG59KTtcbnNlcXVlbGl6ZVxuICAuYXV0aGVudGljYXRlKClcbiAgLnRoZW4oKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIGhhcyBiZWVuIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseS4nKTtcbiAgfSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGNvbm5lY3QgdG8gdGhlIGRhdGFiYXNlOicsIGVycik7XG4gIH0pO1xuXG5cbmRiQ29ubmVjdCgpLnRoZW4oICgpID0+IHtcblxuICBVc2VyLmZpbmRPbmUoeyBlbWFpbDogREVGQVVMVF9VU0VSIH0pLnRoZW4oYXN5bmMgdXNlciA9PiB7XG4gICAgaWYodXNlciA9PT0gbnVsbCl7XG4gICAgICBhd2FpdCBjcmVhdGVTdXBlckFkbWluKCk7XG4gICAgfVxuXG4gICAgYXBwLmxpc3RlbihQT1JULCBlcnIgPT4ge1xuICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coYFNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQ6ICR7UE9SVH1gKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG5cbn0pLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKCdNb25nb0RCIGNvbm5lY3Rpb24gZmFpbHVyZScgKyBlcnIpKTtcblxubW9kdWxlLmV4cG9ydHM9c2VxdWVsaXplO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "process",
        "env",
        "PORT",
        "DEFAULT_USER",
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "min",
        "idle",
        "authenticate",
        "then",
        "console",
        "log",
        "catch",
        "error",
        "err",
        "User",
        "findOne",
        "email",
        "user",
        "app",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;mBAC6BA,QAAQC,G;IAA9BC,I,gBAAAA,I;IAAMC,Y,gBAAAA,Y;;;AAEb,IAAMC,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAA0B,UAA1B,EAAsC,OAAtC,EAA+C;AAC/DC,QAAM,WADyD;AAE/DC,WAAS,UAFsD;AAG/DC,QAAM;AACJC,SAAK,CADD;AAEJC,SAAK,CAFD;AAGJC,UAAM;AAHF;AAHyD,CAA/C,CAAlB;AASAP,UACGQ,YADH,GAEGC,IAFH,CAEQ,YAAM;AACVC,UAAQC,GAAR,CAAY,+CAAZ;AACD,CAJH,EAKGC,KALH,CAKS,eAAO;AACZF,UAAQG,KAAR,CAAc,oCAAd,EAAoDC,GAApD;AACD,CAPH;;AAUA,2BAAYL,IAAZ,CAAkB,YAAM;;AAEtBM,iBAAKC,OAAL,CAAa,EAAEC,OAAOlB,YAAT,EAAb,EAAsCU,IAAtC;AAAA,uEAA2C,iBAAMS,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBACtCA,SAAS,IAD6B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEjC,8BAFiC;;AAAA;;AAKzCC,+BAAIC,MAAJ,CAAWtB,IAAX,EAAiB,eAAO;AACtB,oBAAI,CAACgB,GAAL,EAAU;AACRJ,0BAAQC,GAAR,iCAA0Cb,IAA1C;AACD;AACF,eAJD;;AALyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3C;;AAAA;AAAA;AAAA;AAAA;AAYD,CAdD,EAcGc,KAdH,CAcS;AAAA,SAAOF,QAAQG,KAAR,CAAc,+BAA+BC,GAA7C,CAAP;AAAA,CAdT;;AAgBAO,OAAOC,OAAP,GAAetB,SAAf",
      "file": "index.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "sourcesContent": [
        "import app from './server';\nimport User from './models/user';\nimport {createSuperAdmin} from './seeds/users';\nimport dbConnect from './util/dbConnect';\nimport Sequelize from 'sequelize';\nconst {PORT, DEFAULT_USER} = process.env;\n\nconst sequelize = new Sequelize('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 9,\n    min: 0,\n    idle: 10000\n  }\n});\nsequelize\n  .authenticate()\n  .then(() => {\n    console.log('Connection has been established successfully.');\n  })\n  .catch(err => {\n    console.error('Unable to connect to the database:', err);\n  });\n\n\ndbConnect().then( () => {\n\n  User.findOne({ email: DEFAULT_USER }).then(async user => {\n    if(user === null){\n      await createSuperAdmin();\n    }\n\n    app.listen(PORT, err => {\n      if (!err) {\n        console.log(`Server is running on port: ${PORT}`);\n      }\n    });\n  });\n\n}).catch(err => console.error('MongoDB connection failure' + err));\n\nmodule.exports=sequelize;\n"
      ]
    },
    "mtime": 1559499396616
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "compression",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "compression"
              }
            ]
          },
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "path",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "path"
              }
            ]
          },
          {
            "source": "./routes/api.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "apiRouter"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/server.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _compression = require('compression');\n\nvar _compression2 = _interopRequireDefault(_compression);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _api = require('./routes/api.routes');\n\nvar _api2 = _interopRequireDefault(_api);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Initialize the Express App\nvar app = new _express2.default();\n\n// Apply body Parser\napp.use((0, _compression2.default)());\napp.use(_bodyParser2.default.json({ limit: '20mb' }));\napp.use(_bodyParser2.default.urlencoded({ limit: '20mb', extended: false }));\n\napp.use('/api', _api2.default);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexports.default = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJFeHByZXNzIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJsaW1pdCIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImFwaVJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUE7QUFDQSxJQUFNQSxNQUFNLElBQUlDLGlCQUFKLEVBQVo7O0FBRUE7QUFDQUQsSUFBSUUsR0FBSixDQUFRLDRCQUFSO0FBQ0FGLElBQUlFLEdBQUosQ0FBUUMscUJBQVdDLElBQVgsQ0FBZ0IsRUFBRUMsT0FBTyxNQUFULEVBQWhCLENBQVI7QUFDQUwsSUFBSUUsR0FBSixDQUFRQyxxQkFBV0csVUFBWCxDQUFzQixFQUFFRCxPQUFPLE1BQVQsRUFBaUJFLFVBQVUsS0FBM0IsRUFBdEIsQ0FBUjs7QUFHQVAsSUFBSUUsR0FBSixDQUFRLE1BQVIsRUFBZ0JNLGFBQWhCO0FBQ0E7O2tCQUVlUixHIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGNvbXByZXNzaW9uIGZyb20gJ2NvbXByZXNzaW9uJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGFwaVJvdXRlciBmcm9tICcuL3JvdXRlcy9hcGkucm91dGVzJztcblxuLy8gSW5pdGlhbGl6ZSB0aGUgRXhwcmVzcyBBcHBcbmNvbnN0IGFwcCA9IG5ldyBFeHByZXNzKCk7XG5cbi8vIEFwcGx5IGJvZHkgUGFyc2VyXG5hcHAudXNlKGNvbXByZXNzaW9uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oeyBsaW1pdDogJzIwbWInIH0pKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgbGltaXQ6ICcyMG1iJywgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcblxuXG5hcHAudXNlKCcvYXBpJywgYXBpUm91dGVyKTtcbi8vIGFwcC51c2UoRXhwcmVzcy5zdGF0aWMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL3B1YmxpYy8nKSkpO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "Express",
        "use",
        "bodyParser",
        "json",
        "limit",
        "urlencoded",
        "extended",
        "apiRouter"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,IAAIC,iBAAJ,EAAZ;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,4BAAR;AACAF,IAAIE,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB,EAAEC,OAAO,MAAT,EAAhB,CAAR;AACAL,IAAIE,GAAJ,CAAQC,qBAAWG,UAAX,CAAsB,EAAED,OAAO,MAAT,EAAiBE,UAAU,KAA3B,EAAtB,CAAR;;AAGAP,IAAIE,GAAJ,CAAQ,MAAR,EAAgBM,aAAhB;AACA;;kBAEeR,G",
      "file": "server.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "sourcesContent": [
        "import Express from 'express';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport apiRouter from './routes/api.routes';\n\n// Initialize the Express App\nconst app = new Express();\n\n// Apply body Parser\napp.use(compression());\napp.use(bodyParser.json({ limit: '20mb' }));\napp.use(bodyParser.urlencoded({ limit: '20mb', extended: false }));\n\n\napp.use('/api', apiRouter);\n// app.use(Express.static(path.resolve(__dirname, '../public/')));\n\nexport default app;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/api.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "./auth.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "authentication"
              }
            ]
          },
          {
            "source": "./cohort.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cohort"
              }
            ]
          },
          {
            "source": "./educator.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "educator"
              }
            ]
          },
          {
            "source": "./student.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "student"
              }
            ]
          },
          {
            "source": "./prompt.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "prompt"
              }
            ]
          },
          {
            "source": "./ping.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "ping"
              }
            ]
          },
          {
            "source": "./pingpong.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "pingpong"
              }
            ]
          },
          {
            "source": "./mailer.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mailer"
              }
            ]
          },
          {
            "source": "./day.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "days"
              }
            ]
          },
          {
            "source": "./admin.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "admin"
              }
            ]
          },
          {
            "source": "./todo.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "todo"
              }
            ]
          },
          {
            "source": "./note.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "note"
              }
            ]
          },
          {
            "source": "./link.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "link"
              }
            ]
          },
          {
            "source": "./user.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "user"
              }
            ]
          },
          {
            "source": "./chrome-history.routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "chromehistory"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "getProfile",
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getProfile",
                "local": "getProfile"
              },
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/api.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/api.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "api.routes.js",
      "sourceFileName": "api.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "api.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _auth = require('./auth.routes');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _cohort = require('./cohort.routes');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _educator = require('./educator.routes');\n\nvar _educator2 = _interopRequireDefault(_educator);\n\nvar _student = require('./student.routes');\n\nvar _student2 = _interopRequireDefault(_student);\n\nvar _prompt = require('./prompt.routes');\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nvar _ping = require('./ping.routes');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nvar _pingpong = require('./pingpong.routes');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nvar _mailer = require('./mailer.routes');\n\nvar _mailer2 = _interopRequireDefault(_mailer);\n\nvar _day = require('./day.routes');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _admin = require('./admin.routes');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _todo = require('./todo.routes');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nvar _note = require('./note.routes');\n\nvar _note2 = _interopRequireDefault(_note);\n\nvar _link = require('./link.routes');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _user = require('./user.routes');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _chromeHistory = require('./chrome-history.routes');\n\nvar _chromeHistory2 = _interopRequireDefault(_chromeHistory);\n\nvar _user3 = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n// api doc is accessible in development environment only\nif (process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', _express2.default.static('./doc'));\n}\nrouter.use('/links', _link2.default);\nrouter.use('/chrome-history', _chromeHistory2.default);\nrouter.use(_auth2.default);\n\nrouter.use('/cohorts', _cohort2.default);\nrouter.use('/educators', _educator2.default);\nrouter.use('/students', _student2.default);\nrouter.use('/prompts', _prompt2.default);\nrouter.use('/pings', _ping2.default);\nrouter.use('/pingpongs', _pingpong2.default);\nrouter.use('/mailer', _mailer2.default);\nrouter.use('/days', _day2.default);\nrouter.use('/admin', _admin2.default);\nrouter.use('/todos', _todo2.default);\nrouter.use('/notes', _note2.default);\nrouter.use('/users', _user2.default);\n\nrouter.get('/profile', _user3.populateCurrentUser, _user3.getProfile);\n\nrouter.get('/', function (req, res) {\n\treturn res.send('API home');\n});\nrouter.use('*', function (req, res) {\n\treturn res.sendStatus(404);\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInVzZSIsInN0YXRpYyIsImxpbmsiLCJjaHJvbWVoaXN0b3J5IiwiYXV0aGVudGljYXRpb24iLCJjb2hvcnQiLCJlZHVjYXRvciIsInN0dWRlbnQiLCJwcm9tcHQiLCJwaW5nIiwicGluZ3BvbmciLCJtYWlsZXIiLCJkYXlzIiwiYWRtaW4iLCJ0b2RvIiwibm90ZSIsInVzZXIiLCJnZXQiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0UHJvZmlsZSIsInJlcSIsInJlcyIsInNlbmQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjtBQUNBO0FBQ0EsSUFBR0MsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLGFBQTVCLEVBQTJDO0FBQzFDTCxRQUFPTSxHQUFQLENBQVcsTUFBWCxFQUFtQkwsa0JBQVFNLE1BQVIsQ0FBZSxPQUFmLENBQW5CO0FBQ0E7QUFDRFAsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJFLGNBQXJCO0FBQ0FSLE9BQU9NLEdBQVAsQ0FBVyxpQkFBWCxFQUE2QkcsdUJBQTdCO0FBQ0FULE9BQU9NLEdBQVAsQ0FBV0ksY0FBWDs7QUFFQVYsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJLLGdCQUF2QjtBQUNBWCxPQUFPTSxHQUFQLENBQVcsWUFBWCxFQUF5Qk0sa0JBQXpCO0FBQ0FaLE9BQU9NLEdBQVAsQ0FBVyxXQUFYLEVBQXdCTyxpQkFBeEI7QUFDQWIsT0FBT00sR0FBUCxDQUFXLFVBQVgsRUFBdUJRLGdCQUF2QjtBQUNBZCxPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQlMsY0FBckI7QUFDQWYsT0FBT00sR0FBUCxDQUFXLFlBQVgsRUFBeUJVLGtCQUF6QjtBQUNBaEIsT0FBT00sR0FBUCxDQUFXLFNBQVgsRUFBc0JXLGdCQUF0QjtBQUNBakIsT0FBT00sR0FBUCxDQUFXLE9BQVgsRUFBb0JZLGFBQXBCO0FBQ0FsQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmEsZUFBckI7QUFDQW5CLE9BQU9NLEdBQVAsQ0FBVyxRQUFYLEVBQXFCYyxjQUFyQjtBQUNBcEIsT0FBT00sR0FBUCxDQUFXLFFBQVgsRUFBcUJlLGNBQXJCO0FBQ0FyQixPQUFPTSxHQUFQLENBQVcsUUFBWCxFQUFxQmdCLGNBQXJCOztBQUdBdEIsT0FBT3VCLEdBQVAsQ0FBVyxVQUFYLEVBQXVCQywwQkFBdkIsRUFBNENDLGlCQUE1Qzs7QUFFQXpCLE9BQU91QixHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFDRyxHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJQyxJQUFKLENBQVMsVUFBVCxDQUFkO0FBQUEsQ0FBaEI7QUFDQTVCLE9BQU9NLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNvQixHQUFELEVBQU1DLEdBQU47QUFBQSxRQUFjQSxJQUFJRSxVQUFKLENBQWUsR0FBZixDQUFkO0FBQUEsQ0FBaEI7O2tCQUVlN0IsTSIsImZpbGUiOiJhcGkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGF1dGhlbnRpY2F0aW9uIGZyb20gJy4vYXV0aC5yb3V0ZXMnO1xuaW1wb3J0IGNvaG9ydCBmcm9tICcuL2NvaG9ydC5yb3V0ZXMnO1xuaW1wb3J0IGVkdWNhdG9yIGZyb20gJy4vZWR1Y2F0b3Iucm91dGVzJztcbmltcG9ydCBzdHVkZW50IGZyb20gJy4vc3R1ZGVudC5yb3V0ZXMnO1xuaW1wb3J0IHByb21wdCBmcm9tICcuL3Byb21wdC5yb3V0ZXMnO1xuaW1wb3J0IHBpbmcgZnJvbSAnLi9waW5nLnJvdXRlcyc7XG5pbXBvcnQgcGluZ3BvbmcgZnJvbSAnLi9waW5ncG9uZy5yb3V0ZXMnO1xuaW1wb3J0IG1haWxlciBmcm9tICcuL21haWxlci5yb3V0ZXMnO1xuaW1wb3J0IGRheXMgZnJvbSAnLi9kYXkucm91dGVzJztcbmltcG9ydCBhZG1pbiBmcm9tICcuL2FkbWluLnJvdXRlcyc7XG5pbXBvcnQgdG9kbyBmcm9tICcuL3RvZG8ucm91dGVzJztcbmltcG9ydCBub3RlIGZyb20gJy4vbm90ZS5yb3V0ZXMnO1xuaW1wb3J0IGxpbmsgZnJvbSAnLi9saW5rLnJvdXRlcyc7XG5pbXBvcnQgdXNlciBmcm9tICcuL3VzZXIucm91dGVzJ1xuaW1wb3J0IGNocm9tZWhpc3RvcnkgZnJvbSAnLi9jaHJvbWUtaGlzdG9yeS5yb3V0ZXMnO1xuaW1wb3J0IHtnZXRQcm9maWxlLCBwb3B1bGF0ZUN1cnJlbnRVc2VyfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuLy8gYXBpIGRvYyBpcyBhY2Nlc3NpYmxlIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50IG9ubHlcbmlmKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG5cdHJvdXRlci51c2UoJy9kb2MnLCBFeHByZXNzLnN0YXRpYygnLi9kb2MnKSk7XG59XG5yb3V0ZXIudXNlKCcvbGlua3MnLCBsaW5rKTtcbnJvdXRlci51c2UoJy9jaHJvbWUtaGlzdG9yeScsY2hyb21laGlzdG9yeSlcbnJvdXRlci51c2UoYXV0aGVudGljYXRpb24pO1xuXG5yb3V0ZXIudXNlKCcvY29ob3J0cycsIGNvaG9ydCk7XG5yb3V0ZXIudXNlKCcvZWR1Y2F0b3JzJywgZWR1Y2F0b3IpO1xucm91dGVyLnVzZSgnL3N0dWRlbnRzJywgc3R1ZGVudCk7XG5yb3V0ZXIudXNlKCcvcHJvbXB0cycsIHByb21wdCk7XG5yb3V0ZXIudXNlKCcvcGluZ3MnLCBwaW5nKTtcbnJvdXRlci51c2UoJy9waW5ncG9uZ3MnLCBwaW5ncG9uZyk7XG5yb3V0ZXIudXNlKCcvbWFpbGVyJywgbWFpbGVyKTtcbnJvdXRlci51c2UoJy9kYXlzJywgZGF5cyk7XG5yb3V0ZXIudXNlKCcvYWRtaW4nLCBhZG1pbik7XG5yb3V0ZXIudXNlKCcvdG9kb3MnLCB0b2RvKTtcbnJvdXRlci51c2UoJy9ub3RlcycsIG5vdGUpO1xucm91dGVyLnVzZSgnL3VzZXJzJywgdXNlcilcblxuXG5yb3V0ZXIuZ2V0KCcvcHJvZmlsZScsIHBvcHVsYXRlQ3VycmVudFVzZXIsIGdldFByb2ZpbGUpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZCgnQVBJIGhvbWUnKSk7XG5yb3V0ZXIudXNlKCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZFN0YXR1cyg0MDQpKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "api.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "process",
        "env",
        "NODE_ENV",
        "use",
        "static",
        "link",
        "chromehistory",
        "authentication",
        "cohort",
        "educator",
        "student",
        "prompt",
        "ping",
        "pingpong",
        "mailer",
        "days",
        "admin",
        "todo",
        "note",
        "user",
        "get",
        "populateCurrentUser",
        "getProfile",
        "req",
        "res",
        "send",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;AACA;AACA,IAAGC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AAC1CL,QAAOM,GAAP,CAAW,MAAX,EAAmBL,kBAAQM,MAAR,CAAe,OAAf,CAAnB;AACA;AACDP,OAAOM,GAAP,CAAW,QAAX,EAAqBE,cAArB;AACAR,OAAOM,GAAP,CAAW,iBAAX,EAA6BG,uBAA7B;AACAT,OAAOM,GAAP,CAAWI,cAAX;;AAEAV,OAAOM,GAAP,CAAW,UAAX,EAAuBK,gBAAvB;AACAX,OAAOM,GAAP,CAAW,YAAX,EAAyBM,kBAAzB;AACAZ,OAAOM,GAAP,CAAW,WAAX,EAAwBO,iBAAxB;AACAb,OAAOM,GAAP,CAAW,UAAX,EAAuBQ,gBAAvB;AACAd,OAAOM,GAAP,CAAW,QAAX,EAAqBS,cAArB;AACAf,OAAOM,GAAP,CAAW,YAAX,EAAyBU,kBAAzB;AACAhB,OAAOM,GAAP,CAAW,SAAX,EAAsBW,gBAAtB;AACAjB,OAAOM,GAAP,CAAW,OAAX,EAAoBY,aAApB;AACAlB,OAAOM,GAAP,CAAW,QAAX,EAAqBa,eAArB;AACAnB,OAAOM,GAAP,CAAW,QAAX,EAAqBc,cAArB;AACApB,OAAOM,GAAP,CAAW,QAAX,EAAqBe,cAArB;AACArB,OAAOM,GAAP,CAAW,QAAX,EAAqBgB,cAArB;;AAGAtB,OAAOuB,GAAP,CAAW,UAAX,EAAuBC,0BAAvB,EAA4CC,iBAA5C;;AAEAzB,OAAOuB,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIC,IAAJ,CAAS,UAAT,CAAd;AAAA,CAAhB;AACA5B,OAAOM,GAAP,CAAW,GAAX,EAAgB,UAACoB,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIE,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;;kBAEe7B,M",
      "file": "api.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport authentication from './auth.routes';\nimport cohort from './cohort.routes';\nimport educator from './educator.routes';\nimport student from './student.routes';\nimport prompt from './prompt.routes';\nimport ping from './ping.routes';\nimport pingpong from './pingpong.routes';\nimport mailer from './mailer.routes';\nimport days from './day.routes';\nimport admin from './admin.routes';\nimport todo from './todo.routes';\nimport note from './note.routes';\nimport link from './link.routes';\nimport user from './user.routes'\nimport chromehistory from './chrome-history.routes';\nimport {getProfile, populateCurrentUser} from '../controllers/user.controller';\n\nconst router = Express.Router();\n// api doc is accessible in development environment only\nif(process.env.NODE_ENV === 'development') {\n\trouter.use('/doc', Express.static('./doc'));\n}\nrouter.use('/links', link);\nrouter.use('/chrome-history',chromehistory)\nrouter.use(authentication);\n\nrouter.use('/cohorts', cohort);\nrouter.use('/educators', educator);\nrouter.use('/students', student);\nrouter.use('/prompts', prompt);\nrouter.use('/pings', ping);\nrouter.use('/pingpongs', pingpong);\nrouter.use('/mailer', mailer);\nrouter.use('/days', days);\nrouter.use('/admin', admin);\nrouter.use('/todos', todo);\nrouter.use('/notes', note);\nrouter.use('/users', user)\n\n\nrouter.get('/profile', populateCurrentUser, getProfile);\n\nrouter.get('/', (req, res) => res.send('API home'));\nrouter.use('*', (req, res) => res.sendStatus(404));\n\nexport default router;\n"
      ]
    },
    "mtime": 1559500318780
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/auth.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "../controllers/auth.controller",
            "imported": [
              "accessControl",
              "authenticate",
              "signinWithGithub"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "accessControl",
                "local": "accessControl"
              },
              {
                "kind": "named",
                "imported": "authenticate",
                "local": "authenticate"
              },
              {
                "kind": "named",
                "imported": "signinWithGithub",
                "local": "signinWithGithub"
              }
            ]
          },
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/auth.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/auth.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.routes.js",
      "sourceFileName": "auth.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _auth = require('../controllers/auth.controller');\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_auth.accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', _auth.signinWithGithub);\n\nrouter.use(_auth.authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', function (req, res, next) {\n  if (req.jwtData.scope === _authScopes2.default.STUDENT) {\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJhY2Nlc3NDb250cm9sIiwic2lnbmluV2l0aEdpdGh1YiIsImF1dGhlbnRpY2F0ZSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIlNUVURFTlQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXQyxtQkFBWDs7QUFFQTtBQUNBSixPQUFPRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNFLHNCQUFuQzs7QUFFQUwsT0FBT0csR0FBUCxDQUFXRyxrQkFBWDs7QUFFQTtBQUNBTixPQUFPRyxHQUFQLENBQVcsVUFBWCxFQUF1QixVQUFDSSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN6QyxNQUFHRixJQUFJRyxPQUFKLENBQVlDLEtBQVosS0FBc0JDLHFCQUFZQyxPQUFyQyxFQUE2QztBQUMzQztBQUNEO0FBQ0RKO0FBQ0QsQ0FMRDs7a0JBT2VULE0iLCJmaWxlIjoiYXV0aC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQge2FjY2Vzc0NvbnRyb2wsIGF1dGhlbnRpY2F0ZSwgc2lnbmluV2l0aEdpdGh1Yn0gZnJvbSAnLi4vY29udHJvbGxlcnMvYXV0aC5jb250cm9sbGVyJztcbmltcG9ydCBBVVRIX1NDT1BFUyBmcm9tICcuLi91dGlsL2F1dGhTY29wZXMnO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIudXNlKGFjY2Vzc0NvbnRyb2wpO1xuXG4vLyBUaGlzIHJvdXRlIGRvZXNuJ3QgbmVlZCB0byBiZSBhdXRoZW50aWNhdGVkXG5yb3V0ZXIudXNlKCcvb2F1dGgvZ2l0aHViL3NpZ25pbicsIHNpZ25pbldpdGhHaXRodWIpO1xuXG5yb3V0ZXIudXNlKGF1dGhlbnRpY2F0ZSk7XG5cbi8vIFJlc3RyaWN0IHN0dWRlbnRzIGluIHRoZXNlIHJvdXRlc1xucm91dGVyLnVzZSgnL2NvaG9ydHMnLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgaWYocmVxLmp3dERhdGEuc2NvcGUgPT09IEFVVEhfU0NPUEVTLlNUVURFTlQpe1xuICAgIC8vIHJlcy5zZW5kU3RhdHVzKDQwMyk7XG4gIH1cbiAgbmV4dCgpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "accessControl",
        "signinWithGithub",
        "authenticate",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "STUDENT"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,mBAAX;;AAEA;AACAJ,OAAOG,GAAP,CAAW,sBAAX,EAAmCE,sBAAnC;;AAEAL,OAAOG,GAAP,CAAWG,kBAAX;;AAEA;AACAN,OAAOG,GAAP,CAAW,UAAX,EAAuB,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAGF,IAAIG,OAAJ,CAAYC,KAAZ,KAAsBC,qBAAYC,OAArC,EAA6C;AAC3C;AACD;AACDJ;AACD,CALD;;kBAOeT,M",
      "file": "auth.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport {accessControl, authenticate, signinWithGithub} from '../controllers/auth.controller';\nimport AUTH_SCOPES from '../util/authScopes';\n\nconst router = Express.Router();\n\nrouter.use(accessControl);\n\n// This route doesn't need to be authenticated\nrouter.use('/oauth/github/signin', signinWithGithub);\n\nrouter.use(authenticate);\n\n// Restrict students in these routes\nrouter.use('/cohorts', (req, res, next) => {\n  if(req.jwtData.scope === AUTH_SCOPES.STUDENT){\n    // res.sendStatus(403);\n  }\n  next();\n});\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/auth.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          },
          {
            "source": "superagent",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "request"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./user.controller",
            "imported": [
              "getSpotterTeam"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSpotterTeam",
                "local": "getSpotterTeam"
              }
            ]
          },
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "accessControl",
            "authenticate",
            "signinWithGithub"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "accessControl",
              "exported": "accessControl"
            },
            {
              "kind": "local",
              "local": "authenticate",
              "exported": "authenticate"
            },
            {
              "kind": "local",
              "local": "signinWithGithub",
              "exported": "signinWithGithub"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/auth.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/auth.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.controller.js",
      "sourceFileName": "auth.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signinWithGithub = exports.authenticate = exports.accessControl = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _user = require('../models/user');\n\nvar _user2 = require('./user.controller');\n\nvar _token = require('../util/token');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar accessControl = exports.accessControl = function accessControl(req, res, next) {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n};\n\nvar authenticate = exports.authenticate = function authenticate(req, res, next) {\n  req.jwtData = {};\n\n  next();\n};\n\nvar getProfileFromGithub = function getProfileFromGithub(_ref) {\n  var githubToken = _ref.text;\n  return new Promise(function (resolve, reject) {\n\n    _superagent2.default.get('https://api.github.com/user?' + githubToken).then(function (profileResponse) {\n      var _profileResponse$body = profileResponse.body,\n          email = _profileResponse$body.email,\n          login = _profileResponse$body.login,\n          id = _profileResponse$body.id,\n          name = _profileResponse$body.name,\n          company = _profileResponse$body.company,\n          location = _profileResponse$body.location,\n          bio = _profileResponse$body.bio,\n          avatar_url = _profileResponse$body.avatar_url;\n\n      var profile = { email: email, login: login, id: id, name: name, company: company, location: location, bio: bio, avatar_url: avatar_url };\n\n      _user.User.findOne({ email: email }).then(function (user) {\n        if (user === null) {\n          // User not found. Checking alternate emails!\n          _superagent2.default.get('https://api.github.com/user/emails?' + githubToken).then(function (emailResponse) {\n            var emails = emailResponse.body.map(function (o) {\n              return o.email;\n            });\n            _user.User.findOne({ email: { $in: emails } }).then(function (user) {\n              if (user === null) {\n                reject();\n              } else {\n                // user.emails = emails;\n                resolve({ user: user, profile: profile, githubToken: githubToken });\n              }\n            }).catch(reject);\n          });\n        } else {\n          resolve({ user: user, profile: profile, githubToken: githubToken });\n        }\n      }).catch(reject);\n    }).catch(reject);\n  });\n};\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nvar signinWithGithub = exports.signinWithGithub = function signinWithGithub(req, res) {\n\n  var params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  _superagent2.default.post('https://github.com/login/oauth/access_token').send(params).then(getProfileFromGithub).then(function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3) {\n      var user = _ref3.user,\n          profile = _ref3.profile,\n          githubToken = _ref3.githubToken;\n      var spotterTeam, soalToken;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _user2.getSpotterTeam)(user);\n\n            case 2:\n              spotterTeam = _context.sent;\n\n\n              // User found. Sending a jsonwebtoken to the client!\n              soalToken = (0, _token.getSoalToken)(user, githubToken);\n\n              if (!(user.profile && user.profile.github)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) }));\n\n            case 6:\n              // new user signed up\n              user.profile = _extends({}, user.profile, { github: profile });\n              // Updating user with the github profile\n              user.save().then(function (user) {\n                // Update succeeded\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              }).catch(function (err) {\n                // Update Failed!!!\n                res.send({ soalToken: soalToken, user: _extends({}, user.toObject(), { spotterTeam: spotterTeam }) });\n              });\n\n            case 8:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }()).catch(function (err) {\n    console.log(err);\n    res.status(404).send('User not found!!!');\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "accessControl",
        "req",
        "res",
        "next",
        "header",
        "process",
        "env",
        "REACT_APP_SERVER",
        "method",
        "send",
        "authenticate",
        "jwtData",
        "getProfileFromGithub",
        "githubToken",
        "text",
        "Promise",
        "resolve",
        "reject",
        "request",
        "get",
        "then",
        "profileResponse",
        "body",
        "email",
        "login",
        "id",
        "name",
        "company",
        "location",
        "bio",
        "avatar_url",
        "profile",
        "User",
        "findOne",
        "user",
        "emails",
        "emailResponse",
        "map",
        "o",
        "$in",
        "catch",
        "signinWithGithub",
        "params",
        "client_id",
        "GITHUB_CLIENT_ID",
        "client_secret",
        "GITHUB_CLIENT_SECRET",
        "code",
        "query",
        "post",
        "spotterTeam",
        "soalToken",
        "github",
        "toObject",
        "save",
        "console",
        "log",
        "err",
        "status"
      ],
      "mappings": "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",
      "file": "auth.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Express from 'express';\nimport jwt from 'jsonwebtoken';\nimport request from 'superagent';\nimport { User, USER_ROLES } from '../models/user';\nimport { getSpotterTeam } from './user.controller';\nimport {getSoalToken} from '../util/token';\n\nexport const accessControl = (req, res, next) => {\n\n  res.header('Access-Control-Allow-Origin', process.env.REACT_APP_SERVER);\n  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,PATCH,DELETE,OPTIONS');\n\n\n  // Send `No Content` to preflight requests\n  if (req.method === 'OPTIONS') {\n    res.send(204);\n  } else {\n    next();\n  }\n\n}\n\nexport const authenticate = (req, res, next) => {\n  req.jwtData={\n  \n  };\n    \n    next();\n  }\n\nconst getProfileFromGithub = ({text: githubToken}) => new Promise((resolve, reject) => {\n\n  request.get('https://api.github.com/user?'+githubToken).then(profileResponse => {\n    const {email, login, id, name, company, location, bio, avatar_url} = profileResponse.body;\n    const profile = {email, login, id, name, company, location, bio, avatar_url};\n\n    User.findOne({email}).then(user => {\n      if(user === null){\n        // User not found. Checking alternate emails!\n        request.get('https://api.github.com/user/emails?'+githubToken).then(emailResponse => {\n          let emails = emailResponse.body.map(o=>o.email);\n          User.findOne({email: {$in: emails}}).then(user=>{\n            if(user === null){\n              reject();\n            } else {\n              // user.emails = emails;\n              resolve({user, profile, githubToken});\n            }\n          })\n          .catch(reject);\n        });\n      } else {\n        resolve({user, profile, githubToken});\n      }\n    })\n    .catch(reject);\n  })\n  .catch(reject);\n\n});\n\n\n// This is the first request made in the sign in process. A token will be sent back to the frontend for authentication with github\nexport const signinWithGithub = (req, res)=>{\n\n  let params = {\n    client_id: process.env.GITHUB_CLIENT_ID,\n    client_secret: process.env.GITHUB_CLIENT_SECRET,\n    code: req.query.code\n  };\n\n  request.post('https://github.com/login/oauth/access_token').send(params)\n  .then(getProfileFromGithub)\n  .then(async ({user, profile, githubToken}) => {\n\n    const spotterTeam = await getSpotterTeam(user);\n\n    // User found. Sending a jsonwebtoken to the client!\n    const soalToken = getSoalToken(user, githubToken);\n    if(user.profile && user.profile.github){\n      return res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }\n    // new user signed up\n    user.profile = { ...user.profile, github: profile };\n    // Updating user with the github profile\n    user.save().then(user=>{\n      // Update succeeded\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}});\n    }).catch(err => {\n      // Update Failed!!!\n      res.send({soalToken, user: {...user.toObject(), spotterTeam}})\n    });\n  }).catch(err => {\n    console.log(err)\n    res.status(404).send('User not found!!!');\n  })\n\n}\n"
      ]
    },
    "mtime": 1559498895476
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "inherits",
        "possibleConstructorReturn",
        "classCallCheck",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "USER_ROLES",
            "User",
            "Student",
            "Educator"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "USER_ROLES",
              "exported": "USER_ROLES"
            },
            {
              "kind": "local",
              "local": "User",
              "exported": "User"
            },
            {
              "kind": "local",
              "local": "Student",
              "exported": "Student"
            },
            {
              "kind": "local",
              "local": "Educator",
              "exported": "Educator"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/user.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Educator = exports.Student = exports.User = exports.USER_ROLES = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Schema = _mongoose2.default.Schema;\nvar USER_ROLES = exports.USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst'\n};\n\nvar User = exports.User = _mongoose2.default.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String\n  },\n\n  // educator specific fields\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" }\n}));\n\n// can only be used for creation logic\n\nvar Student = exports.Student = function (_User) {\n  _inherits(Student, _User);\n\n  function Student(data) {\n    _classCallCheck(this, Student);\n\n    data && (data.role = USER_ROLES.STUDENT);\n    return _possibleConstructorReturn(this, (Student.__proto__ || Object.getPrototypeOf(Student)).call(this, data));\n  }\n\n  return Student;\n}(User);\n\n// can only be used for creation logic\n\n\nvar Educator = exports.Educator = function (_User2) {\n  _inherits(Educator, _User2);\n\n  function Educator(data) {\n    _classCallCheck(this, Educator);\n\n    data && (data.role = USER_ROLES.EDUCATOR);\n    return _possibleConstructorReturn(this, (Educator.__proto__ || Object.getPrototypeOf(Educator)).call(this, data));\n  }\n\n  return Educator;\n}(User);\n\nexports.default = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkNBVEFMWVNUIiwiVXNlciIsIm1vZGVsIiwibmFtZSIsInR5cGUiLCJyZXF1aXJlZCIsInJvbGUiLCJwcm9maWxlIiwiVHlwZXMiLCJNaXhlZCIsImNvaG9ydHMiLCJPYmplY3RJZCIsInJlZiIsImN1cnJlbnRDb2hvcnQiLCJwYXRoIiwiU3RyaW5nIiwic2VjcmV0IiwiZW1haWwiLCJwcm9ncmFtIiwiZGVmYXVsdCIsImxvY2F0aW9uIiwiU3R1ZGVudCIsImRhdGEiLCJFZHVjYXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO0FBRUEsSUFBTUUsa0NBQWE7QUFDeEJDLFdBQVMsU0FEZTtBQUV4QkMsWUFBVSxVQUZjO0FBR3hCQyxjQUFZLFlBSFk7QUFJeEJDLFlBQVU7QUFKYyxDQUFuQjs7QUFPQSxJQUFNQyxzQkFBT04sbUJBQVNPLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlSLE1BQUosQ0FBVztBQUNwRFMsUUFBTTtBQUNKQyxVQUFNLFFBREY7QUFFSkMsY0FBVTtBQUZOLEdBRDhDO0FBS3BEQyxRQUFNO0FBQ0pGLFVBQU07QUFERixHQUw4QztBQVFwREcsV0FBU2IsT0FBT2MsS0FBUCxDQUFhQyxLQVI4Qjs7QUFVcEQ7QUFDQUMsV0FBUSxDQUFDO0FBQ1BOLFVBQU1WLE9BQU9jLEtBQVAsQ0FBYUcsUUFEWjtBQUVQQyxTQUFLO0FBRkUsR0FBRCxDQVg0QztBQWVwREMsaUJBQWU7QUFDYlQsVUFBTVYsT0FBT2MsS0FBUCxDQUFhRyxRQUROO0FBRWJDLFNBQUs7QUFGUSxHQWZxQztBQW1CcERFLFFBQU1DLE1BbkI4QztBQW9CcERDLFVBQVFELE1BcEI0Qzs7QUFzQnBERSxTQUFPO0FBQ0xiLFVBQU1XO0FBREQsR0F0QjZDOztBQTBCcEQ7QUFDQUcsV0FBUyxFQUFDZCxNQUFLVyxNQUFOLEVBQWNJLFNBQVEsbUJBQXRCLEVBM0IyQztBQTRCcERDLFlBQVUsRUFBQ2hCLE1BQUtXLE1BQU4sRUFBY0ksU0FBUSxXQUF0QjtBQTVCMEMsQ0FBWCxDQUF2QixDQUFiOztBQStCUDs7SUFDYUUsTyxXQUFBQSxPOzs7QUFDWCxtQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUNoQkEsYUFBU0EsS0FBS2hCLElBQUwsR0FBWVYsV0FBV0MsT0FBaEM7QUFEZ0IsNkdBRVZ5QixJQUZVO0FBR2pCOzs7RUFKMEJyQixJOztBQU83Qjs7O0lBQ2FzQixRLFdBQUFBLFE7OztBQUNYLG9CQUFZRCxJQUFaLEVBQWtCO0FBQUE7O0FBQ2hCQSxhQUFTQSxLQUFLaEIsSUFBTCxHQUFZVixXQUFXRSxRQUFoQztBQURnQiwrR0FFVndCLElBRlU7QUFHakI7OztFQUoyQnJCLEk7O2tCQU9mQSxJIiwiZmlsZSI6InVzZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5cbmV4cG9ydCBjb25zdCBVU0VSX1JPTEVTID0ge1xuICBTVFVERU5UOiAnU3R1ZGVudCcsXG4gIEVEVUNBVE9SOiAnRWR1Y2F0b3InLFxuICBTVVBFUkFETUlOOiAnU3VwZXJhZG1pbicsXG4gIENBVEFMWVNUOiAnQ2F0YWx5c3QnLFxufTtcblxuZXhwb3J0IGNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIG5ldyBTY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgdHlwZTogJ1N0cmluZycsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgcm9sZToge1xuICAgIHR5cGU6ICdTdHJpbmcnXG4gIH0sXG4gIHByb2ZpbGU6IFNjaGVtYS5UeXBlcy5NaXhlZCxcblxuICAvLyBzdHVkZW50IHNwZWNpZmljIGZpZWxkc1xuICBjb2hvcnRzOlt7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ0NvaG9ydCdcbiAgfV0sXG4gIGN1cnJlbnRDb2hvcnQ6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ29ob3J0J1xuICB9LFxuICBwYXRoOiBTdHJpbmcsXG4gIHNlY3JldDogU3RyaW5nLFxuXG4gIGVtYWlsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICB9LFxuXG4gIC8vIGVkdWNhdG9yIHNwZWNpZmljIGZpZWxkc1xuICBwcm9ncmFtOiB7dHlwZTpTdHJpbmcsIGRlZmF1bHQ6XCJFeHBvbmVudDpTb2Z0d2FyZVwifSxcbiAgbG9jYXRpb246IHt0eXBlOlN0cmluZywgZGVmYXVsdDpcIkh5ZGVyYWJhZFwifSxcbn0pKTtcblxuLy8gY2FuIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpb24gbG9naWNcbmV4cG9ydCBjbGFzcyBTdHVkZW50IGV4dGVuZHMgVXNlciB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICBkYXRhICYmIChkYXRhLnJvbGUgPSBVU0VSX1JPTEVTLlNUVURFTlQpO1xuICAgIHN1cGVyKGRhdGEpO1xuICB9XG59XG5cbi8vIGNhbiBvbmx5IGJlIHVzZWQgZm9yIGNyZWF0aW9uIGxvZ2ljXG5leHBvcnQgY2xhc3MgRWR1Y2F0b3IgZXh0ZW5kcyBVc2VyIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIGRhdGEgJiYgKGRhdGEucm9sZSA9IFVTRVJfUk9MRVMuRURVQ0FUT1IpO1xuICAgIHN1cGVyKGRhdGEpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "USER_ROLES",
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "CATALYST",
        "User",
        "model",
        "name",
        "type",
        "required",
        "role",
        "profile",
        "Types",
        "Mixed",
        "cohorts",
        "ObjectId",
        "ref",
        "currentCohort",
        "path",
        "String",
        "secret",
        "email",
        "program",
        "default",
        "location",
        "Student",
        "data",
        "Educator"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;AAEA,IAAME,kCAAa;AACxBC,WAAS,SADe;AAExBC,YAAU,UAFc;AAGxBC,cAAY,YAHY;AAIxBC,YAAU;AAJc,CAAnB;;AAOA,IAAMC,sBAAON,mBAASO,KAAT,CAAe,MAAf,EAAuB,IAAIR,MAAJ,CAAW;AACpDS,QAAM;AACJC,UAAM,QADF;AAEJC,cAAU;AAFN,GAD8C;AAKpDC,QAAM;AACJF,UAAM;AADF,GAL8C;AAQpDG,WAASb,OAAOc,KAAP,CAAaC,KAR8B;;AAUpD;AACAC,WAAQ,CAAC;AACPN,UAAMV,OAAOc,KAAP,CAAaG,QADZ;AAEPC,SAAK;AAFE,GAAD,CAX4C;AAepDC,iBAAe;AACbT,UAAMV,OAAOc,KAAP,CAAaG,QADN;AAEbC,SAAK;AAFQ,GAfqC;AAmBpDE,QAAMC,MAnB8C;AAoBpDC,UAAQD,MApB4C;;AAsBpDE,SAAO;AACLb,UAAMW;AADD,GAtB6C;;AA0BpD;AACAG,WAAS,EAACd,MAAKW,MAAN,EAAcI,SAAQ,mBAAtB,EA3B2C;AA4BpDC,YAAU,EAAChB,MAAKW,MAAN,EAAcI,SAAQ,WAAtB;AA5B0C,CAAX,CAAvB,CAAb;;AA+BP;;IACaE,O,WAAAA,O;;;AACX,mBAAYC,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWC,OAAhC;AADgB,6GAEVyB,IAFU;AAGjB;;;EAJ0BrB,I;;AAO7B;;;IACasB,Q,WAAAA,Q;;;AACX,oBAAYD,IAAZ,EAAkB;AAAA;;AAChBA,aAASA,KAAKhB,IAAL,GAAYV,WAAWE,QAAhC;AADgB,+GAEVwB,IAFU;AAGjB;;;EAJ2BrB,I;;kBAOfA,I",
      "file": "user.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport const USER_ROLES = {\n  STUDENT: 'Student',\n  EDUCATOR: 'Educator',\n  SUPERADMIN: 'Superadmin',\n  CATALYST: 'Catalyst',\n};\n\nexport const User = mongoose.model('User', new Schema({\n  name: {\n    type: 'String',\n    required: true\n  },\n  role: {\n    type: 'String'\n  },\n  profile: Schema.Types.Mixed,\n\n  // student specific fields\n  cohorts:[{\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  }],\n  currentCohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n  },\n  path: String,\n  secret: String,\n\n  email: {\n    type: String,\n  },\n\n  // educator specific fields\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n}));\n\n// can only be used for creation logic\nexport class Student extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.STUDENT);\n    super(data);\n  }\n}\n\n// can only be used for creation logic\nexport class Educator extends User {\n  constructor(data) {\n    data && (data.role = USER_ROLES.EDUCATOR);\n    super(data);\n  }\n}\n\nexport default User;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/user.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "User",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "User",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getProfile",
            "getSpotterTeam",
            "populateCurrentUser",
            "updateUser"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getProfile",
              "exported": "getProfile"
            },
            {
              "kind": "local",
              "local": "getSpotterTeam",
              "exported": "getSpotterTeam"
            },
            {
              "kind": "local",
              "local": "populateCurrentUser",
              "exported": "populateCurrentUser"
            },
            {
              "kind": "local",
              "local": "updateUser",
              "exported": "updateUser"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/user.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/user.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.controller.js",
      "sourceFileName": "user.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateUser = exports.populateCurrentUser = exports.getSpotterTeam = exports.getProfile = undefined;\n\nvar _user = require('../models/user');\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _cohort3 = require('../controllers/cohort.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getProfile = exports.getProfile = function getProfile(req, res) {\n  res.json({ data: req.user });\n};\n\nvar getSpotterTeam = exports.getSpotterTeam = function getSpotterTeam(student) {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var cohort, spotterTeam;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(student);\n\n              if (!(student.role !== _user.USER_ROLES.STUDENT)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 3:\n              _context.next = 5;\n              return _cohort2.default.findById(student.currentCohort).exec();\n\n            case 5:\n              cohort = _context.sent;\n              spotterTeam = cohort.spotters.find(function (team) {\n                return team.students.some(function (s) {\n                  return student._id.equals(s);\n                });\n              });\n\n              if (!(spotterTeam == null)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(null));\n\n            case 9:\n              _context.next = 11;\n              return _user.User.find({ _id: { $in: spotterTeam.students } }, 'name profile.github.avatar_url profile.phone').exec();\n\n            case 11:\n              spotterTeam.students = _context.sent;\n\n              resolve(spotterTeam);\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nvar populateCurrentUser = exports.populateCurrentUser = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _user.User.findById(req.jwtData.user).lean().exec();\n\n          case 3:\n            user = _context2.sent;\n            _context2.next = 6;\n            return getSpotterTeam(user);\n\n          case 6:\n            user.spotterTeam = _context2.sent;\n\n            req.user = user;\n            next();\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(404);\n\n          case 14:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function populateCurrentUser(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar updateUser = exports.updateUser = function updateUser(req, res) {\n  var _req$query = req.query,\n      id = _req$query.id,\n      newCohort = _req$query.newCohort,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  var cohortID = void 0;\n  _user.User.findOne({ _id: id }).lean().then(function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(user) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _cohort2.default.find({ name: newCohort, location: city }).lean().exec().then(function (cohorts) {\n                cohorts.map(function (cohort, i) {\n                  var date = cohort.startDate;\n                  if (date.getFullYear().toString() === year) {\n                    cohortID = cohort._id;\n                  }\n                });\n              });\n\n            case 2:\n              console.log('-----', cohortID);\n              user.currentCohort = cohortID;\n              user.cohorts.push(cohortID);\n              _user.User.findByIdAndUpdate(id, { $set: { cohorts: user.cohorts, currentCohort: user.currentCohort } }).then(function () {\n                return res.send();\n              }).catch(function (e) {\n                return res.sendStatus(500).send(e);\n              });\n\n            case 6:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, undefined);\n    }));\n\n    return function (_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }()).catch(function (e) {\n    return res.sendStatus(500).send(e);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRQcm9maWxlIiwicmVxIiwicmVzIiwianNvbiIsImRhdGEiLCJ1c2VyIiwiZ2V0U3BvdHRlclRlYW0iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJzdHVkZW50Iiwicm9sZSIsIlVTRVJfUk9MRVMiLCJTVFVERU5UIiwiQ29ob3J0IiwiZmluZEJ5SWQiLCJjdXJyZW50Q29ob3J0IiwiZXhlYyIsImNvaG9ydCIsInNwb3R0ZXJUZWFtIiwic3BvdHRlcnMiLCJmaW5kIiwidGVhbSIsInN0dWRlbnRzIiwic29tZSIsIl9pZCIsImVxdWFscyIsInMiLCJVc2VyIiwiJGluIiwicG9wdWxhdGVDdXJyZW50VXNlciIsIm5leHQiLCJqd3REYXRhIiwibGVhbiIsInNlbmRTdGF0dXMiLCJ1cGRhdGVVc2VyIiwicXVlcnkiLCJpZCIsIm5ld0NvaG9ydCIsInllYXIiLCJjaXR5IiwiY29ob3J0SUQiLCJmaW5kT25lIiwidGhlbiIsIm5hbWUiLCJsb2NhdGlvbiIsImNvaG9ydHMiLCJtYXAiLCJpIiwiZGF0ZSIsInN0YXJ0RGF0ZSIsImdldEZ1bGxZZWFyIiwidG9TdHJpbmciLCJwdXNoIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCIkc2V0Iiwic2VuZCIsImNhdGNoIiwiZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBQ0E7Ozs7OztBQUNPLElBQU1BLGtDQUFhLFNBQWJBLFVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdENBLE1BQUlDLElBQUosQ0FBUyxFQUFDQyxNQUFNSCxJQUFJSSxJQUFYLEVBQVQ7QUFDRCxDQUZNOztBQUlBLElBQU1DLDBDQUFpQixTQUFqQkEsY0FBaUI7QUFBQSxTQUFXLElBQUlDLE9BQUo7QUFBQSx1RUFBWSxpQkFBT0MsT0FBUCxFQUFnQkMsTUFBaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ25EQyxz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RjhCOztBQUFBO0FBVXBDakIsc0JBQVFDLEdBQVIsVUFBc0JnQyxRQUF0QjtBQUNBdEMsbUJBQUthLGFBQUwsR0FBcUJ5QixRQUFyQjtBQUNBdEMsbUJBQUsyQyxPQUFMLENBQWFPLElBQWIsQ0FBa0JaLFFBQWxCO0FBQ0FiLHlCQUFLMEIsaUJBQUwsQ0FBdUJqQixFQUF2QixFQUEyQixFQUFDa0IsTUFBTyxFQUFDVCxTQUFTM0MsS0FBSzJDLE9BQWYsRUFBd0I5QixlQUFnQmIsS0FBS2EsYUFBN0MsRUFBUixFQUEzQixFQUFpRzJCLElBQWpHLENBQXNHO0FBQUEsdUJBQU0zQyxJQUFJd0QsSUFBSixFQUFOO0FBQUEsZUFBdEcsRUFBd0hDLEtBQXhILENBQThIO0FBQUEsdUJBQUt6RCxJQUFJa0MsVUFBSixDQUFlLEdBQWYsRUFBb0JzQixJQUFwQixDQUF5QkUsQ0FBekIsQ0FBTDtBQUFBLGVBQTlIOztBQWJvQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUF0Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQWVHRCxLQWZILENBZVM7QUFBQSxXQUFLekQsSUFBSWtDLFVBQUosQ0FBZSxHQUFmLEVBQW9Cc0IsSUFBcEIsQ0FBeUJFLENBQXpCLENBQUw7QUFBQSxHQWZUO0FBZ0JELENBbkJNIiwiZmlsZSI6InVzZXIuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VXNlciwgVVNFUl9ST0xFU30gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG5pbXBvcnQgQ29ob3J0IGZyb20gJy4uL21vZGVscy9jb2hvcnQnO1xuaW1wb3J0IHsgZ2V0Q29ob3J0QnlOYW1lIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvY29ob3J0LmNvbnRyb2xsZXInXG5leHBvcnQgY29uc3QgZ2V0UHJvZmlsZSA9IChyZXEsIHJlcykgPT4ge1xuICByZXMuanNvbih7ZGF0YTogcmVxLnVzZXJ9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldFNwb3R0ZXJUZWFtID0gc3R1ZGVudCA9PiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PntcbiAgY29uc29sZS5sb2coc3R1ZGVudCk7XG4gIGlmKHN0dWRlbnQucm9sZSAhPT0gVVNFUl9ST0xFUy5TVFVERU5UKSB7XG4gICAgLy8gU3BvdHRlcnMgYXJlIGltcGxlbWVudGVkIG9ubHkgZm9yIHN0dWRlbnRzXG4gICAgcmV0dXJuIHJlc29sdmUobnVsbCk7XG4gIH1cbiAgbGV0IGNvaG9ydCA9IGF3YWl0IENvaG9ydC5maW5kQnlJZChzdHVkZW50LmN1cnJlbnRDb2hvcnQpLmV4ZWMoKTtcbiAgbGV0IHNwb3R0ZXJUZWFtID0gY29ob3J0LnNwb3R0ZXJzLmZpbmQodGVhbSA9PiB7XG4gICAgcmV0dXJuIHRlYW0uc3R1ZGVudHMuc29tZShzID0+IHN0dWRlbnQuX2lkLmVxdWFscyhzKSk7XG4gIH0pO1xuICBpZihzcG90dGVyVGVhbSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHJlc29sdmUobnVsbCk7XG4gIH1cbiAgc3BvdHRlclRlYW0uc3R1ZGVudHMgPSBhd2FpdCBVc2VyLmZpbmQoe19pZDogeyRpbjogc3BvdHRlclRlYW0uc3R1ZGVudHN9fSwgJ25hbWUgcHJvZmlsZS5naXRodWIuYXZhdGFyX3VybCBwcm9maWxlLnBob25lJykuZXhlYygpO1xuICByZXNvbHZlKHNwb3R0ZXJUZWFtKTtcbn0pO1xuXG5leHBvcnQgY29uc3QgcG9wdWxhdGVDdXJyZW50VXNlciA9IGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKHJlcS5qd3REYXRhLnVzZXIpLmxlYW4oKS5leGVjKCk7XG4gICAgdXNlci5zcG90dGVyVGVhbSA9IGF3YWl0IGdldFNwb3R0ZXJUZWFtKHVzZXIpO1xuICAgIHJlcS51c2VyID0gdXNlcjtcbiAgICBuZXh0KCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJlcy5zZW5kU3RhdHVzKDQwNCk7XG4gIH1cbn1cblxuXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlciA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7aWQsIG5ld0NvaG9ydCwgeWVhciwgY2l0eX0gPSByZXEucXVlcnlcbiAgbGV0IGNvaG9ydElEXG4gIFVzZXIuZmluZE9uZSh7X2lkIDogaWR9KS5sZWFuKCkudGhlbiggYXN5bmMgKHVzZXIpID0+IHtcblxuICAgIGF3YWl0IENvaG9ydC5maW5kKHtuYW1lIDogbmV3Q29ob3J0LCBsb2NhdGlvbiA6IGNpdHl9KS5sZWFuKCkuZXhlYygpLnRoZW4oIGNvaG9ydHMgPT4ge1xuICAgICAgY29ob3J0cy5tYXAoIChjb2hvcnQsIGkpID0+IHtcbiAgICAgICAgbGV0IGRhdGUgPSBjb2hvcnQuc3RhcnREYXRlO1xuICAgICAgICBpZiAoZGF0ZS5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCk9PT15ZWFyKXtcbiAgICAgICAgICBjb2hvcnRJRCA9IGNvaG9ydC5faWRcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICAgIGNvbnNvbGUubG9nIChgLS0tLS1gLCBjb2hvcnRJRClcbiAgICB1c2VyLmN1cnJlbnRDb2hvcnQgPSBjb2hvcnRJRFxuICAgIHVzZXIuY29ob3J0cy5wdXNoKGNvaG9ydElEKVxuICAgIFVzZXIuZmluZEJ5SWRBbmRVcGRhdGUoaWQsIHskc2V0IDoge2NvaG9ydHM6IHVzZXIuY29ob3J0cywgY3VycmVudENvaG9ydCA6IHVzZXIuY3VycmVudENvaG9ydH19KS50aGVuKCgpID0+IHJlcy5zZW5kKCkpLmNhdGNoKGUgPT4gcmVzLnNlbmRTdGF0dXMoNTAwKS5zZW5kKGUpKVxuICAgIFxuICB9KS5jYXRjaChlID0+IHJlcy5zZW5kU3RhdHVzKDUwMCkuc2VuZChlKSlcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "json",
        "data",
        "user",
        "getSpotterTeam",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "student",
        "role",
        "USER_ROLES",
        "STUDENT",
        "Cohort",
        "findById",
        "currentCohort",
        "exec",
        "cohort",
        "spotterTeam",
        "spotters",
        "find",
        "team",
        "students",
        "some",
        "_id",
        "equals",
        "s",
        "User",
        "$in",
        "populateCurrentUser",
        "next",
        "jwtData",
        "lean",
        "sendStatus",
        "updateUser",
        "query",
        "id",
        "newCohort",
        "year",
        "city",
        "cohortID",
        "findOne",
        "then",
        "name",
        "location",
        "cohorts",
        "map",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "push",
        "findByIdAndUpdate",
        "$set",
        "send",
        "catch",
        "e"
      ],
      "mappings": "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",
      "file": "user.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import {User, USER_ROLES} from '../models/user';\n\nimport Cohort from '../models/cohort';\nimport { getCohortByName } from '../controllers/cohort.controller'\nexport const getProfile = (req, res) => {\n  res.json({data: req.user});\n}\n\nexport const getSpotterTeam = student => new Promise(async (resolve, reject) =>{\n  console.log(student);\n  if(student.role !== USER_ROLES.STUDENT) {\n    // Spotters are implemented only for students\n    return resolve(null);\n  }\n  let cohort = await Cohort.findById(student.currentCohort).exec();\n  let spotterTeam = cohort.spotters.find(team => {\n    return team.students.some(s => student._id.equals(s));\n  });\n  if(spotterTeam == null) {\n    return resolve(null);\n  }\n  spotterTeam.students = await User.find({_id: {$in: spotterTeam.students}}, 'name profile.github.avatar_url profile.phone').exec();\n  resolve(spotterTeam);\n});\n\nexport const populateCurrentUser = async (req, res, next) => {\n  try {\n    const user = await User.findById(req.jwtData.user).lean().exec();\n    user.spotterTeam = await getSpotterTeam(user);\n    req.user = user;\n    next();\n  } catch (err) {\n    res.sendStatus(404);\n  }\n}\n\n\nexport const updateUser = (req, res) => {\n  const {id, newCohort, year, city} = req.query\n  let cohortID\n  User.findOne({_id : id}).lean().then( async (user) => {\n\n    await Cohort.find({name : newCohort, location : city}).lean().exec().then( cohorts => {\n      cohorts.map( (cohort, i) => {\n        let date = cohort.startDate;\n        if (date.getFullYear().toString()===year){\n          cohortID = cohort._id\n        }\n      })\n    })\n    console.log (`-----`, cohortID)\n    user.currentCohort = cohortID\n    user.cohorts.push(cohortID)\n    User.findByIdAndUpdate(id, {$set : {cohorts: user.cohorts, currentCohort : user.currentCohort}}).then(() => res.send()).catch(e => res.sendStatus(500).send(e))\n    \n  }).catch(e => res.sendStatus(500).send(e))\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/cohort.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/cohort.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/cohort.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.js",
      "sourceFileName": "cohort.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Cohort', new Schema({\n  startDate: { type: Date, required: true },\n  endDate: Date,\n  name: String,\n  program: { type: String, default: \"Exponent:Software\" },\n  location: { type: String, default: \"Hyderabad\" },\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }]\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwic3RhcnREYXRlIiwidHlwZSIsIkRhdGUiLCJyZXF1aXJlZCIsImVuZERhdGUiLCJuYW1lIiwiU3RyaW5nIiwicHJvZ3JhbSIsImRlZmF1bHQiLCJsb2NhdGlvbiIsInNwb3R0ZXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUYsTUFBSixDQUFXO0FBQ2pERyxhQUFXLEVBQUNDLE1BQUtDLElBQU4sRUFBWUMsVUFBUyxJQUFyQixFQURzQztBQUVqREMsV0FBU0YsSUFGd0M7QUFHakRHLFFBQU1DLE1BSDJDO0FBSWpEQyxXQUFTLEVBQUNOLE1BQUtLLE1BQU4sRUFBY0UsU0FBUSxtQkFBdEIsRUFKd0M7QUFLakRDLFlBQVUsRUFBQ1IsTUFBS0ssTUFBTixFQUFjRSxTQUFRLFdBQXRCLEVBTHVDO0FBTWpERSxZQUFVLENBQUM7QUFDVEMsY0FBVUwsTUFERDtBQUVUTSxjQUFVLENBQUM7QUFDVFgsWUFBTUosT0FBT2dCLEtBQVAsQ0FBYUMsUUFEVjtBQUVUQyxXQUFLO0FBRkksS0FBRDtBQUZELEdBQUQ7QUFOdUMsQ0FBWCxDQUF6QixDIiwiZmlsZSI6ImNvaG9ydC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ0NvaG9ydCcsIG5ldyBTY2hlbWEoe1xuICBzdGFydERhdGU6IHt0eXBlOkRhdGUsIHJlcXVpcmVkOnRydWV9LFxuICBlbmREYXRlOiBEYXRlLFxuICBuYW1lOiBTdHJpbmcsXG4gIHByb2dyYW06IHt0eXBlOlN0cmluZywgZGVmYXVsdDpcIkV4cG9uZW50OlNvZnR3YXJlXCJ9LFxuICBsb2NhdGlvbjoge3R5cGU6U3RyaW5nLCBkZWZhdWx0OlwiSHlkZXJhYmFkXCJ9LFxuICBzcG90dGVyczogW3tcbiAgICB0ZWFtTmFtZTogU3RyaW5nLFxuICAgIHN0dWRlbnRzOiBbe1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9XSxcbiAgfV0sXG59KSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "startDate",
        "type",
        "Date",
        "required",
        "endDate",
        "name",
        "String",
        "program",
        "default",
        "location",
        "spotters",
        "teamName",
        "students",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,QAAf,EAAyB,IAAIF,MAAJ,CAAW;AACjDG,aAAW,EAACC,MAAKC,IAAN,EAAYC,UAAS,IAArB,EADsC;AAEjDC,WAASF,IAFwC;AAGjDG,QAAMC,MAH2C;AAIjDC,WAAS,EAACN,MAAKK,MAAN,EAAcE,SAAQ,mBAAtB,EAJwC;AAKjDC,YAAU,EAACR,MAAKK,MAAN,EAAcE,SAAQ,WAAtB,EALuC;AAMjDE,YAAU,CAAC;AACTC,cAAUL,MADD;AAETM,cAAU,CAAC;AACTX,YAAMJ,OAAOgB,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFD,GAAD;AANuC,CAAX,CAAzB,C",
      "file": "cohort.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Cohort', new Schema({\n  startDate: {type:Date, required:true},\n  endDate: Date,\n  name: String,\n  program: {type:String, default:\"Exponent:Software\"},\n  location: {type:String, default:\"Hyderabad\"},\n  spotters: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n}));\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/cohort.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getCohortStudents"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortStudents",
                "local": "getCohortStudents"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "resetCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetCohortDays",
                "local": "resetCohortDays"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohorts",
            "getCohortByName",
            "getCohort",
            "createCohort",
            "updateCohort",
            "deleteCohort",
            "createSpotters",
            "populateCurrentCohorts",
            "resetSpotters"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohorts",
              "exported": "getCohorts"
            },
            {
              "kind": "local",
              "local": "getCohortByName",
              "exported": "getCohortByName"
            },
            {
              "kind": "local",
              "local": "getCohort",
              "exported": "getCohort"
            },
            {
              "kind": "local",
              "local": "createCohort",
              "exported": "createCohort"
            },
            {
              "kind": "local",
              "local": "updateCohort",
              "exported": "updateCohort"
            },
            {
              "kind": "local",
              "local": "deleteCohort",
              "exported": "deleteCohort"
            },
            {
              "kind": "local",
              "local": "createSpotters",
              "exported": "createSpotters"
            },
            {
              "kind": "local",
              "local": "populateCurrentCohorts",
              "exported": "populateCurrentCohorts"
            },
            {
              "kind": "local",
              "local": "resetSpotters",
              "exported": "resetSpotters"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/cohort.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/cohort.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.controller.js",
      "sourceFileName": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetSpotters = exports.populateCurrentCohorts = exports.createSpotters = exports.deleteCohort = exports.updateCohort = exports.createCohort = exports.getCohort = exports.getCohortByName = exports.getCohorts = undefined;\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _student = require('../controllers/student.controller');\n\nvar _day = require('../controllers/day.controller');\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getCohorts = exports.getCohorts = function getCohorts(req, res) {\n  _cohort2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortByName = exports.getCohortByName = function getCohortByName(req, res) {\n  var _req$query = req.query,\n      year = _req$query.year,\n      city = _req$query.city;\n\n  _cohort2.default.find({ name: req.params.cohortName, location: city }).lean().exec().then(function (cohorts) {\n    cohorts.map(function (cohort, i) {\n      var date = cohort.startDate;\n      if (date.getFullYear().toString() === year) {\n        (0, _student.getCohortStudents)(cohort).then(function (students) {\n          cohort.students = students;\n          res.json({ cohort: cohort });\n        });\n      }\n    });\n  }).catch(function (e) {\n    return res.status(500).send(e);\n  });\n};\n\nvar getCohort = exports.getCohort = function getCohort(req, res) {\n  _cohort2.default.findById(req.params.id).lean().exec().then(function (cohort) {\n    (0, _student.getCohortStudents)(cohort).then(function (students) {\n      cohort.students = students;\n      res.json({ cohort: cohort });\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createCohort = exports.createCohort = function createCohort(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      location = _req$body.location,\n      program = _req$body.program,\n      startDate = _req$body.startDate,\n      endDate = _req$body.endDate;\n\n  startDate = new Date(+startDate);\n  new _cohort2.default({ name: name, location: location, program: program, startDate: startDate, endDate: endDate }).save().then(function (data) {\n    (0, _day.resetCohortDays)(data).catch(function (e) {\n      \"Errored out in create all days\" + e;\n    }).then(function () {\n      return res.status(201).json({ data: data });\n    });\n  }).catch(function (err) {\n    return res.status(500).send({ err: err });\n  });\n};\n\nvar updateCohort = exports.updateCohort = function updateCohort(req, res) {\n  var _req$body2 = req.body,\n      location = _req$body2.location,\n      program = _req$body2.program,\n      startDate = _req$body2.startDate;\n\n  _cohort2.default.findByIdAndUpdate(req.params.id, { location: location, program: program, startDate: startDate }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteCohort = exports.deleteCohort = function deleteCohort(req, res) {\n  _cohort2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar createSpotters = exports.createSpotters = function createSpotters(cohort) {\n  return (0, _student.getCohortStudents)(cohort).then(function (students) {\n    students = students.map(function (s) {\n      return s._id;\n    });\n    var p = (0, _createChunks2.default)(students, 3);\n\n    for (var i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i - 1].students = p[i].students.concat(p[i - 1].students);\n        p.pop();\n      }\n    }\n    cohort.spotters = p;\n    return cohort.save();\n  });\n};\n\nvar populateCurrentCohorts = exports.populateCurrentCohorts = function populateCurrentCohorts() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return _cohort2.default.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  }).then(function (cohorts) {\n    //console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\");\n    var p = [];\n    for (var i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]));\n    }\n    return Promise.all(p);\n  }).catch(function (e) {\n    return console.log(\"Errored out in populateCurrentCohorts\" + e);\n  });\n};\n\nvar resetSpotters = exports.resetSpotters = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n\n            _cohort2.default.findById(req.params.cohort_id).then(function (cohort) {\n              return createSpotters(cohort);\n            }).then(function (cohort) {\n              res.send(cohort);\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function resetSpotters(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.controller.js"
      ],
      "names": [
        "getCohorts",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getCohortByName",
        "query",
        "year",
        "city",
        "name",
        "params",
        "cohortName",
        "location",
        "lean",
        "cohorts",
        "map",
        "cohort",
        "i",
        "date",
        "startDate",
        "getFullYear",
        "toString",
        "students",
        "e",
        "getCohort",
        "findById",
        "id",
        "createCohort",
        "body",
        "program",
        "endDate",
        "Date",
        "save",
        "updateCohort",
        "findByIdAndUpdate",
        "deleteCohort",
        "remove",
        "createSpotters",
        "s",
        "_id",
        "p",
        "length",
        "concat",
        "pop",
        "spotters",
        "populateCurrentCohorts",
        "today",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "console",
        "log",
        "push",
        "Promise",
        "all",
        "resetSpotters",
        "cohort_id",
        "sendStatus"
      ],
      "mappings": "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",
      "file": "cohort.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/cohort';\nimport {getCohortStudents} from '../controllers/student.controller';\nimport {resetCohortDays} from '../controllers/day.controller'\nimport createChunks from \"../util/createChunks\"\n\nexport const getCohorts = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortByName = (req, res) => {\n  let {year, city} = req.query\n  Resource.find({name : req.params.cohortName, location : city}).lean().exec().then( cohorts => {\n    cohorts.map( (cohort, i) => {\n      let date = cohort.startDate;\n      if (date.getFullYear().toString()===year){\n        getCohortStudents(cohort)\n        .then(students => {\n           cohort.students = students;\n          res.json({cohort})\n        })\n      }\n    })\n  }).catch(e => res.status(500).send(e))\n\n}\n\nexport const getCohort = (req, res) => {\n  Resource.findById(req.params.id).lean().exec()\n  .then(cohort => {\n    getCohortStudents(cohort)\n    .then(students => {\n      cohort.students = students;\n      res.json({cohort: cohort})\n    })\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createCohort = (req, res) => {\n  let {name, location, program, startDate, endDate} = req.body;\n  startDate = new Date(+startDate)\n  new Resource({name, location, program, startDate, endDate}).save()\n  .then(data => {\n    resetCohortDays(data).catch(e => {\"Errored out in create all days\" + e})\n  .then(() =>\n    res.status(201).json({data})\n    )\n  })\n  .catch(err => res.status(500).send({err}));\n}\n\nexport const updateCohort = (req, res) => {\n  const {location, program, startDate} = req.body;\n  Resource.findByIdAndUpdate(req.params.id, {location, program, startDate})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteCohort = (req, res) => {\n  Resource.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const createSpotters = (cohort) => {\n  return getCohortStudents(cohort).then((students) => {\n    students = students.map(s => s._id)\n    let p = createChunks(students, 3)\n\n    for (let i = 0; i < p.length; i++) {\n      if (p[i].students.length <= 1) {\n        p[i-1].students = p[i].students.concat(p[i - 1].students)\n        p.pop()\n      }\n    }\n    cohort.spotters = p\n    return cohort.save()\n    })\n  }\n\nexport const populateCurrentCohorts = () =>{\n  let today = new Date()\n  let tonight = new Date()\n\n  today.setHours(0)\n  today.setMinutes(0)\n  today.setSeconds(0)\n\n  tonight.setHours(23)\n  tonight.setMinutes(59)\n  tonight.setSeconds(59)\n\n  return Resource.find({\n    'startDate': {\n      '$gte': today,\n      '$lt': tonight\n    }\n  })\n  .then( cohorts => {//console.log(cohorts)\n    console.log(\"PopulateCurrentCohort\")\n    let p =[]\n    for (let i = 0; i < cohorts.length; i++) {\n      p.push(createSpotters(cohorts[i]))\n    }\n    return Promise.all(p)\n  })\n  .catch(e => console.log(\"Errored out in populateCurrentCohorts\" + e))\n\n} \n\nexport const resetSpotters = async (req, res) => {\n\n  Resource.findById(req.params.cohort_id)\n  .then(cohort => createSpotters(cohort))\n  .then(cohort => {\n    res.send(cohort);\n  })\n  .catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/student.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getCohortStudents",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getCohortStudents",
              "exported": "getCohortStudents"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/student.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/student.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.controller.js",
      "sourceFileName": "student.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getCohortStudents = undefined;\n\nvar _user = require('../models/user');\n\nvar getCohortStudents = exports.getCohortStudents = function getCohortStudents(cohort) {\n  return _user.Student.find({\n    currentCohort: cohort._id,\n    role: _user.USER_ROLES.STUDENT\n  }).exec();\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user.Student.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user.Student.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role,\n      cohorts = _req$body.cohorts,\n      currentCohort = _req$body.currentCohort;\n\n  new _user.Student({ name: name, email: email, profile: profile, role: role, cohorts: cohorts, currentCohort: currentCohort }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _user.Student.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user.Student.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRDb2hvcnRTdHVkZW50cyIsIlN0dWRlbnQiLCJmaW5kIiwiY3VycmVudENvaG9ydCIsImNvaG9ydCIsIl9pZCIsInJvbGUiLCJVU0VSX1JPTEVTIiwiU1RVREVOVCIsImV4ZWMiLCJnZXRBbGwiLCJyZXEiLCJyZXMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiYm9keSIsIm5hbWUiLCJlbWFpbCIsInByb2ZpbGUiLCJjb2hvcnRzIiwic2F2ZSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFTyxJQUFNQSxnREFBb0IsU0FBcEJBLGlCQUFvQjtBQUFBLFNBQVVDLGNBQVFDLElBQVIsQ0FBYTtBQUN0REMsbUJBQWVDLE9BQU9DLEdBRGdDO0FBRXREQyxVQUFNQyxpQkFBV0M7QUFGcUMsR0FBYixFQUd4Q0MsSUFId0MsRUFBVjtBQUFBLENBQTFCOztBQUtBLElBQU1DLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENYLGdCQUFRQyxJQUFSLEdBQWVPLElBQWYsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBUUQsSUFBSUUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDWCxnQkFBUW9CLFFBQVIsQ0FBaUJWLElBQUlXLE1BQUosQ0FBV0MsRUFBNUIsRUFBZ0NkLElBQWhDLEdBQ0NJLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLGtCQUMyQkQsSUFBSWMsSUFEL0I7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEtBRHFCLGFBQ3JCQSxLQURxQjtBQUFBLE1BQ2RDLE9BRGMsYUFDZEEsT0FEYztBQUFBLE1BQ0x0QixJQURLLGFBQ0xBLElBREs7QUFBQSxNQUNDdUIsT0FERCxhQUNDQSxPQUREO0FBQUEsTUFDVTFCLGFBRFYsYUFDVUEsYUFEVjs7QUFFbEMsTUFBSUYsYUFBSixDQUFZLEVBQUN5QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUE2QnVCLGdCQUE3QixFQUFzQzFCLDRCQUF0QyxFQUFaLEVBQWtFMkIsSUFBbEUsR0FDQ2pCLElBREQsQ0FDTSxnQkFBUTtBQUNaa0IsWUFBUUMsR0FBUixDQUFZLEVBQUNqQixVQUFELEVBQVo7QUFDQUgsUUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCLEVBQUNDLFVBQUQsRUFBckI7QUFBNkIsR0FIL0IsRUFJQ0MsS0FKRCxDQUlPO0FBQUEsV0FBT0osSUFBSUssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FKUDtBQUtELENBUE07O0FBU0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDdEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEMsTUFBTUcsT0FBT0osSUFBSWMsSUFBakI7QUFDQTtBQUNBeEIsZ0JBQVFpQyxpQkFBUixDQUEwQnZCLElBQUlXLE1BQUosQ0FBV0MsRUFBckMsRUFBeUNSLElBQXpDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFELElBQUlFLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWmUsWUFBUUMsR0FBUixDQUFZYixHQUFaO0FBQ0FQLFFBQUlLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsR0FBckI7QUFBMEIsR0FKNUI7QUFLRCxDQVJNOztBQVVBLElBQU1nQixnQ0FBWSxTQUFaQSxTQUFZLENBQUN4QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNyQ1gsZ0JBQVFtQyxNQUFSLENBQWUsRUFBQy9CLEtBQUlNLElBQUlXLE1BQUosQ0FBV0MsRUFBaEIsRUFBZixFQUFvQ2QsSUFBcEMsR0FDQ0ksSUFERCxDQUNNO0FBQUEsV0FBTUQsSUFBSXlCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNyQixLQUZELENBRU87QUFBQSxXQUFPSixJQUFJSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJzdHVkZW50LmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0dWRlbnQsIFVTRVJfUk9MRVN9IGZyb20gJy4uL21vZGVscy91c2VyJztcblxuZXhwb3J0IGNvbnN0IGdldENvaG9ydFN0dWRlbnRzID0gY29ob3J0ID0+IFN0dWRlbnQuZmluZCh7XG4gIGN1cnJlbnRDb2hvcnQ6IGNvaG9ydC5faWQsXG4gIHJvbGU6IFVTRVJfUk9MRVMuU1RVREVOVFxufSkuZXhlYygpO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIFN0dWRlbnQuZmluZCgpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgU3R1ZGVudC5maW5kQnlJZChyZXEucGFyYW1zLmlkKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHtuYW1lLCBlbWFpbCwgcHJvZmlsZSwgcm9sZSwgY29ob3J0cywgY3VycmVudENvaG9ydH0gPSByZXEuYm9keTtcbiAgbmV3IFN0dWRlbnQoe25hbWUsIGVtYWlsLCBwcm9maWxlLCByb2xlLCBjb2hvcnRzLCBjdXJyZW50Q29ob3J0fSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4ge1xuICAgIGNvbnNvbGUubG9nKHtkYXRhfSk7XG4gICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KX0pXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xuICAvLyB0b2RvOiBjaGVjayBpZiB0aGUgY3VycmVudENvaG9ydCBpcyB2YWxpZCBhbmQgdGhlbiBjb250aW51ZVxuICBTdHVkZW50LmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIGRhdGEpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgU3R1ZGVudC5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKCgpID0+IHJlcy5zZW5kU3RhdHVzKDIwNCkpICBcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.controller.js"
      ],
      "names": [
        "getCohortStudents",
        "Student",
        "find",
        "currentCohort",
        "cohort",
        "_id",
        "role",
        "USER_ROLES",
        "STUDENT",
        "exec",
        "getAll",
        "req",
        "res",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "name",
        "email",
        "profile",
        "cohorts",
        "save",
        "console",
        "log",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,IAAMA,gDAAoB,SAApBA,iBAAoB;AAAA,SAAUC,cAAQC,IAAR,CAAa;AACtDC,mBAAeC,OAAOC,GADgC;AAEtDC,UAAMC,iBAAWC;AAFqC,GAAb,EAGxCC,IAHwC,EAAV;AAAA,CAA1B;;AAKA,IAAMC,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQC,IAAR,GAAeO,IAAf,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACT,GAAD,EAAMC,GAAN,EAAc;AAClCX,gBAAQoB,QAAR,CAAiBV,IAAIW,MAAJ,CAAWC,EAA5B,EAAgCd,IAAhC,GACCI,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACb,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC2BD,IAAIc,IAD/B;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,KADqB,aACrBA,KADqB;AAAA,MACdC,OADc,aACdA,OADc;AAAA,MACLtB,IADK,aACLA,IADK;AAAA,MACCuB,OADD,aACCA,OADD;AAAA,MACU1B,aADV,aACUA,aADV;;AAElC,MAAIF,aAAJ,CAAY,EAACyB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAA6BuB,gBAA7B,EAAsC1B,4BAAtC,EAAZ,EAAkE2B,IAAlE,GACCjB,IADD,CACM,gBAAQ;AACZkB,YAAQC,GAAR,CAAY,EAACjB,UAAD,EAAZ;AACAH,QAAIK,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB;AAA6B,GAH/B,EAICC,KAJD,CAIO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAJP;AAKD,CAPM;;AASA,IAAMc,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAMG,OAAOJ,IAAIc,IAAjB;AACA;AACAxB,gBAAQiC,iBAAR,CAA0BvB,IAAIW,MAAJ,CAAWC,EAArC,EAAyCR,IAAzC,EACCF,IADD,CACM;AAAA,WAAQD,IAAIE,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZe,YAAQC,GAAR,CAAYb,GAAZ;AACAP,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMgB,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCX,gBAAQmC,MAAR,CAAe,EAAC/B,KAAIM,IAAIW,MAAJ,CAAWC,EAAhB,EAAf,EAAoCd,IAApC,GACCI,IADD,CACM;AAAA,WAAMD,IAAIyB,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "student.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import {Student, USER_ROLES} from '../models/user';\n\nexport const getCohortStudents = cohort => Student.find({\n  currentCohort: cohort._id,\n  role: USER_ROLES.STUDENT\n}).exec();\n\nexport const getAll = (req, res) => {\n  Student.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Student.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {name, email, profile, role, cohorts, currentCohort} = req.body;\n  new Student({name, email, profile, role, cohorts, currentCohort}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Student.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Student.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/day.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "extends",
        "slicedToArray",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/cohort",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Cohort"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../util/createChunks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "createChunks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "dayDetails",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "getCohortDays",
            "getCurrentDays",
            "getToday",
            "createDayPairs",
            "createCohortDays",
            "resetCohortDays",
            "addPromptToTimeline",
            "addContentToDay",
            "removePromptFromTimeline",
            "resetPairs",
            "resetDay"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "dayDetails",
              "exported": "dayDetails"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "getCohortDays",
              "exported": "getCohortDays"
            },
            {
              "kind": "local",
              "local": "getCurrentDays",
              "exported": "getCurrentDays"
            },
            {
              "kind": "local",
              "local": "getToday",
              "exported": "getToday"
            },
            {
              "kind": "local",
              "local": "createDayPairs",
              "exported": "createDayPairs"
            },
            {
              "kind": "local",
              "local": "createCohortDays",
              "exported": "createCohortDays"
            },
            {
              "kind": "local",
              "local": "resetCohortDays",
              "exported": "resetCohortDays"
            },
            {
              "kind": "local",
              "local": "addPromptToTimeline",
              "exported": "addPromptToTimeline"
            },
            {
              "kind": "local",
              "local": "addContentToDay",
              "exported": "addContentToDay"
            },
            {
              "kind": "local",
              "local": "removePromptFromTimeline",
              "exported": "removePromptFromTimeline"
            },
            {
              "kind": "local",
              "local": "resetPairs",
              "exported": "resetPairs"
            },
            {
              "kind": "local",
              "local": "resetDay",
              "exported": "resetDay"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/day.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/day.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.controller.js",
      "sourceFileName": "day.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetDay = exports.resetPairs = exports.removePromptFromTimeline = exports.addContentToDay = exports.addPromptToTimeline = exports.resetCohortDays = exports.createCohortDays = exports.createDayPairs = exports.getToday = exports.getCurrentDays = exports.getCohortDays = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.dayDetails = exports.getAll = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _cohort = require('../models/cohort');\n\nvar _cohort2 = _interopRequireDefault(_cohort);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _createChunks = require('../util/createChunks');\n\nvar _createChunks2 = _interopRequireDefault(_createChunks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _day2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar dayDetails = exports.dayDetails = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var dayNumber, cohortID;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dayNumber = req.params.dayNumber;\n            cohortID = req.query.cohortID;\n\n            _day2.default.find({ day: dayNumber, cohort: cohortID }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (day) {\n              res.json({ day: day });\n            }).catch(function (e) {\n              return res.status(500).send(e);\n            });\n\n          case 3:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function dayDetails(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _day2.default.findById(req.params.day_id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var data = req.body.data;\n\n  new _day2.default({ data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var phase = req.body.phase;\n\n  _day2.default.findByIdAndUpdate(req.params.day_id, phase).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _day2.default.remove({ id: req.params.id }).exec().then(function () {\n    return res.status(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getCohortDays = exports.getCohortDays = function getCohortDays(req, res) {\n  _day2.default.find({ cohort: req.params.cohort_id }).populate({\n    path: 'timeline.prompt',\n    populate: { path: 'pings' }\n  }).populate('pingpongs.ping').populate('pairs.students').exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar todayFilter = function todayFilter() {\n  var today = new Date();\n  var tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n};\n\nvar getCurrentDays = exports.getCurrentDays = function getCurrentDays() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _day2.default.find(_extends({}, filter, {\n    date: todayFilter()\n  })).exec();\n};\n\nvar getToday = exports.getToday = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$user, userId, cohort, date, day;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$user = req.user, userId = _req$user._id, cohort = _req$user.currentCohort;\n            date = todayFilter();\n            _context2.next = 5;\n            return _day2.default.findOne({ cohort: cohort, date: date }).populate('timeline.prompt').populate('pingpongs.to').populate('pingpongs.ping').populate('pairs.students').exec();\n\n          case 5:\n            day = _context2.sent;\n\n            // important: ObjectId is not string\n            day.pingpongs = day.pingpongs.filter(function (pp) {\n              return pp.by.equals(userId);\n            });\n            day.timeline = day.timeline.map(function (tl) {\n              var startTime = tl.startTime;\n              startTime.setDate(day.date.getDate());\n              startTime.setFullYear(day.date.getFullYear());\n              startTime.setMonth(day.date.getMonth());\n              return {\n                _id: tl._id,\n                prompt: tl.prompt,\n                startTime: startTime\n              };\n            });\n            res.send({ data: day });\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2['catch'](0);\n\n            console.log(\"Day not found\", _context2.t0);\n            res.sendStatus(404);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 11]]);\n  }));\n\n  return function getToday(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar createDayPairs = exports.createDayPairs = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(day) {\n    var students, p, i, _p;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _user2.default.find({\n              'currentCohort': day.cohort\n            }).exec();\n\n          case 2:\n            students = _context3.sent;\n\n            if (!day.data.find(function (x) {\n              return x.type == \"Milestone\";\n            })) {\n              _context3.next = 10;\n              break;\n            }\n\n            // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n            // students = students.map(s => s._id)\n            p = (0, _createChunks2.default)(students, 3);\n\n            for (i = 0; i < p.length; i++) {\n              if (p[i].students.length <= 1) {\n                p[i - 1].students = p[i].students.concat(p[i - 1].students);\n                p.pop();\n              }\n            }\n            day.pairs = p;\n            return _context3.abrupt('return', day);\n\n          case 10:\n\n            // students = students.map(s => s._id)\n            _p = (0, _createChunks2.default)(students, 2);\n\n            day.pairs = _p;\n            // day.save()\n            console.log(\"DAY PAIRS\");\n            return _context3.abrupt('return', day);\n\n          case 14:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  }));\n\n  return function createDayPairs(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getPhase = function getPhase(i) {\n  if (i < 10) return 'Week 0';\n  if (i < 39) return 'Core';\n  if (i < 67) return 'Focus';\n  if (i < 81) return 'Deep Focus';\n  if (i < 95) return 'Capstone Product';\n  return 'Career';\n};\n\nvar createDays = function createDays(cohortId, cohortStartDate, fromDay, count) {\n  count = +count;\n  var dayDate = new Date(cohortStartDate.getTime());\n  var allDays = [];\n  for (var i = fromDay; i < fromDay + count; i++) {\n\n    var dDate = new Date(dayDate.getTime());\n    dDate.setDate(dDate.getDate() + i);\n\n    var ms = dDate.getTime();\n    dDate.setHours(0);\n    dDate.setMinutes(1);\n\n    var day = new _day2.default({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline: []\n    }).save();\n    allDays.push(day);\n  }\n\n  return Promise.all(allDays);\n};\n\nvar createCohortDays = exports.createCohortDays = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _ref5, _ref6, latestDay, cohort, nextDay, days;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _day2.default.find({ cohort: req.params.cohort_id }).sort({ day: -1 }).limit(1);\n\n          case 3:\n            _ref5 = _context4.sent;\n            _ref6 = _slicedToArray(_ref5, 1);\n            latestDay = _ref6[0];\n            _context4.next = 8;\n            return _cohort2.default.findOne({ _id: req.params.cohort_id });\n\n          case 8:\n            cohort = _context4.sent;\n            nextDay = latestDay === null ? 1 : 1 + latestDay.day;\n            _context4.next = 12;\n            return createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n\n          case 12:\n            days = _context4.sent;\n\n            res.send(days);\n            _context4.next = 20;\n            break;\n\n          case 16:\n            _context4.prev = 16;\n            _context4.t0 = _context4['catch'](0);\n\n            console.error(_context4.t0);\n            res.sendStatus(404);\n\n          case 20:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined, [[0, 16]]);\n  }));\n\n  return function createCohortDays(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar resetCohortDays = exports.resetCohortDays = function resetCohortDays(_ref7) {\n  var _id = _ref7._id,\n      startDate = _ref7.startDate;\n\n  return createDays(_id, startDate, 1, 108);\n};\n\nvar addPromptToTimeline = exports.addPromptToTimeline = function addPromptToTimeline(req, res) {\n  var _req$body = req.body,\n      startTime = _req$body.startTime,\n      prompt = _req$body.prompt;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $push: { \"timeline\": { startTime: startTime, prompt: prompt } }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).populate({\n      path: 'timeline.prompt',\n      populate: { path: 'pings' }\n    }).populate('pairs.students').exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar addContentToDay = exports.addContentToDay = function addContentToDay(req, res) {\n  var data = req.body;\n  var day_id = req.params.day_id;\n\n  _day2.default.update({ _id: day_id }, {\n    $set: { 'data': data }\n  }).then(function (data) {\n    _day2.default.findById({ _id: day_id }).exec().then(function (data) {\n      res.json({ data: data });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar removePromptFromTimeline = exports.removePromptFromTimeline = function removePromptFromTimeline(req, res) {\n  var _req$params = req.params,\n      day_id = _req$params.day_id,\n      timeline_id = _req$params.timeline_id;\n\n  _day2.default.update({ '_id': day_id, 'timeline._id': timeline_id }, { $pull: { 'timeline': { _id: timeline_id } } }).then(function (data) {\n    res.json({ data: data });\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n};\n\nvar resetPairs = exports.resetPairs = function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _day2.default.findById(req.params.day_id).populate('pairs.students').exec();\n\n          case 3:\n            day = _context5.sent;\n            _context5.next = 6;\n            return createDayPairs(day);\n\n          case 6:\n            day = _context5.sent;\n\n            day.save();\n            data = day.pairs;\n\n            res.send({ data: data });\n            _context5.next = 15;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context5.stop();\n        }\n      }\n    }, _callee5, undefined, [[0, 12]]);\n  }));\n\n  return function resetPairs(_x9, _x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar resetDay = exports.resetDay = function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var replicate, day;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            replicate = req.body.replicate;\n            _context6.next = 3;\n            return _day2.default.findById(replicate);\n\n          case 3:\n            day = _context6.sent;\n\n            _day2.default.findByIdAndUpdate(req.params.day_id, { $set: {\n                timeline: day.timeline,\n                phase: day.phase,\n                data: day.data\n              } }, { new: true }).populate({\n              path: 'timeline.prompt',\n              populate: { path: 'pings' }\n            }).then(function (data) {\n              res.send({ data: data });\n            }).catch(function (err) {\n              res.sendStatus(500);\n            });\n\n          case 5:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined);\n  }));\n\n  return function resetDay(_x11, _x12) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Day",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "dayDetails",
        "dayNumber",
        "params",
        "cohortID",
        "query",
        "day",
        "cohort",
        "populate",
        "path",
        "e",
        "getOne",
        "findById",
        "day_id",
        "create",
        "body",
        "save",
        "update",
        "phase",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "id",
        "getCohortDays",
        "cohort_id",
        "todayFilter",
        "today",
        "Date",
        "tonight",
        "setHours",
        "setMinutes",
        "setSeconds",
        "$gte",
        "$lt",
        "getCurrentDays",
        "filter",
        "date",
        "getToday",
        "user",
        "userId",
        "_id",
        "currentCohort",
        "findOne",
        "pingpongs",
        "pp",
        "by",
        "equals",
        "timeline",
        "map",
        "startTime",
        "tl",
        "setDate",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "prompt",
        "console",
        "log",
        "sendStatus",
        "createDayPairs",
        "User",
        "students",
        "x",
        "type",
        "p",
        "i",
        "length",
        "concat",
        "pop",
        "pairs",
        "getPhase",
        "createDays",
        "cohortId",
        "cohortStartDate",
        "fromDay",
        "count",
        "dayDate",
        "getTime",
        "allDays",
        "dDate",
        "ms",
        "push",
        "Promise",
        "all",
        "createCohortDays",
        "sort",
        "limit",
        "latestDay",
        "Cohort",
        "nextDay",
        "startDate",
        "days",
        "error",
        "resetCohortDays",
        "addPromptToTimeline",
        "$push",
        "addContentToDay",
        "$set",
        "removePromptFromTimeline",
        "timeline_id",
        "$pull",
        "resetPairs",
        "resetDay",
        "replicate",
        "new"
      ],
      "mappings": "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",
      "file": "day.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Day from '../models/day';\nimport Cohort from '../models/cohort'\nimport User from \"../models/user\";\nimport createChunks from \"../util/createChunks\" \n\nexport const getAll = (req, res) => {\n  Day.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const dayDetails = async (req, res) => {\n  const {dayNumber} = req.params\n  let {cohortID} = req.query\n  Day.find({day : dayNumber, cohort : cohortID})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n    })\n  .populate('pingpongs.ping')\n  .populate('pairs.students')\n  .exec().then(day => {\n    res.json({day})\n  }).catch(e => res.status(500).send(e))\n}\n\nexport const getOne = (req, res) => {\n  Day.findById(req.params.day_id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {data} = req.body;\n  new Day({data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const {phase} = req.body;\n  Day.findByIdAndUpdate(req.params.day_id, phase)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Day.remove({id:req.params.id}).exec()\n  .then(() => res.status(204))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getCohortDays = (req, res) => {\n  Day.find({cohort:req.params.cohort_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n      })\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec()\n    .then(data => res.json({data}))\n    .catch(err => res.status(500).send(err));\n}\n\nconst todayFilter = () => {\n  const today = new Date();\n  const tonight = new Date();\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n\n  tonight.setHours(23);\n  tonight.setMinutes(59);\n  tonight.setSeconds(59);\n\n  return { $gte: today, $lt: tonight };\n}\n\n\nexport const getCurrentDays = (filter = {}) => {\n  return Day.find({\n    ...filter,\n    date: todayFilter()\n  }).exec();\n}\n\nexport const getToday = async (req, res) => {\n  try {\n    const {_id: userId, currentCohort: cohort} = req.user;\n    const date = todayFilter();\n    const day = await Day.findOne({cohort, date})\n    .populate('timeline.prompt')\n    .populate('pingpongs.to')\n    .populate('pingpongs.ping')\n    .populate('pairs.students')\n    .exec();\n      // important: ObjectId is not string\n    day.pingpongs = day.pingpongs.filter(pp => pp.by.equals(userId));\n    day.timeline = day.timeline.map(tl => {\n      let startTime = tl.startTime;\n      startTime.setDate(day.date.getDate());\n      startTime.setFullYear(day.date.getFullYear());\n      startTime.setMonth(day.date.getMonth());\n      return {\n        _id: tl._id,\n        prompt: tl.prompt,\n        startTime\n      }\n    })\n    res.send({data:day});\n  } catch (err) {\n    console.log(\"Day not found\", err);\n    res.sendStatus(404);\n  }\n}\n\nexport const createDayPairs = async (day) => { \n\n    let students = await User.find({\n      'currentCohort': day.cohort\n    }).exec()\n    \n    if(day.data.find(x=> x.type==\"Milestone\")) {\n      // THIS LINE WAS COMMENTED BECAUE IT WAS RETURNING AN ARRAY WITH OBJECTIDs BUT NOT AN ARRAY OF OBJECTS(which is required)\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 3)\n       for (let i = 0; i < p.length; i++) {\n         if (p[i].students.length <= 1) {\n           p[i-1].students = p[i].students.concat(p[i - 1].students)\n           p.pop()\n         }\n       }\n       day.pairs = p\n       return day \n    } else {\n\n      // students = students.map(s => s._id)\n      let p = createChunks(students, 2)  \n      day.pairs = p\n      // day.save()\n      console.log(\"DAY PAIRS\")\n      return day\n  }\n}\n\nconst getPhase = i => {\n  if(i<10) return 'Week 0';\n  if(i<39) return 'Core';\n  if(i<67) return 'Focus';\n  if(i<81) return 'Deep Focus';\n  if(i<95) return 'Capstone Product';\n  return 'Career';\n}\n\nconst createDays = (cohortId, cohortStartDate, fromDay, count) => {\n  count = +count;\n  let dayDate = new Date(cohortStartDate.getTime());\n  let allDays =[];\n  for (let i = fromDay; i < fromDay + count; i++) {\n\n      let dDate=new Date(dayDate.getTime());\n      dDate.setDate(dDate.getDate() + i);\n\n      let ms = dDate.getTime();\n      dDate.setHours(0)\n      dDate.setMinutes(1)\n\n      let day = new Day({\n      day: i,\n      date: dDate,\n      cohort: cohortId,\n      phase: getPhase(i),\n      timeline:[],\n    }).save()\n    allDays.push(day)\n  }\n\n  return Promise.all(allDays)\n}\n\nexport const createCohortDays = async (req, res) => {\n  try {\n    let [latestDay] = await Day.find({cohort : req.params.cohort_id}).sort({day : -1}).limit(1);\n    let cohort = await Cohort.findOne({_id : req.params.cohort_id});\n    let nextDay = latestDay === null ? 1 : (1 + latestDay.day);\n    let days = await createDays(cohort._id, cohort.startDate, nextDay, req.body.count);\n    res.send(days);\n  } catch(err) {\n    console.error(err);\n    res.sendStatus(404);\n  }\n\n}\n\nexport const resetCohortDays = ({_id, startDate}) => {\n  return createDays(_id, startDate, 1, 108);\n\n}\n\nexport const addPromptToTimeline = (req, res) => {\n  const {startTime, prompt} = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $push: {\"timeline\": {startTime, prompt}}\n  })\n  .then(data => {\n    Day.findById({_id: day_id})\n    .populate({\n      path:'timeline.prompt',\n      populate: {path: 'pings'}\n    })\n    .populate('pairs.students')\n    .exec()\n    .then( data => {\n       res.json({data})\n    }).catch(err => {\n      console.log(err);\n    })\n  })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const addContentToDay = (req, res) => {\n  const data = req.body;\n  const {day_id} = req.params;\n  Day.update({_id: day_id}, {\n    $set: {'data': data}\n  })\n  .then( data => {\n    Day.findById({_id: day_id})\n      .exec()\n      .then(data => {\n        res.json({data})\n       })\n      .catch(err => {\n        console.log(err);\n        })\n    })\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)\n  })\n}\n\nexport const removePromptFromTimeline = (req, res) => {\n  const {day_id, timeline_id} = req.params;\n  Day.update(\n    {'_id': day_id, 'timeline._id': timeline_id},\n    { $pull: { 'timeline': {_id: timeline_id} }}\n  )\n  .then( data => {\n    res.json({data})\n  })\n  .catch(err => {\n    res.status(500).send(err)\n  });\n}\n\nexport const resetPairs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id)\n    .populate('pairs.students')\n    .exec();\n    day = await createDayPairs(day);\n    day.save();\n    const data = day.pairs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport const resetDay = async (req, res) => {\n  const {replicate} = req.body;\n  const day = await Day.findById(replicate);\n  Day.findByIdAndUpdate(req.params.day_id, {$set : {\n    timeline: day.timeline,\n    phase: day.phase,\n    data: day.data,\n  }}, {new: true})\n  .populate({\n    path:'timeline.prompt',\n    populate: {path: 'pings'}\n  })\n  .then(data => {\n    res.send({data})\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/day.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/day.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/day.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.js",
      "sourceFileName": "day.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Day', new Schema({\n  date: {\n    type: Date\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort'\n    // required: true\n  },\n  phase: {\n    type: String\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }]\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZGVsIiwiZGF0ZSIsInR5cGUiLCJEYXRlIiwiZGF5IiwiTnVtYmVyIiwibWluIiwibWF4IiwiZGF0YSIsImNvaG9ydCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJwaGFzZSIsIlN0cmluZyIsInBhaXJzIiwidGVhbU5hbWUiLCJzdHVkZW50cyIsInRpbWVsaW5lIiwicHJvbXB0Iiwic3RhcnRUaW1lIiwiTWl4ZWQiLCJwaW5ncG9uZ3MiLCJ0cmlnZ2VyVGltZSIsImJ5IiwidG8iLCJwaW5nIiwicG9uZyIsImNvbGxlY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7SUFDT0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLEtBQWYsRUFBc0IsSUFBSUYsTUFBSixDQUFXO0FBQzlDRyxRQUFNO0FBQ0pDLFVBQU1DO0FBQ047QUFGSSxHQUR3QztBQUs5Q0MsT0FBSztBQUNIRixVQUFNRyxNQURIO0FBRUhDLFNBQUssQ0FGRjtBQUdIQyxTQUFLO0FBSEYsR0FMeUM7QUFVOUNDLFFBQU0sQ0FBQyxFQUFELENBVndDO0FBVzlDQyxVQUFRO0FBQ05QLFVBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxTQUFLO0FBQ0w7QUFITSxHQVhzQztBQWdCOUNDLFNBQU87QUFDTFgsVUFBTVk7QUFERCxHQWhCdUM7QUFtQjlDQyxTQUFPLENBQUM7QUFDTkMsY0FBVUYsTUFESjtBQUVORyxjQUFVLENBQUM7QUFDVGYsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURWO0FBRVRDLFdBQUs7QUFGSSxLQUFEO0FBRkosR0FBRCxDQW5CdUM7O0FBMkI5Q00sWUFBVSxDQUFDO0FBQ1RDLFlBQVE7QUFDTmpCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxXQUFLO0FBRkMsS0FEQztBQUtUUSxlQUFXakIsSUFMRjtBQU1USyxVQUFNVixPQUFPWSxLQUFQLENBQWFXO0FBTlYsR0FBRCxDQTNCb0M7O0FBb0M5Q0MsYUFBVyxDQUFDO0FBQ1ZDLGlCQUFhcEIsSUFESDtBQUVWcUIsUUFBSTtBQUNGdEIsWUFBTUosT0FBT1ksS0FBUCxDQUFhQyxRQURqQjtBQUVGQyxXQUFLO0FBRkgsS0FGTTtBQU1WYSxRQUFJO0FBQ0Z2QixZQUFNSixPQUFPWSxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFdBQUs7QUFGSCxLQU5NO0FBVVZjLFVBQU07QUFDSnhCLFlBQU1KLE9BQU9ZLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxXQUFLO0FBRkQsS0FWSTtBQWNWZSxVQUFNN0IsT0FBT1ksS0FBUCxDQUFhVztBQWRULEdBQUQ7O0FBcENtQyxDQUFYLEVBcURsQztBQUNETyxjQUFZO0FBRFgsQ0FyRGtDLENBQXRCLEMiLCJmaWxlIjoiZGF5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCB7U2NoZW1hfSA9IG1vbmdvb3NlO1xuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnRGF5JywgbmV3IFNjaGVtYSh7XG4gIGRhdGU6IHtcbiAgICB0eXBlOiBEYXRlLFxuICAgIC8vIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGRheToge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICBtaW46IDEsXG4gICAgbWF4OiA1MDBcbiAgfSxcbiAgZGF0YTogW3t9XSxcbiAgY29ob3J0OiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ0NvaG9ydCcsXG4gICAgLy8gcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgcGhhc2U6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gIH0sXG4gIHBhaXJzOiBbe1xuICAgIHRlYW1OYW1lOiBTdHJpbmcsXG4gICAgc3R1ZGVudHM6IFt7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH1dLFxuICB9XSxcblxuICB0aW1lbGluZTogW3tcbiAgICBwcm9tcHQ6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1Byb21wdCdcbiAgICB9LFxuICAgIHN0YXJ0VGltZTogRGF0ZSxcbiAgICBkYXRhOiBTY2hlbWEuVHlwZXMuTWl4ZWRcbiAgfV0sXG5cbiAgcGluZ3BvbmdzOiBbe1xuICAgIHRyaWdnZXJUaW1lOiBEYXRlLFxuICAgIGJ5OiB7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdVc2VyJ1xuICAgIH0sXG4gICAgdG86IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfSxcbiAgICBwaW5nOiB7XG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICByZWY6ICdQaW5nJ1xuICAgIH0sXG4gICAgcG9uZzogU2NoZW1hLlR5cGVzLk1peGVkXG4gIH1dXG5cbn0sIHtcbiAgY29sbGVjdGlvbjogJ2RheXMnXG59KSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "date",
        "type",
        "Date",
        "day",
        "Number",
        "min",
        "max",
        "data",
        "cohort",
        "Types",
        "ObjectId",
        "ref",
        "phase",
        "String",
        "pairs",
        "teamName",
        "students",
        "timeline",
        "prompt",
        "startTime",
        "Mixed",
        "pingpongs",
        "triggerTime",
        "by",
        "to",
        "ping",
        "pong",
        "collection"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,KAAf,EAAsB,IAAIF,MAAJ,CAAW;AAC9CG,QAAM;AACJC,UAAMC;AACN;AAFI,GADwC;AAK9CC,OAAK;AACHF,UAAMG,MADH;AAEHC,SAAK,CAFF;AAGHC,SAAK;AAHF,GALyC;AAU9CC,QAAM,CAAC,EAAD,CAVwC;AAW9CC,UAAQ;AACNP,UAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,SAAK;AACL;AAHM,GAXsC;AAgB9CC,SAAO;AACLX,UAAMY;AADD,GAhBuC;AAmB9CC,SAAO,CAAC;AACNC,cAAUF,MADJ;AAENG,cAAU,CAAC;AACTf,YAAMJ,OAAOY,KAAP,CAAaC,QADV;AAETC,WAAK;AAFI,KAAD;AAFJ,GAAD,CAnBuC;;AA2B9CM,YAAU,CAAC;AACTC,YAAQ;AACNjB,YAAMJ,OAAOY,KAAP,CAAaC,QADb;AAENC,WAAK;AAFC,KADC;AAKTQ,eAAWjB,IALF;AAMTK,UAAMV,OAAOY,KAAP,CAAaW;AANV,GAAD,CA3BoC;;AAoC9CC,aAAW,CAAC;AACVC,iBAAapB,IADH;AAEVqB,QAAI;AACFtB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KAFM;AAMVa,QAAI;AACFvB,YAAMJ,OAAOY,KAAP,CAAaC,QADjB;AAEFC,WAAK;AAFH,KANM;AAUVc,UAAM;AACJxB,YAAMJ,OAAOY,KAAP,CAAaC,QADf;AAEJC,WAAK;AAFD,KAVI;AAcVe,UAAM7B,OAAOY,KAAP,CAAaW;AAdT,GAAD;;AApCmC,CAAX,EAqDlC;AACDO,cAAY;AADX,CArDkC,CAAtB,C",
      "file": "day.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Day', new Schema({\n  date: {\n    type: Date,\n    // required: true\n  },\n  day: {\n    type: Number,\n    min: 1,\n    max: 500\n  },\n  data: [{}],\n  cohort: {\n    type: Schema.Types.ObjectId,\n    ref: 'Cohort',\n    // required: true\n  },\n  phase: {\n    type: String,\n  },\n  pairs: [{\n    teamName: String,\n    students: [{\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n  }],\n\n  timeline: [{\n    prompt: {\n      type: Schema.Types.ObjectId,\n      ref: 'Prompt'\n    },\n    startTime: Date,\n    data: Schema.Types.Mixed\n  }],\n\n  pingpongs: [{\n    triggerTime: Date,\n    by: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    ping: {\n      type: Schema.Types.ObjectId,\n      ref: 'Ping'\n    },\n    pong: Schema.Types.Mixed\n  }]\n\n}, {\n  collection: 'days'\n}));\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/createChunks.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/createChunks.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/createChunks.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createChunks.js",
      "sourceFileName": "createChunks.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createChunks"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (array, number) {\n  array = _lodash2.default.shuffle(array);\n  var chunks = _lodash2.default.chunk(array, number);\n  chunks = chunks.map(function (element) {\n    return {\n      teamName: _faker2.default.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element\n    };\n  });\n\n  return chunks;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUNodW5rcy5qcyJdLCJuYW1lcyI6WyJhcnJheSIsIm51bWJlciIsIl8iLCJzaHVmZmxlIiwiY2h1bmtzIiwiY2h1bmsiLCJtYXAiLCJlbGVtZW50IiwidGVhbU5hbWUiLCJmYWtlciIsImZha2UiLCJzdHVkZW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlLFVBQUNBLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUNoQ0QsVUFBUUUsaUJBQUVDLE9BQUYsQ0FBVUgsS0FBVixDQUFSO0FBQ0EsTUFBSUksU0FBU0YsaUJBQUVHLEtBQUYsQ0FBUUwsS0FBUixFQUFlQyxNQUFmLENBQWI7QUFDQUcsV0FBU0EsT0FBT0UsR0FBUCxDQUFXLFVBQUNDLE9BQUQsRUFBYTtBQUMvQixXQUFPO0FBQ0xDLGdCQUFVQyxnQkFBTUMsSUFBTixDQUFXLDRDQUFYLENBREw7QUFFTEMsZ0JBQVVKO0FBRkwsS0FBUDtBQUlELEdBTFEsQ0FBVDs7QUFPQSxTQUFPSCxNQUFQO0FBQ0QsQyIsImZpbGUiOiJjcmVhdGVDaHVua3MuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5leHBvcnQgZGVmYXVsdCAoYXJyYXksIG51bWJlcikgPT4ge1xuICBhcnJheSA9IF8uc2h1ZmZsZShhcnJheSk7XG4gIGxldCBjaHVua3MgPSBfLmNodW5rKGFycmF5LCBudW1iZXIpO1xuICBjaHVua3MgPSBjaHVua3MubWFwKChlbGVtZW50KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRlYW1OYW1lOiBmYWtlci5mYWtlKFwie3tjb21wYW55LmJzQWRqZWN0aXZlfX0te3tjb21wYW55LmJzTm91bn19XCIpLFxuICAgICAgc3R1ZGVudHM6IGVsZW1lbnQsXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiBjaHVua3M7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createChunks.js"
      ],
      "names": [
        "array",
        "number",
        "_",
        "shuffle",
        "chunks",
        "chunk",
        "map",
        "element",
        "teamName",
        "faker",
        "fake",
        "students"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,KAAD,EAAQC,MAAR,EAAmB;AAChCD,UAAQE,iBAAEC,OAAF,CAAUH,KAAV,CAAR;AACA,MAAII,SAASF,iBAAEG,KAAF,CAAQL,KAAR,EAAeC,MAAf,CAAb;AACAG,WAASA,OAAOE,GAAP,CAAW,UAACC,OAAD,EAAa;AAC/B,WAAO;AACLC,gBAAUC,gBAAMC,IAAN,CAAW,4CAAX,CADL;AAELC,gBAAUJ;AAFL,KAAP;AAID,GALQ,CAAT;;AAOA,SAAOH,MAAP;AACD,C",
      "file": "createChunks.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "sourcesContent": [
        "import faker from 'faker';\nimport _ from 'lodash';\n\nexport default (array, number) => {\n  array = _.shuffle(array);\n  let chunks = _.chunk(array, number);\n  chunks = chunks.map((element) => {\n    return {\n      teamName: faker.fake(\"{{company.bsAdjective}}-{{company.bsNoun}}\"),\n      students: element,\n    }\n  })\n\n  return chunks;\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/token.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "./authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          },
          {
            "source": "jsonwebtoken",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "jwt"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getSoalToken",
            "getFakeToken"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getSoalToken",
              "exported": "getSoalToken"
            },
            {
              "kind": "local",
              "local": "getFakeToken",
              "exported": "getFakeToken"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/token.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/token.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "token.js",
      "sourceFileName": "token.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "token"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFakeToken = exports.getSoalToken = undefined;\n\nvar _user = require('../models/user');\n\nvar _authScopes = require('./authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getScope = function getScope(user) {\n  switch (user.role) {\n    case _user.USER_ROLES.EDUCATOR:\n      return _authScopes2.default.EDUCATOR;\n    case _user.USER_ROLES.SUPERADMIN:\n      return _authScopes2.default.ALL;\n    default:\n      return _authScopes2.default.STUDENT;\n  }\n};\n\nvar getSoalToken = exports.getSoalToken = function getSoalToken(user) {\n  var githubToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return _jsonwebtoken2.default.sign({\n    user: user._id,\n    githubToken: githubToken,\n    scope: getScope(user)\n  }, process.env.JWT_SECRET);\n};\n\nvar getFakeToken = exports.getFakeToken = function getFakeToken() {\n  var fakeAdmin = {\n    _id: '234932498',\n    role: _user.USER_ROLES.SUPERADMIN\n  };\n  return getSoalToken(fakeAdmin);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuLmpzIl0sIm5hbWVzIjpbImdldFNjb3BlIiwidXNlciIsInJvbGUiLCJVU0VSX1JPTEVTIiwiRURVQ0FUT1IiLCJBVVRIX1NDT1BFUyIsIlNVUEVSQURNSU4iLCJBTEwiLCJTVFVERU5UIiwiZ2V0U29hbFRva2VuIiwiZ2l0aHViVG9rZW4iLCJqd3QiLCJzaWduIiwiX2lkIiwic2NvcGUiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImdldEZha2VUb2tlbiIsImZha2VBZG1pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFdBQVcsU0FBWEEsUUFBVyxPQUFRO0FBQ3ZCLFVBQU9DLEtBQUtDLElBQVo7QUFDRSxTQUFLQyxpQkFBV0MsUUFBaEI7QUFBMEIsYUFBT0MscUJBQVlELFFBQW5CO0FBQzFCLFNBQUtELGlCQUFXRyxVQUFoQjtBQUE0QixhQUFPRCxxQkFBWUUsR0FBbkI7QUFDNUI7QUFBUyxhQUFPRixxQkFBWUcsT0FBbkI7QUFIWDtBQUtELENBTkQ7O0FBUU8sSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxDQUFDUixJQUFEO0FBQUEsTUFBT1MsV0FBUCx1RUFBbUIsSUFBbkI7QUFBQSxTQUE0QkMsdUJBQUlDLElBQUosQ0FBUztBQUMvRFgsVUFBTUEsS0FBS1ksR0FEb0Q7QUFFL0RILDRCQUYrRDtBQUcvREksV0FBT2QsU0FBU0MsSUFBVDtBQUh3RCxHQUFULEVBSXJEYyxRQUFRQyxHQUFSLENBQVlDLFVBSnlDLENBQTVCO0FBQUEsQ0FBckI7O0FBT0EsSUFBTUMsc0NBQWUsU0FBZkEsWUFBZSxHQUFNO0FBQ2hDLE1BQU1DLFlBQVk7QUFDaEJOLFNBQUssV0FEVztBQUVoQlgsVUFBTUMsaUJBQVdHO0FBRkQsR0FBbEI7QUFJQSxTQUFPRyxhQUFhVSxTQUFiLENBQVA7QUFDRCxDQU5NIiwiZmlsZSI6InRva2VuLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1VTRVJfUk9MRVN9IGZyb20gJy4uL21vZGVscy91c2VyJztcbmltcG9ydCBBVVRIX1NDT1BFUyBmcm9tICcuL2F1dGhTY29wZXMnO1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuXG5jb25zdCBnZXRTY29wZSA9IHVzZXIgPT4ge1xuICBzd2l0Y2godXNlci5yb2xlKSB7XG4gICAgY2FzZSBVU0VSX1JPTEVTLkVEVUNBVE9SOiByZXR1cm4gQVVUSF9TQ09QRVMuRURVQ0FUT1I7XG4gICAgY2FzZSBVU0VSX1JPTEVTLlNVUEVSQURNSU46IHJldHVybiBBVVRIX1NDT1BFUy5BTEw7XG4gICAgZGVmYXVsdDogcmV0dXJuIEFVVEhfU0NPUEVTLlNUVURFTlQ7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdldFNvYWxUb2tlbiA9ICh1c2VyLCBnaXRodWJUb2tlbj1udWxsKSA9PiBqd3Quc2lnbih7XG4gIHVzZXI6IHVzZXIuX2lkLFxuICBnaXRodWJUb2tlbixcbiAgc2NvcGU6IGdldFNjb3BlKHVzZXIpLFxufSwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCk7XG5cblxuZXhwb3J0IGNvbnN0IGdldEZha2VUb2tlbiA9ICgpID0+IHtcbiAgY29uc3QgZmFrZUFkbWluID0ge1xuICAgIF9pZDogJzIzNDkzMjQ5OCcsXG4gICAgcm9sZTogVVNFUl9ST0xFUy5TVVBFUkFETUlOLFxuICB9XG4gIHJldHVybiBnZXRTb2FsVG9rZW4oZmFrZUFkbWluKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "token.js"
      ],
      "names": [
        "getScope",
        "user",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "AUTH_SCOPES",
        "SUPERADMIN",
        "ALL",
        "STUDENT",
        "getSoalToken",
        "githubToken",
        "jwt",
        "sign",
        "_id",
        "scope",
        "process",
        "env",
        "JWT_SECRET",
        "getFakeToken",
        "fakeAdmin"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,OAAQ;AACvB,UAAOC,KAAKC,IAAZ;AACE,SAAKC,iBAAWC,QAAhB;AAA0B,aAAOC,qBAAYD,QAAnB;AAC1B,SAAKD,iBAAWG,UAAhB;AAA4B,aAAOD,qBAAYE,GAAnB;AAC5B;AAAS,aAAOF,qBAAYG,OAAnB;AAHX;AAKD,CAND;;AAQO,IAAMC,sCAAe,SAAfA,YAAe,CAACR,IAAD;AAAA,MAAOS,WAAP,uEAAmB,IAAnB;AAAA,SAA4BC,uBAAIC,IAAJ,CAAS;AAC/DX,UAAMA,KAAKY,GADoD;AAE/DH,4BAF+D;AAG/DI,WAAOd,SAASC,IAAT;AAHwD,GAAT,EAIrDc,QAAQC,GAAR,CAAYC,UAJyC,CAA5B;AAAA,CAArB;;AAOA,IAAMC,sCAAe,SAAfA,YAAe,GAAM;AAChC,MAAMC,YAAY;AAChBN,SAAK,WADW;AAEhBX,UAAMC,iBAAWG;AAFD,GAAlB;AAIA,SAAOG,aAAaU,SAAb,CAAP;AACD,CANM",
      "file": "token.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "sourcesContent": [
        "import {USER_ROLES} from '../models/user';\nimport AUTH_SCOPES from './authScopes';\nimport jwt from 'jsonwebtoken';\n\nconst getScope = user => {\n  switch(user.role) {\n    case USER_ROLES.EDUCATOR: return AUTH_SCOPES.EDUCATOR;\n    case USER_ROLES.SUPERADMIN: return AUTH_SCOPES.ALL;\n    default: return AUTH_SCOPES.STUDENT;\n  }\n}\n\nexport const getSoalToken = (user, githubToken=null) => jwt.sign({\n  user: user._id,\n  githubToken,\n  scope: getScope(user),\n}, process.env.JWT_SECRET);\n\n\nexport const getFakeToken = () => {\n  const fakeAdmin = {\n    _id: '234932498',\n    role: USER_ROLES.SUPERADMIN,\n  }\n  return getSoalToken(fakeAdmin);\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/authScopes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/authScopes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/authScopes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "authScopes.js",
      "sourceFileName": "authScopes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "authScopes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhTY29wZXMuanMiXSwibmFtZXMiOlsiU1RVREVOVCIsIkVEVUNBVE9SIiwiU1VQRVJBRE1JTiIsIkFMTCJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQWU7QUFDYkEsV0FBUyxTQURJO0FBRWJDLFlBQVUsVUFGRztBQUdiQyxjQUFZLFlBSEM7QUFJYkMsT0FBSztBQUpRLEMiLCJmaWxlIjoiYXV0aFNjb3Blcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBTVFVERU5UOiAnc3R1ZGVudCcsXG4gIEVEVUNBVE9SOiAnZWR1Y2F0b3InLFxuICBTVVBFUkFETUlOOiAnc3VwZXJhZG1pbicsXG4gIEFMTDogJ2FsbCcsXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "authScopes.js"
      ],
      "names": [
        "STUDENT",
        "EDUCATOR",
        "SUPERADMIN",
        "ALL"
      ],
      "mappings": ";;;;;kBAAe;AACbA,WAAS,SADI;AAEbC,YAAU,UAFG;AAGbC,cAAY,YAHC;AAIbC,OAAK;AAJQ,C",
      "file": "authScopes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "sourcesContent": [
        "export default {\n  STUDENT: 'student',\n  EDUCATOR: 'educator',\n  SUPERADMIN: 'superadmin',\n  ALL: 'all',\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/cohort.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getCohortDays",
              "createCohortDays"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortDays",
                "local": "getCohortDays"
              },
              {
                "kind": "named",
                "imported": "createCohortDays",
                "local": "createCohortDays"
              }
            ]
          },
          {
            "source": "../controllers/cohort.controller",
            "imported": [
              "getCohortByName",
              "getCohorts",
              "getCohort",
              "createCohort",
              "updateCohort",
              "deleteCohort",
              "resetSpotters"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getCohortByName",
                "local": "getCohortByName"
              },
              {
                "kind": "named",
                "imported": "getCohorts",
                "local": "getCohorts"
              },
              {
                "kind": "named",
                "imported": "getCohort",
                "local": "getCohort"
              },
              {
                "kind": "named",
                "imported": "createCohort",
                "local": "createCohort"
              },
              {
                "kind": "named",
                "imported": "updateCohort",
                "local": "updateCohort"
              },
              {
                "kind": "named",
                "imported": "deleteCohort",
                "local": "deleteCohort"
              },
              {
                "kind": "named",
                "imported": "resetSpotters",
                "local": "resetSpotters"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/cohort.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/cohort.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cohort.routes.js",
      "sourceFileName": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cohort.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _cohort = require('../controllers/cohort.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', _cohort.getCohorts);\nrouter.get('/:cohortName', _cohort.getCohortByName);\nrouter.get('/id/:id', _cohort.getCohort);\nrouter.post('/', _cohort.createCohort);\nrouter.patch('/:id', _cohort.updateCohort);\nrouter.delete('/:id', _cohort.deleteCohort);\n\nrouter.get('/:cohort_id/days', _day.getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', _day.createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', _roles.allowSuperAdminOnly, _cohort.resetSpotters);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaG9ydC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldENvaG9ydHMiLCJnZXRDb2hvcnRCeU5hbWUiLCJnZXRDb2hvcnQiLCJwb3N0IiwiY3JlYXRlQ29ob3J0IiwicGF0Y2giLCJ1cGRhdGVDb2hvcnQiLCJkZWxldGUiLCJkZWxldGVDb2hvcnQiLCJnZXRDb2hvcnREYXlzIiwiY3JlYXRlQ29ob3J0RGF5cyIsImFsbG93U3VwZXJBZG1pbk9ubHkiLCJyZXNldFNwb3R0ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFHQTs7Ozs7O0FBTUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxrQkFBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGNBQVgsRUFBMkJFLHVCQUEzQjtBQUNBTCxPQUFPRyxHQUFQLENBQVcsU0FBWCxFQUFzQkcsaUJBQXRCO0FBQ0FOLE9BQU9PLElBQVAsQ0FBWSxHQUFaLEVBQWlCQyxvQkFBakI7QUFDQVIsT0FBT1MsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLG9CQUFyQjtBQUNBVixPQUFPVyxNQUFQLENBQWMsTUFBZCxFQUFzQkMsb0JBQXRCOztBQUVBWixPQUFPRyxHQUFQLENBQVcsa0JBQVgsRUFBK0JVLGtCQUEvQjtBQUNBOzs7Ozs7OztBQVFBYixPQUFPTyxJQUFQLENBQVksa0JBQVosRUFBZ0NPLHFCQUFoQzs7QUFFQWQsT0FBT1MsS0FBUCxDQUFhLDRCQUFiLEVBQTJDTSwwQkFBM0MsRUFBZ0VDLHFCQUFoRTs7a0JBRWVoQixNIiwiZmlsZSI6ImNvaG9ydC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyBnZXRDb2hvcnREYXlzLCBjcmVhdGVDb2hvcnREYXlzIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvZGF5LmNvbnRyb2xsZXInO1xuaW1wb3J0IHsgZ2V0Q29ob3J0QnlOYW1lLCBnZXRDb2hvcnRzLCBnZXRDb2hvcnQsIGNyZWF0ZUNvaG9ydCwgdXBkYXRlQ29ob3J0LCBkZWxldGVDb2hvcnQsIHJlc2V0U3BvdHRlcnMgfSBmcm9tICcuLi9jb250cm9sbGVycy9jb2hvcnQuY29udHJvbGxlcic7XG5pbXBvcnQgeyBhbGxvd1N1cGVyQWRtaW5Pbmx5IH0gZnJvbSAnLi4vY29udHJvbGxlcnMvcm9sZXMuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cblxuLyoqXG4gKiBAYXBpIHtnZXR9IC9jb2hvcnRzIEdldCBhbGwgY29ob3J0c1xuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIEdldENvaG9ydHNcbiAqIEBhcGlHcm91cCBDb2hvcnRcbiAqL1xucm91dGVyLmdldCgnLycsIGdldENvaG9ydHMpO1xucm91dGVyLmdldCgnLzpjb2hvcnROYW1lJywgZ2V0Q29ob3J0QnlOYW1lKTtcbnJvdXRlci5nZXQoJy9pZC86aWQnLCBnZXRDb2hvcnQpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGVDb2hvcnQpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlQ29ob3J0KTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVDb2hvcnQpO1xuXG5yb3V0ZXIuZ2V0KCcvOmNvaG9ydF9pZC9kYXlzJywgZ2V0Q29ob3J0RGF5cyk7XG4vKipcbiAqIEBhcGkge3Bvc3R9IC9jb2hvcnRzLzpjb2hvcnRfaWQvZGF5cyBBZGQgZGF5cyB0byBhbiBleGlzdGluZyBjb2hvcnRcbiAqIEBhcGlIZWFkZXIge1N0cmluZ30gYXV0aG9yaXphdGlvbiBKV1QgVG9rZW4uXG4gKiBAYXBpTmFtZSBFeHRlbmRDb2hvcnRcbiAqIEBhcGlHcm91cCBDb2hvcnRcbiAqXG4gKiBAYXBpUGFyYW0ge1N0cmluZ30gY291bnQgTnVtYmVyIG9mIGRheXMgdG8gYmUgYWRkZWQgdG8gdGhlIGNvaG9ydC5cbiAqL1xucm91dGVyLnBvc3QoJy86Y29ob3J0X2lkL2RheXMnLCBjcmVhdGVDb2hvcnREYXlzKTtcblxucm91dGVyLnBhdGNoKCcvOmNvaG9ydF9pZC9zcG90dGVycy9yZXNldCcsIGFsbG93U3VwZXJBZG1pbk9ubHksIHJlc2V0U3BvdHRlcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cohort.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getCohorts",
        "getCohortByName",
        "getCohort",
        "post",
        "createCohort",
        "patch",
        "updateCohort",
        "delete",
        "deleteCohort",
        "getCohortDays",
        "createCohortDays",
        "allowSuperAdminOnly",
        "resetSpotters"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAGA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,kBAAhB;AACAJ,OAAOG,GAAP,CAAW,cAAX,EAA2BE,uBAA3B;AACAL,OAAOG,GAAP,CAAW,SAAX,EAAsBG,iBAAtB;AACAN,OAAOO,IAAP,CAAY,GAAZ,EAAiBC,oBAAjB;AACAR,OAAOS,KAAP,CAAa,MAAb,EAAqBC,oBAArB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,oBAAtB;;AAEAZ,OAAOG,GAAP,CAAW,kBAAX,EAA+BU,kBAA/B;AACA;;;;;;;;AAQAb,OAAOO,IAAP,CAAY,kBAAZ,EAAgCO,qBAAhC;;AAEAd,OAAOS,KAAP,CAAa,4BAAb,EAA2CM,0BAA3C,EAAgEC,qBAAhE;;kBAEehB,M",
      "file": "cohort.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport { getCohortDays, createCohortDays } from '../controllers/day.controller';\nimport { getCohortByName, getCohorts, getCohort, createCohort, updateCohort, deleteCohort, resetSpotters } from '../controllers/cohort.controller';\nimport { allowSuperAdminOnly } from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\nrouter.get('/', getCohorts);\nrouter.get('/:cohortName', getCohortByName);\nrouter.get('/id/:id', getCohort);\nrouter.post('/', createCohort);\nrouter.patch('/:id', updateCohort);\nrouter.delete('/:id', deleteCohort);\n\nrouter.get('/:cohort_id/days', getCohortDays);\n/**\n * @api {post} /cohorts/:cohort_id/days Add days to an existing cohort\n * @apiHeader {String} authorization JWT Token.\n * @apiName ExtendCohort\n * @apiGroup Cohort\n *\n * @apiParam {String} count Number of days to be added to the cohort.\n */\nrouter.post('/:cohort_id/days', createCohortDays);\n\nrouter.patch('/:cohort_id/spotters/reset', allowSuperAdminOnly, resetSpotters);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/roles.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/authScopes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "AUTH_SCOPES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "allowSuperAdminOnly"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "allowSuperAdminOnly",
              "exported": "allowSuperAdminOnly"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/roles.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/roles.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "roles.controller.js",
      "sourceFileName": "roles.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "roles.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.allowSuperAdminOnly = undefined;\n\nvar _authScopes = require('../util/authScopes');\n\nvar _authScopes2 = _interopRequireDefault(_authScopes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Restrict students in these routes\nvar allowSuperAdminOnly = exports.allowSuperAdminOnly = function allowSuperAdminOnly(req, res, next) {\n  switch (req.jwtData.scope) {\n    case _authScopes2.default.ALL:\n    case _authScopes2.default.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGVzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiYWxsb3dTdXBlckFkbWluT25seSIsInJlcSIsInJlcyIsIm5leHQiLCJqd3REYXRhIiwic2NvcGUiLCJBVVRIX1NDT1BFUyIsIkFMTCIsIlNVUEVSQURNSU4iLCJzdGF0dXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztBQUVBO0FBQ08sSUFBTUEsb0RBQXNCLFNBQXRCQSxtQkFBc0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDckQsVUFBT0YsSUFBSUcsT0FBSixDQUFZQyxLQUFuQjtBQUNFLFNBQUtDLHFCQUFZQyxHQUFqQjtBQUNBLFNBQUtELHFCQUFZRSxVQUFqQjtBQUNFTDtBQUNBO0FBQ0Y7QUFDRUQsVUFBSU8sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLG1DQUFyQjtBQU5KO0FBUUQsQ0FUTSIsImZpbGUiOiJyb2xlcy5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFVVEhfU0NPUEVTIGZyb20gJy4uL3V0aWwvYXV0aFNjb3Blcyc7XG5cbi8vIFJlc3RyaWN0IHN0dWRlbnRzIGluIHRoZXNlIHJvdXRlc1xuZXhwb3J0IGNvbnN0IGFsbG93U3VwZXJBZG1pbk9ubHkgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgc3dpdGNoKHJlcS5qd3REYXRhLnNjb3BlKSB7XG4gICAgY2FzZSBBVVRIX1NDT1BFUy5BTEw6XG4gICAgY2FzZSBBVVRIX1NDT1BFUy5TVVBFUkFETUlOOlxuICAgICAgbmV4dCgpO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKCdZb3UgZG8gbm90IGhhdmUgYWRtaW4gcHJpdmlsZWdlcyEnKTtcbiAgfVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "roles.controller.js"
      ],
      "names": [
        "allowSuperAdminOnly",
        "req",
        "res",
        "next",
        "jwtData",
        "scope",
        "AUTH_SCOPES",
        "ALL",
        "SUPERADMIN",
        "status",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACO,IAAMA,oDAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrD,UAAOF,IAAIG,OAAJ,CAAYC,KAAnB;AACE,SAAKC,qBAAYC,GAAjB;AACA,SAAKD,qBAAYE,UAAjB;AACEL;AACA;AACF;AACED,UAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mCAArB;AANJ;AAQD,CATM",
      "file": "roles.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import AUTH_SCOPES from '../util/authScopes';\n\n// Restrict students in these routes\nexport const allowSuperAdminOnly = (req, res, next) => {\n  switch(req.jwtData.scope) {\n    case AUTH_SCOPES.ALL:\n    case AUTH_SCOPES.SUPERADMIN:\n      next();\n      break;\n    default:\n      res.status(403).send('You do not have admin privileges!');\n  }\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/educator.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/educator.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/educator.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/educator.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.routes.js",
      "sourceFileName": "educator.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _educator = require('../controllers/educator.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _educator.getAll);\nrouter.post('/', _educator.create);\nrouter.get('/:id', _educator.getOne);\nrouter.patch('/:id', _educator.update);\nrouter.delete('/:id', _educator.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwiZ2V0IiwiZ2V0QWxsIiwicG9zdCIsImNyZWF0ZSIsImdldE9uZSIsInBhdGNoIiwidXBkYXRlIiwiZGVsZXRlIiwiZGVsZXRlT25lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBU0Msa0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsT0FBT0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGdCQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsZ0JBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxnQkFBbkI7QUFDQVAsT0FBT1EsS0FBUCxDQUFhLE1BQWIsRUFBcUJDLGdCQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsbUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJlZHVjYXRvci5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9lZHVjYXRvci5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,gBAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,gBAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,gBAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,gBAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,mBAAtB;;kBAEeX,M",
      "file": "educator.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/educator.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/educator.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/educator.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/educator.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "educator.controller.js",
      "sourceFileName": "educator.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "educator.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _user2.default.find({ $or: [{ role: _user.USER_ROLES.EDUCATOR }, { role: _user.USER_ROLES.SUPERADMIN }] }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _user2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(req);\n  var _req$body = req.body,\n      name = _req$body.name,\n      email = _req$body.email,\n      profile = _req$body.profile,\n      role = _req$body.role;\n\n  new _user2.default({ name: name, email: email, profile: profile, role: role }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  _user2.default.findByIdAndUpdate(req.params.id).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _user2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkdWNhdG9yLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiZ2V0QWxsIiwicmVxIiwicmVzIiwiUmVzb3VyY2UiLCJmaW5kIiwiJG9yIiwicm9sZSIsIlVTRVJfUk9MRVMiLCJFRFVDQVRPUiIsIlNVUEVSQURNSU4iLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwibmFtZSIsImVtYWlsIiwicHJvZmlsZSIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsQ0FBYyxFQUFFQyxLQUFJLENBQUUsRUFBQ0MsTUFBTUMsaUJBQVdDLFFBQWxCLEVBQUYsRUFBK0IsRUFBQ0YsTUFBTUMsaUJBQVdFLFVBQWxCLEVBQS9CLENBQU4sRUFBZCxFQUFxRkMsSUFBckYsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVQsSUFBSVUsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPWixJQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNqQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNnQixRQUFULENBQWtCbEIsSUFBSW1CLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENxQixVQUFRQyxHQUFSLENBQVl2QixHQUFaO0FBRGtDLGtCQUVJQSxJQUFJd0IsSUFGUjtBQUFBLE1BRTNCQyxJQUYyQixhQUUzQkEsSUFGMkI7QUFBQSxNQUVyQkMsS0FGcUIsYUFFckJBLEtBRnFCO0FBQUEsTUFFZEMsT0FGYyxhQUVkQSxPQUZjO0FBQUEsTUFFTHRCLElBRkssYUFFTEEsSUFGSzs7QUFHbEMsTUFBSUgsY0FBSixDQUFhLEVBQUN1QixVQUFELEVBQU9DLFlBQVAsRUFBY0MsZ0JBQWQsRUFBdUJ0QixVQUF2QixFQUFiLEVBQTRDdUIsSUFBNUMsR0FDQ2xCLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlhLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQixFQUFDQyxVQUFELEVBQXJCLENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pTLFlBQVFDLEdBQVIsQ0FBWVAsR0FBWjtBQUNBZixRQUFJYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCO0FBQTBCLEdBSjVCO0FBS0QsQ0FSTTs7QUFVQSxJQUFNYSwwQkFBUyxTQUFUQSxNQUFTLENBQUM3QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVM0QixpQkFBVCxDQUEyQjlCLElBQUltQixNQUFKLENBQVdDLEVBQXRDLEVBQ0NWLElBREQsQ0FDTTtBQUFBLFdBQVFULElBQUlVLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTWUsZ0NBQVksU0FBWkEsU0FBWSxDQUFDL0IsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTOEIsTUFBVCxDQUFnQixFQUFDQyxLQUFJakMsSUFBSW1CLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1ULElBQUlpQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDckIsS0FGRCxDQUVPO0FBQUEsV0FBT1osSUFBSWEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoiZWR1Y2F0b3IuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSwgeyBVU0VSX1JPTEVTIH0gZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmQoeyAkb3I6WyB7cm9sZTogVVNFUl9ST0xFUy5FRFVDQVRPUn0sIHtyb2xlOiBVU0VSX1JPTEVTLlNVUEVSQURNSU59IF19KS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2cocmVxKVxuICBjb25zdCB7bmFtZSwgZW1haWwsIHByb2ZpbGUsIHJvbGUgfSA9IHJlcS5ib2R5O1xuICBuZXcgUmVzb3VyY2Uoe25hbWUsIGVtYWlsLCBwcm9maWxlLCByb2xlIH0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKX0pO1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKCgpID0+IHJlcy5zZW5kU3RhdHVzKDIwNCkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "educator.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "$or",
        "role",
        "USER_ROLES",
        "EDUCATOR",
        "SUPERADMIN",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "email",
        "profile",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,CAAc,EAAEC,KAAI,CAAE,EAACC,MAAMC,iBAAWC,QAAlB,EAAF,EAA+B,EAACF,MAAMC,iBAAWE,UAAlB,EAA/B,CAAN,EAAd,EAAqFC,IAArF,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACjB,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASgB,QAAT,CAAkBlB,IAAImB,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAACrB,GAAD,EAAMC,GAAN,EAAc;AAClCqB,UAAQC,GAAR,CAAYvB,GAAZ;AADkC,kBAEIA,IAAIwB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,KAFqB,aAErBA,KAFqB;AAAA,MAEdC,OAFc,aAEdA,OAFc;AAAA,MAELtB,IAFK,aAELA,IAFK;;AAGlC,MAAIH,cAAJ,CAAa,EAACuB,UAAD,EAAOC,YAAP,EAAcC,gBAAd,EAAuBtB,UAAvB,EAAb,EAA4CuB,IAA5C,GACClB,IADD,CACM;AAAA,WAAQT,IAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAf,QAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CARM;;AAUA,IAAMa,0BAAS,SAATA,MAAS,CAAC7B,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAAS4B,iBAAT,CAA2B9B,IAAImB,MAAJ,CAAWC,EAAtC,EACCV,IADD,CACM;AAAA,WAAQT,IAAIU,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMe,gCAAY,SAAZA,SAAY,CAAC/B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS8B,MAAT,CAAgB,EAACC,KAAIjC,IAAImB,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMT,IAAIiC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECrB,KAFD,CAEO;AAAA,WAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "educator.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource, { USER_ROLES } from '../models/user';\n\nexport const getAll = (req, res) => {\n  Resource.find({ $or:[ {role: USER_ROLES.EDUCATOR}, {role: USER_ROLES.SUPERADMIN} ]}).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(req)\n  const {name, email, profile, role } = req.body;\n  new Resource({name, email, profile, role }).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  Resource.findByIdAndUpdate(req.params.id)\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/student.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/student.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/student.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/student.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "student.routes.js",
      "sourceFileName": "student.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "student.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _student = require('../controllers/student.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _student.getAll);\nrouter.post('/', _student.create);\nrouter.get('/:id', _student.getOne);\nrouter.patch('/:id', _student.update);\nrouter.delete('/:id', _student.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsZUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLGVBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxlQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsZUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGtCQUF0Qjs7a0JBRWVYLE0iLCJmaWxlIjoic3R1ZGVudC5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge2dldEFsbCwgZ2V0T25lLCBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlT25lfSBmcm9tICcuLi9jb250cm9sbGVycy9zdHVkZW50LmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "student.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,eAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,eAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,eAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,eAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,kBAAtB;;kBAEeX,M",
      "file": "student.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/student.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/prompt.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/prompt.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/prompt.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/prompt.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.routes.js",
      "sourceFileName": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _prompt = require('../controllers/prompt.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _prompt.getAll);\nrouter.post('/', _prompt.create);\nrouter.get('/:id', _prompt.getOne);\nrouter.patch('/:id', _prompt.update);\nrouter.delete('/:id', _prompt.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsInBvc3QiLCJjcmVhdGUiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImRlbGV0ZSIsImRlbGV0ZU9uZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxjQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsY0FBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLGNBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxjQUFyQjtBQUNBVCxPQUFPVSxNQUFQLENBQWMsTUFBZCxFQUFzQkMsaUJBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwcm9tcHQucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcHJvbXB0LmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,cAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,cAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,cAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,cAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,iBAAtB;;kBAEeX,M",
      "file": "prompt.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/prompt.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/prompt.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/prompt.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/prompt.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.controller.js",
      "sourceFileName": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _prompt = require(\"../models/prompt\");\n\nvar _prompt2 = _interopRequireDefault(_prompt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _prompt2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _prompt2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Prompt\");\n  var _req$body = req.body,\n      name = _req$body.name,\n      duration = _req$body.duration,\n      pings = _req$body.pings,\n      type = _req$body.type;\n\n  console.log(req);\n  new _prompt2.default({ name: name, duration: duration, pings: pings, type: type }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      name = _req$body2.name,\n      type = _req$body2.type,\n      duration = _req$body2.duration,\n      pings = _req$body2.pings,\n      tags = _req$body2.tags;\n\n  _prompt2.default.findByIdAndUpdate(req.params.id, { name: name, type: type, duration: duration, pings: pings, tags: tags }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _prompt2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.sendStatus(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldEFsbCIsInJlcSIsInJlcyIsIlJlc291cmNlIiwiZmluZCIsImV4ZWMiLCJ0aGVuIiwianNvbiIsImRhdGEiLCJjYXRjaCIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJnZXRPbmUiLCJmaW5kQnlJZCIsInBhcmFtcyIsImlkIiwiY3JlYXRlIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJuYW1lIiwiZHVyYXRpb24iLCJwaW5ncyIsInR5cGUiLCJzYXZlIiwidXBkYXRlIiwidGFncyIsImZpbmRCeUlkQW5kVXBkYXRlIiwiZGVsZXRlT25lIiwicmVtb3ZlIiwiX2lkIiwic2VuZFN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFTyxJQUFNQSwwQkFBUyxTQUFUQSxNQUFTLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU0MsSUFBVCxHQUFnQkMsSUFBaEIsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNQywwQkFBUyxTQUFUQSxNQUFTLENBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQyxtQkFBU1csUUFBVCxDQUFrQmIsSUFBSWMsTUFBSixDQUFXQyxFQUE3QixFQUFpQ1gsSUFBakMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUUosSUFBSUssSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTTs7QUFNQSxJQUFNSywwQkFBUyxTQUFUQSxNQUFTLENBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ2dCLFVBQVFDLEdBQVIsQ0FBWSxrQkFBWjtBQURrQyxrQkFFSWxCLElBQUltQixJQUZSO0FBQUEsTUFFM0JDLElBRjJCLGFBRTNCQSxJQUYyQjtBQUFBLE1BRXJCQyxRQUZxQixhQUVyQkEsUUFGcUI7QUFBQSxNQUVYQyxLQUZXLGFBRVhBLEtBRlc7QUFBQSxNQUVKQyxJQUZJLGFBRUpBLElBRkk7O0FBR2xDTixVQUFRQyxHQUFSLENBQVlsQixHQUFaO0FBQ0EsTUFBSUUsZ0JBQUosQ0FBYSxFQUFDa0IsVUFBRCxFQUFPQyxrQkFBUCxFQUFpQkMsWUFBakIsRUFBd0JDLFVBQXhCLEVBQWIsRUFBNENDLElBQTVDLEdBQ0NuQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU8sZUFBTztBQUNaUyxZQUFRQyxHQUFSLENBQVlQLEdBQVo7QUFDQVYsUUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQjtBQUEwQixHQUo1QjtBQUtELENBVE07O0FBV0EsSUFBTWMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDekIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxtQkFDWUQsSUFBSW1CLElBRGhCO0FBQUEsTUFDMUJDLElBRDBCLGNBQzFCQSxJQUQwQjtBQUFBLE1BQ3BCRyxJQURvQixjQUNwQkEsSUFEb0I7QUFBQSxNQUNkRixRQURjLGNBQ2RBLFFBRGM7QUFBQSxNQUNKQyxLQURJLGNBQ0pBLEtBREk7QUFBQSxNQUNHSSxJQURILGNBQ0dBLElBREg7O0FBRWxDeEIsbUJBQVN5QixpQkFBVCxDQUEyQjNCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUssVUFBRixFQUFRRyxVQUFSLEVBQWNGLGtCQUFkLEVBQXdCQyxZQUF4QixFQUErQkksVUFBL0IsRUFBMUMsRUFDQ3JCLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWlCLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzVCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxtQkFBUzJCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSTlCLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUk4QixVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDdkIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSThCLFVBQUosQ0FBZSxHQUFmLEVBQW9CckIsSUFBcEIsQ0FBeUJDLEdBQXpCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwcm9tcHQuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZSBmcm9tICcuLi9tb2RlbHMvcHJvbXB0JztcblxuZXhwb3J0IGNvbnN0IGdldEFsbCA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5maW5kKCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldE9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5maW5kQnlJZChyZXEucGFyYW1zLmlkKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiSW4gY3JlYXRlIFByb21wdFwiKVxuICBjb25zdCB7bmFtZSwgZHVyYXRpb24sIHBpbmdzLCB0eXBlfSA9IHJlcS5ib2R5O1xuICBjb25zb2xlLmxvZyhyZXEpO1xuICBuZXcgUmVzb3VyY2Uoe25hbWUsIGR1cmF0aW9uLCBwaW5ncywgdHlwZX0pLnNhdmUoKVxuICAudGhlbihkYXRhID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyBuYW1lLCB0eXBlLCBkdXJhdGlvbiwgcGluZ3MsIHRhZ3MgfSA9IHJlcS5ib2R5O1xuICBSZXNvdXJjZS5maW5kQnlJZEFuZFVwZGF0ZShyZXEucGFyYW1zLmlkLCB7IG5hbWUsIHR5cGUsIGR1cmF0aW9uLCBwaW5ncywgdGFncyB9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UucmVtb3ZlKHtfaWQ6cmVxLnBhcmFtcy5pZH0pLmV4ZWMoKVxuICAudGhlbigoKSA9PiByZXMuc2VuZFN0YXR1cygyMDQpKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zZW5kU3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "name",
        "duration",
        "pings",
        "type",
        "save",
        "update",
        "tags",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,mBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClCgB,UAAQC,GAAR,CAAY,kBAAZ;AADkC,kBAEIlB,IAAImB,IAFR;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,QAFqB,aAErBA,QAFqB;AAAA,MAEXC,KAFW,aAEXA,KAFW;AAAA,MAEJC,IAFI,aAEJA,IAFI;;AAGlCN,UAAQC,GAAR,CAAYlB,GAAZ;AACA,MAAIE,gBAAJ,CAAa,EAACkB,UAAD,EAAOC,kBAAP,EAAiBC,YAAjB,EAAwBC,UAAxB,EAAb,EAA4CC,IAA5C,GACCnB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO,eAAO;AACZS,YAAQC,GAAR,CAAYP,GAAZ;AACAV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB;AAA0B,GAJ5B;AAKD,CATM;;AAWA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACYD,IAAImB,IADhB;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBG,IADoB,cACpBA,IADoB;AAAA,MACdF,QADc,cACdA,QADc;AAAA,MACJC,KADI,cACJA,KADI;AAAA,MACGI,IADH,cACGA,IADH;;AAElCxB,mBAASyB,iBAAT,CAA2B3B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEK,UAAF,EAAQG,UAAR,EAAcF,kBAAd,EAAwBC,YAAxB,EAA+BI,UAA/B,EAA1C,EACCrB,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMiB,gCAAY,SAAZA,SAAY,CAAC5B,GAAD,EAAMC,GAAN,EAAc;AACrCC,mBAAS2B,MAAT,CAAgB,EAACC,KAAI9B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI8B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECvB,KAFD,CAEO;AAAA,WAAOP,IAAI8B,UAAJ,CAAe,GAAf,EAAoBrB,IAApB,CAAyBC,GAAzB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "prompt.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/prompt';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Prompt\")\n  const {name, duration, pings, type} = req.body;\n  console.log(req);\n  new Resource({name, duration, pings, type}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const { name, type, duration, pings, tags } = req.body;\n  Resource.findByIdAndUpdate(req.params.id, { name, type, duration, pings, tags })\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.sendStatus(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/prompt.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/prompt.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/prompt.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "prompt.js",
      "sourceFileName": "prompt.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "prompt"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nmodule.exports = _mongoose2.default.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping'\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21wdC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkdXJhdGlvbiIsIk51bWJlciIsInRhZ3MiLCJwaW5ncyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJkYXRhIiwiTWl4ZWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQRSxPQUFPQyxPQUFQLEdBQWlCRixtQkFBU0csS0FBVCxDQUFlLFFBQWYsRUFBeUIsSUFBSUosTUFBSixDQUFXO0FBQ25ESyxRQUFNO0FBQ0pDLFVBQU1DLE1BREY7QUFFSkMsY0FBVTtBQUZOLEdBRDZDO0FBS25EQyxZQUFVQyxNQUx5QyxFQUtqQztBQUNsQkMsUUFBTSxDQUFDSixNQUFELENBTjZDO0FBT25ESyxTQUFPLENBQUM7QUFDTk4sVUFBTU4sT0FBT2EsS0FBUCxDQUFhQyxRQURiO0FBRU5DLFNBQUs7QUFGQyxHQUFELENBUDRDO0FBV25EVCxRQUFNQyxNQVg2QztBQVluRFMsUUFBTWhCLE9BQU9hLEtBQVAsQ0FBYUk7QUFaZ0MsQ0FBWCxDQUF6QixDQUFqQiIsImZpbGUiOiJwcm9tcHQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5cbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ1Byb21wdCcsIG5ldyBTY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGR1cmF0aW9uOiBOdW1iZXIsIC8vIGluIE1pbnV0ZXNcbiAgdGFnczogW1N0cmluZ10sXG4gIHBpbmdzOiBbe1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdQaW5nJyxcbiAgfV0sXG4gIHR5cGU6IFN0cmluZyxcbiAgZGF0YTogU2NoZW1hLlR5cGVzLk1peGVkXG59KSk7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "prompt.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "module",
        "exports",
        "model",
        "name",
        "type",
        "String",
        "required",
        "duration",
        "Number",
        "tags",
        "pings",
        "Types",
        "ObjectId",
        "ref",
        "data",
        "Mixed"
      ],
      "mappings": ";;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEPE,OAAOC,OAAP,GAAiBF,mBAASG,KAAT,CAAe,QAAf,EAAyB,IAAIJ,MAAJ,CAAW;AACnDK,QAAM;AACJC,UAAMC,MADF;AAEJC,cAAU;AAFN,GAD6C;AAKnDC,YAAUC,MALyC,EAKjC;AAClBC,QAAM,CAACJ,MAAD,CAN6C;AAOnDK,SAAO,CAAC;AACNN,UAAMN,OAAOa,KAAP,CAAaC,QADb;AAENC,SAAK;AAFC,GAAD,CAP4C;AAWnDT,QAAMC,MAX6C;AAYnDS,QAAMhB,OAAOa,KAAP,CAAaI;AAZgC,CAAX,CAAzB,CAAjB",
      "file": "prompt.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nmodule.exports = mongoose.model('Prompt', new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  duration: Number, // in Minutes\n  tags: [String],\n  pings: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Ping',\n  }],\n  type: String,\n  data: Schema.Types.Mixed\n}));"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/ping.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/ping.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/ping.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/ping.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.routes.js",
      "sourceFileName": "ping.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _ping = require('../controllers/ping.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _ping.getAll);\nrouter.post('/', _ping.create);\nrouter.get('/:id', _ping.getOne);\nrouter.patch('/:id', _ping.update);\nrouter.delete('/:id', _ping.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJwaW5nLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3BpbmcuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "ping.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/ping.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/ping.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/ping",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/ping.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/ping.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.controller.js",
      "sourceFileName": "ping.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _ping = require('../models/ping');\n\nvar _ping2 = _interopRequireDefault(_ping);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _ping2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _ping2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      type = _req$body.type,\n      ttl = _req$body.ttl,\n      tags = _req$body.tags,\n      data = _req$body.data;\n\n  new _ping2.default({ type: type, ttl: ttl, tags: tags, data: data }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      type = _req$body2.type,\n      ttl = _req$body2.ttl,\n      tags = _req$body2.tags,\n      data = _req$body2.data;\n\n  _ping2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _ping2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImJvZHkiLCJ0eXBlIiwidHRsIiwidGFncyIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxrQkFDRkQsSUFBSWlCLElBREY7QUFBQSxNQUMzQkMsSUFEMkIsYUFDM0JBLElBRDJCO0FBQUEsTUFDckJDLEdBRHFCLGFBQ3JCQSxHQURxQjtBQUFBLE1BQ2hCQyxJQURnQixhQUNoQkEsSUFEZ0I7QUFBQSxNQUNWYixJQURVLGFBQ1ZBLElBRFU7O0FBRWxDLE1BQUlMLGNBQUosQ0FBYSxFQUFDZ0IsVUFBRCxFQUFPQyxRQUFQLEVBQVlDLFVBQVosRUFBa0JiLFVBQWxCLEVBQWIsRUFBc0NjLElBQXRDLEdBQ0NoQixJQURELENBQ007QUFBQSxXQUFRSixJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsRUFBQ0MsVUFBRCxFQUFyQixDQUFSO0FBQUEsR0FETixFQUVDQyxLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FMTTs7QUFPQSxJQUFNVywwQkFBUyxTQUFUQSxNQUFTLENBQUN0QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLG1CQUNERCxJQUFJaUIsSUFESDtBQUFBLE1BQzFCQyxJQUQwQixjQUMxQkEsSUFEMEI7QUFBQSxNQUNwQkMsR0FEb0IsY0FDcEJBLEdBRG9CO0FBQUEsTUFDZkMsSUFEZSxjQUNmQSxJQURlO0FBQUEsTUFDVGIsSUFEUyxjQUNUQSxJQURTOztBQUVsQ0wsaUJBQVNxQixpQkFBVCxDQUEyQnZCLElBQUljLE1BQUosQ0FBV0MsRUFBdEMsRUFBMEMsRUFBRUcsVUFBRixFQUFRQyxRQUFSLEVBQWFDLFVBQWIsRUFBbUJiLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTWEsZ0NBQVksU0FBWkEsU0FBWSxDQUFDeEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckNDLGlCQUFTdUIsTUFBVCxDQUFnQixFQUFDQyxLQUFJMUIsSUFBSWMsTUFBSixDQUFXQyxFQUFoQixFQUFoQixFQUFxQ1gsSUFBckMsR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBTUosSUFBSTBCLFVBQUosQ0FBZSxHQUFmLENBQU47QUFBQSxHQUROLEVBRUNuQixLQUZELENBRU87QUFBQSxXQUFPUCxJQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFBQSxHQUZQO0FBR0QsQ0FKTSIsImZpbGUiOiJwaW5nLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVzb3VyY2UgZnJvbSAnLi4vbW9kZWxzL3BpbmcnO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge3R5cGUsIHR0bCwgdGFncywgZGF0YX0gPSByZXEuYm9keTtcbiAgbmV3IFJlc291cmNlKHt0eXBlLCB0dGwsIHRhZ3MsIGRhdGF9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdHlwZSwgdHRsLCB0YWdzLCBkYXRhfSA9IHJlcS5ib2R5XG4gIFJlc291cmNlLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHsgdHlwZSwgdHRsLCB0YWdzLCBkYXRhfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLnJlbW92ZSh7X2lkOnJlcS5wYXJhbXMuaWR9KS5leGVjKClcbiAgLnRoZW4oKCkgPT4gcmVzLnNlbmRTdGF0dXMoMjA0KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "body",
        "type",
        "ttl",
        "tags",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACFD,IAAIiB,IADF;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,GADqB,aACrBA,GADqB;AAAA,MAChBC,IADgB,aAChBA,IADgB;AAAA,MACVb,IADU,aACVA,IADU;;AAElC,MAAIL,cAAJ,CAAa,EAACgB,UAAD,EAAOC,QAAP,EAAYC,UAAZ,EAAkBb,UAAlB,EAAb,EAAsCc,IAAtC,GACChB,IADD,CACM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACC,UAAD,EAArB,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMW,0BAAS,SAATA,MAAS,CAACtB,GAAD,EAAMC,GAAN,EAAc;AAAA,mBACDD,IAAIiB,IADH;AAAA,MAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,MACpBC,GADoB,cACpBA,GADoB;AAAA,MACfC,IADe,cACfA,IADe;AAAA,MACTb,IADS,cACTA,IADS;;AAElCL,iBAASqB,iBAAT,CAA2BvB,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEG,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBb,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMa,gCAAY,SAAZA,SAAY,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAASuB,MAAT,CAAgB,EAACC,KAAI1B,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAI0B,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECnB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "ping.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/ping';\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {type, ttl, tags, data} = req.body;\n  new Resource({type, ttl, tags, data}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const { type, ttl, tags, data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/ping.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getIntentionPing"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getIntentionPing",
              "exported": "getIntentionPing"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/ping.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/ping.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "ping.js",
      "sourceFileName": "ping.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "ping"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIntentionPing = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Ping = _mongoose2.default.model('Ping', new Schema({\n  data: Schema.Types.Mixed,\n  tags: [],\n  ttl: Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String\n}));\n\nvar getIntentionPing = exports.getIntentionPing = function getIntentionPing() {\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var pingData, ping;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pingData = { type: 'Intention' };\n              _context.next = 3;\n              return Ping.findOne(pingData).exec();\n\n            case 3:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 6:\n              _context.next = 8;\n              return new Ping(pingData).save();\n\n            case 8:\n              ping = _context.sent;\n\n              if (!(ping !== null)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt('return', resolve(ping));\n\n            case 11:\n\n              reject();\n\n            case 12:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nexports.default = Ping;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJQaW5nIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInRhZ3MiLCJ0dGwiLCJOdW1iZXIiLCJ0eXBlIiwiU3RyaW5nIiwia2luZCIsInF1ZXN0aW9uVHlwZSIsImdldEludGVudGlvblBpbmciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInBpbmdEYXRhIiwiZmluZE9uZSIsImV4ZWMiLCJwaW5nIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLFFBQUssRUFGd0M7QUFHN0NDLE9BQUlDLE1BSHlDLEVBR2pDO0FBQ1pDLFFBQU1DLE1BSnVDO0FBSzdDQyxRQUFNRCxNQUx1QztBQU03Q0UsZ0JBQWNGO0FBTitCLENBQVgsQ0FBdkIsQ0FBYjs7QUFTTyxJQUFNRyw4Q0FBbUIsU0FBbkJBLGdCQUFtQjtBQUFBLFNBQU0sSUFBSUMsT0FBSjtBQUFBLHVFQUFZLGlCQUFPQyxPQUFQLEVBQWdCQyxNQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDNUNDLHNCQUQ0QyxHQUNqQyxFQUFDUixNQUFNLFdBQVAsRUFEaUM7QUFBQTtBQUFBLHFCQUUvQlIsS0FBS2lCLE9BQUwsQ0FBYUQsUUFBYixFQUF1QkUsSUFBdkIsRUFGK0I7O0FBQUE7QUFFNUNDLGtCQUY0Qzs7QUFBQSxvQkFHN0NBLFNBQVMsSUFIb0M7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBSXZDTCxRQUFRSyxJQUFSLENBSnVDOztBQUFBO0FBQUE7QUFBQSxxQkFPbkMsSUFBSW5CLElBQUosQ0FBU2dCLFFBQVQsRUFBbUJJLElBQW5CLEVBUG1DOztBQUFBO0FBT2hERCxrQkFQZ0Q7O0FBQUEsb0JBUTdDQSxTQUFTLElBUm9DO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQVN2Q0wsUUFBUUssSUFBUixDQVR1Qzs7QUFBQTs7QUFZaERKOztBQVpnRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQU47QUFBQSxDQUF6Qjs7a0JBZ0JRZixJIiwiZmlsZSI6InBpbmcuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5cbmNvbnN0IFBpbmcgPSBtb25nb29zZS5tb2RlbCgnUGluZycsIG5ldyBTY2hlbWEoe1xuICBkYXRhOlNjaGVtYS5UeXBlcy5NaXhlZCxcbiAgdGFnczpbXSxcbiAgdHRsOk51bWJlciwgLy9zZWNvbmRzXG4gIHR5cGU6IFN0cmluZyxcbiAga2luZDogU3RyaW5nLFxuICBxdWVzdGlvblR5cGU6IFN0cmluZyxcbn0pKTtcblxuZXhwb3J0IGNvbnN0IGdldEludGVudGlvblBpbmcgPSAoKSA9PiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gIGxldCBwaW5nRGF0YSA9IHt0eXBlOiAnSW50ZW50aW9uJ31cbiAgbGV0IHBpbmcgPSBhd2FpdCBQaW5nLmZpbmRPbmUocGluZ0RhdGEpLmV4ZWMoKTtcbiAgaWYocGluZyAhPT0gbnVsbCkge1xuICAgIHJldHVybiByZXNvbHZlKHBpbmcpO1xuICB9XG5cbiAgcGluZyA9IGF3YWl0IG5ldyBQaW5nKHBpbmdEYXRhKS5zYXZlKCk7XG4gIGlmKHBpbmcgIT09IG51bGwpIHtcbiAgICByZXR1cm4gcmVzb2x2ZShwaW5nKTtcbiAgfVxuXG4gIHJlamVjdCgpO1xuXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgUGluZztcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "ping.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Ping",
        "model",
        "data",
        "Types",
        "Mixed",
        "tags",
        "ttl",
        "Number",
        "type",
        "String",
        "kind",
        "questionType",
        "getIntentionPing",
        "Promise",
        "resolve",
        "reject",
        "pingData",
        "findOne",
        "exec",
        "ping",
        "save"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,QAAK,EAFwC;AAG7CC,OAAIC,MAHyC,EAGjC;AACZC,QAAMC,MAJuC;AAK7CC,QAAMD,MALuC;AAM7CE,gBAAcF;AAN+B,CAAX,CAAvB,CAAb;;AASO,IAAMG,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5CC,sBAD4C,GACjC,EAACR,MAAM,WAAP,EADiC;AAAA;AAAA,qBAE/BR,KAAKiB,OAAL,CAAaD,QAAb,EAAuBE,IAAvB,EAF+B;;AAAA;AAE5CC,kBAF4C;;AAAA,oBAG7CA,SAAS,IAHoC;AAAA;AAAA;AAAA;;AAAA,+CAIvCL,QAAQK,IAAR,CAJuC;;AAAA;AAAA;AAAA,qBAOnC,IAAInB,IAAJ,CAASgB,QAAT,EAAmBI,IAAnB,EAPmC;;AAAA;AAOhDD,kBAPgD;;AAAA,oBAQ7CA,SAAS,IARoC;AAAA;AAAA;AAAA;;AAAA,+CASvCL,QAAQK,IAAR,CATuC;;AAAA;;AAYhDJ;;AAZgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA,CAAzB;;kBAgBQf,I",
      "file": "ping.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Ping = mongoose.model('Ping', new Schema({\n  data:Schema.Types.Mixed,\n  tags:[],\n  ttl:Number, //seconds\n  type: String,\n  kind: String,\n  questionType: String,\n}));\n\nexport const getIntentionPing = () => new Promise(async (resolve, reject) => {\n  let pingData = {type: 'Intention'}\n  let ping = await Ping.findOne(pingData).exec();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  ping = await new Ping(pingData).save();\n  if(ping !== null) {\n    return resolve(ping);\n  }\n\n  reject();\n\n});\n\nexport default Ping;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/pingpong.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "addPong"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/pingpong.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/pingpong.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.routes.js",
      "sourceFileName": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _pingpong2 = _interopRequireDefault(_pingpong);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.post('/:pingpong_id/pongs', _pingpong2.default);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmdwb25nLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwicG9zdCIsImFkZFBvbmciXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLElBQVAsQ0FBWSxxQkFBWixFQUFtQ0Msa0JBQW5DOztrQkFFZUosTSIsImZpbGUiOiJwaW5ncG9uZy5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYWRkUG9uZyBmcm9tICcuLi9jb250cm9sbGVycy9waW5ncG9uZy5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnBvc3QoJy86cGluZ3BvbmdfaWQvcG9uZ3MnLCBhZGRQb25nKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "post",
        "addPong"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,IAAP,CAAY,qBAAZ,EAAmCC,kBAAnC;;kBAEeJ,M",
      "file": "pingpong.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport addPong from '../controllers/pingpong.controller';\n\nconst router = Express.Router();\n\nrouter.post('/:pingpong_id/pongs', addPong);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/pingpong.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/day",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Day"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../models/prompt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Prompt"
              }
            ]
          },
          {
            "source": "../models/ping",
            "imported": [
              "getIntentionPing"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getIntentionPing",
                "local": "getIntentionPing"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "addPong",
            "populatePingpongs",
            "resetPingpongs"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "addPong",
              "exported": "addPong"
            },
            {
              "kind": "local",
              "local": "populatePingpongs",
              "exported": "populatePingpongs"
            },
            {
              "kind": "local",
              "local": "resetPingpongs",
              "exported": "resetPingpongs"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/pingpong.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/pingpong.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pingpong.controller.js",
      "sourceFileName": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pingpong.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetPingpongs = exports.populatePingpongs = exports.addPong = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _day = require('../models/day');\n\nvar _day2 = _interopRequireDefault(_day);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _prompt2 = require('../models/prompt');\n\nvar _prompt3 = _interopRequireDefault(_prompt2);\n\nvar _ping = require('../models/ping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar addPong = exports.addPong = function addPong(req, res) {\n  var pong = req.body.pong;\n  var pingpong_id = req.params.pingpong_id;\n\n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n\n  _day2.default.findOneAndUpdate({ 'pingpongs._id': pingpong_id }, { $set: { 'pingpongs.$.pong': pong } }).then(function (data) {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({ data: data });\n    }\n  }).catch(function (err) {\n    res.sendStatus(500);\n  });\n};\n\nvar createPingPong = function createPingPong(ping, user, day, triggerTime) {\n  var pingpong = {\n    triggerTime: triggerTime,\n    ping: ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user);\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n};\n\nvar populatePingpongs = exports.populatePingpongs = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(day) {\n    var users, timeline, pingpongs, intentionPing, i, _timeline$i, prompt, startTime, _prompt, pings, _loop, k;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _user2.default.find({\n              currentCohort: day.cohort\n            });\n\n          case 2:\n            users = _context.sent;\n\n\n            // get all prompts from day timeline\n            // for all prompt\n\n            timeline = day.timeline, pingpongs = day.pingpongs;\n            _context.next = 6;\n            return (0, _ping.getIntentionPing)();\n\n          case 6:\n            intentionPing = _context.sent;\n\n            day.pingpongs = users.map(function (user) {\n              return createPingPong(intentionPing, user, day);\n            });\n\n            i = 0;\n\n          case 9:\n            if (!(i < timeline.length)) {\n              _context.next = 25;\n              break;\n            }\n\n            _timeline$i = timeline[i], prompt = _timeline$i.prompt, startTime = _timeline$i.startTime;\n\n            startTime.setDate(day.date.getDate());\n            startTime.setFullYear(day.date.getFullYear());\n            startTime.setMonth(day.date.getMonth());\n            console.log(\"Prompt\" + prompt);\n\n            _context.next = 17;\n            return _prompt3.default.findById(prompt);\n\n          case 17:\n            prompt = _context.sent;\n            _prompt = prompt, pings = _prompt.pings;\n\n            console.log(\"PINGS\" + pings);\n\n            _loop = function _loop() {\n              var ping = pings[k];\n              console.log(ping);\n\n              var triggerTime = new Date(startTime.valueOf() + prompt.duration * 60 * 1000);\n\n              day.pingpongs = users.map(function (user) {\n                return createPingPong(ping, user, day, triggerTime);\n              }).concat(day.pingpongs);\n              // console.log(pingpongs)\n            };\n\n            for (k = 0; k < pings.length; k++) {\n              _loop();\n            }\n\n          case 22:\n            i++;\n            _context.next = 9;\n            break;\n\n          case 25:\n\n            console.log(\"PING POPULATE:\");\n            return _context.abrupt('return', day);\n\n          case 27:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function populatePingpongs(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar resetPingpongs = exports.resetPingpongs = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var day, data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _day2.default.findById(req.params.day_id);\n\n          case 3:\n            day = _context2.sent;\n            _context2.next = 6;\n            return populatePingpongs(day);\n\n          case 6:\n            day = _context2.sent;\n\n            day.save();\n            data = day.pingpongs;\n\n            res.send({ data: data });\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2['catch'](0);\n\n            res.sendStatus(500);\n\n          case 15:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined, [[0, 12]]);\n  }));\n\n  return function resetPingpongs(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.default = addPong;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pingpong.controller.js"
      ],
      "names": [
        "addPong",
        "req",
        "res",
        "pong",
        "body",
        "pingpong_id",
        "params",
        "Day",
        "findOneAndUpdate",
        "$set",
        "then",
        "data",
        "status",
        "send",
        "json",
        "catch",
        "sendStatus",
        "createPingPong",
        "ping",
        "user",
        "day",
        "triggerTime",
        "pingpong",
        "by",
        "type",
        "to",
        "getStudentPair",
        "populatePingpongs",
        "User",
        "find",
        "currentCohort",
        "cohort",
        "users",
        "timeline",
        "pingpongs",
        "intentionPing",
        "map",
        "i",
        "length",
        "prompt",
        "startTime",
        "setDate",
        "date",
        "getDate",
        "setFullYear",
        "getFullYear",
        "setMonth",
        "getMonth",
        "console",
        "log",
        "Prompt",
        "findById",
        "pings",
        "k",
        "Date",
        "valueOf",
        "duration",
        "concat",
        "resetPingpongs",
        "day_id",
        "save"
      ],
      "mappings": "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",
      "file": "pingpong.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport Day from '../models/day';\nimport User from '../models/user';\nimport Prompt from '../models/prompt';\nimport {getIntentionPing} from '../models/ping';\n\nexport const addPong = (req,res) => {\n  const{pong} = req.body;\n  let {pingpong_id} = req.params\n  \n  // Day.findOneAndUpdate to return updated day object\n  // Day.update if you don't need day\n  Day.findOneAndUpdate(\n    {'pingpongs._id': pingpong_id},\n    {$set:{'pingpongs.$.pong':pong}},\n  ).then(data => {\n    if (data === null) {\n      res.status(404).send('Pingpong not found!');\n    } else {\n      res.json({data});\n    }\n  }).catch(err => {\n    res.sendStatus(500);\n  });\n\n}\n\nconst createPingPong = (ping, user, day, triggerTime) => {\n  let pingpong = {\n    triggerTime,\n    ping,\n    by: user\n  };\n  switch (ping.type) {\n    case 'Pair':\n      pingpong.to = getStudentPair(day, user)\n    case \"Intention\":\n    case \"Content\":\n    case \"Self\":\n    case \"Cohort\":\n    case \"Peers\":\n    default:\n      return pingpong;\n  }\n}\n\n\nexport const populatePingpongs = async (day) => {\n  let users = await User.find({\n    currentCohort: day.cohort\n  });\n\n  // get all prompts from day timeline\n  // for all prompt\n\n  let {timeline,pingpongs} = day;\n\n  let intentionPing = await getIntentionPing();\n  day.pingpongs = users.map(user => createPingPong(intentionPing, user, day));\n\n  for (var i = 0; i < timeline.length; i++) {\n    let {prompt, startTime} = timeline[i];\n    startTime.setDate(day.date.getDate());\n    startTime.setFullYear(day.date.getFullYear());\n    startTime.setMonth(day.date.getMonth());\n    console.log(\"Prompt\"+prompt)\n\n    prompt = await Prompt.findById(prompt);\n    let {pings} = prompt;\n    console.log(\"PINGS\"+pings)\n\n    for (var k = 0; k < pings.length; k++) {\n      let ping = pings[k];\n      console.log(ping)\n\n      let triggerTime = new Date(startTime.valueOf() + prompt.duration*60*1000);\n\n      day.pingpongs = users.map(user => createPingPong(ping, user, day, triggerTime)).concat(day.pingpongs);\n      // console.log(pingpongs)\n    }\n\n  }\n\n  console.log(\"PING POPULATE:\")\n  return day\n}\n\n\nexport const resetPingpongs = async (req, res) => {\n\n  try {\n    let day = await Day.findById(req.params.day_id);\n    day = await populatePingpongs(day);\n    day.save();\n    const data = day.pingpongs;\n    res.send({data});\n  } catch(err) {\n    res.sendStatus(500);\n  }\n\n}\n\nexport default addPong;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/mailer.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/mailer.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/mailer.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.routes.js",
      "sourceFileName": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar router = require('express').Router();\n\nvar _require = require('../controllers/mailer.controller'),\n    mailer = _require.mailer,\n    submit = _require.submit;\n\nrouter.get('/', mailer);\nrouter.post('/submit', submit);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsIm1haWxlciIsInN1Ym1pdCIsImdldCIsInBvc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVNDLFFBQVEsU0FBUixFQUFtQkMsTUFBbkIsRUFBZjs7ZUFFeUJELFFBQVEsa0NBQVIsQztJQUFsQkUsTSxZQUFBQSxNO0lBQVFDLE0sWUFBQUEsTTs7QUFFZkosT0FBT0ssR0FBUCxDQUFXLEdBQVgsRUFBZ0JGLE1BQWhCO0FBQ0FILE9BQU9NLElBQVAsQ0FBWSxTQUFaLEVBQXVCRixNQUF2Qjs7QUFFQUcsT0FBT0MsT0FBUCxHQUFpQlIsTUFBakIiLCJmaWxlIjoibWFpbGVyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKClcblxuY29uc3Qge21haWxlciwgc3VibWl0fSA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL21haWxlci5jb250cm9sbGVyJylcblxucm91dGVyLmdldCgnLycsIG1haWxlcilcbnJvdXRlci5wb3N0KCcvc3VibWl0Jywgc3VibWl0KVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.routes.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "mailer",
        "submit",
        "get",
        "post",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;eAEyBD,QAAQ,kCAAR,C;IAAlBE,M,YAAAA,M;IAAQC,M,YAAAA,M;;AAEfJ,OAAOK,GAAP,CAAW,GAAX,EAAgBF,MAAhB;AACAH,OAAOM,IAAP,CAAY,SAAZ,EAAuBF,MAAvB;;AAEAG,OAAOC,OAAP,GAAiBR,MAAjB",
      "file": "mailer.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "const router = require('express').Router()\n\nconst {mailer, submit} = require('../controllers/mailer.controller')\n\nrouter.get('/', mailer)\nrouter.post('/submit', submit)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/mailer.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "nodemailer",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "nodemailer"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/mailer.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/mailer.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mailer.controller.js",
      "sourceFileName": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mailer.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _nodemailer = require('nodemailer');\n\nvar _nodemailer2 = _interopRequireDefault(_nodemailer);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n'use strict';\n\n// transport service using which it can send emails in this case gmail\nvar transporter = _nodemailer2.default.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.MAILER_EMAIL,\n    pass: process.env.MAILER_PASSWORD\n  }\n});\n\nvar mailer = function mailer(req, res) {\n  res.send('/client/emailSender.html');\n};\n\nvar submit = function submit(req, res) {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal' // plain text body\n  };\n\n  _user2.default.find({ email: req.body.email.toString() }, function (err, existingUser) {\n    if (!err && existingUser.length != 0) {\n      transporter.sendMail(mailOptions, function (err, info) {\n        if (err) console.log(err);else console.log(info);\n      });\n\n      res.redirect('/');\n    }\n  });\n};\n\nmodule.exports = { mailer: mailer, submit: submit };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWxlci5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInRyYW5zcG9ydGVyIiwibm9kZW1haWxlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJhdXRoIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJNQUlMRVJfRU1BSUwiLCJwYXNzIiwiTUFJTEVSX1BBU1NXT1JEIiwibWFpbGVyIiwicmVxIiwicmVzIiwic2VuZCIsInN1Ym1pdCIsIm1haWxPcHRpb25zIiwiZnJvbSIsInRvIiwiYm9keSIsImVtYWlsIiwidG9TdHJpbmciLCJzdWJqZWN0IiwiaHRtbCIsIlVzZXIiLCJmaW5kIiwiZXJyIiwiZXhpc3RpbmdVc2VyIiwibGVuZ3RoIiwic2VuZE1haWwiLCJpbmZvIiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBOztBQUVBO0FBQ0EsSUFBSUEsY0FBY0MscUJBQVdDLGVBQVgsQ0FBMkI7QUFDNUNDLFdBQVMsT0FEbUM7QUFFNUNDLFFBQU07QUFDQ0MsVUFBTUMsUUFBUUMsR0FBUixDQUFZQyxZQURuQjtBQUVDQyxVQUFNSCxRQUFRQyxHQUFSLENBQVlHO0FBRm5CO0FBRnNDLENBQTNCLENBQWxCOztBQVFBLElBQU1DLFNBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQkEsTUFBSUMsSUFBSixDQUFTLDBCQUFUO0FBQ0QsQ0FGRDs7QUFJQSxJQUFNQyxTQUFTLFNBQVRBLE1BQVMsQ0FBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7O0FBRTNCO0FBQ0EsTUFBSUcsY0FBYztBQUNoQkMsVUFBTVgsUUFBUUMsR0FBUixDQUFZQyxZQURGLEVBQ2dCO0FBQ2hDVSxRQUFJTixJQUFJTyxJQUFKLENBQVNDLEtBQVQsQ0FBZUMsUUFBZixFQUZZLEVBRWU7QUFDL0JDLGFBQVMsOEJBSE8sRUFHeUI7QUFDekNDLFVBQU0sMkZBSlUsQ0FJaUY7QUFKakYsR0FBbEI7O0FBT0FDLGlCQUFLQyxJQUFMLENBQVUsRUFBQ0wsT0FBT1IsSUFBSU8sSUFBSixDQUFTQyxLQUFULENBQWVDLFFBQWYsRUFBUixFQUFWLEVBQThDLFVBQVNLLEdBQVQsRUFBY0MsWUFBZCxFQUEyQjtBQUN2RSxRQUFHLENBQUNELEdBQUQsSUFBU0MsYUFBYUMsTUFBYixJQUF1QixDQUFuQyxFQUF1QztBQUNyQzVCLGtCQUFZNkIsUUFBWixDQUFxQmIsV0FBckIsRUFBa0MsVUFBVVUsR0FBVixFQUFlSSxJQUFmLEVBQXFCO0FBQ3ZELFlBQUdKLEdBQUgsRUFDRUssUUFBUUMsR0FBUixDQUFZTixHQUFaLEVBREYsS0FHRUssUUFBUUMsR0FBUixDQUFZRixJQUFaO0FBQ0QsT0FMRDs7QUFPQWpCLFVBQUlvQixRQUFKLENBQWEsR0FBYjtBQUNEO0FBQ0YsR0FYRDtBQVlELENBdEJEOztBQXdCQUMsT0FBT0MsT0FBUCxHQUFpQixFQUFDeEIsY0FBRCxFQUFTSSxjQUFULEVBQWpCIiwiZmlsZSI6Im1haWxlci5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5vZGVtYWlsZXIgZnJvbSAnbm9kZW1haWxlcic7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuXG4ndXNlIHN0cmljdCdcblxuLy8gdHJhbnNwb3J0IHNlcnZpY2UgdXNpbmcgd2hpY2ggaXQgY2FuIHNlbmQgZW1haWxzIGluIHRoaXMgY2FzZSBnbWFpbFxudmFyIHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuIHNlcnZpY2U6ICdnbWFpbCcsXG4gYXV0aDoge1xuICAgICAgICB1c2VyOiBwcm9jZXNzLmVudi5NQUlMRVJfRU1BSUwsXG4gICAgICAgIHBhc3M6IHByb2Nlc3MuZW52Lk1BSUxFUl9QQVNTV09SRFxuICAgIH1cbn0pO1xuXG5jb25zdCBtYWlsZXIgPSAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoJy9jbGllbnQvZW1haWxTZW5kZXIuaHRtbCcpXG59XG5cbmNvbnN0IHN1Ym1pdCA9IChyZXEsIHJlcykgPT4ge1xuXG4gIC8vIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHdoZXJlIHdlIHdpbGwgY29uZmlndXJlIGFsbCBlbWFpbCBkZXRhaWxzXG4gIHZhciBtYWlsT3B0aW9ucyA9IHtcbiAgICBmcm9tOiBwcm9jZXNzLmVudi5NQUlMRVJfRU1BSUwsIC8vIHNlbmRlciBhZGRyZXNzXG4gICAgdG86IHJlcS5ib2R5LmVtYWlsLnRvU3RyaW5nKCksIC8vIGxpc3Qgb2YgcmVjZWl2ZXJzXG4gICAgc3ViamVjdDogJ1BsZWFzZSBTaWduVXAgdG8gU09BTCBQb3J0YWwnLCAvLyBTdWJqZWN0IGxpbmVcbiAgICBodG1sOiAnPHA+SGkgY2xpY2sgb24gdGhpcyA8L3A+PGE+bGluazwvYT48cD4gdG8gU2lnblVwIHRvIFNjaG9vbCBvZiBBY2NlbGVyYXRlZCBMZWFybmluZyBQb3J0YWwnLy8gcGxhaW4gdGV4dCBib2R5XG4gIH07XG5cbiAgVXNlci5maW5kKHtlbWFpbDogcmVxLmJvZHkuZW1haWwudG9TdHJpbmcoKX0sIGZ1bmN0aW9uKGVyciwgZXhpc3RpbmdVc2VyKXtcbiAgICBpZighZXJyICYmIChleGlzdGluZ1VzZXIubGVuZ3RoICE9IDApKSB7XG4gICAgICB0cmFuc3BvcnRlci5zZW5kTWFpbChtYWlsT3B0aW9ucywgZnVuY3Rpb24gKGVyciwgaW5mbykge1xuICAgICAgaWYoZXJyKVxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICBlbHNlXG4gICAgICAgIGNvbnNvbGUubG9nKGluZm8pO1xuICAgICAgfSlcblxuICAgICAgcmVzLnJlZGlyZWN0KCcvJylcbiAgICB9XG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge21haWxlciwgc3VibWl0fSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mailer.controller.js"
      ],
      "names": [
        "transporter",
        "nodemailer",
        "createTransport",
        "service",
        "auth",
        "user",
        "process",
        "env",
        "MAILER_EMAIL",
        "pass",
        "MAILER_PASSWORD",
        "mailer",
        "req",
        "res",
        "send",
        "submit",
        "mailOptions",
        "from",
        "to",
        "body",
        "email",
        "toString",
        "subject",
        "html",
        "User",
        "find",
        "err",
        "existingUser",
        "length",
        "sendMail",
        "info",
        "console",
        "log",
        "redirect",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;AAEA;AACA,IAAIA,cAAcC,qBAAWC,eAAX,CAA2B;AAC5CC,WAAS,OADmC;AAE5CC,QAAM;AACCC,UAAMC,QAAQC,GAAR,CAAYC,YADnB;AAECC,UAAMH,QAAQC,GAAR,CAAYG;AAFnB;AAFsC,CAA3B,CAAlB;;AAQA,IAAMC,SAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,MAAIC,IAAJ,CAAS,0BAAT;AACD,CAFD;;AAIA,IAAMC,SAAS,SAATA,MAAS,CAACH,GAAD,EAAMC,GAAN,EAAc;;AAE3B;AACA,MAAIG,cAAc;AAChBC,UAAMX,QAAQC,GAAR,CAAYC,YADF,EACgB;AAChCU,QAAIN,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAFY,EAEe;AAC/BC,aAAS,8BAHO,EAGyB;AACzCC,UAAM,2FAJU,CAIiF;AAJjF,GAAlB;;AAOAC,iBAAKC,IAAL,CAAU,EAACL,OAAOR,IAAIO,IAAJ,CAASC,KAAT,CAAeC,QAAf,EAAR,EAAV,EAA8C,UAASK,GAAT,EAAcC,YAAd,EAA2B;AACvE,QAAG,CAACD,GAAD,IAASC,aAAaC,MAAb,IAAuB,CAAnC,EAAuC;AACrC5B,kBAAY6B,QAAZ,CAAqBb,WAArB,EAAkC,UAAUU,GAAV,EAAeI,IAAf,EAAqB;AACvD,YAAGJ,GAAH,EACEK,QAAQC,GAAR,CAAYN,GAAZ,EADF,KAGEK,QAAQC,GAAR,CAAYF,IAAZ;AACD,OALD;;AAOAjB,UAAIoB,QAAJ,CAAa,GAAb;AACD;AACF,GAXD;AAYD,CAtBD;;AAwBAC,OAAOC,OAAP,GAAiB,EAACxB,cAAD,EAASI,cAAT,EAAjB",
      "file": "mailer.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import nodemailer from 'nodemailer';\nimport mongoose from 'mongoose';\nimport User from '../models/user';\n\n'use strict'\n\n// transport service using which it can send emails in this case gmail\nvar transporter = nodemailer.createTransport({\n service: 'gmail',\n auth: {\n        user: process.env.MAILER_EMAIL,\n        pass: process.env.MAILER_PASSWORD\n    }\n});\n\nconst mailer = (req, res) => {\n  res.send('/client/emailSender.html')\n}\n\nconst submit = (req, res) => {\n\n  // configuration object where we will configure all email details\n  var mailOptions = {\n    from: process.env.MAILER_EMAIL, // sender address\n    to: req.body.email.toString(), // list of receivers\n    subject: 'Please SignUp to SOAL Portal', // Subject line\n    html: '<p>Hi click on this </p><a>link</a><p> to SignUp to School of Accelerated Learning Portal'// plain text body\n  };\n\n  User.find({email: req.body.email.toString()}, function(err, existingUser){\n    if(!err && (existingUser.length != 0)) {\n      transporter.sendMail(mailOptions, function (err, info) {\n      if(err)\n        console.log(err)\n      else\n        console.log(info);\n      })\n\n      res.redirect('/')\n    }\n  })\n}\n\nmodule.exports = {mailer, submit}"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/day.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/day.controller",
            "imported": [
              "getOne",
              "dayDetails",
              "update",
              "getAll",
              "addPromptToTimeline",
              "getToday",
              "updatePongs",
              "addContentToDay",
              "removePromptFromTimeline",
              "resetPairs",
              "resetDay"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "dayDetails",
                "local": "dayDetails"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "addPromptToTimeline",
                "local": "addPromptToTimeline"
              },
              {
                "kind": "named",
                "imported": "getToday",
                "local": "getToday"
              },
              {
                "kind": "named",
                "imported": "updatePongs",
                "local": "updatePongs"
              },
              {
                "kind": "named",
                "imported": "addContentToDay",
                "local": "addContentToDay"
              },
              {
                "kind": "named",
                "imported": "removePromptFromTimeline",
                "local": "removePromptFromTimeline"
              },
              {
                "kind": "named",
                "imported": "resetPairs",
                "local": "resetPairs"
              },
              {
                "kind": "named",
                "imported": "resetDay",
                "local": "resetDay"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "populateCurrentUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "populateCurrentUser",
                "local": "populateCurrentUser"
              }
            ]
          },
          {
            "source": "../controllers/pingpong.controller",
            "imported": [
              "resetPingpongs"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resetPingpongs",
                "local": "resetPingpongs"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/day.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/day.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "day.routes.js",
      "sourceFileName": "day.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "day.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _day = require('../controllers/day.controller');\n\nvar _user = require('../controllers/user.controller');\n\nvar _pingpong = require('../controllers/pingpong.controller');\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', _day.getAll);\nrouter.get('/:dayNumber/dn', _day.dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', _user.populateCurrentUser, _day.getToday);\nrouter.get('/:day_id/dId', _day.getOne);\nrouter.patch('/:day_id', _day.update);\nrouter.patch('/:day_id/timeline', _day.addPromptToTimeline);\nrouter.patch('/:day_id/content', _day.addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', _day.removePromptFromTimeline);\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', _day.resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', _pingpong.resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', _day.resetPairs);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheS5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldEFsbCIsImRheURldGFpbHMiLCJwb3B1bGF0ZUN1cnJlbnRVc2VyIiwiZ2V0VG9kYXkiLCJnZXRPbmUiLCJwYXRjaCIsInVwZGF0ZSIsImFkZFByb21wdFRvVGltZWxpbmUiLCJhZGRDb250ZW50VG9EYXkiLCJyZW1vdmVQcm9tcHRGcm9tVGltZWxpbmUiLCJyZXNldERheSIsInJlc2V0UGluZ3BvbmdzIiwicmVzZXRQYWlycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUE7Ozs7OztBQU1BRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsV0FBaEI7QUFDQUosT0FBT0csR0FBUCxDQUFXLGdCQUFYLEVBQTZCRSxlQUE3QjtBQUNBO0FBQ0FMLE9BQU9HLEdBQVAsQ0FBVyxRQUFYLEVBQXFCRyx5QkFBckIsRUFBMENDLGFBQTFDO0FBQ0FQLE9BQU9HLEdBQVAsQ0FBVyxjQUFYLEVBQTJCSyxXQUEzQjtBQUNBUixPQUFPUyxLQUFQLENBQWEsVUFBYixFQUF5QkMsV0FBekI7QUFDQVYsT0FBT1MsS0FBUCxDQUFhLG1CQUFiLEVBQWtDRSx3QkFBbEM7QUFDQVgsT0FBT1MsS0FBUCxDQUFhLGtCQUFiLEVBQWlDRyxvQkFBakM7QUFDQVosT0FBT1MsS0FBUCxDQUFhLGlDQUFiLEVBQWdESSw2QkFBaEQ7O0FBRUE7Ozs7Ozs7OztBQVNBYixPQUFPUyxLQUFQLENBQWEsZ0JBQWIsRUFBK0JLLGFBQS9COztBQUVBOzs7Ozs7O0FBT0FkLE9BQU9TLEtBQVAsQ0FBYSwwQkFBYixFQUF5Q00sd0JBQXpDOztBQUVBOzs7Ozs7O0FBT0FmLE9BQU9TLEtBQVAsQ0FBYSxzQkFBYixFQUFxQ08sZUFBckM7O2tCQUVlaEIsTSIsImZpbGUiOiJkYXkucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRPbmUsIGRheURldGFpbHMsIHVwZGF0ZSwgZ2V0QWxsLCBhZGRQcm9tcHRUb1RpbWVsaW5lLCBnZXRUb2RheSxcbiAgdXBkYXRlUG9uZ3MsIGFkZENvbnRlbnRUb0RheSwgcmVtb3ZlUHJvbXB0RnJvbVRpbWVsaW5lLCByZXNldFBhaXJzLCByZXNldERheX0gZnJvbSAnLi4vY29udHJvbGxlcnMvZGF5LmNvbnRyb2xsZXInO1xuaW1wb3J0IHtwb3B1bGF0ZUN1cnJlbnRVc2VyfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXInO1xuaW1wb3J0IHtyZXNldFBpbmdwb25nc30gZnJvbSAnLi4vY29udHJvbGxlcnMvcGluZ3BvbmcuY29udHJvbGxlcic7XG5pbXBvcnQge2FsbG93U3VwZXJBZG1pbk9ubHl9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3JvbGVzLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG4vKipcbiAqIEBhcGkge2dldH0gL2RheXMgR2V0IGFsbCBkYXlzXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgR2V0RGF5c1xuICogQGFwaUdyb3VwIERheVxuICovXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5nZXQoJy86ZGF5TnVtYmVyL2RuJywgZGF5RGV0YWlscyk7XG4vLyBBc3N1bWluZyBvbmx5IHN0dWRlbnRzIHdpbGwgYmUgYWNjZXNzaW5nIHRoZSBwYXRoXG5yb3V0ZXIuZ2V0KCcvdG9kYXknLCBwb3B1bGF0ZUN1cnJlbnRVc2VyLCBnZXRUb2RheSk7XG5yb3V0ZXIuZ2V0KCcvOmRheV9pZC9kSWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmRheV9pZCcsIHVwZGF0ZSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL3RpbWVsaW5lJywgYWRkUHJvbXB0VG9UaW1lbGluZSk7XG5yb3V0ZXIucGF0Y2goJy86ZGF5X2lkL2NvbnRlbnQnLCBhZGRDb250ZW50VG9EYXkpO1xucm91dGVyLnBhdGNoKCcvOmRheV9pZC90aW1lbGluZXMvOnRpbWVsaW5lX2lkJywgcmVtb3ZlUHJvbXB0RnJvbVRpbWVsaW5lKVxuXG4vKipcbiAqIEBhcGkge3BhdGNofSAvZGF5cy86ZGF5X2lkL3Jlc2V0IFJlc2V0IGRheSBvZiBhIGNvaG9ydFxuICogQGFwaVBlcm1pc3Npb24gbm9uZVxuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIFJlc2V0RGF5XG4gKiBAYXBpR3JvdXAgRGF5XG4gKlxuICogQGFwaVBhcmFtIHtTdHJpbmd9IHJlcGxpY2F0ZSBEYXkgdW5pcXVlIElEIHRvIGNvcHkgZnJvbS5cbiAqL1xucm91dGVyLnBhdGNoKCcvOmRheV9pZC9yZXNldCcsIHJlc2V0RGF5KTtcblxuLyoqXG4gKiBAYXBpIHtwYXRjaH0gLzpkYXlfaWQvcGluZ3BvbmdzL3Jlc2V0IFJlc2V0IHBpbmdwb25ncyBmb3IgdGhlIGRheVxuICogQGFwaVBlcm1pc3Npb24gbm9uZVxuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIFJlc2V0UGluZ3BvbmdzXG4gKiBAYXBpR3JvdXAgRGF5XG4gKi9cbnJvdXRlci5wYXRjaCgnLzpkYXlfaWQvcGluZ3BvbmdzL3Jlc2V0JywgcmVzZXRQaW5ncG9uZ3MpO1xuXG4vKipcbiAqIEBhcGkge3BhdGNofSAvOmRheV9pZC9wYWlycy9yZXNldCBSZXNldCBwYWlycyBmb3IgdGhlIGRheVxuICogQGFwaVBlcm1pc3Npb24gbm9uZVxuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIFJlc2V0UGFpcnNcbiAqIEBhcGlHcm91cCBEYXlcbiAqL1xucm91dGVyLnBhdGNoKCcvOmRheV9pZC9wYWlycy9yZXNldCcsIHJlc2V0UGFpcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "day.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "dayDetails",
        "populateCurrentUser",
        "getToday",
        "getOne",
        "patch",
        "update",
        "addPromptToTimeline",
        "addContentToDay",
        "removePromptFromTimeline",
        "resetDay",
        "resetPingpongs",
        "resetPairs"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;AAMAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,WAAhB;AACAJ,OAAOG,GAAP,CAAW,gBAAX,EAA6BE,eAA7B;AACA;AACAL,OAAOG,GAAP,CAAW,QAAX,EAAqBG,yBAArB,EAA0CC,aAA1C;AACAP,OAAOG,GAAP,CAAW,cAAX,EAA2BK,WAA3B;AACAR,OAAOS,KAAP,CAAa,UAAb,EAAyBC,WAAzB;AACAV,OAAOS,KAAP,CAAa,mBAAb,EAAkCE,wBAAlC;AACAX,OAAOS,KAAP,CAAa,kBAAb,EAAiCG,oBAAjC;AACAZ,OAAOS,KAAP,CAAa,iCAAb,EAAgDI,6BAAhD;;AAEA;;;;;;;;;AASAb,OAAOS,KAAP,CAAa,gBAAb,EAA+BK,aAA/B;;AAEA;;;;;;;AAOAd,OAAOS,KAAP,CAAa,0BAAb,EAAyCM,wBAAzC;;AAEA;;;;;;;AAOAf,OAAOS,KAAP,CAAa,sBAAb,EAAqCO,eAArC;;kBAEehB,M",
      "file": "day.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getOne, dayDetails, update, getAll, addPromptToTimeline, getToday,\n  updatePongs, addContentToDay, removePromptFromTimeline, resetPairs, resetDay} from '../controllers/day.controller';\nimport {populateCurrentUser} from '../controllers/user.controller';\nimport {resetPingpongs} from '../controllers/pingpong.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\n/**\n * @api {get} /days Get all days\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetDays\n * @apiGroup Day\n */\nrouter.get('/', getAll);\nrouter.get('/:dayNumber/dn', dayDetails);\n// Assuming only students will be accessing the path\nrouter.get('/today', populateCurrentUser, getToday);\nrouter.get('/:day_id/dId', getOne);\nrouter.patch('/:day_id', update);\nrouter.patch('/:day_id/timeline', addPromptToTimeline);\nrouter.patch('/:day_id/content', addContentToDay);\nrouter.patch('/:day_id/timelines/:timeline_id', removePromptFromTimeline)\n\n/**\n * @api {patch} /days/:day_id/reset Reset day of a cohort\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetDay\n * @apiGroup Day\n *\n * @apiParam {String} replicate Day unique ID to copy from.\n */\nrouter.patch('/:day_id/reset', resetDay);\n\n/**\n * @api {patch} /:day_id/pingpongs/reset Reset pingpongs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPingpongs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pingpongs/reset', resetPingpongs);\n\n/**\n * @api {patch} /:day_id/pairs/reset Reset pairs for the day\n * @apiPermission none\n * @apiHeader {String} authorization JWT Token.\n * @apiName ResetPairs\n * @apiGroup Day\n */\nrouter.patch('/:day_id/pairs/reset', resetPairs);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/admin.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/admin.controller",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "switchUser"
              }
            ]
          },
          {
            "source": "../controllers/roles.controller",
            "imported": [
              "allowSuperAdminOnly"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "allowSuperAdminOnly",
                "local": "allowSuperAdminOnly"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/admin.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/admin.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.routes.js",
      "sourceFileName": "admin.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _admin = require('../controllers/admin.controller');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _roles = require('../controllers/roles.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.use(_roles.allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', _admin2.default);\n\nrouter.use('*', function (req, res) {\n  return res.sendStatus(404);\n});\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwidXNlIiwiYWxsb3dTdXBlckFkbWluT25seSIsInN3aXRjaFVzZXIiLCJyZXEiLCJyZXMiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVdDLDBCQUFYO0FBQ0FKLE9BQU9HLEdBQVAsQ0FBVyx1QkFBWCxFQUFvQ0UsZUFBcEM7O0FBRUFMLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNHLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLElBQUlDLFVBQUosQ0FBZSxHQUFmLENBQWQ7QUFBQSxDQUFoQjtrQkFDZVIsTSIsImZpbGUiOiJhZG1pbi5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgc3dpdGNoVXNlciBmcm9tICcuLi9jb250cm9sbGVycy9hZG1pbi5jb250cm9sbGVyJztcbmltcG9ydCB7YWxsb3dTdXBlckFkbWluT25seX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcm9sZXMuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci51c2UoYWxsb3dTdXBlckFkbWluT25seSk7XG5yb3V0ZXIudXNlKCcvc3dpdGNoX3VzZXIvOnVzZXJfaWQnLCBzd2l0Y2hVc2VyKTtcblxucm91dGVyLnVzZSgnKicsIChyZXEsIHJlcykgPT4gcmVzLnNlbmRTdGF0dXMoNDA0KSk7XG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "use",
        "allowSuperAdminOnly",
        "switchUser",
        "req",
        "res",
        "sendStatus"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAWC,0BAAX;AACAJ,OAAOG,GAAP,CAAW,uBAAX,EAAoCE,eAApC;;AAEAL,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACG,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,UAAJ,CAAe,GAAf,CAAd;AAAA,CAAhB;kBACeR,M",
      "file": "admin.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport switchUser from '../controllers/admin.controller';\nimport {allowSuperAdminOnly} from '../controllers/roles.controller';\n\nconst router = Express.Router();\n\nrouter.use(allowSuperAdminOnly);\nrouter.use('/switch_user/:user_id', switchUser);\n\nrouter.use('*', (req, res) => res.sendStatus(404));\nexport default router;"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/admin.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../util/token",
            "imported": [
              "getSoalToken"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSoalToken",
                "local": "getSoalToken"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/admin.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/admin.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "admin.controller.js",
      "sourceFileName": "admin.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "admin.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _token = require('../util/token');\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n// get Access as a student with id\nvar switchUser = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var user_id, user, soalToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user_id = req.params.user_id;\n            _context.prev = 1;\n            _context.next = 4;\n            return _user2.default.findById(user_id).exec();\n\n          case 4:\n            user = _context.sent;\n            soalToken = (0, _token.getSoalToken)(user);\n\n            res.send({ soalToken: soalToken });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context['catch'](1);\n\n            console.log(_context.t0);\n            res.status(404).send('User not found with id ' + user_id);\n\n          case 13:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined, [[1, 9]]);\n  }));\n\n  return function switchUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.default = switchUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsic3dpdGNoVXNlciIsInJlcSIsInJlcyIsInVzZXJfaWQiLCJwYXJhbXMiLCJVc2VyIiwiZmluZEJ5SWQiLCJleGVjIiwidXNlciIsInNvYWxUb2tlbiIsInNlbmQiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQTtBQUNBLElBQU1BO0FBQUEscUVBQWEsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVkMsbUJBRFUsR0FDQ0YsSUFBSUcsTUFETCxDQUNWRCxPQURVO0FBQUE7QUFBQTtBQUFBLG1CQUlJRSxlQUFLQyxRQUFMLENBQWNILE9BQWQsRUFBdUJJLElBQXZCLEVBSko7O0FBQUE7QUFJVEMsZ0JBSlM7QUFLVEMscUJBTFMsR0FLRyx5QkFBYUQsSUFBYixDQUxIOztBQU1mTixnQkFBSVEsSUFBSixDQUFTLEVBQUNELG9CQUFELEVBQVQ7QUFOZTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFRZkUsb0JBQVFDLEdBQVI7QUFDQVYsZ0JBQUlXLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQiw2QkFBK0NQLE9BQS9DOztBQVRlO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7a0JBYWVILFUiLCJmaWxlIjoiYWRtaW4uY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2V0U29hbFRva2VufSBmcm9tICcuLi91dGlsL3Rva2VuJztcbmltcG9ydCBVc2VyIGZyb20gJy4uL21vZGVscy91c2VyJztcblxuLy8gZ2V0IEFjY2VzcyBhcyBhIHN0dWRlbnQgd2l0aCBpZFxuY29uc3Qgc3dpdGNoVXNlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dXNlcl9pZH0gPSByZXEucGFyYW1zO1xuXG4gIHRyeXtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZCh1c2VyX2lkKS5leGVjKCk7XG4gICAgY29uc3Qgc29hbFRva2VuID0gZ2V0U29hbFRva2VuKHVzZXIpO1xuICAgIHJlcy5zZW5kKHtzb2FsVG9rZW59KTtcbiAgfSBjYXRjaChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmVzLnN0YXR1cyg0MDQpLnNlbmQoYFVzZXIgbm90IGZvdW5kIHdpdGggaWQgJHt1c2VyX2lkfWApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN3aXRjaFVzZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "admin.controller.js"
      ],
      "names": [
        "switchUser",
        "req",
        "res",
        "user_id",
        "params",
        "User",
        "findById",
        "exec",
        "user",
        "soalToken",
        "send",
        "console",
        "log",
        "status"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;;;;;;;AAEA;AACA,IAAMA;AAAA,qEAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,mBADU,GACCF,IAAIG,MADL,CACVD,OADU;AAAA;AAAA;AAAA,mBAIIE,eAAKC,QAAL,CAAcH,OAAd,EAAuBI,IAAvB,EAJJ;;AAAA;AAITC,gBAJS;AAKTC,qBALS,GAKG,yBAAaD,IAAb,CALH;;AAMfN,gBAAIQ,IAAJ,CAAS,EAACD,oBAAD,EAAT;AANe;AAAA;;AAAA;AAAA;AAAA;;AAQfE,oBAAQC,GAAR;AACAV,gBAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,6BAA+CP,OAA/C;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAaeH,U",
      "file": "admin.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import {getSoalToken} from '../util/token';\nimport User from '../models/user';\n\n// get Access as a student with id\nconst switchUser = async (req, res) => {\n  const {user_id} = req.params;\n\n  try{\n    const user = await User.findById(user_id).exec();\n    const soalToken = getSoalToken(user);\n    res.send({soalToken});\n  } catch(err) {\n    console.log(err)\n    res.status(404).send(`User not found with id ${user_id}`);\n  }\n}\n\nexport default switchUser;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/todo.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/todo.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne",
              "getStudentToDos",
              "updateAll",
              "deleteMultiple"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              },
              {
                "kind": "named",
                "imported": "getStudentToDos",
                "local": "getStudentToDos"
              },
              {
                "kind": "named",
                "imported": "updateAll",
                "local": "updateAll"
              },
              {
                "kind": "named",
                "imported": "deleteMultiple",
                "local": "deleteMultiple"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/todo.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/todo.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.routes.js",
      "sourceFileName": "todo.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _todo = require('../controllers/todo.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _todo.getAll);\nrouter.post('/', _todo.create);\nrouter.get('/:id', _todo.getOne);\nrouter.patch('/:id', _todo.update);\nrouter.patch('/', _todo.updateAll);\nrouter.delete('/:id', _todo.deleteOne);\nrouter.delete('/', _todo.deleteMultiple);\nrouter.get('/student/:studentID', _todo.getStudentToDos);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8ucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJ1cGRhdGVBbGwiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJkZWxldGVNdWx0aXBsZSIsImdldFN0dWRlbnRUb0RvcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE9BQU9HLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxZQUFoQjtBQUNBSixPQUFPSyxJQUFQLENBQVksR0FBWixFQUFpQkMsWUFBakI7QUFDQU4sT0FBT0csR0FBUCxDQUFXLE1BQVgsRUFBbUJJLFlBQW5CO0FBQ0FQLE9BQU9RLEtBQVAsQ0FBYSxNQUFiLEVBQXFCQyxZQUFyQjtBQUNBVCxPQUFPUSxLQUFQLENBQWEsR0FBYixFQUFrQkUsZUFBbEI7QUFDQVYsT0FBT1csTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FaLE9BQU9XLE1BQVAsQ0FBYyxHQUFkLEVBQW1CRSxvQkFBbkI7QUFDQWIsT0FBT0csR0FBUCxDQUFXLHFCQUFYLEVBQWtDVyxxQkFBbEM7O2tCQUdlZCxNIiwiZmlsZSI6InRvZG8ucm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZSwgZ2V0U3R1ZGVudFRvRG9zLCB1cGRhdGVBbGwsIGRlbGV0ZU11bHRpcGxlfSBmcm9tICcuLi9jb250cm9sbGVycy90b2RvLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsKTtcbnJvdXRlci5wb3N0KCcvJywgY3JlYXRlKTtcbnJvdXRlci5nZXQoJy86aWQnLCBnZXRPbmUpO1xucm91dGVyLnBhdGNoKCcvOmlkJywgdXBkYXRlKTtcbnJvdXRlci5wYXRjaCgnLycsIHVwZGF0ZUFsbClcbnJvdXRlci5kZWxldGUoJy86aWQnLCBkZWxldGVPbmUpO1xucm91dGVyLmRlbGV0ZSgnLycsIGRlbGV0ZU11bHRpcGxlKVxucm91dGVyLmdldCgnL3N0dWRlbnQvOnN0dWRlbnRJRCcsIGdldFN0dWRlbnRUb0Rvcyk7XG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "updateAll",
        "delete",
        "deleteOne",
        "deleteMultiple",
        "getStudentToDos"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOQ,KAAP,CAAa,GAAb,EAAkBE,eAAlB;AACAV,OAAOW,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAZ,OAAOW,MAAP,CAAc,GAAd,EAAmBE,oBAAnB;AACAb,OAAOG,GAAP,CAAW,qBAAX,EAAkCW,qBAAlC;;kBAGed,M",
      "file": "todo.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne, getStudentToDos, updateAll, deleteMultiple} from '../controllers/todo.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.patch('/', updateAll)\nrouter.delete('/:id', deleteOne);\nrouter.delete('/', deleteMultiple)\nrouter.get('/student/:studentID', getStudentToDos);\n\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/todo.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "Student",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Student",
                "local": "Student"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../models/todo",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Todo"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentToDos",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne",
            "updateAll",
            "deleteMultiple"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentToDos",
              "exported": "getStudentToDos"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            },
            {
              "kind": "local",
              "local": "updateAll",
              "exported": "updateAll"
            },
            {
              "kind": "local",
              "local": "deleteMultiple",
              "exported": "deleteMultiple"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/todo.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/todo.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.controller.js",
      "sourceFileName": "todo.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteMultiple = exports.updateAll = exports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentToDos = undefined;\n\nvar _user = require('../models/user');\n\nvar _todo = require('../models/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentToDos = exports.getStudentToDos = function getStudentToDos(req, res) {\n  _todo2.default.find({\n    student: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _todo2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _todo2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  var _req$body = req.body,\n      text = _req$body.text,\n      student = _req$body.student,\n      createTime = _req$body.createTime,\n      color = _req$body.color;\n\n  new _todo2.default({ text: text, student: student, createTime: createTime, color: color }).save().then(function (data) {\n    console.log({ data: data });\n    res.status(201).json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  _todo2.default.findByIdAndUpdate(req.params.id, data).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _todo2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar updateAll = exports.updateAll = function updateAll(req, res) {\n  _todo2.default.update({}, { $set: { done: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar deleteMultiple = exports.deleteMultiple = function deleteMultiple(req, res) {\n  _todo2.default.update({ done: true }, { $set: { deleted: true } }, { multi: true }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50VG9Eb3MiLCJyZXEiLCJyZXMiLCJUb2RvIiwiZmluZCIsInN0dWRlbnQiLCJwYXJhbXMiLCJzdHVkZW50SUQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJjb25zb2xlIiwibG9nIiwiZXJyIiwic3RhdHVzIiwic2VuZCIsImdldEFsbCIsImdldE9uZSIsImZpbmRCeUlkIiwiaWQiLCJjcmVhdGUiLCJib2R5IiwidGV4dCIsImNyZWF0ZVRpbWUiLCJjb2xvciIsInNhdmUiLCJ1cGRhdGUiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCIsInNlbmRTdGF0dXMiLCJ1cGRhdGVBbGwiLCIkc2V0IiwiZG9uZSIsIm11bHRpIiwiZGVsZXRlTXVsdGlwbGUiLCJkZWxldGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLDRDQUFrQixTQUFsQkEsZUFBa0IsQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDMUNDLGlCQUFLQyxJQUFMLENBQVU7QUFDVkMsYUFBU0osSUFBSUssTUFBSixDQUFXQztBQURWLEdBQVYsRUFFQ0MsSUFGRCxHQUdDQyxJQUhELENBR007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUhOLEVBSUNDLEtBSkQsQ0FJTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FQRDtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENDLGlCQUFLQyxJQUFMLEdBQVlJLElBQVosR0FDQ0MsSUFERCxDQUNNO0FBQUEsV0FBUVAsSUFB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LFdBQVFQLElBQUlRLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPLGVBQU87QUFDWkMsWUFBUUMsR0FBUixDQUFZQyxHQUFaO0FBQ0FiLFFBQUljLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckI7QUFDRCxHQUxEO0FBTUQsQ0FQTTs7QUFTQSxJQUFNdUIsMENBQWlCLFNBQWpCQSxjQUFpQixDQUFDckMsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDMUNDLGlCQUFLeUIsTUFBTCxDQUFZLEVBQUNRLE1BQUssSUFBTixFQUFaLEVBQXlCLEVBQUNELE1BQU0sRUFBQ0ksU0FBUyxJQUFWLEVBQVAsRUFBekIsRUFBa0QsRUFBQ0YsT0FBTyxJQUFSLEVBQWxELEVBQ0M1QixJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFBQSxHQUROLEVBRUNDLEtBRkQsQ0FFTyxlQUFPO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWUMsR0FBWjtBQUNBYixRQUFJYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0QsR0FMRDtBQU1ELENBUE0iLCJmaWxlIjoidG9kby5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge1N0dWRlbnQsIFVTRVJfUk9MRVN9IGZyb20gJy4uL21vZGVscy91c2VyJztcbmltcG9ydCBUb2RvIGZyb20gJy4uL21vZGVscy90b2RvJ1xuXG5leHBvcnQgY29uc3QgZ2V0U3R1ZGVudFRvRG9zID0gKHJlcSxyZXMpID0+IHtcbiAgVG9kby5maW5kKHtcbiAgc3R1ZGVudDogcmVxLnBhcmFtcy5zdHVkZW50SUQsXG59KS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycilcbiAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRBbGwgPSAocmVxLCByZXMpID0+IHtcbiAgVG9kby5maW5kKCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldE9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBUb2RvLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge3RleHQsc3R1ZGVudCwgY3JlYXRlVGltZSwgY29sb3J9ID0gcmVxLmJvZHk7XG4gIG5ldyBUb2RvKHt0ZXh0LHN0dWRlbnQsIGNyZWF0ZVRpbWUsIGNvbG9yfSkuc2F2ZSgpXG4gIC50aGVuKGRhdGEgPT4ge1xuICAgIGNvbnNvbGUubG9nKHtkYXRhfSk7XG4gICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe2RhdGF9KX0pXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xuICAvLyB0b2RvOiBjaGVjayBpZiB0aGUgY3VycmVudENvaG9ydCBpcyB2YWxpZCBhbmQgdGhlbiBjb250aW51ZVxuICBUb2RvLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIGRhdGEpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfSk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVPbmUgPSAocmVxLCByZXMpID0+IHtcbiAgVG9kby5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKCgpID0+IHJlcy5zZW5kU3RhdHVzKDIwNCkpICBcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUFsbCA9IChyZXEsIHJlcykgPT4geyBcbiAgVG9kby51cGRhdGUoe30sIHskc2V0OiB7ZG9uZTogdHJ1ZX19LCB7bXVsdGk6IHRydWV9KVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTtcbiAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU11bHRpcGxlID0gKHJlcSwgcmVzKSA9PiB7XG4gIFRvZG8udXBkYXRlKHtkb25lOnRydWV9LCB7JHNldDoge2RlbGV0ZWQ6IHRydWV9fSwge211bHRpOiB0cnVlfSlcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycik7XG4gIH0pXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.controller.js"
      ],
      "names": [
        "getStudentToDos",
        "req",
        "res",
        "Todo",
        "find",
        "student",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "createTime",
        "color",
        "save",
        "update",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus",
        "updateAll",
        "$set",
        "done",
        "multi",
        "deleteMultiple",
        "deleted"
      ],
      "mappings": "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",
      "file": "todo.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "\nimport {Student, USER_ROLES} from '../models/user';\nimport Todo from '../models/todo'\n\nexport const getStudentToDos = (req,res) => {\n  Todo.find({\n  student: req.params.studentID,\n}).exec()\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)\n  });\n}\n\nexport const getAll = (req, res) => {\n  Todo.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Todo.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  const {text,student, createTime, color} = req.body;\n  new Todo({text,student, createTime, color}).save()\n  .then(data => {\n    console.log({data});\n    res.status(201).json({data})})\n  .catch(err => res.status(500).send(err));\n}\n\nexport const update = (req, res) => {\n  const data = req.body;\n  // todo: check if the currentCohort is valid and then continue\n  Todo.findByIdAndUpdate(req.params.id, data)\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err)});\n}\n\nexport const deleteOne = (req, res) => {\n  Todo.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))  \n  .catch(err => res.status(500).send(err));\n}\n\nexport const updateAll = (req, res) => { \n  Todo.update({}, {$set: {done: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n\nexport const deleteMultiple = (req, res) => {\n  Todo.update({done:true}, {$set: {deleted: true}}, {multi: true})\n  .then(data => res.json({data}))\n  .catch(err => {\n    console.log(err);\n    res.status(500).send(err);\n  })\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/todo.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/todo.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/todo.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "todo.js",
      "sourceFileName": "todo.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "todo"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Todo', new Schema({\n  text: { type: String, required: true },\n  deleted: { type: Boolean, default: false },\n  done: { type: Boolean, default: false },\n  createTime: Date,\n  color: String,\n  student: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG8uanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJkb25lIiwiY3JlYXRlVGltZSIsIkRhdGUiLCJjb2xvciIsInN0dWRlbnQiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0lBQ09BLE0sR0FBVUMsa0IsQ0FBVkQsTTtrQkFFUUMsbUJBQVNDLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlGLE1BQUosQ0FBVztBQUMvQ0csUUFBTSxFQUFDQyxNQUFLQyxNQUFOLEVBQWNDLFVBQVMsSUFBdkIsRUFEeUM7QUFFL0NDLFdBQVMsRUFBQ0gsTUFBS0ksT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBRnNDO0FBRy9DQyxRQUFNLEVBQUNOLE1BQUtJLE9BQU4sRUFBZUMsU0FBUSxLQUF2QixFQUh5QztBQUkvQ0UsY0FBWUMsSUFKbUM7QUFLL0NDLFNBQU9SLE1BTHdDO0FBTS9DUyxXQUFTO0FBQ0xWLFVBQU1KLE9BQU9lLEtBQVAsQ0FBYUMsUUFEZDtBQUVMQyxTQUFLO0FBRkE7QUFOc0MsQ0FBWCxDQUF2QixDIiwiZmlsZSI6InRvZG8uanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdUb2RvJywgbmV3IFNjaGVtYSh7XG4gIHRleHQ6IHt0eXBlOlN0cmluZywgcmVxdWlyZWQ6dHJ1ZX0sXG4gIGRlbGV0ZWQ6IHt0eXBlOkJvb2xlYW4sIGRlZmF1bHQ6ZmFsc2V9LFxuICBkb25lOiB7dHlwZTpCb29sZWFuLCBkZWZhdWx0OmZhbHNlfSxcbiAgY3JlYXRlVGltZTogRGF0ZSxcbiAgY29sb3I6IFN0cmluZyxcbiAgc3R1ZGVudDoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9XG4gIH0pXG4pXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "todo.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "deleted",
        "Boolean",
        "default",
        "done",
        "createTime",
        "Date",
        "color",
        "student",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,WAAS,EAACH,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAFsC;AAG/CC,QAAM,EAACN,MAAKI,OAAN,EAAeC,SAAQ,KAAvB,EAHyC;AAI/CE,cAAYC,IAJmC;AAK/CC,SAAOR,MALwC;AAM/CS,WAAS;AACLV,UAAMJ,OAAOe,KAAP,CAAaC,QADd;AAELC,SAAK;AAFA;AANsC,CAAX,CAAvB,C",
      "file": "todo.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nexport default mongoose.model('Todo', new Schema({\n  text: {type:String, required:true},\n  deleted: {type:Boolean, default:false},\n  done: {type:Boolean, default:false},\n  createTime: Date,\n  color: String,\n  student: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    }\n  })\n)\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/note.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/note.controller",
            "imported": [
              "getStudentNotes",
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getStudentNotes",
                "local": "getStudentNotes"
              },
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/note.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/note.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.routes.js",
      "sourceFileName": "note.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _note = require('../controllers/note.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _note.getAll);\nrouter.post('/', _note.create);\nrouter.get('/:id', _note.getOne);\nrouter.patch('/:id', _note.update);\nrouter.delete('/:id', _note.deleteOne);\nrouter.get('/student/:studentID', _note.getStudentNotes);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiLCJnZXRTdHVkZW50Tm90ZXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCO0FBQ0FYLE9BQU9HLEdBQVAsQ0FBVyxxQkFBWCxFQUFrQ1MscUJBQWxDOztrQkFFZVosTSIsImZpbGUiOiJub3RlLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0U3R1ZGVudE5vdGVzLCBnZXRBbGwsIGdldE9uZSwgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZU9uZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvbm90ZS5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIGdldEFsbCk7XG5yb3V0ZXIucG9zdCgnLycsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lKTtcbnJvdXRlci5wYXRjaCgnLzppZCcsIHVwZGF0ZSk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZGVsZXRlT25lKTtcbnJvdXRlci5nZXQoJy9zdHVkZW50LzpzdHVkZW50SUQnLCBnZXRTdHVkZW50Tm90ZXMpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne",
        "getStudentNotes"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;AACAX,OAAOG,GAAP,CAAW,qBAAX,EAAkCS,qBAAlC;;kBAEeZ,M",
      "file": "note.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getStudentNotes, getAll, getOne, create, update, deleteOne} from '../controllers/note.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\nrouter.get('/student/:studentID', getStudentNotes);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/note.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/note",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getStudentNotes",
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getStudentNotes",
              "exported": "getStudentNotes"
            },
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/note.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/note.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.controller.js",
      "sourceFileName": "note.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note.controller"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = exports.getStudentNotes = undefined;\n\nvar _note = require(\"../models/note\");\n\nvar _note2 = _interopRequireDefault(_note);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getStudentNotes = exports.getStudentNotes = function getStudentNotes(req, res) {\n  _note2.default.find({\n    user: req.params.studentID\n  }).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  console.log(\" in get all\");\n  _note2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _note2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  console.log(\"In create Note\");\n  var _req$body = req.body,\n      text = _req$body.text,\n      user = _req$body.user,\n      color = _req$body.color,\n      createdTime = _req$body.createdTime;\n  // console.log(req);\n\n  new _note2.default({ text: text, user: user, color: color, createdTime: createdTime }).save().then(function (data) {\n    return res.status(201).json({ data: data });\n  }).catch(function (err) {\n    console.log(err);\n    res.status(500).send(err);\n  });\n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body2 = req.body,\n      text = _req$body2.text,\n      color = _req$body2.color,\n      deleted = _req$body2.deleted;\n\n  _note2.default.findByIdAndUpdate(req.params.id, { text: text, color: color, deleted: deleted }).then(function (data) {\n    res.json({ data: data });\n    console.log(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n\n  _note2.default.remove({ _id: req.params.id }).exec().then(function (data) {\n    return res.send(data);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRTdHVkZW50Tm90ZXMiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJ1c2VyIiwicGFyYW1zIiwic3R1ZGVudElEIiwiZXhlYyIsInRoZW4iLCJqc29uIiwiZGF0YSIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsImVyciIsInN0YXR1cyIsInNlbmQiLCJnZXRBbGwiLCJnZXRPbmUiLCJmaW5kQnlJZCIsImlkIiwiY3JlYXRlIiwiYm9keSIsInRleHQiLCJjb2xvciIsImNyZWF0ZWRUaW1lIiwic2F2ZSIsInVwZGF0ZSIsImRlbGV0ZWQiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsImRlbGV0ZU9uZSIsInJlbW92ZSIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFHTyxJQUFNQSw0Q0FBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNDQyxpQkFBU0MsSUFBVCxDQUFjO0FBQ1pDLFVBQU9KLElBQUlLLE1BQUosQ0FBV0M7QUFETixHQUFkLEVBRUdDLElBRkgsR0FFVUMsSUFGVixDQUVlO0FBQUEsV0FBUVAsSUFBSVEsSUFBSixDQUFTLEVBQUNDLFVBQUQsRUFBVCxDQUFSO0FBQUEsR0FGZixFQUdJQyxLQUhKLENBR1UsZUFBTztBQUNiQyxZQUFRQyxHQUFSLENBQVlDLEdBQVo7QUFDQWIsUUFBSWMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUEwQixHQUw5QjtBQVFELENBVE07O0FBV0EsSUFBTUcsMEJBQVMsU0FBVEEsTUFBUyxDQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENXLFVBQVFDLEdBQVIsQ0FBWSxhQUFaO0FBQ0FYLGlCQUFTQyxJQUFULEdBQWdCSSxJQUFoQixHQUNDQyxJQURELENBQ007QUFBQSxXQUFRUCxJQUFJUSxJQUFKLENBQVMsRUFBQ0MsVUFBRCxFQUFULENBQVI7QUFB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YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVzb3VyY2UgZnJvbSAnLi4vbW9kZWxzL25vdGUnO1xuXG5cbmV4cG9ydCBjb25zdCBnZXRTdHVkZW50Tm90ZXMgPSAocmVxLCByZXMpID0+IHtcbiAgUmVzb3VyY2UuZmluZCh7XG4gICAgdXNlciA6IHJlcS5wYXJhbXMuc3R1ZGVudElEXG4gIH0pLmV4ZWMoKS50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KVxuICAgICkuY2F0Y2goZXJyID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpfVxuICAgICk7XG5cbn1cblxuZXhwb3J0IGNvbnN0IGdldEFsbCA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zb2xlLmxvZyhcIiBpbiBnZXQgYWxsXCIpO1xuICBSZXNvdXJjZS5maW5kKCkuZXhlYygpXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldE9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5maW5kQnlJZChyZXEucGFyYW1zLmlkKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiSW4gY3JlYXRlIE5vdGVcIilcbiAgY29uc3Qge3RleHQsdXNlcixjb2xvcixjcmVhdGVkVGltZX0gPSByZXEuYm9keTtcbiAgLy8gY29uc29sZS5sb2cocmVxKTtcbiAgbmV3IFJlc291cmNlKHt0ZXh0LHVzZXIsY29sb3IsY3JlYXRlZFRpbWV9KS5zYXZlKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuc3RhdHVzKDIwMSkuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKX0pO1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHt0ZXh0LCBjb2xvciwgZGVsZXRlZH0gPSByZXEuYm9keTtcbiAgUmVzb3VyY2UuZmluZEJ5SWRBbmRVcGRhdGUocmVxLnBhcmFtcy5pZCx7dGV4dCwgY29sb3IsIGRlbGV0ZWR9KVxuICAudGhlbihkYXRhID0+IHtcbiAgICByZXMuanNvbih7ZGF0YX0pO1xuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICB9KVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFxuICBSZXNvdXJjZS5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKChkYXRhKSA9PiByZXMuc2VuZChkYXRhKSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.controller.js"
      ],
      "names": [
        "getStudentNotes",
        "req",
        "res",
        "Resource",
        "find",
        "user",
        "params",
        "studentID",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "console",
        "log",
        "err",
        "status",
        "send",
        "getAll",
        "getOne",
        "findById",
        "id",
        "create",
        "body",
        "text",
        "color",
        "createdTime",
        "save",
        "update",
        "deleted",
        "findByIdAndUpdate",
        "deleteOne",
        "remove",
        "_id"
      ],
      "mappings": "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",
      "file": "note.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/note';\n\n\nexport const getStudentNotes = (req, res) => {\n  Resource.find({\n    user : req.params.studentID\n  }).exec().then(data => res.json({data})\n    ).catch(err => {\n      console.log(err);\n      res.status(500).send(err)}\n    );\n\n}\n\nexport const getAll = (req, res) => {\n  console.log(\" in get all\");\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  console.log(\"In create Note\")\n  const {text,user,color,createdTime} = req.body;\n  // console.log(req);\n  new Resource({text,user,color,createdTime}).save()\n  .then(data => res.status(201).json({data}))\n  .catch(err => {\n    console.log(err)\n    res.status(500).send(err)});\n}\n\nexport const update = (req, res) => {\n  const {text, color, deleted} = req.body;\n  Resource.findByIdAndUpdate(req.params.id,{text, color, deleted})\n  .then(data => {\n    res.json({data});\n    console.log(data);\n  })\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  \n  Resource.remove({_id:req.params.id}).exec()\n  .then((data) => res.send(data))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/note.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "./user.js",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/note.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/note.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "note.js",
      "sourceFileName": "note.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "note"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _user = require('./user.js');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\nexports.default = _mongoose2.default.model('Note', new Schema({\n  text: { type: String, required: true },\n  createdTime: Date,\n  deleted: { type: Boolean, default: false },\n  color: String,\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGUuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInRleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJjcmVhdGVkVGltZSIsIkRhdGUiLCJkZWxldGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJjb2xvciIsInVzZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUVBOzs7Ozs7SUFET0EsTSxHQUFVQyxrQixDQUFWRCxNO2tCQUVRQyxtQkFBU0MsS0FBVCxDQUFlLE1BQWYsRUFBdUIsSUFBSUYsTUFBSixDQUFXO0FBQy9DRyxRQUFNLEVBQUNDLE1BQUtDLE1BQU4sRUFBY0MsVUFBUyxJQUF2QixFQUR5QztBQUUvQ0MsZUFBYUMsSUFGa0M7QUFHL0NDLFdBQVMsRUFBQ0wsTUFBS00sT0FBTixFQUFlQyxTQUFRLEtBQXZCLEVBSHNDO0FBSS9DQyxTQUFPUCxNQUp3QztBQUsvQ1EsUUFBTTtBQUNGVCxVQUFNSixPQUFPYyxLQUFQLENBQWFDLFFBRGpCO0FBRUZDLFNBQUs7QUFGSDs7QUFMeUMsQ0FBWCxDQUF2QixDIiwiZmlsZSI6Im5vdGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtTY2hlbWF9ID0gbW9uZ29vc2U7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi91c2VyLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnTm90ZScsIG5ldyBTY2hlbWEoe1xuICB0ZXh0OiB7dHlwZTpTdHJpbmcsIHJlcXVpcmVkOnRydWV9LFxuICBjcmVhdGVkVGltZTogRGF0ZSxcbiAgZGVsZXRlZDoge3R5cGU6Qm9vbGVhbiwgZGVmYXVsdDpmYWxzZX0sXG4gIGNvbG9yOiBTdHJpbmcsXG4gIHVzZXI6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ1VzZXInXG4gICAgfSxcbiAgXG4gIH0pKTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "note.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "model",
        "text",
        "type",
        "String",
        "required",
        "createdTime",
        "Date",
        "deleted",
        "Boolean",
        "default",
        "color",
        "user",
        "Types",
        "ObjectId",
        "ref"
      ],
      "mappings": ";;;;;;AAAA;;;;AAEA;;;;;;IADOA,M,GAAUC,kB,CAAVD,M;kBAEQC,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIF,MAAJ,CAAW;AAC/CG,QAAM,EAACC,MAAKC,MAAN,EAAcC,UAAS,IAAvB,EADyC;AAE/CC,eAAaC,IAFkC;AAG/CC,WAAS,EAACL,MAAKM,OAAN,EAAeC,SAAQ,KAAvB,EAHsC;AAI/CC,SAAOP,MAJwC;AAK/CQ,QAAM;AACFT,UAAMJ,OAAOc,KAAP,CAAaC,QADjB;AAEFC,SAAK;AAFH;;AALyC,CAAX,CAAvB,C",
      "file": "note.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\nimport User from \"./user.js\";\nexport default mongoose.model('Note', new Schema({\n  text: {type:String, required:true},\n  createdTime: Date,\n  deleted: {type:Boolean, default:false},\n  color: String,\n  user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n  \n  }));"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/link.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Express"
              }
            ]
          },
          {
            "source": "../controllers/link.controller",
            "imported": [
              "getAll",
              "getOne",
              "create",
              "update",
              "deleteOne"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getAll",
                "local": "getAll"
              },
              {
                "kind": "named",
                "imported": "getOne",
                "local": "getOne"
              },
              {
                "kind": "named",
                "imported": "create",
                "local": "create"
              },
              {
                "kind": "named",
                "imported": "update",
                "local": "update"
              },
              {
                "kind": "named",
                "imported": "deleteOne",
                "local": "deleteOne"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/link.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/link.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.routes.js",
      "sourceFileName": "link.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _link = require('../controllers/link.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.get('/', _link.getAll);\nrouter.post('/', _link.create);\nrouter.get('/:id', _link.getOne);\nrouter.patch('/:id', _link.update);\nrouter.delete('/:id', _link.deleteOne);\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIkV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJnZXRBbGwiLCJwb3N0IiwiY3JlYXRlIiwiZ2V0T25lIiwicGF0Y2giLCJ1cGRhdGUiLCJkZWxldGUiLCJkZWxldGVPbmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsWUFBaEI7QUFDQUosT0FBT0ssSUFBUCxDQUFZLEdBQVosRUFBaUJDLFlBQWpCO0FBQ0FOLE9BQU9HLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSSxZQUFuQjtBQUNBUCxPQUFPUSxLQUFQLENBQWEsTUFBYixFQUFxQkMsWUFBckI7QUFDQVQsT0FBT1UsTUFBUCxDQUFjLE1BQWQsRUFBc0JDLGVBQXRCOztrQkFFZVgsTSIsImZpbGUiOiJsaW5rLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7Z2V0QWxsLCBnZXRPbmUsIGNyZWF0ZSwgdXBkYXRlLCBkZWxldGVPbmV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2xpbmsuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGwpO1xucm91dGVyLnBvc3QoJy8nLCBjcmVhdGUpO1xucm91dGVyLmdldCgnLzppZCcsIGdldE9uZSk7XG5yb3V0ZXIucGF0Y2goJy86aWQnLCB1cGRhdGUpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsIGRlbGV0ZU9uZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.routes.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "get",
        "getAll",
        "post",
        "create",
        "getOne",
        "patch",
        "update",
        "delete",
        "deleteOne"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiBC,YAAjB;AACAN,OAAOG,GAAP,CAAW,MAAX,EAAmBI,YAAnB;AACAP,OAAOQ,KAAP,CAAa,MAAb,EAAqBC,YAArB;AACAT,OAAOU,MAAP,CAAc,MAAd,EAAsBC,eAAtB;;kBAEeX,M",
      "file": "link.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import Express from 'express';\nimport {getAll, getOne, create, update, deleteOne} from '../controllers/link.controller';\n\nconst router = Express.Router();\n\nrouter.get('/', getAll);\nrouter.post('/', create);\nrouter.get('/:id', getOne);\nrouter.patch('/:id', update);\nrouter.delete('/:id', deleteOne);\n\nexport default router;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/link.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/link",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Resource"
              }
            ]
          },
          {
            "source": "../util/watsonURL",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getWatsonData"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAll",
            "getOne",
            "create",
            "update",
            "deleteOne"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAll",
              "exported": "getAll"
            },
            {
              "kind": "local",
              "local": "getOne",
              "exported": "getOne"
            },
            {
              "kind": "local",
              "local": "create",
              "exported": "create"
            },
            {
              "kind": "local",
              "local": "update",
              "exported": "update"
            },
            {
              "kind": "local",
              "local": "deleteOne",
              "exported": "deleteOne"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/link.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/link.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.controller.js",
      "sourceFileName": "link.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteOne = exports.update = exports.create = exports.getOne = exports.getAll = undefined;\n\nvar _link = require('../models/link');\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _watsonURL = require('../util/watsonURL');\n\nvar _watsonURL2 = _interopRequireDefault(_watsonURL);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAll = exports.getAll = function getAll(req, res) {\n  _link2.default.find().exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar getOne = exports.getOne = function getOne(req, res) {\n  _link2.default.findById(req.params.id).exec().then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar create = exports.create = function create(req, res) {\n  // console.log(\"This is links POST\")\n  console.log(req.body);\n\n  var text = req.body.text;\n\n  console.log(req.body);\n  (0, _watsonURL2.default)(text).then(function (d) {\n    // console.log(link)\n    return new _link2.default({ data: d, url: text }).save().catch(function (e) {\n      return e;\n    });\n  }).then(function (data) {\n    return res.status(200).json({\n      \"response_type\": \"in_channel\",\n      \"text\": \"Thanks for sharing! Your URL has been added\",\n      \"attachments\": [{\n        \"text\": text }]\n    });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n};\n\nvar update = exports.update = function update(req, res) {\n  var _req$body = req.body,\n      url = _req$body.url,\n      data = _req$body.data;\n\n  _link2.default.findByIdAndUpdate(req.params.id, { type: type, ttl: ttl, tags: tags, data: data }).then(function (data) {\n    return res.json({ data: data });\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n\nvar deleteOne = exports.deleteOne = function deleteOne(req, res) {\n  _link2.default.remove({ _id: req.params.id }).exec().then(function () {\n    return res.sendStatus(204);\n  }).catch(function (err) {\n    return res.status(500).send(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJSZXNvdXJjZSIsImZpbmQiLCJleGVjIiwidGhlbiIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwiZ2V0T25lIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwidGV4dCIsImQiLCJ1cmwiLCJzYXZlIiwiZSIsInVwZGF0ZSIsImZpbmRCeUlkQW5kVXBkYXRlIiwidHlwZSIsInR0bCIsInRhZ3MiLCJkZWxldGVPbmUiLCJyZW1vdmUiLCJfaWQiLCJzZW5kU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsMEJBQVMsU0FBVEEsTUFBUyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNDLElBQVQsR0FBZ0JDLElBQWhCLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUMsMEJBQVMsU0FBVEEsTUFBUyxDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0MsaUJBQVNXLFFBQVQsQ0FBa0JiLElBQUljLE1BQUosQ0FBV0MsRUFBN0IsRUFBaUNYLElBQWpDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk07O0FBTUEsSUFBTUssMEJBQVMsU0FBVEEsTUFBUyxDQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEM7QUFDQWdCLFVBQVFDLEdBQVIsQ0FBWWxCLElBQUltQixJQUFoQjs7QUFGa0MsTUFJM0JDLElBSjJCLEdBSW5CcEIsSUFBSW1CLElBSmUsQ0FJM0JDLElBSjJCOztBQUtsQ0gsVUFBUUMsR0FBUixDQUFZbEIsSUFBSW1CLElBQWhCO0FBQ0EsMkJBQWNDLElBQWQsRUFDQ2YsSUFERCxDQUNNLGFBQUs7QUFDVDtBQUNELFdBQU8sSUFBSUgsY0FBSixDQUFhLEVBQUNLLE1BQUtjLENBQU4sRUFBU0MsS0FBSUYsSUFBYixFQUFiLEVBQ05HLElBRE0sR0FFTmYsS0FGTSxDQUVBLGFBQUs7QUFBQyxhQUFPZ0IsQ0FBUDtBQUFTLEtBRmYsQ0FBUDtBQU1BLEdBVEQsRUFVQ25CLElBVkQsQ0FVTTtBQUFBLFdBQVFKLElBQUlRLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUNqQyx1QkFBaUIsWUFEZ0I7QUFFakMsY0FBUSw2Q0FGeUI7QUFHakMscUJBQWUsQ0FDWDtBQUNJLGdCQUFRYyxJQURaLEVBRFc7QUFIa0IsS0FBckIsQ0FBUjtBQUFBLEdBVk4sRUFrQkNaLEtBbEJELENBa0JPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FsQlA7QUFtQkE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0QsQ0FoQ007O0FBa0NBLElBQU1jLDBCQUFTLFNBQVRBLE1BQVMsQ0FBQ3pCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQUEsa0JBQ1pELElBQUltQixJQURRO0FBQUEsTUFDMUJHLEdBRDBCLGFBQzFCQSxHQUQwQjtBQUFBLE1BQ3BCZixJQURvQixhQUNwQkEsSUFEb0I7O0FBRWxDTCxpQkFBU3dCLGlCQUFULENBQTJCMUIsSUFBSWMsTUFBSixDQUFXQyxFQUF0QyxFQUEwQyxFQUFFWSxVQUFGLEVBQVFDLFFBQVIsRUFBYUMsVUFBYixFQUFtQnRCLFVBQW5CLEVBQTFDLEVBQ0NGLElBREQsQ0FDTTtBQUFBLFdBQVFKLElBQUlLLElBQUosQ0FBUyxFQUFDQyxVQUFELEVBQVQsQ0FBUjtBQUFBLEdBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBTE07O0FBT0EsSUFBTW1CLGdDQUFZLFNBQVpBLFNBQVksQ0FBQzlCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3JDQyxpQkFBUzZCLE1BQVQsQ0FBZ0IsRUFBQ0MsS0FBSWhDLElBQUljLE1BQUosQ0FBV0MsRUFBaEIsRUFBaEIsRUFBcUNYLElBQXJDLEdBQ0NDLElBREQsQ0FDTTtBQUFBLFdBQU1KLElBQUlnQyxVQUFKLENBQWUsR0FBZixDQUFOO0FBQUEsR0FETixFQUVDekIsS0FGRCxDQUVPO0FBQUEsV0FBT1AsSUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxHQUFyQixDQUFQO0FBQUEsR0FGUDtBQUdELENBSk0iLCJmaWxlIjoibGluay5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc291cmNlIGZyb20gJy4uL21vZGVscy9saW5rJztcbmltcG9ydCBnZXRXYXRzb25EYXRhIGZyb20gJy4uL3V0aWwvd2F0c29uVVJMJ1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmQoKS5leGVjKClcbiAgLnRoZW4oZGF0YSA9PiByZXMuanNvbih7ZGF0YX0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0T25lID0gKHJlcSwgcmVzKSA9PiB7XG4gIFJlc291cmNlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQpLmV4ZWMoKVxuICAudGhlbihkYXRhID0+IHJlcy5qc29uKHtkYXRhfSkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAocmVxLCByZXMpID0+IHtcbiAgLy8gY29uc29sZS5sb2coXCJUaGlzIGlzIGxpbmtzIFBPU1RcIilcbiAgY29uc29sZS5sb2cocmVxLmJvZHkpXG5cbiAgY29uc3Qge3RleHR9ID0gcmVxLmJvZHk7XG4gIGNvbnNvbGUubG9nKHJlcS5ib2R5KVxuICBnZXRXYXRzb25EYXRhKHRleHQpXG4gIC50aGVuKGQgPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKGxpbmspXG4gICByZXR1cm4gbmV3IFJlc291cmNlKHtkYXRhOmQsIHVybDp0ZXh0fSlcbiAgIC5zYXZlKClcbiAgIC5jYXRjaChlID0+IHtyZXR1cm4gZX0pXG5cblxuXG4gIH0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgIFwicmVzcG9uc2VfdHlwZVwiOiBcImluX2NoYW5uZWxcIixcbiAgICBcInRleHRcIjogXCJUaGFua3MgZm9yIHNoYXJpbmchIFlvdXIgVVJMIGhhcyBiZWVuIGFkZGVkXCIgLFxuICAgIFwiYXR0YWNobWVudHNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgICBcInRleHRcIjogdGV4dCAgICAgICAgfVxuICAgIF1cbn0pKVxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycikpO1xuICAvLyAuY2F0Y2goZSA9PiBjb25zb2xlLmxvZyhlKSlcblxuICAvLyBjb25zb2xlLmxvZyhkYXRhKVxuXG4gIC8vIGNvbnN0IHt1cmx9ID0gcmVxLmJvZHk7XG4gIC8vIG5ldyBSZXNvdXJjZSh7dXJsLCBkYXRhfSkuc2F2ZSgpXG4gIC8vIFxufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdXJsICwgZGF0YX0gPSByZXEuYm9keVxuICBSZXNvdXJjZS5maW5kQnlJZEFuZFVwZGF0ZShyZXEucGFyYW1zLmlkLCB7IHR5cGUsIHR0bCwgdGFncywgZGF0YX0pXG4gIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oe2RhdGF9KSlcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9uZSA9IChyZXEsIHJlcykgPT4ge1xuICBSZXNvdXJjZS5yZW1vdmUoe19pZDpyZXEucGFyYW1zLmlkfSkuZXhlYygpXG4gIC50aGVuKCgpID0+IHJlcy5zZW5kU3RhdHVzKDIwNCkpXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKSk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.controller.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Resource",
        "find",
        "exec",
        "then",
        "json",
        "data",
        "catch",
        "status",
        "send",
        "err",
        "getOne",
        "findById",
        "params",
        "id",
        "create",
        "console",
        "log",
        "body",
        "text",
        "d",
        "url",
        "save",
        "e",
        "update",
        "findByIdAndUpdate",
        "type",
        "ttl",
        "tags",
        "deleteOne",
        "remove",
        "_id",
        "sendStatus"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASC,IAAT,GAAgBC,IAAhB,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMC,0BAAS,SAATA,MAAS,CAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCC,iBAASW,QAAT,CAAkBb,IAAIc,MAAJ,CAAWC,EAA7B,EAAiCX,IAAjC,GACCC,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM;;AAMA,IAAMK,0BAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAClC;AACAgB,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;;AAFkC,MAI3BC,IAJ2B,GAInBpB,IAAImB,IAJe,CAI3BC,IAJ2B;;AAKlCH,UAAQC,GAAR,CAAYlB,IAAImB,IAAhB;AACA,2BAAcC,IAAd,EACCf,IADD,CACM,aAAK;AACT;AACD,WAAO,IAAIH,cAAJ,CAAa,EAACK,MAAKc,CAAN,EAASC,KAAIF,IAAb,EAAb,EACNG,IADM,GAENf,KAFM,CAEA,aAAK;AAAC,aAAOgB,CAAP;AAAS,KAFf,CAAP;AAMA,GATD,EAUCnB,IAVD,CAUM;AAAA,WAAQJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjC,uBAAiB,YADgB;AAEjC,cAAQ,6CAFyB;AAGjC,qBAAe,CACX;AACI,gBAAQc,IADZ,EADW;AAHkB,KAArB,CAAR;AAAA,GAVN,EAkBCZ,KAlBD,CAkBO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAlBP;AAmBA;;AAEA;;AAEA;AACA;AACA;AACD,CAhCM;;AAkCA,IAAMc,0BAAS,SAATA,MAAS,CAACzB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACZD,IAAImB,IADQ;AAAA,MAC1BG,GAD0B,aAC1BA,GAD0B;AAAA,MACpBf,IADoB,aACpBA,IADoB;;AAElCL,iBAASwB,iBAAT,CAA2B1B,IAAIc,MAAJ,CAAWC,EAAtC,EAA0C,EAAEY,UAAF,EAAQC,QAAR,EAAaC,UAAb,EAAmBtB,UAAnB,EAA1C,EACCF,IADD,CACM;AAAA,WAAQJ,IAAIK,IAAJ,CAAS,EAACC,UAAD,EAAT,CAAR;AAAA,GADN,EAECC,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CALM;;AAOA,IAAMmB,gCAAY,SAAZA,SAAY,CAAC9B,GAAD,EAAMC,GAAN,EAAc;AACrCC,iBAAS6B,MAAT,CAAgB,EAACC,KAAIhC,IAAIc,MAAJ,CAAWC,EAAhB,EAAhB,EAAqCX,IAArC,GACCC,IADD,CACM;AAAA,WAAMJ,IAAIgC,UAAJ,CAAe,GAAf,CAAN;AAAA,GADN,EAECzB,KAFD,CAEO;AAAA,WAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AAAA,GAFP;AAGD,CAJM",
      "file": "link.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import Resource from '../models/link';\nimport getWatsonData from '../util/watsonURL'\n\nexport const getAll = (req, res) => {\n  Resource.find().exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const getOne = (req, res) => {\n  Resource.findById(req.params.id).exec()\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const create = (req, res) => {\n  // console.log(\"This is links POST\")\n  console.log(req.body)\n\n  const {text} = req.body;\n  console.log(req.body)\n  getWatsonData(text)\n  .then(d => {\n    // console.log(link)\n   return new Resource({data:d, url:text})\n   .save()\n   .catch(e => {return e})\n\n\n\n  })\n  .then(data => res.status(200).json({\n    \"response_type\": \"in_channel\",\n    \"text\": \"Thanks for sharing! Your URL has been added\" ,\n    \"attachments\": [\n        {\n            \"text\": text        }\n    ]\n}))\n  .catch(err => res.status(500).send(err));\n  // .catch(e => console.log(e))\n\n  // console.log(data)\n\n  // const {url} = req.body;\n  // new Resource({url, data}).save()\n  // \n}\n\nexport const update = (req, res) => {\n  const { url , data} = req.body\n  Resource.findByIdAndUpdate(req.params.id, { type, ttl, tags, data})\n  .then(data => res.json({data}))\n  .catch(err => res.status(500).send(err));\n}\n\nexport const deleteOne = (req, res) => {\n  Resource.remove({_id:req.params.id}).exec()\n  .then(() => res.sendStatus(204))\n  .catch(err => res.status(500).send(err));\n}\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/link.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/link.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models/link.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.js",
      "sourceFileName": "link.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Schema = _mongoose2.default.Schema;\n\n\nvar Link = _mongoose2.default.model('Link', new Schema({\n  data: Schema.Types.Mixed,\n  url: String\n}));\n\nexports.default = Link;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJMaW5rIiwibW9kZWwiLCJkYXRhIiwiVHlwZXMiLCJNaXhlZCIsInVybCIsIlN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztJQUNPQSxNLEdBQVVDLGtCLENBQVZELE07OztBQUVQLElBQU1FLE9BQU9ELG1CQUFTRSxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJSCxNQUFKLENBQVc7QUFDN0NJLFFBQUtKLE9BQU9LLEtBQVAsQ0FBYUMsS0FEMkI7QUFFN0NDLE9BQUtDO0FBRndDLENBQVgsQ0FBdkIsQ0FBYjs7a0JBS2VOLEkiLCJmaWxlIjoibGluay5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3Qge1NjaGVtYX0gPSBtb25nb29zZTtcblxuY29uc3QgTGluayA9IG1vbmdvb3NlLm1vZGVsKCdMaW5rJywgbmV3IFNjaGVtYSh7XG4gIGRhdGE6U2NoZW1hLlR5cGVzLk1peGVkLFxuICB1cmw6IFN0cmluZ1xufSkpO1xuXG5leHBvcnQgZGVmYXVsdCBMaW5rO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "Link",
        "model",
        "data",
        "Types",
        "Mixed",
        "url",
        "String"
      ],
      "mappings": ";;;;;;AAAA;;;;;;IACOA,M,GAAUC,kB,CAAVD,M;;;AAEP,IAAME,OAAOD,mBAASE,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AAC7CI,QAAKJ,OAAOK,KAAP,CAAaC,KAD2B;AAE7CC,OAAKC;AAFwC,CAAX,CAAvB,CAAb;;kBAKeN,I",
      "file": "link.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst {Schema} = mongoose;\n\nconst Link = mongoose.model('Link', new Schema({\n  data:Schema.Types.Mixed,\n  url: String\n}));\n\nexport default Link;\n"
      ]
    },
    "mtime": 1559498167644
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/watsonURL.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/watsonURL.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/watsonURL.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "watsonURL.js",
      "sourceFileName": "watsonURL.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "watsonURL"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _process$env = process.env,\n    WATSONUSER = _process$env.WATSONUSER,\n    WATSONPASS = _process$env.WATSONPASS;\n\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\nvar getWatsonData = function getWatsonData(link) {\n\n  var urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n  var urlRegex = new RegExp(urlFormat);\n\n  return new Promise(function (resolve, reject) {\n    console.log(\"$$$$$$$$$$$$$$\");\n    console.log(link);\n    console.log(urlRegex);\n\n    if (link.match(urlRegex)) {\n\n      var options = {\n        url: link,\n        features: {\n          concepts: {},\n          keywords: {\n            'sentiment': true,\n            'emotion': true\n          },\n          categories: {},\n          entities: {},\n          metadata: {},\n          relations: {},\n          semantic_roles: {}\n        }\n      };\n      nlu.analyze(options, function (err, res) {\n        if (err) {\n          console.log(err);\n          reject();\n        }\n        resolve(res);\n      });\n    } else {\n      reject(\"Please enter a valid URL\");\n    }\n  });\n};\n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexports.default = getWatsonData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdHNvblVSTC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiV0FUU09OVVNFUiIsIldBVFNPTlBBU1MiLCJOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEiLCJyZXF1aXJlIiwiY29uZmlnIiwic2lsZW50Iiwibmx1IiwidmVyc2lvbiIsInVybCIsImdldFdhdHNvbkRhdGEiLCJsaW5rIiwidXJsRm9ybWF0IiwidXJsUmVnZXgiLCJSZWdFeHAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbnNvbGUiLCJsb2ciLCJtYXRjaCIsIm9wdGlvbnMiLCJmZWF0dXJlcyIsImNvbmNlcHRzIiwia2V5d29yZHMiLCJjYXRlZ29yaWVzIiwiZW50aXRpZXMiLCJtZXRhZGF0YSIsInJlbGF0aW9ucyIsInNlbWFudGljX3JvbGVzIiwiYW5hbHl6ZSIsImVyciIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7bUJBQWtDQSxRQUFRQyxHO0lBQWxDQyxVLGdCQUFBQSxVO0lBQVlDLFUsZ0JBQUFBLFU7O0FBQ3BCLElBQUlDLGlDQUFpQ0MsUUFBUSw2REFBUixDQUFyQztBQUNBQSxRQUFRLFFBQVIsRUFBa0JDLE1BQWxCLENBQXlCO0FBQ3ZCQyxVQUFRO0FBRGUsQ0FBekIsRSxDQUVJOztBQUVKLElBQUlDLE1BQU0sSUFBSUosOEJBQUosQ0FBbUM7QUFDM0NLLFdBQVMsWUFEa0M7QUFFM0NDLE9BQUs7QUFGc0MsQ0FBbkMsQ0FBVjs7QUFNQSxJQUFNQyxnQkFBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLElBQUQsRUFBVTs7QUFFaEMsTUFBSUMsWUFBWSxtRkFBaEI7QUFDQSxNQUFJQyxXQUFXLElBQUlDLE1BQUosQ0FBV0YsU0FBWCxDQUFmOztBQUtDLFNBQU8sSUFBSUcsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBU0MsTUFBVCxFQUFvQjtBQUN0Q0MsWUFBUUMsR0FBUixDQUFZLGdCQUFaO0FBQ0FELFlBQVFDLEdBQVIsQ0FBWVIsSUFBWjtBQUNBTyxZQUFRQyxHQUFSLENBQVlOLFFBQVo7O0FBRUMsUUFBSUYsS0FBS1MsS0FBTCxDQUFXUCxRQUFYLENBQUosRUFBeUI7O0FBRzFCLFVBQUlRLFVBQVU7QUFDWlosYUFBS0UsSUFETztBQUVaVyxrQkFBVTtBQUNSQyxvQkFBVSxFQURGO0FBRVJDLG9CQUFVO0FBQ1IseUJBQWEsSUFETDtBQUVSLHVCQUFXO0FBRkgsV0FGRjtBQU1SQyxzQkFBWSxFQU5KO0FBT1JDLG9CQUFVLEVBUEY7QUFRUkMsb0JBQVUsRUFSRjtBQVNSQyxxQkFBVyxFQVRIO0FBVVJDLDBCQUFnQjtBQVZSO0FBRkUsT0FBZDtBQWVBdEIsVUFBSXVCLE9BQUosQ0FBWVQsT0FBWixFQUFxQixVQUFDVSxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQyxZQUFJRCxHQUFKLEVBQVM7QUFDUGIsa0JBQVFDLEdBQVIsQ0FBWVksR0FBWjtBQUNBZDtBQUNEO0FBQ0RELGdCQUFRZ0IsR0FBUjtBQUNELE9BTkQ7QUFPRCxLQXpCRSxNQXlCSTtBQUNMZixhQUFPLDBCQUFQO0FBQ0Q7QUFDQyxHQWpDTSxDQUFQO0FBa0NBLENBMUNEOztBQTRDQTs7a0JBRWVQLGEiLCJmaWxlIjoid2F0c29uVVJMLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFdBVFNPTlVTRVIsIFdBVFNPTlBBU1N9ID0gcHJvY2Vzcy5lbnZcbnZhciBOYXR1cmFsTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nVjEgPSByZXF1aXJlKCd3YXRzb24tZGV2ZWxvcGVyLWNsb3VkL25hdHVyYWwtbGFuZ3VhZ2UtdW5kZXJzdGFuZGluZy92MS5qcycpO1xucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKHtcbiAgc2lsZW50OiB0cnVlXG59KTsgLy8gIG9wdGlvbmFsXG5cbnZhciBubHUgPSBuZXcgTmF0dXJhbExhbmd1YWdlVW5kZXJzdGFuZGluZ1YxKHtcbiAgdmVyc2lvbjogJzIwMTgtMDQtMDUnLFxuICB1cmw6ICdodHRwczovL2dhdGV3YXkud2F0c29ucGxhdGZvcm0ubmV0L25hdHVyYWwtbGFuZ3VhZ2UtdW5kZXJzdGFuZGluZy9hcGknXG59KTtcblxuXG5jb25zdCBnZXRXYXRzb25EYXRhID0gKGxpbmspID0+IHtcblxubGV0IHVybEZvcm1hdCA9IC9bLWEtekEtWjAtOUA6JV9cXCsufiM/Ji8vPV17MiwyNTZ9XFwuW2Etel17Miw0fVxcYihcXC9bLWEtekEtWjAtOUA6JV9cXCsufiM/Ji8vPV0qKT8vZ2k7XG5sZXQgdXJsUmVnZXggPSBuZXcgUmVnRXhwKHVybEZvcm1hdClcblxuXG5cblxuIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpID0+IHtcbiAgY29uc29sZS5sb2coXCIkJCQkJCQkJCQkJCQkJFwiKVxuICBjb25zb2xlLmxvZyhsaW5rKVxuICBjb25zb2xlLmxvZyh1cmxSZWdleClcbiAgIFxuICAgaWYgKGxpbmsubWF0Y2godXJsUmVnZXgpKXtcblxuXG4gIHZhciBvcHRpb25zID0ge1xuICAgIHVybDogbGluayxcbiAgICBmZWF0dXJlczoge1xuICAgICAgY29uY2VwdHM6IHt9LFxuICAgICAga2V5d29yZHM6IHtcbiAgICAgICAgJ3NlbnRpbWVudCc6IHRydWUsXG4gICAgICAgICdlbW90aW9uJzogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGNhdGVnb3JpZXM6IHt9LFxuICAgICAgZW50aXRpZXM6IHt9LFxuICAgICAgbWV0YWRhdGE6IHt9LFxuICAgICAgcmVsYXRpb25zOiB7fSxcbiAgICAgIHNlbWFudGljX3JvbGVzOiB7fVxuICAgIH1cbiAgfTtcbiAgbmx1LmFuYWx5emUob3B0aW9ucywgKGVyciwgcmVzKSA9PiB7XG4gICAgaWYgKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHJlamVjdCgpO1xuICAgIH1cbiAgICByZXNvbHZlKHJlcyk7XG4gIH0pO1xufSBlbHNlIHtcbiAgcmVqZWN0KFwiUGxlYXNlIGVudGVyIGEgdmFsaWQgVVJMXCIpXG59XG4gfSlcbn0gXG5cbi8vIGdldFdhdHNvbkRhdGEoXCJnb29nbGUuY29tXCIpLnRoZW4oZCA9PiBjb25zb2xlLmxvZyhkKSkuY2F0Y2goZSA9PiBjb25zb2xlLmxvZyhlKSlcblxuZXhwb3J0IGRlZmF1bHQgZ2V0V2F0c29uRGF0YSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "watsonURL.js"
      ],
      "names": [
        "process",
        "env",
        "WATSONUSER",
        "WATSONPASS",
        "NaturalLanguageUnderstandingV1",
        "require",
        "config",
        "silent",
        "nlu",
        "version",
        "url",
        "getWatsonData",
        "link",
        "urlFormat",
        "urlRegex",
        "RegExp",
        "Promise",
        "resolve",
        "reject",
        "console",
        "log",
        "match",
        "options",
        "features",
        "concepts",
        "keywords",
        "categories",
        "entities",
        "metadata",
        "relations",
        "semantic_roles",
        "analyze",
        "err",
        "res"
      ],
      "mappings": ";;;;;mBAAkCA,QAAQC,G;IAAlCC,U,gBAAAA,U;IAAYC,U,gBAAAA,U;;AACpB,IAAIC,iCAAiCC,QAAQ,6DAAR,CAArC;AACAA,QAAQ,QAAR,EAAkBC,MAAlB,CAAyB;AACvBC,UAAQ;AADe,CAAzB,E,CAEI;;AAEJ,IAAIC,MAAM,IAAIJ,8BAAJ,CAAmC;AAC3CK,WAAS,YADkC;AAE3CC,OAAK;AAFsC,CAAnC,CAAV;;AAMA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAU;;AAEhC,MAAIC,YAAY,mFAAhB;AACA,MAAIC,WAAW,IAAIC,MAAJ,CAAWF,SAAX,CAAf;;AAKC,SAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACtCC,YAAQC,GAAR,CAAY,gBAAZ;AACAD,YAAQC,GAAR,CAAYR,IAAZ;AACAO,YAAQC,GAAR,CAAYN,QAAZ;;AAEC,QAAIF,KAAKS,KAAL,CAAWP,QAAX,CAAJ,EAAyB;;AAG1B,UAAIQ,UAAU;AACZZ,aAAKE,IADO;AAEZW,kBAAU;AACRC,oBAAU,EADF;AAERC,oBAAU;AACR,yBAAa,IADL;AAER,uBAAW;AAFH,WAFF;AAMRC,sBAAY,EANJ;AAORC,oBAAU,EAPF;AAQRC,oBAAU,EARF;AASRC,qBAAW,EATH;AAURC,0BAAgB;AAVR;AAFE,OAAd;AAeAtB,UAAIuB,OAAJ,CAAYT,OAAZ,EAAqB,UAACU,GAAD,EAAMC,GAAN,EAAc;AACjC,YAAID,GAAJ,EAAS;AACPb,kBAAQC,GAAR,CAAYY,GAAZ;AACAd;AACD;AACDD,gBAAQgB,GAAR;AACD,OAND;AAOD,KAzBE,MAyBI;AACLf,aAAO,0BAAP;AACD;AACC,GAjCM,CAAP;AAkCA,CA1CD;;AA4CA;;kBAEeP,a",
      "file": "watsonURL.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "sourcesContent": [
        "const { WATSONUSER, WATSONPASS} = process.env\nvar NaturalLanguageUnderstandingV1 = require('watson-developer-cloud/natural-language-understanding/v1.js');\nrequire('dotenv').config({\n  silent: true\n}); //  optional\n\nvar nlu = new NaturalLanguageUnderstandingV1({\n  version: '2018-04-05',\n  url: 'https://gateway.watsonplatform.net/natural-language-understanding/api'\n});\n\n\nconst getWatsonData = (link) => {\n\nlet urlFormat = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\nlet urlRegex = new RegExp(urlFormat)\n\n\n\n\n return new Promise((resolve,reject) => {\n  console.log(\"$$$$$$$$$$$$$$\")\n  console.log(link)\n  console.log(urlRegex)\n   \n   if (link.match(urlRegex)){\n\n\n  var options = {\n    url: link,\n    features: {\n      concepts: {},\n      keywords: {\n        'sentiment': true,\n        'emotion': true\n      },\n      categories: {},\n      entities: {},\n      metadata: {},\n      relations: {},\n      semantic_roles: {}\n    }\n  };\n  nlu.analyze(options, (err, res) => {\n    if (err) {\n      console.log(err);\n      reject();\n    }\n    resolve(res);\n  });\n} else {\n  reject(\"Please enter a valid URL\")\n}\n })\n} \n\n// getWatsonData(\"google.com\").then(d => console.log(d)).catch(e => console.log(e))\n\nexport default getWatsonData"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/user.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "../controllers/user.controller",
            "imported": [
              "updateUser"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "updateUser",
                "local": "updateUser"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/user.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/user.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.routes.js",
      "sourceFileName": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _user = require('../controllers/user.controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express2.default.Router();\n\nrouter.patch('/', _user.updateUser);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwYXRjaCIsInVwZGF0ZVVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTQyxrQkFBUUMsTUFBUixFQUFmOztBQUVBRixPQUFPRyxLQUFQLENBQWEsR0FBYixFQUFrQkMsZ0JBQWxCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJ1c2VyLnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHsgdXBkYXRlVXNlciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlcidcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuXG5yb3V0ZXIucGF0Y2goJy8nLCB1cGRhdGVVc2VyKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.routes.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "patch",
        "updateUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,KAAP,CAAa,GAAb,EAAkBC,gBAAlB;;AAEAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "user.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "import express from 'express'\nimport { updateUser } from '../controllers/user.controller'\n\nconst router = express.Router()\n\nrouter.patch('/', updateUser)\n\nmodule.exports = router"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/chrome-history.routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/chrome-history.routes.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes/chrome-history.routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.routes.js",
      "sourceFileName": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Express = require('express');\nvar controller = require('../controllers/chrome-history.controller');\nvar router = Express.Router();\nvar ip = require('ip');\nrouter.post('/insert', controller.insert);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n\nrouter.get('/historyresults', controller.getAllBrowserHistoryItems);\nrouter.get('/visitresults', controller.getAllBrowserVisitItems);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n\nexports.default = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJFeHByZXNzIiwicmVxdWlyZSIsImNvbnRyb2xsZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpcCIsInBvc3QiLCJpbnNlcnQiLCJnZXQiLCJnZXRBbGxCcm93c2VySGlzdG9yeUl0ZW1zIiwiZ2V0QWxsQnJvd3NlclZpc2l0SXRlbXMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsVUFBUUMsUUFBUSxTQUFSLENBQVo7QUFDQSxJQUFJQyxhQUFXRCxRQUFRLDBDQUFSLENBQWY7QUFDQSxJQUFNRSxTQUFPSCxRQUFRSSxNQUFSLEVBQWI7QUFDQSxJQUFNQyxLQUFHSixRQUFRLElBQVIsQ0FBVDtBQUNBRSxPQUFPRyxJQUFQLENBQVksU0FBWixFQUFzQkosV0FBV0ssTUFBakM7O0FBRUE7Ozs7Ozs7QUFPQUosT0FBT0ssR0FBUCxDQUFXLGlCQUFYLEVBQThCTixXQUFXTyx5QkFBekM7QUFDQU4sT0FBT0ssR0FBUCxDQUFXLGVBQVgsRUFBMkJOLFdBQVdRLHVCQUF0Qzs7QUFFQTs7Ozs7OztrQkFPZVAsTSIsImZpbGUiOiJjaHJvbWUtaGlzdG9yeS5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEV4cHJlc3M9cmVxdWlyZSgnZXhwcmVzcycpXG52YXIgY29udHJvbGxlcj1yZXF1aXJlKCcuLi9jb250cm9sbGVycy9jaHJvbWUtaGlzdG9yeS5jb250cm9sbGVyJylcbmNvbnN0IHJvdXRlcj1FeHByZXNzLlJvdXRlcigpXG5jb25zdCBpcD1yZXF1aXJlKCdpcCcpXG5yb3V0ZXIucG9zdCgnL2luc2VydCcsY29udHJvbGxlci5pbnNlcnQpO1xuXG4vKipcbiAqIEBhcGkge2dldH0gL2NvaG9ydHMgR2V0IGFsbCBjb2hvcnRzXG4gKiBAYXBpSGVhZGVyIHtTdHJpbmd9IGF1dGhvcml6YXRpb24gSldUIFRva2VuLlxuICogQGFwaU5hbWUgR2V0Q29ob3J0c1xuICogQGFwaUdyb3VwIENvaG9ydFxuICovXG5cbnJvdXRlci5nZXQoJy9oaXN0b3J5cmVzdWx0cycsIGNvbnRyb2xsZXIuZ2V0QWxsQnJvd3Nlckhpc3RvcnlJdGVtcyk7XG5yb3V0ZXIuZ2V0KCcvdmlzaXRyZXN1bHRzJyxjb250cm9sbGVyLmdldEFsbEJyb3dzZXJWaXNpdEl0ZW1zKTtcblxuLyoqXG4gKiBAYXBpIHtnZXR9IC9jb2hvcnRzIEdldCBhbGwgY29ob3J0c1xuICogQGFwaUhlYWRlciB7U3RyaW5nfSBhdXRob3JpemF0aW9uIEpXVCBUb2tlbi5cbiAqIEBhcGlOYW1lIEdldENvaG9ydHNcbiAqIEBhcGlHcm91cCBDb2hvcnRcbiAqL1xuIFxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.routes.js"
      ],
      "names": [
        "Express",
        "require",
        "controller",
        "router",
        "Router",
        "ip",
        "post",
        "insert",
        "get",
        "getAllBrowserHistoryItems",
        "getAllBrowserVisitItems"
      ],
      "mappings": ";;;;;AAAA,IAAIA,UAAQC,QAAQ,SAAR,CAAZ;AACA,IAAIC,aAAWD,QAAQ,0CAAR,CAAf;AACA,IAAME,SAAOH,QAAQI,MAAR,EAAb;AACA,IAAMC,KAAGJ,QAAQ,IAAR,CAAT;AACAE,OAAOG,IAAP,CAAY,SAAZ,EAAsBJ,WAAWK,MAAjC;;AAEA;;;;;;;AAOAJ,OAAOK,GAAP,CAAW,iBAAX,EAA8BN,WAAWO,yBAAzC;AACAN,OAAOK,GAAP,CAAW,eAAX,EAA2BN,WAAWQ,uBAAtC;;AAEA;;;;;;;kBAOeP,M",
      "file": "chrome-history.routes.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/routes",
      "sourcesContent": [
        "var Express=require('express')\nvar controller=require('../controllers/chrome-history.controller')\nconst router=Express.Router()\nconst ip=require('ip')\nrouter.post('/insert',controller.insert);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n\nrouter.get('/historyresults', controller.getAllBrowserHistoryItems);\nrouter.get('/visitresults',controller.getAllBrowserVisitItems);\n\n/**\n * @api {get} /cohorts Get all cohorts\n * @apiHeader {String} authorization JWT Token.\n * @apiName GetCohorts\n * @apiGroup Cohort\n */\n \nexport default router;\n"
      ]
    },
    "mtime": 1560973903397
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/chrome-history.controller.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../models/browser_history_items",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "browser_history_items"
              }
            ]
          },
          {
            "source": "../../models/browser_visit__items",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "browser_visit_items"
              }
            ]
          },
          {
            "source": "localStorage",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "localStorage"
              }
            ]
          },
          {
            "source": "ip",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "ip"
              }
            ]
          },
          {
            "source": "uuid/v4",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "uuid"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getAllBrowserHistoryItems",
            "getAllBrowserVisitItems",
            "getMax",
            "insert"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getAllBrowserHistoryItems",
              "exported": "getAllBrowserHistoryItems"
            },
            {
              "kind": "local",
              "local": "getAllBrowserVisitItems",
              "exported": "getAllBrowserVisitItems"
            },
            {
              "kind": "local",
              "local": "getMax",
              "exported": "getMax"
            },
            {
              "kind": "local",
              "local": "insert",
              "exported": "insert"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/chrome-history.controller.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers/chrome-history.controller.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "chrome-history.controller.js",
      "sourceFileName": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "chrome-history.controller"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insert = exports.getMax = exports.getAllBrowserVisitItems = exports.getAllBrowserHistoryItems = undefined;\n\nvar _browser_history_items = require('../../models/browser_history_items');\n\nvar _browser_history_items2 = _interopRequireDefault(_browser_history_items);\n\nvar _browser_visit__items = require('../../models/browser_visit__items');\n\nvar _browser_visit__items2 = _interopRequireDefault(_browser_visit__items);\n\nvar _localStorage = require('localStorage');\n\nvar _localStorage2 = _interopRequireDefault(_localStorage);\n\nvar _ip = require('ip');\n\nvar _ip2 = _interopRequireDefault(_ip);\n\nvar _v = require('uuid/v4');\n\nvar _v2 = _interopRequireDefault(_v);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAllBrowserHistoryItems = exports.getAllBrowserHistoryItems = function getAllBrowserHistoryItems(req, res) {\n  _browser_history_items2.default.findAll({}).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {});\n};\nvar getAllBrowserVisitItems = exports.getAllBrowserVisitItems = function getAllBrowserVisitItems(req, res) {\n  _browser_visit__items2.default.findAll({}).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {});\n};\n\nvar getMax = exports.getMax = function getMax(req, res) {\n  var sequelize = require('sequelize');\n  browser_history.findAll({\n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    where: {\n      uid: '8e3cb23a-90cc-11e9-bc42-526af7764f64'\n    },\n    raw: true\n  }).then(function (data) {\n    res.json(data);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar insert = exports.insert = function insert(req, res) {\n  var historyitem = req.body.historyitem;\n  /*var date = new Date(historyitem[0]['visit'][0]['visitTime']);\n  var hours = date.getHours();\n  var months=date.getMonth()+1;\n  var day=date.getDate();\n  var date1=(date.getFullYear()).toString()+\"-\"+months+\"-\"+day;\n  var minutes = \"0\" + date.getMinutes();\n  var seconds = \"0\" + date.getSeconds();\n  var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n  var datetime =date1+\" \"+formattedTime;*/\n\n  for (var i = 0; i < historyitem.length; i++) {\n    (function (i, historyitem) {\n      _browser_history_items2.default.create({\n        chrome_url_id: historyitem[i]['id'],\n        url: historyitem[i]['url'],\n        title: historyitem[i]['title'],\n        useragent: historyitem[i]['userAgent']\n      }).catch(function (err) {});\n    })(i, historyitem);\n  }\n  for (var i = 0; i < historyitem.length; i++) {\n    for (var j = 0; j < historyitem[i]['visit'].length; j++) {\n      (function (j, historyitem) {\n        _browser_visit__items2.default.create({\n          chrome_url_id: historyitem[i]['visit'][j]['id'],\n          ip: _ip2.default.address(),\n          u_id: req.body.getid,\n          visited_timestamp: historyitem[i]['visit'][j]['visitTime'],\n          visit_id: historyitem[i]['visit'][j]['visitId'],\n          transition: historyitem[i]['visit'][j]['transition']\n        }).catch(function (err) {});\n      })(j, historyitem);\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiZ2V0QWxsQnJvd3Nlckhpc3RvcnlJdGVtcyIsInJlcSIsInJlcyIsImJyb3dzZXJfaGlzdG9yeV9pdGVtcyIsImZpbmRBbGwiLCJ0aGVuIiwiZGF0YSIsImpzb24iLCJjYXRjaCIsImVyciIsImdldEFsbEJyb3dzZXJWaXNpdEl0ZW1zIiwiYnJvd3Nlcl92aXNpdF9pdGVtcyIsImdldE1heCIsInNlcXVlbGl6ZSIsInJlcXVpcmUiLCJicm93c2VyX2hpc3RvcnkiLCJhdHRyaWJ1dGVzIiwiZm4iLCJjb2wiLCJ3aGVyZSIsInVpZCIsInJhdyIsImNvbnNvbGUiLCJsb2ciLCJpbnNlcnQiLCJoaXN0b3J5aXRlbSIsImJvZHkiLCJpIiwibGVuZ3RoIiwiY3JlYXRlIiwiY2hyb21lX3VybF9pZCIsInVybCIsInRpdGxlIiwidXNlcmFnZW50IiwiaiIsImlwIiwiYWRkcmVzcyIsInVfaWQiLCJnZXRpZCIsInZpc2l0ZWRfdGltZXN0YW1wIiwidmlzaXRfaWQiLCJ0cmFuc2l0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBQ08sSUFBTUEsZ0VBQTJCLFNBQTNCQSx5QkFBMkIsQ0FBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQUNDLGtDQUFzQkMsT0FBdEIsQ0FBOEIsRUFBOUIsRUFBa0NDLElBQWxDLENBQXVDLFVBQUNDLElBQUQsRUFBVTtBQUN2R0osUUFBSUssSUFBSixDQUFTRCxJQUFUO0FBQ0QsR0FGdUQsRUFFckRFLEtBRnFELENBRS9DLFVBQUNDLEdBQUQsRUFBUyxDQUFFLENBRm9DO0FBR3pELENBSE07QUFJQSxJQUFNQyw0REFBeUIsU0FBekJBLHVCQUF5QixDQUFTVCxHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFBQ1MsaUNBQW9CUCxPQUFwQixDQUE0QixFQUE1QixFQUFnQ0MsSUFBaEMsQ0FBcUMsVUFBQ0MsSUFBRCxFQUFVO0FBQ3JHSixRQUFJSyxJQUFKLENBQVNELElBQVQ7QUFDRCxHQUZ1RCxFQUVyREUsS0FGcUQsQ0FFL0MsVUFBQ0MsR0FBRCxFQUFTLENBQUUsQ0FGb0M7QUFHdkQsQ0FITTs7QUFLQSxJQUFNRywwQkFBUSxTQUFSQSxNQUFRLENBQUNYLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQzlCLE1BQUlXLFlBQVVDLFFBQVEsV0FBUixDQUFkO0FBQ0FDLGtCQUFnQlgsT0FBaEIsQ0FBd0I7QUFDdEJZLGdCQUFZLENBQUMsQ0FBQ0gsVUFBVUksRUFBVixDQUFhLEtBQWIsRUFBb0JKLFVBQVVLLEdBQVYsQ0FBYyxtQkFBZCxDQUFwQixDQUFELEVBQTBELE1BQTFELENBQUQsQ0FEVTtBQUV0QkMsV0FBTTtBQUNKQyxXQUFJO0FBREEsS0FGZ0I7QUFLdEJDLFNBQUs7QUFMaUIsR0FBeEIsRUFNR2hCLElBTkgsQ0FNUSxVQUFDQyxJQUFELEVBQVU7QUFDaEJKLFFBQUlLLElBQUosQ0FBU0QsSUFBVDtBQUNELEdBUkQsRUFRR0UsS0FSSCxDQVFTLFVBQUNDLEdBQUQsRUFBUztBQUNsQmEsWUFBUUMsR0FBUixDQUFZZCxHQUFaO0FBQ0MsR0FWRDtBQVdELENBYk07O0FBZUEsSUFBTWUsMEJBQU8sU0FBUEEsTUFBTyxDQUFTdkIsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQ25DLE1BQUl1QixjQUFZeEIsSUFBSXlCLElBQUosQ0FBU0QsV0FBekI7QUFDQTs7Ozs7Ozs7OztBQVVBLE9BQUksSUFBSUUsSUFBRSxDQUFWLEVBQVlBLElBQUVGLFlBQVlHLE1BQTFCLEVBQWlDRCxHQUFqQyxFQUFxQztBQUNqQyxLQUFDLFVBQVNBLENBQVQsRUFBV0YsV0FBWCxFQUF1QjtBQUN0QnRCLHNDQUFzQjBCLE1BQXRCLENBQTZCO0FBQzNCQyx1QkFBY0wsWUFBWUUsQ0FBWixFQUFlLElBQWYsQ0FEYTtBQUUzQkksYUFBSU4sWUFBWUUsQ0FBWixFQUFlLEtBQWYsQ0FGdUI7QUFHM0JLLGVBQU1QLFlBQVlFLENBQVosRUFBZSxPQUFmLENBSHFCO0FBSTNCTSxtQkFBVVIsWUFBWUUsQ0FBWixFQUFlLFdBQWY7QUFKaUIsT0FBN0IsRUFLR25CLEtBTEgsQ0FLUyxVQUFDQyxHQUFELEVBQU8sQ0FBRSxDQUxsQjtBQU1ELEtBUEQsRUFPR2tCLENBUEgsRUFPS0YsV0FQTDtBQVNEO0FBQ0gsT0FBSSxJQUFJRSxJQUFFLENBQVYsRUFBWUEsSUFBRUYsWUFBWUcsTUFBMUIsRUFBaUNELEdBQWpDLEVBQXFDO0FBQ2pDLFNBQUksSUFBSU8sSUFBRSxDQUFWLEVBQVlBLElBQUVULFlBQVlFLENBQVosRUFBZSxPQUFmLEVBQXdCQyxNQUF0QyxFQUE2Q00sR0FBN0MsRUFBaUQ7QUFDL0MsT0FBQyxVQUFTQSxDQUFULEVBQVdULFdBQVgsRUFBdUI7QUFDdEJkLHVDQUFvQmtCLE1BQXBCLENBQTJCO0FBQ3pCQyx5QkFBY0wsWUFBWUUsQ0FBWixFQUFlLE9BQWYsRUFBd0JPLENBQXhCLEVBQTJCLElBQTNCLENBRFc7QUFFekJDLGNBQUdBLGFBQUdDLE9BQUgsRUFGc0I7QUFHekJDLGdCQUFLcEMsSUFBSXlCLElBQUosQ0FBU1ksS0FIVztBQUl6QkMsNkJBQWtCZCxZQUFZRSxDQUFaLEVBQWUsT0FBZixFQUF3Qk8sQ0FBeEIsRUFBMkIsV0FBM0IsQ0FKTztBQUt6Qk0sb0JBQVNmLFlBQVlFLENBQVosRUFBZSxPQUFmLEVBQXdCTyxDQUF4QixFQUEyQixTQUEzQixDQUxnQjtBQU16Qk8sc0JBQVdoQixZQUFZRSxDQUFaLEVBQWUsT0FBZixFQUF3Qk8sQ0FBeEIsRUFBMkIsWUFBM0I7QUFOYyxTQUEzQixFQU9HMUIsS0FQSCxDQU9TLFVBQUNDLEdBQUQsRUFBTyxDQUFFLENBUGxCO0FBUUQsT0FURCxFQVNHeUIsQ0FUSCxFQVNLVCxXQVRMO0FBVUg7QUFDRjtBQUVGLENBdENNIiwiZmlsZSI6ImNocm9tZS1oaXN0b3J5LmNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnJvd3Nlcl9oaXN0b3J5X2l0ZW1zIGZyb20gJy4uLy4uL21vZGVscy9icm93c2VyX2hpc3RvcnlfaXRlbXMnO1xuaW1wb3J0IGJyb3dzZXJfdmlzaXRfaXRlbXMgZnJvbSAnLi4vLi4vbW9kZWxzL2Jyb3dzZXJfdmlzaXRfX2l0ZW1zJztcbmltcG9ydCBsb2NhbFN0b3JhZ2UgZnJvbSAnbG9jYWxTdG9yYWdlJztcbmltcG9ydCBpcCBmcm9tICdpcCc7XG5pbXBvcnQgdXVpZCBmcm9tICd1dWlkL3Y0JztcbmV4cG9ydCBjb25zdCBnZXRBbGxCcm93c2VySGlzdG9yeUl0ZW1zPSBmdW5jdGlvbihyZXEscmVzKXticm93c2VyX2hpc3RvcnlfaXRlbXMuZmluZEFsbCh7fSkudGhlbigoZGF0YSkgPT4ge1xuICAgIHJlcy5qc29uKGRhdGEpXG4gIH0pLmNhdGNoKChlcnIpID0+IHt9KVxufVxuZXhwb3J0IGNvbnN0IGdldEFsbEJyb3dzZXJWaXNpdEl0ZW1zPSBmdW5jdGlvbihyZXEscmVzKXticm93c2VyX3Zpc2l0X2l0ZW1zLmZpbmRBbGwoe30pLnRoZW4oKGRhdGEpID0+IHtcbiAgcmVzLmpzb24oZGF0YSlcbn0pLmNhdGNoKChlcnIpID0+IHt9KVxufVxuXG5leHBvcnQgY29uc3QgZ2V0TWF4PSAocmVxLHJlcyk9PntcbiAgdmFyIHNlcXVlbGl6ZT1yZXF1aXJlKCdzZXF1ZWxpemUnKTtcbiAgYnJvd3Nlcl9oaXN0b3J5LmZpbmRBbGwoeyBcbiAgICBhdHRyaWJ1dGVzOiBbW3NlcXVlbGl6ZS5mbignbWF4Jywgc2VxdWVsaXplLmNvbCgndmlzaXRlZF90aW1lc3RhbXAnKSksICd0aW1lJ11dLFxuICAgIHdoZXJlOntcbiAgICAgIHVpZDonOGUzY2IyM2EtOTBjYy0xMWU5LWJjNDItNTI2YWY3NzY0ZjY0J1xuICAgIH0sXG4gICAgcmF3OiB0cnVlLFxuICB9KS50aGVuKChkYXRhKSA9PiB7XG4gICAgcmVzLmpzb24oZGF0YSlcbiAgfSkuY2F0Y2goKGVycikgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xuICB9KVxufVxuXG5leHBvcnQgY29uc3QgaW5zZXJ0PWZ1bmN0aW9uKHJlcSxyZXMpe1xuICB2YXIgaGlzdG9yeWl0ZW09cmVxLmJvZHkuaGlzdG9yeWl0ZW07XG4gIC8qdmFyIGRhdGUgPSBuZXcgRGF0ZShoaXN0b3J5aXRlbVswXVsndmlzaXQnXVswXVsndmlzaXRUaW1lJ10pO1xuICB2YXIgaG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XG4gIHZhciBtb250aHM9ZGF0ZS5nZXRNb250aCgpKzE7XG4gIHZhciBkYXk9ZGF0ZS5nZXREYXRlKCk7XG4gIHZhciBkYXRlMT0oZGF0ZS5nZXRGdWxsWWVhcigpKS50b1N0cmluZygpK1wiLVwiK21vbnRocytcIi1cIitkYXk7XG4gIHZhciBtaW51dGVzID0gXCIwXCIgKyBkYXRlLmdldE1pbnV0ZXMoKTtcbiAgdmFyIHNlY29uZHMgPSBcIjBcIiArIGRhdGUuZ2V0U2Vjb25kcygpO1xuICB2YXIgZm9ybWF0dGVkVGltZSA9IGhvdXJzICsgJzonICsgbWludXRlcy5zdWJzdHIoLTIpICsgJzonICsgc2Vjb25kcy5zdWJzdHIoLTIpO1xuICB2YXIgZGF0ZXRpbWUgPWRhdGUxK1wiIFwiK2Zvcm1hdHRlZFRpbWU7Ki9cbiAgXG4gIGZvcih2YXIgaT0wO2k8aGlzdG9yeWl0ZW0ubGVuZ3RoO2krKyl7XG4gICAgICAoZnVuY3Rpb24oaSxoaXN0b3J5aXRlbSl7XG4gICAgICAgIGJyb3dzZXJfaGlzdG9yeV9pdGVtcy5jcmVhdGUoe1xuICAgICAgICAgIGNocm9tZV91cmxfaWQ6aGlzdG9yeWl0ZW1baV1bJ2lkJ10sXG4gICAgICAgICAgdXJsOmhpc3RvcnlpdGVtW2ldWyd1cmwnXSxcbiAgICAgICAgICB0aXRsZTpoaXN0b3J5aXRlbVtpXVsndGl0bGUnXSxcbiAgICAgICAgICB1c2VyYWdlbnQ6aGlzdG9yeWl0ZW1baV1bJ3VzZXJBZ2VudCddXG4gICAgICAgIH0pLmNhdGNoKChlcnIpPT57fSk7XG4gICAgICB9KShpLGhpc3RvcnlpdGVtKTtcblxuICAgIH1cbiAgZm9yKHZhciBpPTA7aTxoaXN0b3J5aXRlbS5sZW5ndGg7aSsrKXtcbiAgICAgIGZvcih2YXIgaj0wO2o8aGlzdG9yeWl0ZW1baV1bJ3Zpc2l0J10ubGVuZ3RoO2orKyl7XG4gICAgICAgIChmdW5jdGlvbihqLGhpc3RvcnlpdGVtKXtcbiAgICAgICAgICBicm93c2VyX3Zpc2l0X2l0ZW1zLmNyZWF0ZSh7XG4gICAgICAgICAgICBjaHJvbWVfdXJsX2lkOmhpc3RvcnlpdGVtW2ldWyd2aXNpdCddW2pdWydpZCddLFxuICAgICAgICAgICAgaXA6aXAuYWRkcmVzcygpLFxuICAgICAgICAgICAgdV9pZDpyZXEuYm9keS5nZXRpZCxcbiAgICAgICAgICAgIHZpc2l0ZWRfdGltZXN0YW1wOmhpc3RvcnlpdGVtW2ldWyd2aXNpdCddW2pdWyd2aXNpdFRpbWUnXSxcbiAgICAgICAgICAgIHZpc2l0X2lkOmhpc3RvcnlpdGVtW2ldWyd2aXNpdCddW2pdWyd2aXNpdElkJ10sXG4gICAgICAgICAgICB0cmFuc2l0aW9uOmhpc3RvcnlpdGVtW2ldWyd2aXNpdCddW2pdWyd0cmFuc2l0aW9uJ11cbiAgICAgICAgICB9KS5jYXRjaCgoZXJyKT0+e30pO1xuICAgICAgICB9KShqLGhpc3RvcnlpdGVtKTtcbiAgICB9XG4gIH1cbiAgXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "chrome-history.controller.js"
      ],
      "names": [
        "getAllBrowserHistoryItems",
        "req",
        "res",
        "browser_history_items",
        "findAll",
        "then",
        "data",
        "json",
        "catch",
        "err",
        "getAllBrowserVisitItems",
        "browser_visit_items",
        "getMax",
        "sequelize",
        "require",
        "browser_history",
        "attributes",
        "fn",
        "col",
        "where",
        "uid",
        "raw",
        "console",
        "log",
        "insert",
        "historyitem",
        "body",
        "i",
        "length",
        "create",
        "chrome_url_id",
        "url",
        "title",
        "useragent",
        "j",
        "ip",
        "address",
        "u_id",
        "getid",
        "visited_timestamp",
        "visit_id",
        "transition"
      ],
      "mappings": "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",
      "file": "chrome-history.controller.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/controllers",
      "sourcesContent": [
        "import browser_history_items from '../../models/browser_history_items';\nimport browser_visit_items from '../../models/browser_visit__items';\nimport localStorage from 'localStorage';\nimport ip from 'ip';\nimport uuid from 'uuid/v4';\nexport const getAllBrowserHistoryItems= function(req,res){browser_history_items.findAll({}).then((data) => {\n    res.json(data)\n  }).catch((err) => {})\n}\nexport const getAllBrowserVisitItems= function(req,res){browser_visit_items.findAll({}).then((data) => {\n  res.json(data)\n}).catch((err) => {})\n}\n\nexport const getMax= (req,res)=>{\n  var sequelize=require('sequelize');\n  browser_history.findAll({ \n    attributes: [[sequelize.fn('max', sequelize.col('visited_timestamp')), 'time']],\n    where:{\n      uid:'8e3cb23a-90cc-11e9-bc42-526af7764f64'\n    },\n    raw: true,\n  }).then((data) => {\n    res.json(data)\n  }).catch((err) => {\n  console.log(err);\n  })\n}\n\nexport const insert=function(req,res){\n  var historyitem=req.body.historyitem;\n  /*var date = new Date(historyitem[0]['visit'][0]['visitTime']);\n  var hours = date.getHours();\n  var months=date.getMonth()+1;\n  var day=date.getDate();\n  var date1=(date.getFullYear()).toString()+\"-\"+months+\"-\"+day;\n  var minutes = \"0\" + date.getMinutes();\n  var seconds = \"0\" + date.getSeconds();\n  var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n  var datetime =date1+\" \"+formattedTime;*/\n  \n  for(var i=0;i<historyitem.length;i++){\n      (function(i,historyitem){\n        browser_history_items.create({\n          chrome_url_id:historyitem[i]['id'],\n          url:historyitem[i]['url'],\n          title:historyitem[i]['title'],\n          useragent:historyitem[i]['userAgent']\n        }).catch((err)=>{});\n      })(i,historyitem);\n\n    }\n  for(var i=0;i<historyitem.length;i++){\n      for(var j=0;j<historyitem[i]['visit'].length;j++){\n        (function(j,historyitem){\n          browser_visit_items.create({\n            chrome_url_id:historyitem[i]['visit'][j]['id'],\n            ip:ip.address(),\n            u_id:req.body.getid,\n            visited_timestamp:historyitem[i]['visit'][j]['visitTime'],\n            visit_id:historyitem[i]['visit'][j]['visitId'],\n            transition:historyitem[i]['visit'][j]['transition']\n          }).catch((err)=>{});\n        })(j,historyitem);\n    }\n  }\n  \n}"
      ]
    },
    "mtime": 1560950302058
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models/browser_history_items.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          },
          {
            "source": "../src/database",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "db"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models/browser_history_items.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models/browser_history_items.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "browser_history_items.js",
      "sourceFileName": "browser_history_items.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "browser_history_items"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nvar _database = require('../src/database');\n\nvar _database2 = _interopRequireDefault(_database);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar browser_history_items = _database2.default.define('browser_history_items', {\n  chrome_url_id: {\n    type: _sequelize2.default.INTEGER,\n    allowNull: false,\n    unique: true\n  },\n  url: {\n    type: _sequelize2.default.TEXT,\n    allowNull: false\n  },\n  title: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  },\n  useragent: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  }\n});\nexports.default = browser_history_items;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXJfaGlzdG9yeV9pdGVtcy5qcyJdLCJuYW1lcyI6WyJicm93c2VyX2hpc3RvcnlfaXRlbXMiLCJkYiIsImRlZmluZSIsImNocm9tZV91cmxfaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsImFsbG93TnVsbCIsInVuaXF1ZSIsInVybCIsIlRFWFQiLCJ0aXRsZSIsIlNUUklORyIsInVzZXJhZ2VudCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLHdCQUF3QkMsbUJBQUdDLE1BQUgsQ0FBVSx1QkFBVixFQUFtQztBQUMvREMsaUJBQWM7QUFDWkMsVUFBS0Msb0JBQVVDLE9BREg7QUFFWkMsZUFBVSxLQUZFO0FBR1pDLFlBQU87QUFISyxHQURpRDtBQU0vREMsT0FBSTtBQUNGTCxVQUFLQyxvQkFBVUssSUFEYjtBQUVGSCxlQUFVO0FBRlIsR0FOMkQ7QUFVL0RJLFNBQU07QUFDSlAsVUFBS0Msb0JBQVVPLE1BRFg7QUFFSkwsZUFBVTtBQUZOLEdBVnlEO0FBYy9ETSxhQUFVO0FBQ1JULFVBQUtDLG9CQUFVTyxNQURQO0FBRVJMLGVBQVU7QUFGRjtBQWRxRCxDQUFuQyxDQUE5QjtrQkFtQmdCUCxxQiIsImZpbGUiOiJicm93c2VyX2hpc3RvcnlfaXRlbXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgZGIgZnJvbSAnLi4vc3JjL2RhdGFiYXNlJztcblxuY29uc3QgYnJvd3Nlcl9oaXN0b3J5X2l0ZW1zID0gZGIuZGVmaW5lKCdicm93c2VyX2hpc3RvcnlfaXRlbXMnLCB7XG4gIGNocm9tZV91cmxfaWQ6e1xuICAgIHR5cGU6U2VxdWVsaXplLklOVEVHRVIsXG4gICAgYWxsb3dOdWxsOmZhbHNlLFxuICAgIHVuaXF1ZTp0cnVlXG4gIH0sXG4gIHVybDp7XG4gICAgdHlwZTpTZXF1ZWxpemUuVEVYVCxcbiAgICBhbGxvd051bGw6ZmFsc2VcbiAgfSxcbiAgdGl0bGU6e1xuICAgIHR5cGU6U2VxdWVsaXplLlNUUklORyxcbiAgICBhbGxvd051bGw6ZmFsc2VcbiAgfSxcbiAgdXNlcmFnZW50OntcbiAgICB0eXBlOlNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgYWxsb3dOdWxsOmZhbHNlXG4gIH1cbn0pO1xuIGV4cG9ydCBkZWZhdWx0IGJyb3dzZXJfaGlzdG9yeV9pdGVtczsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "browser_history_items.js"
      ],
      "names": [
        "browser_history_items",
        "db",
        "define",
        "chrome_url_id",
        "type",
        "Sequelize",
        "INTEGER",
        "allowNull",
        "unique",
        "url",
        "TEXT",
        "title",
        "STRING",
        "useragent"
      ],
      "mappings": "AAAA;;;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,wBAAwBC,mBAAGC,MAAH,CAAU,uBAAV,EAAmC;AAC/DC,iBAAc;AACZC,UAAKC,oBAAUC,OADH;AAEZC,eAAU,KAFE;AAGZC,YAAO;AAHK,GADiD;AAM/DC,OAAI;AACFL,UAAKC,oBAAUK,IADb;AAEFH,eAAU;AAFR,GAN2D;AAU/DI,SAAM;AACJP,UAAKC,oBAAUO,MADX;AAEJL,eAAU;AAFN,GAVyD;AAc/DM,aAAU;AACRT,UAAKC,oBAAUO,MADP;AAERL,eAAU;AAFF;AAdqD,CAAnC,CAA9B;kBAmBgBP,qB",
      "file": "browser_history_items.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models",
      "sourcesContent": [
        "'use strict';\nimport Sequelize from 'sequelize';\nimport db from '../src/database';\n\nconst browser_history_items = db.define('browser_history_items', {\n  chrome_url_id:{\n    type:Sequelize.INTEGER,\n    allowNull:false,\n    unique:true\n  },\n  url:{\n    type:Sequelize.TEXT,\n    allowNull:false\n  },\n  title:{\n    type:Sequelize.STRING,\n    allowNull:false\n  },\n  useragent:{\n    type:Sequelize.STRING,\n    allowNull:false\n  }\n});\n export default browser_history_items;"
      ]
    },
    "mtime": 1560965096272
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/database.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/database.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/database.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "database.js",
      "sourceFileName": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "database"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize2.default('postgres', 'postgres', 'tanuj', {\n  host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000\n  }\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsImFjcXVpcmUiLCJpZGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQ0EsSUFBTUEsWUFBWSxJQUFJQyxtQkFBSixDQUFjLFVBQWQsRUFBeUIsVUFBekIsRUFBb0MsT0FBcEMsRUFBNkM7QUFDM0RDLFFBQU0sV0FEcUQ7QUFFN0RDLFdBQVMsVUFGb0Q7QUFHN0RDLFFBQU07QUFDSkMsU0FBSyxDQUREO0FBRUpDLGFBQVMsS0FGTDtBQUdKQyxVQUFNO0FBSEY7QUFIdUQsQ0FBN0MsQ0FBbEI7QUFTQUMsT0FBT0MsT0FBUCxHQUFnQlQsU0FBaEIiLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSdcbmNvbnN0IHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUoJ3Bvc3RncmVzJywncG9zdGdyZXMnLCd0YW51aicsIHtcbiAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgZGlhbGVjdDogJ3Bvc3RncmVzJyxcbiAgcG9vbDoge1xuICAgIG1heDogNSxcbiAgICBhY3F1aXJlOiAzMDAwMCxcbiAgICBpZGxlOiAxMDAwMCxcbiAgfVxufSk7XG5tb2R1bGUuZXhwb3J0cyA9c2VxdWVsaXplIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "acquire",
        "idle",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AACA,IAAMA,YAAY,IAAIC,mBAAJ,CAAc,UAAd,EAAyB,UAAzB,EAAoC,OAApC,EAA6C;AAC3DC,QAAM,WADqD;AAE7DC,WAAS,UAFoD;AAG7DC,QAAM;AACJC,SAAK,CADD;AAEJC,aAAS,KAFL;AAGJC,UAAM;AAHF;AAHuD,CAA7C,CAAlB;AASAC,OAAOC,OAAP,GAAgBT,SAAhB",
      "file": "database.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src",
      "sourcesContent": [
        "import Sequelize from 'sequelize'\nconst sequelize = new Sequelize('postgres','postgres','tanuj', {\n    host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 5,\n    acquire: 30000,\n    idle: 10000,\n  }\n});\nmodule.exports =sequelize"
      ]
    },
    "mtime": 1559243369680
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models/browser_visit__items.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          },
          {
            "source": "../src/database",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "db"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models/browser_visit__items.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models/browser_visit__items.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "browser_visit__items.js",
      "sourceFileName": "browser_visit__items.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "browser_visit__items"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nvar _database = require('../src/database');\n\nvar _database2 = _interopRequireDefault(_database);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar browser_visit_items = _database2.default.define('browser_visit_items', {\n  u_id: {\n    type: _sequelize2.default.UUID,\n    allowNull: false\n  },\n  chrome_url_id: {\n    type: _sequelize2.default.INTEGER,\n    allowNull: false,\n    references: { model: 'browser_history_items', key: 'chrome_url_id' }\n  },\n  visited_timestamp: {\n    type: _sequelize2.default.DATE,\n    allowNull: false\n  },\n  visit_id: {\n    type: _sequelize2.default.INTEGER,\n    unique: true,\n    allowNull: false\n  },\n  ip: {\n    type: _sequelize2.default.STRING,\n    allowNull: false\n  },\n  transition: {\n    type: _sequelize2.default.STRING\n  }\n});\nexports.default = browser_visit_items;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXJfdmlzaXRfX2l0ZW1zLmpzIl0sIm5hbWVzIjpbImJyb3dzZXJfdmlzaXRfaXRlbXMiLCJkYiIsImRlZmluZSIsInVfaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiVVVJRCIsImFsbG93TnVsbCIsImNocm9tZV91cmxfaWQiLCJJTlRFR0VSIiwicmVmZXJlbmNlcyIsIm1vZGVsIiwia2V5IiwidmlzaXRlZF90aW1lc3RhbXAiLCJEQVRFIiwidmlzaXRfaWQiLCJ1bmlxdWUiLCJpcCIsIlNUUklORyIsInRyYW5zaXRpb24iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxzQkFBc0JDLG1CQUFHQyxNQUFILENBQVUscUJBQVYsRUFBaUM7QUFDM0RDLFFBQUs7QUFDSEMsVUFBS0Msb0JBQVVDLElBRFo7QUFFSEMsZUFBVTtBQUZQLEdBRHNEO0FBSzNEQyxpQkFBYztBQUNaSixVQUFLQyxvQkFBVUksT0FESDtBQUVaRixlQUFVLEtBRkU7QUFHWkcsZ0JBQVcsRUFBRUMsT0FBTyx1QkFBVCxFQUFrQ0MsS0FBSSxlQUF0QztBQUhDLEdBTDZDO0FBVTNEQyxxQkFBa0I7QUFDaEJULFVBQUtDLG9CQUFVUyxJQURDO0FBRWhCUCxlQUFVO0FBRk0sR0FWeUM7QUFjM0RRLFlBQVM7QUFDUFgsVUFBS0Msb0JBQVVJLE9BRFI7QUFFUE8sWUFBTyxJQUZBO0FBR1BULGVBQVU7QUFISCxHQWRrRDtBQW1CM0RVLE1BQUc7QUFDRGIsVUFBS0Msb0JBQVVhLE1BRGQ7QUFFRFgsZUFBVTtBQUZULEdBbkJ3RDtBQXVCM0RZLGNBQVc7QUFDVGYsVUFBS0Msb0JBQVVhO0FBRE47QUF2QmdELENBQWpDLENBQTVCO2tCQTJCZ0JsQixtQiIsImZpbGUiOiJicm93c2VyX3Zpc2l0X19pdGVtcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBkYiBmcm9tICcuLi9zcmMvZGF0YWJhc2UnO1xuXG5jb25zdCBicm93c2VyX3Zpc2l0X2l0ZW1zID0gZGIuZGVmaW5lKCdicm93c2VyX3Zpc2l0X2l0ZW1zJywge1xuICB1X2lkOntcbiAgICB0eXBlOlNlcXVlbGl6ZS5VVUlELFxuICAgIGFsbG93TnVsbDpmYWxzZVxuICB9LFxuICBjaHJvbWVfdXJsX2lkOntcbiAgICB0eXBlOlNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgIGFsbG93TnVsbDpmYWxzZSxcbiAgICByZWZlcmVuY2VzOnsgbW9kZWw6ICdicm93c2VyX2hpc3RvcnlfaXRlbXMnLCBrZXk6J2Nocm9tZV91cmxfaWQnfVxuICB9LFxuICB2aXNpdGVkX3RpbWVzdGFtcDp7XG4gICAgdHlwZTpTZXF1ZWxpemUuREFURSxcbiAgICBhbGxvd051bGw6ZmFsc2VcbiAgfSxcbiAgdmlzaXRfaWQ6e1xuICAgIHR5cGU6U2VxdWVsaXplLklOVEVHRVIsXG4gICAgdW5pcXVlOnRydWUsXG4gICAgYWxsb3dOdWxsOmZhbHNlXG4gIH0sXG4gIGlwOntcbiAgICB0eXBlOlNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgYWxsb3dOdWxsOmZhbHNlXG4gIH0sXG4gIHRyYW5zaXRpb246e1xuICAgIHR5cGU6U2VxdWVsaXplLlNUUklOR1xuICB9LFxufSk7XG4gZXhwb3J0IGRlZmF1bHQgYnJvd3Nlcl92aXNpdF9pdGVtczsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "browser_visit__items.js"
      ],
      "names": [
        "browser_visit_items",
        "db",
        "define",
        "u_id",
        "type",
        "Sequelize",
        "UUID",
        "allowNull",
        "chrome_url_id",
        "INTEGER",
        "references",
        "model",
        "key",
        "visited_timestamp",
        "DATE",
        "visit_id",
        "unique",
        "ip",
        "STRING",
        "transition"
      ],
      "mappings": "AAAA;;;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,sBAAsBC,mBAAGC,MAAH,CAAU,qBAAV,EAAiC;AAC3DC,QAAK;AACHC,UAAKC,oBAAUC,IADZ;AAEHC,eAAU;AAFP,GADsD;AAK3DC,iBAAc;AACZJ,UAAKC,oBAAUI,OADH;AAEZF,eAAU,KAFE;AAGZG,gBAAW,EAAEC,OAAO,uBAAT,EAAkCC,KAAI,eAAtC;AAHC,GAL6C;AAU3DC,qBAAkB;AAChBT,UAAKC,oBAAUS,IADC;AAEhBP,eAAU;AAFM,GAVyC;AAc3DQ,YAAS;AACPX,UAAKC,oBAAUI,OADR;AAEPO,YAAO,IAFA;AAGPT,eAAU;AAHH,GAdkD;AAmB3DU,MAAG;AACDb,UAAKC,oBAAUa,MADd;AAEDX,eAAU;AAFT,GAnBwD;AAuB3DY,cAAW;AACTf,UAAKC,oBAAUa;AADN;AAvBgD,CAAjC,CAA5B;kBA2BgBlB,mB",
      "file": "browser_visit__items.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/models",
      "sourcesContent": [
        "'use strict';\nimport Sequelize from 'sequelize';\nimport db from '../src/database';\n\nconst browser_visit_items = db.define('browser_visit_items', {\n  u_id:{\n    type:Sequelize.UUID,\n    allowNull:false\n  },\n  chrome_url_id:{\n    type:Sequelize.INTEGER,\n    allowNull:false,\n    references:{ model: 'browser_history_items', key:'chrome_url_id'}\n  },\n  visited_timestamp:{\n    type:Sequelize.DATE,\n    allowNull:false\n  },\n  visit_id:{\n    type:Sequelize.INTEGER,\n    unique:true,\n    allowNull:false\n  },\n  ip:{\n    type:Sequelize.STRING,\n    allowNull:false\n  },\n  transition:{\n    type:Sequelize.STRING\n  },\n});\n export default browser_visit_items;"
      ]
    },
    "mtime": 1560953572668
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/seeds/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/seeds\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "faker",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "faker"
              }
            ]
          },
          {
            "source": "../models/user",
            "imported": [
              "default",
              "USER_ROLES"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              },
              {
                "kind": "named",
                "imported": "USER_ROLES",
                "local": "USER_ROLES"
              }
            ]
          },
          {
            "source": "../util/constants",
            "imported": [
              "paths"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "paths",
                "local": "paths"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "createSuperAdmin",
            "createStudent"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "createSuperAdmin",
              "exported": "createSuperAdmin"
            },
            {
              "kind": "local",
              "local": "createStudent",
              "exported": "createStudent"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/seeds/users.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/seeds/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/seeds",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/seeds",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStudent = exports.createSuperAdmin = undefined;\n\nvar _faker = require('faker');\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _constants = require('../util/constants');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createSuperAdmin = exports.createSuperAdmin = function createSuperAdmin() {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.SUPERADMIN,\n    email: process.env.DEFAULT_USER\n  }).save();\n};\n\nvar createStudent = exports.createStudent = function createStudent(currentCohortId) {\n  return new _user2.default({\n    name: _faker2.default.name.findName(),\n    role: _user.USER_ROLES.STUDENT,\n    cohorts: [currentCohortId],\n    currentCohort: currentCohortId,\n    email: _faker2.default.internet.email(),\n    path: _lodash2.default.sample(_constants.paths)\n  }).save();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVN1cGVyQWRtaW4iLCJVc2VyIiwibmFtZSIsImZha2VyIiwiZmluZE5hbWUiLCJyb2xlIiwiVVNFUl9ST0xFUyIsIlNVUEVSQURNSU4iLCJlbWFpbCIsInByb2Nlc3MiLCJlbnYiLCJERUZBVUxUX1VTRVIiLCJzYXZlIiwiY3JlYXRlU3R1ZGVudCIsImN1cnJlbnRDb2hvcnRJZCIsIlNUVURFTlQiLCJjb2hvcnRzIiwiY3VycmVudENvaG9ydCIsImludGVybmV0IiwicGF0aCIsIl8iLCJzYW1wbGUiLCJwYXRocyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsOENBQW1CLFNBQW5CQSxnQkFBbUI7QUFBQSxTQUFNLElBQUlDLGNBQUosQ0FBUztBQUM3Q0MsVUFBTUMsZ0JBQU1ELElBQU4sQ0FBV0UsUUFBWCxFQUR1QztBQUU3Q0MsVUFBTUMsaUJBQVdDLFVBRjRCO0FBRzdDQyxXQUFPQyxRQUFRQyxHQUFSLENBQVlDO0FBSDBCLEdBQVQsRUFJbkNDLElBSm1DLEVBQU47QUFBQSxDQUF6Qjs7QUFPQSxJQUFNQyx3Q0FBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLGVBQUQ7QUFBQSxTQUFxQixJQUFJYixjQUFKLENBQVM7QUFDekRDLFVBQU1DLGdCQUFNRCxJQUFOLENBQVdFLFFBQVgsRUFEbUQ7QUFFekRDLFVBQU1DLGlCQUFXUyxPQUZ3QztBQUd6REMsYUFBUyxDQUFDRixlQUFELENBSGdEO0FBSXpERyxtQkFBZUgsZUFKMEM7QUFLekROLFdBQU9MLGdCQUFNZSxRQUFOLENBQWVWLEtBQWYsRUFMa0Q7QUFNekRXLFVBQU1DLGlCQUFFQyxNQUFGLENBQVNDLGdCQUFUO0FBTm1ELEdBQVQsRUFPL0NWLElBUCtDLEVBQXJCO0FBQUEsQ0FBdEIiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFudWovc29hbC1kZWx0YS1hcGkvZGVsdGEtdGVtcC0xL2RlbHRhLWFwaS9zcmMvc2VlZHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmFrZXIgZnJvbSAnZmFrZXInO1xuaW1wb3J0IHtkZWZhdWx0IGFzIFVzZXIsIFVTRVJfUk9MRVN9IGZyb20gJy4uL21vZGVscy91c2VyJztcbmltcG9ydCB7cGF0aHN9IGZyb20gJy4uL3V0aWwvY29uc3RhbnRzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVTdXBlckFkbWluID0gKCkgPT4gbmV3IFVzZXIoe1xuICBuYW1lOiBmYWtlci5uYW1lLmZpbmROYW1lKCksXG4gIHJvbGU6IFVTRVJfUk9MRVMuU1VQRVJBRE1JTixcbiAgZW1haWw6IHByb2Nlc3MuZW52LkRFRkFVTFRfVVNFUixcbn0pLnNhdmUoKVxuXG5cbmV4cG9ydCBjb25zdCBjcmVhdGVTdHVkZW50ID0gKGN1cnJlbnRDb2hvcnRJZCkgPT4gbmV3IFVzZXIoe1xuICBuYW1lOiBmYWtlci5uYW1lLmZpbmROYW1lKCksXG4gIHJvbGU6IFVTRVJfUk9MRVMuU1RVREVOVCxcbiAgY29ob3J0czogW2N1cnJlbnRDb2hvcnRJZF0sXG4gIGN1cnJlbnRDb2hvcnQ6IGN1cnJlbnRDb2hvcnRJZCxcbiAgZW1haWw6IGZha2VyLmludGVybmV0LmVtYWlsKCksXG4gIHBhdGg6IF8uc2FtcGxlKHBhdGhzKSxcbn0pLnNhdmUoKVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "createSuperAdmin",
        "User",
        "name",
        "faker",
        "findName",
        "role",
        "USER_ROLES",
        "SUPERADMIN",
        "email",
        "process",
        "env",
        "DEFAULT_USER",
        "save",
        "createStudent",
        "currentCohortId",
        "STUDENT",
        "cohorts",
        "currentCohort",
        "internet",
        "path",
        "_",
        "sample",
        "paths"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,IAAMA,8CAAmB,SAAnBA,gBAAmB;AAAA,SAAM,IAAIC,cAAJ,CAAS;AAC7CC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADuC;AAE7CC,UAAMC,iBAAWC,UAF4B;AAG7CC,WAAOC,QAAQC,GAAR,CAAYC;AAH0B,GAAT,EAInCC,IAJmC,EAAN;AAAA,CAAzB;;AAOA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,eAAD;AAAA,SAAqB,IAAIb,cAAJ,CAAS;AACzDC,UAAMC,gBAAMD,IAAN,CAAWE,QAAX,EADmD;AAEzDC,UAAMC,iBAAWS,OAFwC;AAGzDC,aAAS,CAACF,eAAD,CAHgD;AAIzDG,mBAAeH,eAJ0C;AAKzDN,WAAOL,gBAAMe,QAAN,CAAeV,KAAf,EALkD;AAMzDW,UAAMC,iBAAEC,MAAF,CAASC,gBAAT;AANmD,GAAT,EAO/CV,IAP+C,EAArB;AAAA,CAAtB",
      "file": "users.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/seeds",
      "sourcesContent": [
        "import faker from 'faker';\nimport {default as User, USER_ROLES} from '../models/user';\nimport {paths} from '../util/constants';\nimport _ from 'lodash';\n\nexport const createSuperAdmin = () => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.SUPERADMIN,\n  email: process.env.DEFAULT_USER,\n}).save()\n\n\nexport const createStudent = (currentCohortId) => new User({\n  name: faker.name.findName(),\n  role: USER_ROLES.STUDENT,\n  cohorts: [currentCohortId],\n  currentCohort: currentCohortId,\n  email: faker.internet.email(),\n  path: _.sample(paths),\n}).save()\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/constants.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "promptTypes",
            "pingKinds",
            "pingTypes",
            "paths",
            "questionTypes",
            "defaultQuestionOptions"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "promptTypes",
              "exported": "promptTypes"
            },
            {
              "kind": "local",
              "local": "pingKinds",
              "exported": "pingKinds"
            },
            {
              "kind": "local",
              "local": "pingTypes",
              "exported": "pingTypes"
            },
            {
              "kind": "local",
              "local": "paths",
              "exported": "paths"
            },
            {
              "kind": "local",
              "local": "questionTypes",
              "exported": "questionTypes"
            },
            {
              "kind": "local",
              "local": "defaultQuestionOptions",
              "exported": "defaultQuestionOptions"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/constants.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/constants.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "constants.js",
      "sourceFileName": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "constants"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar promptTypes = exports.promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nvar pingKinds = exports.pingKinds = ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nvar pingTypes = exports.pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nvar paths = exports.paths = ['Front End', 'Back End'];\nvar questionTypes = exports.questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nvar defaultQuestionOptions = exports.defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJwcm9tcHRUeXBlcyIsInBpbmdLaW5kcyIsInBpbmdUeXBlcyIsInBhdGhzIiwicXVlc3Rpb25UeXBlcyIsImRlZmF1bHRRdWVzdGlvbk9wdGlvbnMiLCJTbGlkZXIiLCJvcHRpb25zIiwiUmF0aW5nIiwiU2VsZWN0TXVsdGlwbGUiLCJSYWRpbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxvQ0FBYyxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCLEVBQXFDLGtCQUFyQyxFQUF5RCxZQUF6RCxFQUF1RSxlQUF2RSxFQUF3RixpQkFBeEYsQ0FBcEI7QUFDQSxJQUFNQyxnQ0FBYSxDQUFDLFNBQUQsRUFBWSxNQUFaLEVBQW9CLFNBQXBCLEVBQStCLFNBQS9CLEVBQTBDLFFBQTFDLEVBQW9ELFFBQXBELENBQW5CO0FBQ0EsSUFBTUMsZ0NBQVksQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixFQUE0QixTQUE1QixFQUF1QyxNQUF2QyxFQUErQyxXQUEvQyxDQUFsQjtBQUNBLElBQU1DLHdCQUFRLENBQUMsV0FBRCxFQUFjLFVBQWQsQ0FBZDtBQUNBLElBQU1DLHdDQUFnQixDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLGdCQUFyQixFQUF1QyxPQUF2QyxDQUF0QjtBQUNBLElBQU1DLDBEQUF5QjtBQUNwQ0MsVUFBUSxFQUFFQyxTQUFTLENBQUMsVUFBRCxFQUFhLEtBQWIsRUFBb0IsTUFBcEIsRUFBNEIsV0FBNUIsQ0FBWCxFQUQ0QjtBQUVwQ0MsVUFBUSxFQUY0QjtBQUdwQ0Msa0JBQWdCLEVBQUVGLFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYLEVBSG9CO0FBSXBDRyxTQUFPLEVBQUVILFNBQVMsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixFQUFrQyxTQUFsQyxDQUFYO0FBSjZCLENBQS9CIiwiZmlsZSI6ImNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YW51ai9zb2FsLWRlbHRhLWFwaS9kZWx0YS10ZW1wLTEvZGVsdGEtYXBpL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHByb21wdFR5cGVzID0gWydNZXRhTGVhcm5pbmcnLCAnQ2F0YWx5c3QgU2Vzc2lvbicsICdQYWlyIFByb2dyYW1taW5nJywgJ0Fzc2Vzc21lbnQnLCAnUXVlc3Rpb24gSG91cicsICdTaGFyaW5nIFNlc3Npb24nXTtcbmV4cG9ydCBjb25zdCBwaW5nS2luZHMgPSAgWydleHBsb3JlJywgJ2tub3cnLCAnb2JzZXJ2ZScsICdyZWZsZWN0JywgJ3JldmlldycsICd1bndpbmQnXTtcbmV4cG9ydCBjb25zdCBwaW5nVHlwZXMgPSBbJ1BhaXInLCAnQ29ob3J0JywgJ1BlZXJzJywgJ0NvbnRlbnQnLCAnU2VsZicsICdJbnRlbnRpb24nXTtcbmV4cG9ydCBjb25zdCBwYXRocyA9IFsnRnJvbnQgRW5kJywgJ0JhY2sgRW5kJ107XG5leHBvcnQgY29uc3QgcXVlc3Rpb25UeXBlcyA9IFsnU2xpZGVyJywgJ1JhdGluZycsICdTZWxlY3RNdWx0aXBsZScsICdSYWRpbyddO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRRdWVzdGlvbk9wdGlvbnMgPSB7XG4gIFNsaWRlcjogeyBvcHRpb25zOiBbJ1ZlcnkgYmFkJywgJ0JhZCcsICdHb29kJywgJ1ZlcnkgZ29vZCddIH0sXG4gIFJhdGluZzoge30sXG4gIFNlbGVjdE11bHRpcGxlOiB7IG9wdGlvbnM6IFsnT3B0aW9uMScsICdPcHRpb24yJywgJ09wdGlvbjMnLCAnT3B0aW9uNCddIH0sXG4gIFJhZGlvOiB7IG9wdGlvbnM6IFsnT3B0aW9uMScsICdPcHRpb24yJywgJ09wdGlvbjMnLCAnT3B0aW9uNCddIH0sXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "promptTypes",
        "pingKinds",
        "pingTypes",
        "paths",
        "questionTypes",
        "defaultQuestionOptions",
        "Slider",
        "options",
        "Rating",
        "SelectMultiple",
        "Radio"
      ],
      "mappings": ";;;;;AAAO,IAAMA,oCAAc,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,kBAArC,EAAyD,YAAzD,EAAuE,eAAvE,EAAwF,iBAAxF,CAApB;AACA,IAAMC,gCAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,QAApD,CAAnB;AACA,IAAMC,gCAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC,MAAvC,EAA+C,WAA/C,CAAlB;AACA,IAAMC,wBAAQ,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,IAAMC,wCAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,gBAArB,EAAuC,OAAvC,CAAtB;AACA,IAAMC,0DAAyB;AACpCC,UAAQ,EAAEC,SAAS,CAAC,UAAD,EAAa,KAAb,EAAoB,MAApB,EAA4B,WAA5B,CAAX,EAD4B;AAEpCC,UAAQ,EAF4B;AAGpCC,kBAAgB,EAAEF,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX,EAHoB;AAIpCG,SAAO,EAAEH,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAX;AAJ6B,CAA/B",
      "file": "constants.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "sourcesContent": [
        "export const promptTypes = ['MetaLearning', 'Catalyst Session', 'Pair Programming', 'Assessment', 'Question Hour', 'Sharing Session'];\nexport const pingKinds =  ['explore', 'know', 'observe', 'reflect', 'review', 'unwind'];\nexport const pingTypes = ['Pair', 'Cohort', 'Peers', 'Content', 'Self', 'Intention'];\nexport const paths = ['Front End', 'Back End'];\nexport const questionTypes = ['Slider', 'Rating', 'SelectMultiple', 'Radio'];\nexport const defaultQuestionOptions = {\n  Slider: { options: ['Very bad', 'Bad', 'Good', 'Very good'] },\n  Rating: {},\n  SelectMultiple: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n  Radio: { options: ['Option1', 'Option2', 'Option3', 'Option4'] },\n}\n"
      ]
    },
    "mtime": 1559498167648
  },
  "{\"filename\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/dbConnect.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "dotenv/config",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "dotenv"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/dbConnect.js",
      "filenameRelative": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util/dbConnect.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbConnect.js",
      "sourceFileName": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbConnect"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('dotenv/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _process$env = process.env,\n    NODE_ENV = _process$env.NODE_ENV,\n    MONGO_HOST = _process$env.MONGO_HOST,\n    dbName = _process$env.MONGO_DB,\n    user = _process$env.MONGO_USER,\n    pass = _process$env.MONGO_PWD;\n\n\n_mongoose2.default.set('debug', NODE_ENV === 'development');\n_mongoose2.default.Promise = Promise;\nconsole.log(MONGO_HOST);\n\nexports.default = function () {\n  return _mongoose2.default.connect(MONGO_HOST, { user: user, pass: pass });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJNT05HT19IT1NUIiwiZGJOYW1lIiwiTU9OR09fREIiLCJ1c2VyIiwiTU9OR09fVVNFUiIsInBhc3MiLCJNT05HT19QV0QiLCJtb25nb29zZSIsInNldCIsIlByb21pc2UiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O21CQUNvRkEsUUFBUUMsRztJQUFyRkMsUSxnQkFBQUEsUTtJQUFVQyxVLGdCQUFBQSxVO0lBQXNCQyxNLGdCQUFWQyxRO0lBQThCQyxJLGdCQUFaQyxVO0lBQTZCQyxJLGdCQUFYQyxTOzs7QUFFakVDLG1CQUFTQyxHQUFULENBQWEsT0FBYixFQUFzQlQsYUFBYSxhQUFuQztBQUNBUSxtQkFBU0UsT0FBVCxHQUFtQkEsT0FBbkI7QUFDQUMsUUFBUUMsR0FBUixDQUFZWCxVQUFaOztrQkFDZTtBQUFBLFNBQU1PLG1CQUFTSyxPQUFULENBQWlCWixVQUFqQixFQUE2QixFQUFDRyxVQUFELEVBQU9FLFVBQVAsRUFBN0IsQ0FBTjtBQUFBLEMiLCJmaWxlIjoiZGJDb25uZWN0LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RhbnVqL3NvYWwtZGVsdGEtYXBpL2RlbHRhLXRlbXAtMS9kZWx0YS1hcGkvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudi9jb25maWcnO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IHtOT0RFX0VOViwgTU9OR09fSE9TVCwgTU9OR09fREI6IGRiTmFtZSwgTU9OR09fVVNFUjogdXNlciwgTU9OR09fUFdEOiBwYXNzfSA9IHByb2Nlc3MuZW52O1xuXG5tb25nb29zZS5zZXQoJ2RlYnVnJywgTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpO1xubW9uZ29vc2UuUHJvbWlzZSA9IFByb21pc2U7XG5jb25zb2xlLmxvZyhNT05HT19IT1NUKTtcbmV4cG9ydCBkZWZhdWx0ICgpID0+IG1vbmdvb3NlLmNvbm5lY3QoTU9OR09fSE9TVCwge3VzZXIsIHBhc3N9KTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbConnect.js"
      ],
      "names": [
        "process",
        "env",
        "NODE_ENV",
        "MONGO_HOST",
        "dbName",
        "MONGO_DB",
        "user",
        "MONGO_USER",
        "pass",
        "MONGO_PWD",
        "mongoose",
        "set",
        "Promise",
        "console",
        "log",
        "connect"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;mBACoFA,QAAQC,G;IAArFC,Q,gBAAAA,Q;IAAUC,U,gBAAAA,U;IAAsBC,M,gBAAVC,Q;IAA8BC,I,gBAAZC,U;IAA6BC,I,gBAAXC,S;;;AAEjEC,mBAASC,GAAT,CAAa,OAAb,EAAsBT,aAAa,aAAnC;AACAQ,mBAASE,OAAT,GAAmBA,OAAnB;AACAC,QAAQC,GAAR,CAAYX,UAAZ;;kBACe;AAAA,SAAMO,mBAASK,OAAT,CAAiBZ,UAAjB,EAA6B,EAACG,UAAD,EAAOE,UAAP,EAA7B,CAAN;AAAA,C",
      "file": "dbConnect.js",
      "sourceRoot": "/home/tanuj/soal-delta-api/delta-temp-1/delta-api/src/util",
      "sourcesContent": [
        "import dotenv from 'dotenv/config';\nimport mongoose from 'mongoose';\nconst {NODE_ENV, MONGO_HOST, MONGO_DB: dbName, MONGO_USER: user, MONGO_PWD: pass} = process.env;\n\nmongoose.set('debug', NODE_ENV === 'development');\nmongoose.Promise = Promise;\nconsole.log(MONGO_HOST);\nexport default () => mongoose.connect(MONGO_HOST, {user, pass});\n"
      ]
    },
    "mtime": 1559498167648
  }
}